<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="9def8653-db48-4f2f-be39-0322e085f8ac" activeEnvironment="Default" name="telik" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="0d9729a7-8c2d-4a18-b7be-9a51461d4cd1" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://telik-app.ehrdb.solit-clouds.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint></con:endpoints><con:resource name="createConference" path="/conference" id="90a1ae08-5d0a-40a6-9316-faf64360e6e0"><con:settings/><con:parameters><con:parameter><con:name>authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="createConference" id="20307955-2dcb-46fe-a05a-3dad391d133b" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>308</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="http://telik-app.ehrdb.solit-clouds.ru/conference">con1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:con1="http://telik-app.ehrdb.solit-clouds.ru/conference">con1:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="createConference" id="1ecd4a84-c5ef-414e-b9cb-88b0ec05c21e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "conferenceInfo": {
    "alternateId": "10006",
    "lobbyMode": true,
    "name": "test_confa_6",
    "parameters": [
      {
        "key": "string",
        "value": "string"
      }
    ],
    "participants": [
      {
        "name": "string",
        "owner": true,
        "parameters": [
          {
            "key": "1",
            "value": "2"
          }
        ],
        "uuid": "300003"
      } 
    ],
    "scheduledEndDate": "2023-11-11T01:00:01",
    "scheduledStartDate": "2023-11-11T00:00:01",
    "type": "ONE_TO_ONE"
  },
  "uuid": "20006"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/conference</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="Basic dGVzdDdANzp0ZXN0Nw=="/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry><con:entry>accept</con:entry></con:parameterOrder></con:request><con:request name="createConference NO UUID" id="1ecd4a84-c5ef-414e-b9cb-88b0ec05c21e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "conferenceInfo": {
    "alternateId": "10007",
    "lobbyMode": true,
    "name": "test_confa_6",
    "parameters": [
      {
        "key": "string",
        "value": "string"
      }
    ],
    "participants": [
      {
        "name": "string",
        "owner": true,
        "parameters": [
          {
            "key": "1",
            "value": "2"
          }
        ],
        "uuid": "300003"
      }
    ],
    "scheduledEndDate": "2023-11-11T01:00:01",
    "scheduledStartDate": "2023-11-11T00:00:01",
    "type": "ONE_TO_ONE"
  }
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/conference</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="Basic dGVzdDdANzp0ZXN0Nw=="/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry><con:entry>accept</con:entry></con:parameterOrder></con:request></con:method><con:method name="Copy of createConference" id="20307955-2dcb-46fe-a05a-3dad391d133b" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>308</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="http://telik-app.ehrdb.solit-clouds.ru/conference">con1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:con1="http://telik-app.ehrdb.solit-clouds.ru/conference">con1:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="createConference" id="1ecd4a84-c5ef-414e-b9cb-88b0ec05c21e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "conferenceInfo": {
    "alternateId": "10006",
    "lobbyMode": true,
    "name": "test_confa_6",
    "parameters": [
      {
        "key": "string",
        "value": "string"
      }
    ],
    "participants": [
      {
        "name": "string",
        "owner": true,
        "parameters": [
          {
            "key": "1",
            "value": "2"
          }
        ],
        "uuid": "300003"
      } 
    ],
    "scheduledEndDate": "2023-11-11T01:00:01",
    "scheduledStartDate": "2023-11-11T00:00:01",
    "type": "ONE_TO_ONE"
  },
  "uuid": "20006"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/conference</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="Basic dGVzdDdANzp0ZXN0Nw=="/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry><con:entry>accept</con:entry></con:parameterOrder></con:request><con:request name="createConference NO UUID" id="1ecd4a84-c5ef-414e-b9cb-88b0ec05c21e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "conferenceInfo": {
    "alternateId": "10007",
    "lobbyMode": true,
    "name": "test_confa_6",
    "parameters": [
      {
        "key": "string",
        "value": "string"
      }
    ],
    "participants": [
      {
        "name": "string",
        "owner": true,
        "parameters": [
          {
            "key": "1",
            "value": "2"
          }
        ],
        "uuid": "300003"
      }
    ],
    "scheduledEndDate": "2023-11-11T01:00:01",
    "scheduledStartDate": "2023-11-11T00:00:01",
    "type": "ONE_TO_ONE"
  }
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/conference</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="Basic dGVzdDdANzp0ZXN0Nw=="/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry><con:entry>accept</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="consent" path="/consent" id="bc9bd30e-351b-4267-830b-5a509205b929"><con:settings/><con:parameters><con:parameter><con:name>authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="createConsent" id="2fed1435-9eab-4d4e-8ed2-cf7b492ebcff" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>308</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:con1="http://telik-app.ehrdb.solit-clouds.ru/consent">con1:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="http://telik-app.ehrdb.solit-clouds.ru/consent">con1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="createConsent" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "2022-09-15T00:00:01",
    "organizationId": "string",
    "parameters": [
      {
        "key": "string",
        "value": "string"
      }
    ],
    "type": {
      "type": "string",
      "version": "string"
    },
    "userId": "7"
  },
  "uuid": "string2"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="dGVzdDckJCQ3fDIwMjItMDgtMTVUMTc6MjY6MTkuMjAyNzEwMzM3fDQ2ZDQ1ZjkxMDY4ODhmNTM2MmE0MzBiZDZjYzM1ZjBj" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:request></con:method><con:method name="Copy of createConsent" id="2fed1435-9eab-4d4e-8ed2-cf7b492ebcff" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>308</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:con1="http://telik-app.ehrdb.solit-clouds.ru/consent">con1:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:con1="http://telik-app.ehrdb.solit-clouds.ru/consent">con1:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="createConsent" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "2022-09-15T00:00:01",
    "organizationId": "string",
    "parameters": [
      {
        "key": "string",
        "value": "string"
      }
    ],
    "type": {
      "type": "string",
      "version": "string"
    },
    "userId": "7"
  }
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="Basic YXV0b3Rlc3QyOEAzNDphdXRvdGVzdDI4"/>
  <con:entry key="x-authentication-token" value="dGVzdDckJCQ3fDIwMjItMDgtMTVUMTc6MjY6MTkuMjAyNzEwMzM3fDQ2ZDQ1ZjkxMDY4ODhmNTM2MmE0MzBiZDZjYzM1ZjBj"/>
</con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getConsent" path="/consent/{uuid}" id="1f680b1e-df6b-47ae-8244-161fba7289b6"><con:settings/><con:parameters><con:parameter><con:name>uuid</con:name><con:value>uuid</con:value><con:style>TEMPLATE</con:style><con:default>uuid</con:default></con:parameter><con:parameter><con:name>x-authentication-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="getConsent" id="7c8e0a56-47b9-4a68-95b2-e87041486e51" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>308</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:str="http://telik-app.ehrdb.solit-clouds.ru/consent/string">str:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:str="http://telik-app.ehrdb.solit-clouds.ru/consent/string">str:Fault</con:element></con:representation><con:request name="getConsent" id="631b36cf-b46c-49a8-8733-112459516507" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="dGVzdDckJCQ3fDIwMjItMDgtMTVUMTc6MjY6MTkuMjAyNzEwMzM3fDQ2ZDQ1ZjkxMDY4ODhmNTM2MmE0MzBiZDZjYzM1ZjBj"/>
  <con:entry key="uuid" value="string"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="deactiveConsent" path="/consent/{uuid}" id="bbdde97f-513a-450c-9172-e91bb0900e77"><con:settings/><con:parameters><con:parameter><con:name>uuid</con:name><con:value>uuid</con:value><con:style>TEMPLATE</con:style><con:default>uuid</con:default></con:parameter><con:parameter><con:name>x-authentication-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="deactiveConsent" id="7a96cd71-e0e2-46b1-bb79-2ec29f5f59e4" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:str="https://telik-app.ehrdb.solit-clouds.ru/consent/string">str:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="deactiveConsent" id="3ca6de26-201c-400f-b54f-bdbc09fa508f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="dGVzdDckJCQ3fDIwMjItMDgtMTVUMTc6MjY6MTkuMjAyNzEwMzM3fDQ2ZDQ1ZjkxMDY4ODhmNTM2MmE0MzBiZDZjYzM1ZjBj"/>
  <con:entry key="uuid" value="string"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="search" path="/consent/search" id="e6504957-5967-48f4-9863-ddfdda193f28"><con:settings/><con:parameters><con:parameter><con:name>Username</con:name><con:style>HEADER</con:style></con:parameter><con:parameter><con:name>Password</con:name><con:style>HEADER</con:style></con:parameter><con:parameter><con:name>authorization</con:name><con:style>HEADER</con:style></con:parameter></con:parameters><con:method name="search" id="794ca37e-f379-493e-8ac5-3b2fb9d3ea01" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:sear="https://telik-app.ehrdb.solit-clouds.ru/consent/search">sear:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sear="https://telik-app.ehrdb.solit-clouds.ru/consent/search">sear:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="search" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "paging": {
    "page": 0,
    "pageSize": 2
  },
  "parameters": {
    "userId": "7"
  }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="ы" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>authorization</con:entry></con:parameterOrder></con:request></con:method><con:method name="Copy of search" id="794ca37e-f379-493e-8ac5-3b2fb9d3ea01" method="POST"><con:settings/><con:parameters><con:parameter><con:name>authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:sear="https://telik-app.ehrdb.solit-clouds.ru/consent/search">sear:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sear="https://telik-app.ehrdb.solit-clouds.ru/consent/search">sear:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="search" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
   "parameters" : {
    "consentParameters": [
      {
        "key": "1",
        "value": "2"
      },
      {
        "key": "2",
        "value": "1"
      }
    ]
   }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="Basic YXV0b3Rlc3QyOEAzNDphdXRvdGVzdDI4" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>authorization</con:entry></con:parameterOrder></con:request></con:method><con:method name="Copy of Copy of search" id="794ca37e-f379-493e-8ac5-3b2fb9d3ea01" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:sear="https://telik-app.ehrdb.solit-clouds.ru/consent/search">sear:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sear="https://telik-app.ehrdb.solit-clouds.ru/consent/search">sear:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="search" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "paging": {
    "page": 0,
    "pageSize": 2
  },
  "parameters": {
    "userId": "7"
  }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="test28"/>
  <con:entry key="Username" value="test28@34"/>
  <con:entry key="user" value="test28@34"/>
  <con:entry key="Password" value="test28"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="tenant" path="/admin/tenant/" id="0b7b2106-db6f-410d-9110-cc834dff9b55"><con:settings/><con:parameters><con:parameter><con:name>x-authentication-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="createTentant" id="00de72bf-31cf-4067-bcfd-67bbd4793087" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ten="https://telik-app.ehrdb.solit-clouds.ru/admin/tenant/">ten:Response</con:element></con:representation><con:request name="createTentant" id="b76384e3-4352-4882-a01a-2491350fa0cb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "active": true,
  "kafkaResultServers": "string",
  "master": true,
  "name": "string",
  "systemName": "string"
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/admin/tenant/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="dGVzdDckJCQ3fDIwMjItMDgtMTVUMTc6MjY6MTkuMjAyNzEwMzM3fDQ2ZDQ1ZjkxMDY4ODhmNTM2MmE0MzBiZDZjYzM1ZjBj" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="user" path="/admin/user/" id="4d97ba58-aecf-4062-821d-253d2a027ff7"><con:settings/><con:parameters><con:parameter><con:name>x-authentication-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="cc06e47b-8ad5-4831-be44-c531d22badc2" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:user="https://telik-app.ehrdb.solit-clouds.ru/admin/user/">user:Response</con:element></con:representation><con:request name="Request 1" id="51515872-88c3-4049-9957-9739d018def4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "active": true,
  "login": "test",
  "name": "test",
  "password": "test",
  "role": "ADMIN",
  "tenantId": 7
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/admin/user/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="dGVzdDckJCQ3fDIwMjItMDgtMTVUMTc6MjY6MTkuMjAyNzEwMzM3fDQ2ZDQ1ZjkxMDY4ODhmNTM2MmE0MzBiZDZjYzM1ZjBj" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:request></con:method><con:method name="createUser" id="cc06e47b-8ad5-4831-be44-c531d22badc2" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:user="https://telik-app.ehrdb.solit-clouds.ru/admin/user/">user:Response</con:element></con:representation><con:request name="Request 1" id="51515872-88c3-4049-9957-9739d018def4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/admin/user/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="dGVzdDckJCQ3fDIwMjItMDgtMTVUMTc6MjY6MTkuMjAyNzEwMzM3fDQ2ZDQ1ZjkxMDY4ODhmNTM2MmE0MzBiZDZjYzM1ZjBj" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="5a4f1eff-0c9d-42a7-bc90-8d2a3746f408" name="createConfirence"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="d5075dd4-46ec-46b6-aaf9-f85d4d8fb34a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createConfirence all parameters" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="createConference" id="f291a918-d6cc-4085-bb19-c3d69a956198"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/conference" methodName="createConference" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConference" id="1ecd4a84-c5ef-414e-b9cb-88b0ec05c21e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
	"conferenceInfo": {
		"alternateId": "1000${#TestSuite#id}",
		"lobbyMode": true,
		"name": "test_confa_${#TestSuite#id}",
		"consentType": {
			"type": "string",
			"version": "string"
		},
		"parameters": [
			{
				"key": "parameters.key",
				"value": "parameters.value"
			}
		],
		"participants": [
			{
				"name": "string",
				"owner": true,
				"parameters": [
					{
						"key": "1",
						"value": "2"
					}
				],
				"uuid": "300003"
			},
			{
				"name": "string",
				"owner": false,
				"parameters": [
					{
						"key": "1",
						"value": "2"
					}
				],
				"uuid": "2"
			}
		],
		"scheduledEndDate": "2023-11-11T01:00:01",
		"scheduledStartDate": "2023-11-11T00:00:01",
		"type": "ONE_TO_ONE"
	},
	"uuid": "2000${#TestSuite#id}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/conference</con:originalUri><con:assertion type="Simple Contains" id="d69f5f42-f63b-4f9c-b453-ee782da5ad21" name="Contains"><con:configuration><token>participantURL</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="${#TestSuite#authorization}"/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry><con:entry>accept</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d36e1e36-2910-4dcd-93e5-512bfab1e089" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createConfirence required parameters only" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="createConference no UUID" id="138e40bc-258a-4566-934a-bc19c16b846b"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/conference" methodName="createConference" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConference no UUID" id="1ecd4a84-c5ef-414e-b9cb-88b0ec05c21e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
	"conferenceInfo": {
		"alternateId": "1000${#TestSuite#id}",
		"lobbyMode": true,
		"name": "test_confa_${#TestSuite#id}",
		"consentType": {
			"type": "string",
			"version": "string"
		},
		"parameters": [
			{
				"key": "parameters.key",
				"value": "parameters.value"
			}
		],
		"participants": [
			{
				"name": "string",
				"owner": true,
				"parameters": [
					{
						"key": "1",
						"value": "2"
					}
				],
				"uuid": "300003"
			},
			{
				"name": "string",
				"owner": false,
				"parameters": [
					{
						"key": "1",
						"value": "2"
					}
				],
				"uuid": "2"
			}
		],
		"scheduledEndDate": "2023-11-11T01:00:01",
		"scheduledStartDate": "2023-11-11T00:00:01",
		"type": "ONE_TO_ONE"
	}
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/conference</con:originalUri><con:assertion type="Simple Contains" id="76281608-1bea-4f1b-a680-618bab23b98d" name="Contains"><con:configuration><token>participantURL</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="${#TestSuite#authorization}"/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry><con:entry>accept</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="createConference no alternateId" id="793f81db-cc88-43aa-a30e-5e32e873499f"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/conference" methodName="createConference" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConference no alternateId" id="1ecd4a84-c5ef-414e-b9cb-88b0ec05c21e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
	"conferenceInfo": {
		"lobbyMode": true,
		"name": "test_confa_${#TestSuite#id}",
		"consentType": {
			"type": "string",
			"version": "string"
		},
		"parameters": [
			{
				"key": "parameters.key",
				"value": "parameters.value"
			}
		],
		"participants": [
			{
				"name": "string",
				"owner": true,
				"parameters": [
					{
						"key": "1",
						"value": "2"
					}
				],
				"uuid": "300003"
			},
			{
				"name": "string",
				"owner": false,
				"parameters": [
					{
						"key": "1",
						"value": "2"
					}
				],
				"uuid": "2"
			}
		],
		"scheduledEndDate": "2023-11-11T01:00:01",
		"scheduledStartDate": "2023-11-11T00:00:01",
		"type": "ONE_TO_ONE"
	},
	"uuid": "2000${#TestSuite#id}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/conference</con:originalUri><con:assertion type="Simple Contains" id="76281608-1bea-4f1b-a680-618bab23b98d" name="Contains"><con:configuration><token>participantURL</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="${#TestSuite#authorization}"/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry><con:entry>accept</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="createConference no alternateId, consentType, participants, lobbyMode, parameters" id="6ce35388-c067-42cd-be58-779058e9345f"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/conference" methodName="createConference" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConference no alternateId, consentType, participants, lobbyMode, parameters" id="1ecd4a84-c5ef-414e-b9cb-88b0ec05c21e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
	"conferenceInfo": {
		"name": "test_confa_${#TestSuite#id}",
		"participants": [],
		"scheduledEndDate": "2023-11-11T01:00:01",
		"scheduledStartDate": "2023-11-11T00:00:01",
		"type": "ONE_TO_ONE"
	},
	"uuid": "2000${#TestSuite#id}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/conference</con:originalUri><con:assertion type="Simple Contains" id="76281608-1bea-4f1b-a680-618bab23b98d" name="Contains"><con:configuration><token>participantURL</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="authorization" value="${#TestSuite#authorization}"/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>authorization</con:entry><con:entry>accept</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>authorization</con:name><con:value>Basic dGVzdDdANzp0ZXN0Nw==</con:value></con:property><con:property><con:name>id</con:name><con:value>16</con:value></con:property></con:properties></con:testSuite><con:testSuite id="db9d2d2f-600f-4dc9-8fae-96032cb91f9d" name="consest"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3bf0aeac-a41a-4c87-a14d-2bcb67ad5000" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createConsent" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="5d31499f-0040-4dbc-adfe-df05b38bc96a" disabled="true"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.time.TimeCategory
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def code1 = UUID.randomUUID().toString()
def code2 = UUID.randomUUID().toString()
def code3 = UUID.randomUUID().toString()
def code4 = UUID.randomUUID().toString()
testRunner.testCase.setPropertyValue("code1", code1)
testRunner.testCase.setPropertyValue("code2", code2)
testRunner.testCase.setPropertyValue("code3", code3)
testRunner.testCase.setPropertyValue("code4", code4)

def currentDate=LocalDate.now()
currentTime=LocalTime.now()

String dateTime2=currentDate.toString()+"T"+currentTime.plusMinutes(5).toString()
String dateTime1=currentDate.toString()+"T"+currentTime.toString()
//currentDateTimePusMinutes=currentDateTime.plusMinutes(6)

Date date1=new SimpleDateFormat("yyyy-MM-dd\'T\'HH:mm").parse(dateTime1)
log.info date1

/*
testRunner.testCase.setPropertyValue("currentDateTime", dateTime1split[0])
testRunner.testCase.setPropertyValue("futureDateTime", dateTime2split[0])
*/</script></con:config></con:testStep><con:testStep type="groovy" name="Сгенерировать uuid" id="72dbc884-ba6d-4d95-a0ce-08508b19dd7d"><con:settings/><con:config><script>def uuid1 = UUID.randomUUID().toString()
def uuid2 = UUID.randomUUID().toString()
def uuid3 = UUID.randomUUID().toString()
def uuid4 = UUID.randomUUID().toString()
def uuid5 = UUID.randomUUID().toString()
def uuid6 = UUID.randomUUID().toString()
testRunner.testCase.setPropertyValue("uuid1", uuid1)
testRunner.testCase.setPropertyValue("uuid2", uuid2)
testRunner.testCase.setPropertyValue("uuid3", uuid3)
testRunner.testCase.setPropertyValue("uuid4", uuid4)
testRunner.testCase.setPropertyValue("uuid5", uuid5)
testRunner.testCase.setPropertyValue("uuid6", uuid6)</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent" id="b30d35fc-6086-4138-87bd-49d920f2205a"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#futureDateTime}",
    "organizationId": "1234",
    "parameters": [
      {
        "key": "key",
        "value": "value"
      }
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid1}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе возвращен uuid созданного согласия"><con:configuration><path>$.uuid</path><content>${#TestCase#uuid1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить созданный consent" id="58287480-10c0-4269-b62a-81b0528d1e78"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid1")
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+userId

consent=sql.rows(query)

assert consent.size()==1
assert consent[0]."type"=="type"
assert consent[0]."version"=="version"
//assert consent[0].due_date==
assert consent[0].user_id==userId
assert consent[0].active==true
//assert consent[0].created==
assert consent[0].created_by==userId.toInteger()
assert consent[0].deprecated==null
assert consent[0].deprecated_by==null
assert consent[0].organization_id=="1234"

id= consent[0].id

queryDoc=" select * from consent_document where consent_id="+id

doc=sql.rows(queryDoc)

assert doc.size()==1
assert new String(doc[0].data)=="string222"
assert doc[0].tenant_id==userId.toInteger()

queryParam=" select * from consent_param where consent_id="+id

param=sql.rows(queryParam)

assert param.size()==1
assert param[0]."key"=="key"
assert param[0].value=="value"
assert param[0].tenant_id==userId.toInteger()</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent с существующеми параметрами" id="de2e6ba5-ccfd-4bc5-ad3f-74c14b5333a7"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent с существующеми параметрами" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#futureDateTime}",
    "organizationId": "1234",
    "parameters": [
      {
        "key": "key",
        "value": "value"
      }
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid1}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе тип ошибки =business"><con:configuration><path>$.type</path><content>business</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе error=true "><con:configuration><path>$.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе message о том, что согласие существует"><con:configuration><path>$.message</path><content>Consent with identifier ${#TestCase#uuid1} already exists.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.code=CONSENT_ALREADY_EXISTS "><con:configuration><path>$.reason.code</path><content>CONSENT_ALREADY_EXISTS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.parameters  uuid"><con:configuration><path>$.reason.parameters</path><content>{"id":"${#TestCase#uuid1}"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.message о том, что согласие существует"><con:configuration><path>$.reason.message</path><content>Consent with identifier ${#TestCase#uuid1} already exists.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.error=true "><con:configuration><path>$.reason.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.messageType=error "><con:configuration><path>$.reason.messageType</path><content>ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить, что не создан аналогичный consent" id="ef97196e-58d3-473e-bc66-c433b395f8c5"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid1")
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+userId

consent=sql.rows(query)

assert consent.size()==1</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent с другим uuid" id="0d2d22a1-2682-49ec-b89e-4ae2f6f4c9ad"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent с другим uuid" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#futureDateTime}",
    "organizationId": "1234",
    "parameters": [
      {
        "key": "key",
        "value": "value"
      }
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid2}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе возвращен uuid созданного согласия"><con:configuration><path>$.uuid</path><content>${#TestCase#uuid2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить созданный consent 2" id="e376e347-d781-44b9-8f3e-a90e3e5bd0d4"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid2")
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+userId

consent=sql.rows(query)

assert consent.size()==1
assert consent[0]."type"=="type"
assert consent[0]."version"=="version"
//assert consent[0].due_date==
assert consent[0].user_id==userId
assert consent[0].active==true
//assert consent[0].created==
assert consent[0].created_by==userId.toInteger()
assert consent[0].deprecated==null
assert consent[0].deprecated_by==null
assert consent[0].organization_id=="1234"


id= consent[0].id

queryDoc=" select * from consent_document where consent_id="+id

doc=sql.rows(queryDoc)

assert doc.size()==1
assert new String(doc[0].data)=="string222"
assert doc[0].tenant_id==userId.toInteger()

queryParam=" select * from consent_param where consent_id="+id

param=sql.rows(queryParam)

assert param.size()==1
assert param[0]."key"=="key"
assert param[0].value=="value"
assert param[0].tenant_id==userId.toInteger()</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent с сущесвующим uuid и другим tentant_id" id="b544313b-ce86-4319-83fe-d974a3d9a3f6"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent с сущесвующим uuid и другим tentant_id" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#futureDateTime}",
    "organizationId": "1234",
    "parameters": [
      {
        "key": "key",
        "value": "value"
      }
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid1}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе возвращен uuid созданного согласия"><con:configuration><path>$.uuid</path><content>${#TestCase#uuid1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken2}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить созданный consent 3" id="e1c7bf1b-537c-48da-8d82-d8fa10b93e71"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid1")
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
tentantId= testRunner.testCase.testSuite.getPropertyValue("userId2")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+tentantId

consent=sql.rows(query)

assert consent.size()==1
assert consent[0]."type"=="type"
assert consent[0]."version"=="version"
//assert consent[0].due_date==
assert consent[0].user_id==userId
assert consent[0].active==true
//assert consent[0].created==
assert consent[0].created_by==tentantId.toInteger()
assert consent[0].deprecated==null
assert consent[0].deprecated_by==null
assert consent[0].organization_id=="1234"


id= consent[0].id

queryDoc=" select * from consent_document where consent_id="+id

doc=sql.rows(queryDoc)

assert doc.size()==1
assert new String(doc[0].data)=="string222"
assert doc[0].tenant_id==tentantId.toInteger()

queryParam=" select * from consent_param where consent_id="+id

param=sql.rows(queryParam)

assert param.size()==1
assert param[0]."key"=="key"
assert param[0].value=="value"
assert param[0].tenant_id==tentantId.toInteger()</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent с датой в прошлом" id="158c032f-3e36-4564-b25b-73dd6ee47262"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent с датой в прошлом" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#pastDateTime}",
    "organizationId": "1234",
    "parameters": [
      {
        "key": "key",
        "value": "value"
      }
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid3}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе тип ошибки =business"><con:configuration><path>$.type</path><content>business</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе error=true "><con:configuration><path>$.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе message о том, что due date в прошлом"><con:configuration><path>$.message</path><content>Consent's due date in the past.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.code=DUE_DATE_IN_THE_PAST"><con:configuration><path>$.reason.code</path><content>DUE_DATE_IN_THE_PAST</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.parameters пустой "><con:configuration><path>$.reason.parameters</path><content>{}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.message о том, что due date в прошлом"><con:configuration><path>$.reason.message</path><content>Consent's due date in the past.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.error=true "><con:configuration><path>$.reason.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе reason.messageType=error "><con:configuration><path>$.reason.messageType</path><content>ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить, что не создан consent с датой в прошлом" id="ba90ced8-317c-4236-ac9e-b960c8f7f151"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid3")
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+userId

consent=sql.rows(query)

assert consent.size()==0</script></con:config></con:testStep><con:testStep type="groovy" name="Cформировать n параметров" id="0e03ee55-2135-4c6c-ac61-f82754b3c274"><con:settings/><con:config><script>n= testRunner.testCase.getPropertyValue("n").toInteger()
params=""" {
        "key": "key1",
        "value": "value1"
      }"""
for(int i=2;i&lt;=n;i++){
	item=""", {
        "key": "key"""+i+"""",
        "value": "value"""+i+""""
      }"""
	params=params+item
}

//log.info params
testRunner.testCase.setPropertyValue("params", params)
</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent с несколькими параметрами" id="d989fff9-732b-4338-b5e4-3e9012b3566f"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent с несколькими параметрами" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#futureDateTime}",
    "organizationId": "1234",
    "parameters": [
      ${#TestCase#params}
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid4}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе возвращен uuid созданного согласия"><con:configuration><path>$.uuid</path><content>${#TestCase#uuid4}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить созданный consent 4" id="65bc769b-5dcc-4248-a5e7-7b2e8dc1d111"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid4")
n= testRunner.testCase.getPropertyValue("n").toInteger()
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+userId

consent=sql.rows(query)

assert consent.size()==1
assert consent[0]."type"=="type"
assert consent[0]."version"=="version"
//assert consent[0].due_date==
assert consent[0].user_id==userId
assert consent[0].active==true
//assert consent[0].created==
assert consent[0].created_by==userId.toInteger()
assert consent[0].deprecated==null
assert consent[0].deprecated_by==null
assert consent[0].organization_id=="1234"

id= consent[0].id

queryDoc=" select * from consent_document where consent_id="+id

doc=sql.rows(queryDoc)

assert doc.size()==1
assert new String(doc[0].data)=="string222"
assert doc[0].tenant_id==userId.toInteger()

queryParam=" select * from consent_param where consent_id="+id

param=sql.rows(queryParam)

assert param.size()==n
for(int i=0;i&lt;n;i++){
	k=i+1
	assert param[i]."key"=="key"+k
	assert param[i].value=="value"+k
	assert param[i].tenant_id==userId.toInteger()
}</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent с обязательными параметрами" id="ff44a5e4-f000-4f6d-88d5-c5c7918263d5"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent с обязательными параметрами" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "organizationId": "1234",
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId2}"
  }
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="Simple Contains" id="834e8b58-91f1-4676-baa0-0b7979f54271" name="В ответе возвращен uuid созданного согласия"><con:configuration><token>uuid</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="uuid" id="c818d335-7228-4959-b4ec-4d8fa2e148c5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>uuid</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createConsent с обязательными параметрами</con:sourceStep><con:sourcePath>$.uuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Проверить созданный consent 5" id="d6424a1b-1efe-48b2-b617-6517f2f789b3"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid")
userId= testRunner.testCase.testSuite.getPropertyValue("userId2")
tentantId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+tentantId

consent=sql.rows(query)

assert consent.size()==1
assert consent[0]."type"=="type"
assert consent[0]."version"=="version"
//assert consent[0].due_date==
assert consent[0].user_id==userId
assert consent[0].active==true
//assert consent[0].created==
assert consent[0].created_by==tentantId.toInteger()
assert consent[0].deprecated==null
assert consent[0].deprecated_by==null
assert consent[0].organization_id=="1234"


id= consent[0].id

queryDoc=" select * from consent_document where consent_id="+id

doc=sql.rows(queryDoc)

assert doc.size()==0

queryParam=" select * from consent_param where consent_id="+id

param=sql.rows(queryParam)

assert param.size()==0
</script></con:config></con:testStep><con:properties><con:property><con:name>currentDateTime</con:name><con:value>2022-08-15T18:45:49.223362700</con:value></con:property><con:property><con:name>futureDateTime</con:name><con:value>2027-08-15T18:50:49</con:value></con:property><con:property><con:name>pastDateTime</con:name><con:value>2022-08-15T18:50:49</con:value></con:property><con:property><con:name>uuid</con:name><con:value>edd32d70-76b9-4486-b830-997c8c24961f</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>c83eb0cb-996c-4bbb-b62b-53395ca53cd4</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>3d3adfd9-1289-49e7-a32a-1dd3c5d61b01</con:value></con:property><con:property><con:name>uuid3</con:name><con:value>4807183d-143f-45d3-b093-7d091b6c8c93</con:value></con:property><con:property><con:name>uuid4</con:name><con:value>0a407af3-535c-4dfe-ad9b-9e05c005ca07</con:value></con:property><con:property><con:name>code1</con:name><con:value>3545029e-60f6-4966-ba79-c52cfe9fed5e</con:value></con:property><con:property><con:name>code2</con:name><con:value>10f55a24-6f20-42fc-aaae-16d18917d6e8</con:value></con:property><con:property><con:name>code3</con:name><con:value>653ad434-9d75-4259-b840-c4f5c7a88b31</con:value></con:property><con:property><con:name>code4</con:name><con:value>a613181c-47a1-4316-886d-1da08e64c5d2</con:value></con:property><con:property><con:name>n</con:name><con:value>100</con:value></con:property><con:property><con:name>params</con:name><con:value> {
        "key": "key1",
        "value": "value1"
      }, {
        "key": "key2",
        "value": "value2"
      }, {
        "key": "key3",
        "value": "value3"
      }, {
        "key": "key4",
        "value": "value4"
      }, {
        "key": "key5",
        "value": "value5"
      }, {
        "key": "key6",
        "value": "value6"
      }, {
        "key": "key7",
        "value": "value7"
      }, {
        "key": "key8",
        "value": "value8"
      }, {
        "key": "key9",
        "value": "value9"
      }, {
        "key": "key10",
        "value": "value10"
      }, {
        "key": "key11",
        "value": "value11"
      }, {
        "key": "key12",
        "value": "value12"
      }, {
        "key": "key13",
        "value": "value13"
      }, {
        "key": "key14",
        "value": "value14"
      }, {
        "key": "key15",
        "value": "value15"
      }, {
        "key": "key16",
        "value": "value16"
      }, {
        "key": "key17",
        "value": "value17"
      }, {
        "key": "key18",
        "value": "value18"
      }, {
        "key": "key19",
        "value": "value19"
      }, {
        "key": "key20",
        "value": "value20"
      }, {
        "key": "key21",
        "value": "value21"
      }, {
        "key": "key22",
        "value": "value22"
      }, {
        "key": "key23",
        "value": "value23"
      }, {
        "key": "key24",
        "value": "value24"
      }, {
        "key": "key25",
        "value": "value25"
      }, {
        "key": "key26",
        "value": "value26"
      }, {
        "key": "key27",
        "value": "value27"
      }, {
        "key": "key28",
        "value": "value28"
      }, {
        "key": "key29",
        "value": "value29"
      }, {
        "key": "key30",
        "value": "value30"
      }, {
        "key": "key31",
        "value": "value31"
      }, {
        "key": "key32",
        "value": "value32"
      }, {
        "key": "key33",
        "value": "value33"
      }, {
        "key": "key34",
        "value": "value34"
      }, {
        "key": "key35",
        "value": "value35"
      }, {
        "key": "key36",
        "value": "value36"
      }, {
        "key": "key37",
        "value": "value37"
      }, {
        "key": "key38",
        "value": "value38"
      }, {
        "key": "key39",
        "value": "value39"
      }, {
        "key": "key40",
        "value": "value40"
      }, {
        "key": "key41",
        "value": "value41"
      }, {
        "key": "key42",
        "value": "value42"
      }, {
        "key": "key43",
        "value": "value43"
      }, {
        "key": "key44",
        "value": "value44"
      }, {
        "key": "key45",
        "value": "value45"
      }, {
        "key": "key46",
        "value": "value46"
      }, {
        "key": "key47",
        "value": "value47"
      }, {
        "key": "key48",
        "value": "value48"
      }, {
        "key": "key49",
        "value": "value49"
      }, {
        "key": "key50",
        "value": "value50"
      }, {
        "key": "key51",
        "value": "value51"
      }, {
        "key": "key52",
        "value": "value52"
      }, {
        "key": "key53",
        "value": "value53"
      }, {
        "key": "key54",
        "value": "value54"
      }, {
        "key": "key55",
        "value": "value55"
      }, {
        "key": "key56",
        "value": "value56"
      }, {
        "key": "key57",
        "value": "value57"
      }, {
        "key": "key58",
        "value": "value58"
      }, {
        "key": "key59",
        "value": "value59"
      }, {
        "key": "key60",
        "value": "value60"
      }, {
        "key": "key61",
        "value": "value61"
      }, {
        "key": "key62",
        "value": "value62"
      }, {
        "key": "key63",
        "value": "value63"
      }, {
        "key": "key64",
        "value": "value64"
      }, {
        "key": "key65",
        "value": "value65"
      }, {
        "key": "key66",
        "value": "value66"
      }, {
        "key": "key67",
        "value": "value67"
      }, {
        "key": "key68",
        "value": "value68"
      }, {
        "key": "key69",
        "value": "value69"
      }, {
        "key": "key70",
        "value": "value70"
      }, {
        "key": "key71",
        "value": "value71"
      }, {
        "key": "key72",
        "value": "value72"
      }, {
        "key": "key73",
        "value": "value73"
      }, {
        "key": "key74",
        "value": "value74"
      }, {
        "key": "key75",
        "value": "value75"
      }, {
        "key": "key76",
        "value": "value76"
      }, {
        "key": "key77",
        "value": "value77"
      }, {
        "key": "key78",
        "value": "value78"
      }, {
        "key": "key79",
        "value": "value79"
      }, {
        "key": "key80",
        "value": "value80"
      }, {
        "key": "key81",
        "value": "value81"
      }, {
        "key": "key82",
        "value": "value82"
      }, {
        "key": "key83",
        "value": "value83"
      }, {
        "key": "key84",
        "value": "value84"
      }, {
        "key": "key85",
        "value": "value85"
      }, {
        "key": "key86",
        "value": "value86"
      }, {
        "key": "key87",
        "value": "value87"
      }, {
        "key": "key88",
        "value": "value88"
      }, {
        "key": "key89",
        "value": "value89"
      }, {
        "key": "key90",
        "value": "value90"
      }, {
        "key": "key91",
        "value": "value91"
      }, {
        "key": "key92",
        "value": "value92"
      }, {
        "key": "key93",
        "value": "value93"
      }, {
        "key": "key94",
        "value": "value94"
      }, {
        "key": "key95",
        "value": "value95"
      }, {
        "key": "key96",
        "value": "value96"
      }, {
        "key": "key97",
        "value": "value97"
      }, {
        "key": "key98",
        "value": "value98"
      }, {
        "key": "key99",
        "value": "value99"
      }, {
        "key": "key100",
        "value": "value100"
      }</con:value></con:property><con:property><con:name>uuid5</con:name><con:value>0d55a65d-fa45-4f75-b5e3-a76427a64dc7</con:value></con:property><con:property><con:name>uuid6</con:name><con:value>c7ebef79-b4b8-4dfc-bf04-0dd4392bdb0f</con:value></con:property></con:properties></con:testCase><con:testCase id="f88a6ba5-b959-4ee3-bdda-e9fda13a7bf8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getConsent" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Сгенерировать uuid" id="8036afb6-abe4-489d-9536-9d47317ec6d6"><con:settings/><con:config><script>def uuid1 = UUID.randomUUID().toString()
def uuid2 = UUID.randomUUID().toString()
testRunner.testCase.setPropertyValue("uuid1", uuid1)
testRunner.testCase.setPropertyValue("uuid2", uuid2)
</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent" id="e53d68ac-df39-4c04-9682-e5f162e63c09"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#futureDateTime}",
    "organizationId": "1234",
    "parameters": [
      {
        "key": "key",
        "value": "value"
      }
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid1}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе возвращен uuid созданного согласия"><con:configuration><path>$.uuid</path><content>${#TestCase#uuid1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить созданный consent" id="8dcebee5-c9f2-44b1-9504-2c69b21e7e36"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid1")
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+userId

consent=sql.rows(query)

assert consent.size()==1
assert consent[0]."type"=="type"
assert consent[0]."version"=="version"
//assert consent[0].due_date==
assert consent[0].user_id==userId
assert consent[0].active==true
//assert consent[0].created==
assert consent[0].created_by==userId.toInteger()
assert consent[0].deprecated==null
assert consent[0].deprecated_by==null
assert consent[0].organization_id=="1234"

id= consent[0].id

queryDoc=" select * from consent_document where consent_id="+id

doc=sql.rows(queryDoc)

assert doc.size()==1
assert new String(doc[0].data)=="string222"
assert doc[0].tenant_id==userId.toInteger()

queryParam=" select * from consent_param where consent_id="+id

param=sql.rows(queryParam)

assert param.size()==1
assert param[0]."key"=="key"
assert param[0].value=="value"
assert param[0].tenant_id==userId.toInteger()</script></con:config></con:testStep><con:testStep type="restrequest" name="getConsent" id="e643fa7e-134b-4752-bd89-0d0ffa674992"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/{uuid}" methodName="getConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getConsent" id="631b36cf-b46c-49a8-8733-112459516507" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе возвращен переданный uuid "><con:configuration><path>$.uuid</path><content>${#TestCase#uuid1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе возвращено соответствующиее значение document"><con:configuration><path>$.document</path><content>string222</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе возвращено соответствующиее значение active"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="${#TestSuite#userToken1}"/>
  <con:entry key="uuid" value="${#TestCase#uuid1}"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="getConsent АС1 с несуществующим uuid" id="5b906eca-8e69-430a-aee7-b4461222e7bb"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/{uuid}" methodName="getConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getConsent АС1 с несуществующим uuid" id="631b36cf-b46c-49a8-8733-112459516507" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе type=business"><con:configuration><path>$.type</path><content>business</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе error=true"><con:configuration><path>$.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе возвращено сообщение об ошибке"><con:configuration><path>$.message</path><content>Consent with identifier ${#TestCase#uuid2} not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе reason.code=CONSENT_NOT_FOUND"><con:configuration><path>$.reason.code</path><content>CONSENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе в parameters возвращен uuid "><con:configuration><path>$.reason.parameters</path><content>{"id":"${#TestCase#uuid2}"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе возвращено сообщение об ошибке в reason"><con:configuration><path>$.reason.message</path><content>Consent with identifier ${#TestCase#uuid2} not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе reason.messageType=error"><con:configuration><path>$.reason.messageType</path><content>ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="${#TestSuite#userToken1}"/>
  <con:entry key="uuid" value="${#TestCase#uuid2}"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="getConsent АС1 пользователь не создатель согласия" id="c6597466-64ea-480e-a89a-a7a3016efbbe"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/{uuid}" methodName="getConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getConsent АС1 пользователь не создатель согласия" id="631b36cf-b46c-49a8-8733-112459516507" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе type=business"><con:configuration><path>$.type</path><content>business</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе error=true"><con:configuration><path>$.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе возвращено сообщение об ошибке"><con:configuration><path>$.message</path><content>Consent with identifier ${#TestCase#uuid1} not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе reason.code=CONSENT_NOT_FOUND"><con:configuration><path>$.reason.code</path><content>CONSENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе в parameters возвращен uuid "><con:configuration><path>$.reason.parameters</path><content>{"id":"${#TestCase#uuid1}"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе возвращено сообщение об ошибке в reason"><con:configuration><path>$.reason.message</path><content>Consent with identifier ${#TestCase#uuid1} not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7df599a5-b9f5-404b-89ba-34a9bb412047" name="В ответе reason.messageType=error"><con:configuration><path>$.reason.messageType</path><content>ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="${#TestSuite#userToken2}"/>
  <con:entry key="uuid" value="${#TestCase#uuid1}"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>currentDateTime</con:name><con:value>2022-08-15T18:45:49.223362700</con:value></con:property><con:property><con:name>futureDateTime</con:name><con:value>2027-08-15T18:50:49</con:value></con:property><con:property><con:name>pastDateTime</con:name><con:value>2022-08-15T18:50:49</con:value></con:property><con:property><con:name>uuid</con:name><con:value>c73e46b0-4008-48bd-ae7d-145a0359ea95</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>3904196a-1671-4df6-ad2e-37a9f7909a7e</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>a2002637-71f9-4fa1-b437-f978974878c5</con:value></con:property><con:property><con:name>uuid3</con:name><con:value>d029b60a-d44a-4563-bf30-f2326c682e02</con:value></con:property><con:property><con:name>uuid4</con:name><con:value>e4d98ac8-240f-45bb-8499-c94c3e508865</con:value></con:property><con:property><con:name>code1</con:name><con:value>3545029e-60f6-4966-ba79-c52cfe9fed5e</con:value></con:property><con:property><con:name>code2</con:name><con:value>10f55a24-6f20-42fc-aaae-16d18917d6e8</con:value></con:property><con:property><con:name>code3</con:name><con:value>653ad434-9d75-4259-b840-c4f5c7a88b31</con:value></con:property><con:property><con:name>code4</con:name><con:value>a613181c-47a1-4316-886d-1da08e64c5d2</con:value></con:property><con:property><con:name>n</con:name><con:value>100</con:value></con:property><con:property><con:name>params</con:name><con:value> {
        "key": "key1",
        "value": "value1"
      }, {
        "key": "key2",
        "value": "value2"
      }, {
        "key": "key3",
        "value": "value3"
      }, {
        "key": "key4",
        "value": "value4"
      }, {
        "key": "key5",
        "value": "value5"
      }, {
        "key": "key6",
        "value": "value6"
      }, {
        "key": "key7",
        "value": "value7"
      }, {
        "key": "key8",
        "value": "value8"
      }, {
        "key": "key9",
        "value": "value9"
      }, {
        "key": "key10",
        "value": "value10"
      }, {
        "key": "key11",
        "value": "value11"
      }, {
        "key": "key12",
        "value": "value12"
      }, {
        "key": "key13",
        "value": "value13"
      }, {
        "key": "key14",
        "value": "value14"
      }, {
        "key": "key15",
        "value": "value15"
      }, {
        "key": "key16",
        "value": "value16"
      }, {
        "key": "key17",
        "value": "value17"
      }, {
        "key": "key18",
        "value": "value18"
      }, {
        "key": "key19",
        "value": "value19"
      }, {
        "key": "key20",
        "value": "value20"
      }, {
        "key": "key21",
        "value": "value21"
      }, {
        "key": "key22",
        "value": "value22"
      }, {
        "key": "key23",
        "value": "value23"
      }, {
        "key": "key24",
        "value": "value24"
      }, {
        "key": "key25",
        "value": "value25"
      }, {
        "key": "key26",
        "value": "value26"
      }, {
        "key": "key27",
        "value": "value27"
      }, {
        "key": "key28",
        "value": "value28"
      }, {
        "key": "key29",
        "value": "value29"
      }, {
        "key": "key30",
        "value": "value30"
      }, {
        "key": "key31",
        "value": "value31"
      }, {
        "key": "key32",
        "value": "value32"
      }, {
        "key": "key33",
        "value": "value33"
      }, {
        "key": "key34",
        "value": "value34"
      }, {
        "key": "key35",
        "value": "value35"
      }, {
        "key": "key36",
        "value": "value36"
      }, {
        "key": "key37",
        "value": "value37"
      }, {
        "key": "key38",
        "value": "value38"
      }, {
        "key": "key39",
        "value": "value39"
      }, {
        "key": "key40",
        "value": "value40"
      }, {
        "key": "key41",
        "value": "value41"
      }, {
        "key": "key42",
        "value": "value42"
      }, {
        "key": "key43",
        "value": "value43"
      }, {
        "key": "key44",
        "value": "value44"
      }, {
        "key": "key45",
        "value": "value45"
      }, {
        "key": "key46",
        "value": "value46"
      }, {
        "key": "key47",
        "value": "value47"
      }, {
        "key": "key48",
        "value": "value48"
      }, {
        "key": "key49",
        "value": "value49"
      }, {
        "key": "key50",
        "value": "value50"
      }, {
        "key": "key51",
        "value": "value51"
      }, {
        "key": "key52",
        "value": "value52"
      }, {
        "key": "key53",
        "value": "value53"
      }, {
        "key": "key54",
        "value": "value54"
      }, {
        "key": "key55",
        "value": "value55"
      }, {
        "key": "key56",
        "value": "value56"
      }, {
        "key": "key57",
        "value": "value57"
      }, {
        "key": "key58",
        "value": "value58"
      }, {
        "key": "key59",
        "value": "value59"
      }, {
        "key": "key60",
        "value": "value60"
      }, {
        "key": "key61",
        "value": "value61"
      }, {
        "key": "key62",
        "value": "value62"
      }, {
        "key": "key63",
        "value": "value63"
      }, {
        "key": "key64",
        "value": "value64"
      }, {
        "key": "key65",
        "value": "value65"
      }, {
        "key": "key66",
        "value": "value66"
      }, {
        "key": "key67",
        "value": "value67"
      }, {
        "key": "key68",
        "value": "value68"
      }, {
        "key": "key69",
        "value": "value69"
      }, {
        "key": "key70",
        "value": "value70"
      }, {
        "key": "key71",
        "value": "value71"
      }, {
        "key": "key72",
        "value": "value72"
      }, {
        "key": "key73",
        "value": "value73"
      }, {
        "key": "key74",
        "value": "value74"
      }, {
        "key": "key75",
        "value": "value75"
      }, {
        "key": "key76",
        "value": "value76"
      }, {
        "key": "key77",
        "value": "value77"
      }, {
        "key": "key78",
        "value": "value78"
      }, {
        "key": "key79",
        "value": "value79"
      }, {
        "key": "key80",
        "value": "value80"
      }, {
        "key": "key81",
        "value": "value81"
      }, {
        "key": "key82",
        "value": "value82"
      }, {
        "key": "key83",
        "value": "value83"
      }, {
        "key": "key84",
        "value": "value84"
      }, {
        "key": "key85",
        "value": "value85"
      }, {
        "key": "key86",
        "value": "value86"
      }, {
        "key": "key87",
        "value": "value87"
      }, {
        "key": "key88",
        "value": "value88"
      }, {
        "key": "key89",
        "value": "value89"
      }, {
        "key": "key90",
        "value": "value90"
      }, {
        "key": "key91",
        "value": "value91"
      }, {
        "key": "key92",
        "value": "value92"
      }, {
        "key": "key93",
        "value": "value93"
      }, {
        "key": "key94",
        "value": "value94"
      }, {
        "key": "key95",
        "value": "value95"
      }, {
        "key": "key96",
        "value": "value96"
      }, {
        "key": "key97",
        "value": "value97"
      }, {
        "key": "key98",
        "value": "value98"
      }, {
        "key": "key99",
        "value": "value99"
      }, {
        "key": "key100",
        "value": "value100"
      }</con:value></con:property><con:property><con:name>uuid5</con:name><con:value>45527cf2-7097-4513-8080-7bf153dddd87</con:value></con:property><con:property><con:name>uuid6</con:name><con:value>dddad1df-3706-40bc-980b-4f0384ba5cc2</con:value></con:property></con:properties></con:testCase><con:testCase id="a2f61e18-7c8f-4f14-ae9c-cd041c20b957" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deactiveConsent" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Сгенерировать uuid" id="78d0b77a-a92f-46ea-8e13-68ccb3964d26"><con:settings/><con:config><script>def uuid1 = UUID.randomUUID().toString()
def uuid2 = UUID.randomUUID().toString()
def uuid3 = UUID.randomUUID().toString()
testRunner.testCase.setPropertyValue("uuid1", uuid1)
testRunner.testCase.setPropertyValue("uuid2", uuid2)
testRunner.testCase.setPropertyValue("uuid3", uuid3)</script></con:config></con:testStep><con:testStep type="restrequest" name="createConsent" id="e120c678-5224-405d-9dc1-a4ec2e0cb210"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#futureDateTime}",
    "organizationId": "1234",
    "parameters": [
      {
        "key": "key",
        "value": "value"
      }
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid1}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе возвращен uuid созданного согласия"><con:configuration><path>$.uuid</path><content>${#TestCase#uuid1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить созданный consent" id="f2b58362-178a-4edf-8841-816a98d36588"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid1")
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+userId

consent=sql.rows(query)

assert consent.size()==1
assert consent[0]."type"=="type"
assert consent[0]."version"=="version"
//assert consent[0].due_date==
assert consent[0].user_id==userId
assert consent[0].active==true
//assert consent[0].created==
assert consent[0].created_by==userId.toInteger()
assert consent[0].deprecated==null
assert consent[0].deprecated_by==null
assert consent[0].organization_id=="1234"

id= consent[0].id

queryDoc=" select * from consent_document where consent_id="+id

doc=sql.rows(queryDoc)

assert doc.size()==1
assert new String(doc[0].data)=="string222"
assert doc[0].tenant_id==userId.toInteger()

queryParam=" select * from consent_param where consent_id="+id

param=sql.rows(queryParam)

assert param.size()==1
assert param[0]."key"=="key"
assert param[0].value=="value"
assert param[0].tenant_id==userId.toInteger()</script></con:config></con:testStep><con:testStep type="restrequest" name="deactiveConsent" id="c0a8e26f-58dd-4f3f-b04e-38e3447e633a"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/{uuid}" methodName="deactiveConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deactiveConsent" id="3ca6de26-201c-400f-b54f-bdbc09fa508f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="70a95547-9374-497d-a708-ea7d197c8371" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="${#TestSuite#userToken1}"/>
  <con:entry key="uuid" value="${#TestCase#uuid1}"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить аннулирование consent" id="b503b8ea-b8ae-482b-8c45-96fe2c91aa8e"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

uuid= testRunner.testCase.getPropertyValue("uuid1")
userId= testRunner.testCase.testSuite.getPropertyValue("userId1")
query=" select * from consent where uuid='"+uuid+"' and tenant_id="+userId

consent=sql.rows(query)

assert consent.size()==1
assert consent[0]."type"=="type"
assert consent[0]."version"=="version"
//assert consent[0].due_date==
assert consent[0].user_id==userId
assert consent[0].active==false
//assert consent[0].created==
assert consent[0].created_by==userId.toInteger()
assert consent[0].deprecated!=null
assert consent[0].deprecated_by==userId.toInteger()
assert consent[0].organization_id=="1234"

id= consent[0].id

queryDoc=" select * from consent_document where consent_id="+id

doc=sql.rows(queryDoc)

assert doc.size()==1
assert new String(doc[0].data)=="string222"
assert doc[0].tenant_id==userId.toInteger()

queryParam=" select * from consent_param where consent_id="+id

param=sql.rows(queryParam)

assert param.size()==1
assert param[0]."key"=="key"
assert param[0].value=="value"
assert param[0].tenant_id==userId.toInteger()</script></con:config></con:testStep><con:testStep type="restrequest" name="deactiveConsent АС2" id="e17fdd75-fa78-4958-83eb-be6c80c0f4fa"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/{uuid}" methodName="deactiveConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deactiveConsent АС2" id="3ca6de26-201c-400f-b54f-bdbc09fa508f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе type=business"><con:configuration><path>$.type</path><content>business</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе error=true"><con:configuration><path>$.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе message с сообщением, что согласие уже аннулировано"><con:configuration><path>$.message</path><content>Consent with identifier ${#TestCase#uuid1} already deprecated.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.message с сообщением, что согласие уже аннулировано"><con:configuration><path>$.reason.message</path><content>Consent with identifier ${#TestCase#uuid1} already deprecated.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.code=CONSENT_ALREADY_DEPRECATED"><con:configuration><path>$.reason.code</path><content>CONSENT_ALREADY_DEPRECATED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.parameters содержит uuid "><con:configuration><path>$.reason.parameters</path><content>{"id":"${#TestCase#uuid1}"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.error=true"><con:configuration><path>$.reason.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе messageType=error"><con:configuration><path>$.reason.messageType</path><content>ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="${#TestSuite#userToken1}"/>
  <con:entry key="uuid" value="${#TestCase#uuid1}"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="createConsent 2" id="20d898a7-1504-4b49-ac13-61d81c1a8b25"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent" methodName="createConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createConsent 2" id="305e381d-0455-4a4f-bd4f-87cf31305f74" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "consentInfo": {
    "document": "string222",
    "dueDate": "${#TestCase#futureDateTime}",
    "organizationId": "1234",
    "parameters": [
      {
        "key": "key",
        "value": "value"
      }
    ],
    "type": {
      "type": "type",
      "version": "version"
    },
    "userId": "${#TestSuite#userId1}"
  },
  "uuid": "${#TestCase#uuid2}"
}</con:request><con:originalUri>http://telik-app.ehrdb.solit-clouds.ru/consent</con:originalUri><con:assertion type="JsonPath Match" id="c748a666-5541-4f13-bc0b-38adb9c4ed40" name="В ответе возвращен uuid созданного согласия"><con:configuration><path>$.uuid</path><content>${#TestCase#uuid2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="deactiveConsent АС1 несуществующее согласие" id="519bc205-a009-4bc4-b8da-7c1ff569d4ed"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/{uuid}" methodName="deactiveConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deactiveConsent АС1 несуществующее согласие" id="3ca6de26-201c-400f-b54f-bdbc09fa508f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе type=business"><con:configuration><path>$.type</path><content>business</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе error=true"><con:configuration><path>$.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе message с сообщением, что согласие не найдено"><con:configuration><path>$.message</path><content>Consent with identifier ${#TestCase#uuid3} not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.message с сообщением, что согласие не найдено"><con:configuration><path>$.reason.message</path><content>Consent with identifier ${#TestCase#uuid3} not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.code=CONSENT_NOT_FOUND"><con:configuration><path>$.reason.code</path><content>CONSENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.parameters содержит uuid "><con:configuration><path>$.reason.parameters</path><content>{"id":"${#TestCase#uuid3}"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.error=true"><con:configuration><path>$.reason.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе messageType=error"><con:configuration><path>$.reason.messageType</path><content>ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="${#TestSuite#userToken1}"/>
  <con:entry key="uuid" value="${#TestCase#uuid3}"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="deactiveConsent АС1 аннулирующий согласие не его создатель" id="e4fe16c2-f516-45a0-a3cd-14c221a31ef9"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/{uuid}" methodName="deactiveConsent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deactiveConsent АС1 аннулирующий согласие не его создатель" id="3ca6de26-201c-400f-b54f-bdbc09fa508f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/string</con:originalUri><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе type=business"><con:configuration><path>$.type</path><content>business</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе error=true"><con:configuration><path>$.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе message с сообщением, что согласие не найдено"><con:configuration><path>$.message</path><content>Consent with identifier ${#TestCase#uuid2} not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.message с сообщением, что согласие не найдено"><con:configuration><path>$.reason.message</path><content>Consent with identifier ${#TestCase#uuid2} not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.code=CONSENT_NOT_FOUND"><con:configuration><path>$.reason.code</path><content>CONSENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.parameters содержит uuid "><con:configuration><path>$.reason.parameters</path><content>{"id":"${#TestCase#uuid2}"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе reason.error=true"><con:configuration><path>$.reason.error</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4ac6396-2fb4-49b8-8ec0-3575ece6333e" name="В ответе messageType=error"><con:configuration><path>$.reason.messageType</path><content>ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="x-authentication-token" value="${#TestSuite#userToken2}"/>
  <con:entry key="uuid" value="${#TestCase#uuid2}"/>
</con:parameters><con:parameterOrder><con:entry>uuid</con:entry><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>currentDateTime</con:name><con:value>2022-08-15T18:45:49.223362700</con:value></con:property><con:property><con:name>futureDateTime</con:name><con:value>2027-08-15T18:50:49</con:value></con:property><con:property><con:name>pastDateTime</con:name><con:value>2022-08-15T18:50:49</con:value></con:property><con:property><con:name>uuid</con:name><con:value>c73e46b0-4008-48bd-ae7d-145a0359ea95</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>b01e4a9a-4cf8-447b-8fba-edd186ed4df3</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>075ac2d2-2c41-46bd-bff7-0e15e2676cf4</con:value></con:property><con:property><con:name>uuid3</con:name><con:value>26e583a6-c0a7-449b-85a0-474e9c465c20</con:value></con:property><con:property><con:name>uuid4</con:name><con:value>e4d98ac8-240f-45bb-8499-c94c3e508865</con:value></con:property><con:property><con:name>code1</con:name><con:value>3545029e-60f6-4966-ba79-c52cfe9fed5e</con:value></con:property><con:property><con:name>code2</con:name><con:value>10f55a24-6f20-42fc-aaae-16d18917d6e8</con:value></con:property><con:property><con:name>code3</con:name><con:value>653ad434-9d75-4259-b840-c4f5c7a88b31</con:value></con:property><con:property><con:name>code4</con:name><con:value>a613181c-47a1-4316-886d-1da08e64c5d2</con:value></con:property><con:property><con:name>n</con:name><con:value>100</con:value></con:property><con:property><con:name>params</con:name><con:value> {
        "key": "key1",
        "value": "value1"
      }, {
        "key": "key2",
        "value": "value2"
      }, {
        "key": "key3",
        "value": "value3"
      }, {
        "key": "key4",
        "value": "value4"
      }, {
        "key": "key5",
        "value": "value5"
      }, {
        "key": "key6",
        "value": "value6"
      }, {
        "key": "key7",
        "value": "value7"
      }, {
        "key": "key8",
        "value": "value8"
      }, {
        "key": "key9",
        "value": "value9"
      }, {
        "key": "key10",
        "value": "value10"
      }, {
        "key": "key11",
        "value": "value11"
      }, {
        "key": "key12",
        "value": "value12"
      }, {
        "key": "key13",
        "value": "value13"
      }, {
        "key": "key14",
        "value": "value14"
      }, {
        "key": "key15",
        "value": "value15"
      }, {
        "key": "key16",
        "value": "value16"
      }, {
        "key": "key17",
        "value": "value17"
      }, {
        "key": "key18",
        "value": "value18"
      }, {
        "key": "key19",
        "value": "value19"
      }, {
        "key": "key20",
        "value": "value20"
      }, {
        "key": "key21",
        "value": "value21"
      }, {
        "key": "key22",
        "value": "value22"
      }, {
        "key": "key23",
        "value": "value23"
      }, {
        "key": "key24",
        "value": "value24"
      }, {
        "key": "key25",
        "value": "value25"
      }, {
        "key": "key26",
        "value": "value26"
      }, {
        "key": "key27",
        "value": "value27"
      }, {
        "key": "key28",
        "value": "value28"
      }, {
        "key": "key29",
        "value": "value29"
      }, {
        "key": "key30",
        "value": "value30"
      }, {
        "key": "key31",
        "value": "value31"
      }, {
        "key": "key32",
        "value": "value32"
      }, {
        "key": "key33",
        "value": "value33"
      }, {
        "key": "key34",
        "value": "value34"
      }, {
        "key": "key35",
        "value": "value35"
      }, {
        "key": "key36",
        "value": "value36"
      }, {
        "key": "key37",
        "value": "value37"
      }, {
        "key": "key38",
        "value": "value38"
      }, {
        "key": "key39",
        "value": "value39"
      }, {
        "key": "key40",
        "value": "value40"
      }, {
        "key": "key41",
        "value": "value41"
      }, {
        "key": "key42",
        "value": "value42"
      }, {
        "key": "key43",
        "value": "value43"
      }, {
        "key": "key44",
        "value": "value44"
      }, {
        "key": "key45",
        "value": "value45"
      }, {
        "key": "key46",
        "value": "value46"
      }, {
        "key": "key47",
        "value": "value47"
      }, {
        "key": "key48",
        "value": "value48"
      }, {
        "key": "key49",
        "value": "value49"
      }, {
        "key": "key50",
        "value": "value50"
      }, {
        "key": "key51",
        "value": "value51"
      }, {
        "key": "key52",
        "value": "value52"
      }, {
        "key": "key53",
        "value": "value53"
      }, {
        "key": "key54",
        "value": "value54"
      }, {
        "key": "key55",
        "value": "value55"
      }, {
        "key": "key56",
        "value": "value56"
      }, {
        "key": "key57",
        "value": "value57"
      }, {
        "key": "key58",
        "value": "value58"
      }, {
        "key": "key59",
        "value": "value59"
      }, {
        "key": "key60",
        "value": "value60"
      }, {
        "key": "key61",
        "value": "value61"
      }, {
        "key": "key62",
        "value": "value62"
      }, {
        "key": "key63",
        "value": "value63"
      }, {
        "key": "key64",
        "value": "value64"
      }, {
        "key": "key65",
        "value": "value65"
      }, {
        "key": "key66",
        "value": "value66"
      }, {
        "key": "key67",
        "value": "value67"
      }, {
        "key": "key68",
        "value": "value68"
      }, {
        "key": "key69",
        "value": "value69"
      }, {
        "key": "key70",
        "value": "value70"
      }, {
        "key": "key71",
        "value": "value71"
      }, {
        "key": "key72",
        "value": "value72"
      }, {
        "key": "key73",
        "value": "value73"
      }, {
        "key": "key74",
        "value": "value74"
      }, {
        "key": "key75",
        "value": "value75"
      }, {
        "key": "key76",
        "value": "value76"
      }, {
        "key": "key77",
        "value": "value77"
      }, {
        "key": "key78",
        "value": "value78"
      }, {
        "key": "key79",
        "value": "value79"
      }, {
        "key": "key80",
        "value": "value80"
      }, {
        "key": "key81",
        "value": "value81"
      }, {
        "key": "key82",
        "value": "value82"
      }, {
        "key": "key83",
        "value": "value83"
      }, {
        "key": "key84",
        "value": "value84"
      }, {
        "key": "key85",
        "value": "value85"
      }, {
        "key": "key86",
        "value": "value86"
      }, {
        "key": "key87",
        "value": "value87"
      }, {
        "key": "key88",
        "value": "value88"
      }, {
        "key": "key89",
        "value": "value89"
      }, {
        "key": "key90",
        "value": "value90"
      }, {
        "key": "key91",
        "value": "value91"
      }, {
        "key": "key92",
        "value": "value92"
      }, {
        "key": "key93",
        "value": "value93"
      }, {
        "key": "key94",
        "value": "value94"
      }, {
        "key": "key95",
        "value": "value95"
      }, {
        "key": "key96",
        "value": "value96"
      }, {
        "key": "key97",
        "value": "value97"
      }, {
        "key": "key98",
        "value": "value98"
      }, {
        "key": "key99",
        "value": "value99"
      }, {
        "key": "key100",
        "value": "value100"
      }</con:value></con:property><con:property><con:name>uuid5</con:name><con:value>45527cf2-7097-4513-8080-7bf153dddd87</con:value></con:property><con:property><con:name>uuid6</con:name><con:value>dddad1df-3706-40bc-980b-4f0384ba5cc2</con:value></con:property></con:properties></con:testCase><con:testCase id="dca9cceb-8006-4a94-9e7f-905cbbc034ff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Создание ТД для поиска" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="найти несуществующий id арендатора и пользователя" id="2b3951c2-3b8f-4164-965c-39e9768d3b4b"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)

sql=scripts.createDBConnection()

user=sql.firstRow("select max(id)+1 as id from f_user")

tenant=sql.firstRow("select max(id)+1 as id from tenant")

testRunner.testCase.setPropertyValue("userId", user.id.toString())

testRunner.testCase.setPropertyValue("tenantId", tenant.id.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="createTenantId" id="b1d178aa-5ce0-4aca-a127-19a6fc9d080e"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/admin/tenant/" methodName="createTentant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createTenantId" id="b76384e3-4352-4882-a01a-2491350fa0cb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "active": true,
  "kafkaResultServers": "string",
  "master": true,
  "name": "tentant_autotest_${#TestCase#tenantId}",
  "systemName": "tentant_autotest_${#TestCase#tenantId}"
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/admin/tenant/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="createUser" id="e672a06f-5d98-4964-9795-64d193fc366f"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/admin/user/" methodName="createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createUser" id="51515872-88c3-4049-9957-9739d018def4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "active": true,
  "login": "autotest${#TestCase#userId}",
  "name": "autotest${#TestCase#userId}",
  "password": "autotest${#TestCase#userId}",
  "role": "ADMIN",
  "tenantId": ${#TestCase#tenantId}
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/admin/user/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="createUser 2" id="ca7ccb84-c752-4112-b75f-c09446f2b2b8"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/admin/user/" methodName="createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createUser 2" id="51515872-88c3-4049-9957-9739d018def4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "active": true,
  "login": "autotest${#TestCase#userId}",
  "name": "autotest${#TestCase#userId}",
  "password": "autotest${#TestCase#userId}",
  "role": "ADMIN",
  "tenantId": ${#TestCase#tenantId}
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/admin/user/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="createUser 3" id="eac5c0b0-9577-47e0-be98-92ec933bfa18"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/admin/user/" methodName="createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createUser 3" id="51515872-88c3-4049-9957-9739d018def4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
  "active": true,
  "login": "autotest${#TestCase#userId}",
  "name": "autotest${#TestCase#userId}",
  "password": "autotest${#TestCase#userId}",
  "role": "ADMIN",
  "tenantId": ${#TestCase#tenantId}
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/admin/user/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="x-authentication-token" value="${#TestSuite#userToken1}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>x-authentication-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="getUsers" id="04979495-8f07-4daf-aa72-464c868e3733"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>user1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createUser</con:sourceStep><con:sourcePath>$.userId</con:sourcePath><con:targetType>userId1</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>user2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createUser 2</con:sourceStep><con:sourcePath>$.userId</con:sourcePath><con:targetType>userId2</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>user3</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createUser 3</con:sourceStep><con:sourcePath>$.userId</con:sourcePath><con:targetType>userId3</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="manualTestStep" name="Преобразовать логин и пароль в токен" id="62933b90-557c-40a6-97ba-dbe970d88936"><con:description>https://www.blitter.se/utils/basic-authentication-header-generator/
Username= логин@tenantId
Password=пфроль
логин=autotest+ userId
пароль=autotest+ userId
полученное значение токена записать в проперти</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="jdbc" name="Создать согласия" id="fa4cba9b-b4eb-4341-bbae-c709134fb3e8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://${#Project#dbConnect}?user=${#Project#dbLogin}&amp;password=${#Project#dbPassword}</con:connectionString><con:query>INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'fdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', 'string1', 'string', '2022-09-17 00:00:01.000', ${#TestCase#userId2},  false, '2022-08-18 10:51:11.734', ${#TestCase#userId},  '2022-08-18 10:51:11.734', ${#TestCase#userId},  ${#TestCase#tenantId},  '1');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'edb332d5-f845-44f4-84ee-6e4e9b2cdd7a', 'string1', '2', '2022-09-17 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:14:57.502', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
 VALUES((select max(id)+1 as id from consent), '1db332d5-f845-44f4-84ee-6e4e9b2cdd7a', 'string', '1', '2024-08-12 00:00:01.000', ${#TestCase#userId},  true, '2022-08-18 10:50:48.380', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'hdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', 'string', '2', '2022-09-16 00:00:01.000', ${#TestCase#userId3},  true, '2022-08-18 10:49:47.769', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'gdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', 'string', '1', '2022-09-15 00:00:01.000', ${#TestCase#userId3},  true, '2022-08-18 10:49:58.570', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'ddb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-15 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:57.673', ${#TestCase#userId},  '2022-08-18 10:51:12.734', ${#TestCase#userId},  ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'cdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-15 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:58.366', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'bdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-15 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.068', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'adb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'adb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'dgb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'deb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'dfb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'dcb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT into  consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'dbb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT into  consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'dab332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'cgb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'cfb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'ceb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'cdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'ccb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
 INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'cbb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'd');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'cab332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'bfb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'aA');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'beb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'aa');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'bdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
values ((select max(id)+1 as id from consent), 'bcb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'bbb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'a');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'bab332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'ahb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
 INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'agb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
 INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'afb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'aeb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  '2');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'adb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'acb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', '2', true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
 INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'abb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', '1', true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'aab332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', '1', true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT into  consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
values ((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
VALUES((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent
(id, uuid, "type", "version", due_date, user_id, active, created, created_by, deprecated, deprecated_by, tenant_id, organization_id)
values ((select max(id)+1 as id from consent), 'zdb332d5-f845-44f4-84ee-6e4e9b2cdd7a', '3', '3', '2022-09-20 00:00:01.000', ${#TestCase#userId2},  true, '2022-08-18 11:15:59.755', ${#TestCase#userId},  NULL, NULL, ${#TestCase#tenantId},  'string');
INSERT INTO consent_param
(id, consent_id, "key", value, tenant_id)
VALUES((select max(id)+1 as id from consent_param), (select max(id) as id from consent where created_by =${#TestCase#userId}), '1', '1',${#TestCase#tenantId});
INSERT INTO consent_param
(id, consent_id, "key", value, tenant_id)
VALUES((select max(id)+1 as id from consent_param), (select max(id) as id from consent where created_by =${#TestCase#userId}), '1', '2',${#TestCase#tenantId});
INSERT INTO consent_param
(id, consent_id, "key", value, tenant_id)
VALUES((select max(id)+1 as id from consent_param), (select max(id)-1 as id from consent where created_by =${#TestCase#userId}), '1', '2',${#TestCase#tenantId});
INSERT INTO consent_param
(id, consent_id, "key", value, tenant_id)
VALUES((select max(id)+1 as id from consent_param), (select max(id)-2 as id from consent where created_by =${#TestCase#userId}), '2', '2',${#TestCase#tenantId});
INSERT INTO consent_param
(id, consent_id, "key", value, tenant_id)
VALUES((select max(id)+1 as id from consent_param), (select max(id)-3 as id from consent where created_by =${#TestCase#userId}), '2', '1',${#TestCase#tenantId});
INSERT INTO consent_param
(id, consent_id, "key", value, tenant_id)
VALUES((select max(id)+1 as id from consent_param), (select max(id)-4 as id from consent where created_by =${#TestCase#userId}), '1', '1',${#TestCase#tenantId});
INSERT INTO consent_param
(id, consent_id, "key", value, tenant_id)
VALUES((select max(id)+1 as id from consent_param), (select max(id)-5 as id from consent where created_by =${#TestCase#userId}), 'string', 'string',${#TestCase#tenantId});</con:query><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>tenantId</con:name><con:value>36</con:value></con:property><con:property><con:name>userId</con:name><con:value>34</con:value></con:property><con:property><con:name>userId1</con:name><con:value>34</con:value></con:property><con:property><con:name>userId2</con:name><con:value>35</con:value></con:property><con:property><con:name>userId3</con:name><con:value>36</con:value></con:property><con:property><con:name>autorization</con:name><con:value>Basic YXV0b3Rlc3QzNkAzNjphdXRvdGVzdDM2</con:value></con:property></con:properties></con:testCase><con:testCase id="7c919d27-fdc2-44ed-9d6a-dfd0155ad11b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="search фильтрация" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Проверить, надо ли создавать тестовые данные" id="b49e498f-270f-44b3-ac18-81f272339098"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");
userId= context.expand('${#TestCase#userId}')

consents = sql.rows("select * from consent where created_by="+userId)

log.info " если тест провален, выполни кейс Создание ТД для поиска, затем загрузи его properties в properties кейсов search..."
assert consents.size()==51</script></con:config></con:testStep><con:testStep type="restrequest" name="search по userId" id="e0c68d41-083a-412d-81f9-64e008c51125"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по userId" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
      "userId" : "${#TestCase#userId1}"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e81e7d77-dbb6-49c3-8a3c-e320d5f9ae0d" name="В ответе возвращены только согласия пользователя user1"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по userId#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" and user_id='"+userId+"'  ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по userId 2" id="84b45c68-9d3d-468a-ae63-d86f69d242ae"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по userId 2" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
      "userId" : "${#TestCase#userId2}"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="7ba802bc-e21e-4670-93a7-9f1b50494e8c" name="В ответе возвращены согласия по пользоватпелю user2"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по userId 2#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId2}')
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+" and user_id='"+userId+"'  ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по userId 3" id="5398aec9-6777-40f7-8353-bc1d4e6dee85"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по userId 3" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
      "userId" : "${#TestCase#userId3}"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="6df757e4-2116-43e1-9a91-94a4bfa5ae12" name="В ответе возвращены согласия по пользователю user3"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по userId 3#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId3}')
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+" and user_id='"+userId+"'  ORDER BY id ")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по type" id="aef5d67e-e5b2-4c59-b8fb-b2db6be210b9"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по type" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "types": [
      {
        "type": "string",
        "version": "1"
      }
    ]
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="b0ddf70f-a81a-46b5-ae25-e3a76b293a5b" name="В ответе возвращены согласия только переданного типа и версии"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по type#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+" and \"type\"='string' and \"version\"='1' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по type 2" id="ede0ccbf-6c44-4363-8da5-603faf0b6111"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по type 2" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "types": [
      {
        "type": "string",
        "version": "2"
      }
    ]
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="64d5c7eb-74ec-4334-bb56-ed1512e0bf5c" name="В ответе возвращены согласия только переданного типа и версии"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по type 2#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+" and \"type\"='string' and \"version\"='2' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по type 3" id="f32ec64e-3d3a-4568-a315-5a5212e90efd"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по type 3" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "types": [
      {
        "type": "string",
        "version": "2"
      },
      {
        "type": "string",
        "version": "1"
      }
    ]
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d6c38bdb-03f6-4ddc-90ce-d074dad8c9cf" name="В ответе возвращены согласия только переданного типа и версии"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по type 3#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+" and ((\"type\"='string' and \"version\"='2') or (\"type\"='string' and \"version\"='1')) ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по active" id="4e5fa203-5382-4f6b-951c-1f0bfc8e4370"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по active" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "active": true
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="9ebcb510-fd67-4bad-bfeb-4a8132995141" name="В ответе возвращены активные согласия"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по active#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and active=true ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по active =false" id="fb881da3-13ad-4127-9603-68f30540e60a"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по active =false" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "active": false
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8f3c2166-5dd6-4777-bd9a-e4dd218674f4" name="В ответе возвращены неактивные согласия"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по active =false#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and active=false ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по createdFrom" id="fff410af-4a47-4137-b001-84c854647bc3"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по createdFrom" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "createdFrom": "2022-08-18T11:15:59"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8895cb9b-a6ad-4587-813b-2a434e5af684" name="В ответе возвращены согласия созданные позже переданной даты"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по createdFrom#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and created >= '2022-08-18 11:15:59' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по createdFrom 2" id="3062fff0-96b3-4f12-8bd6-fe22837f99a7"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по createdFrom 2" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "createdFrom": "2022-08-18T10:35:48"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="9b88dab3-6217-41ac-8f88-c9da36178ca8" name="В ответе возвращены согласия созданные позже переданной даты"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по createdFrom 2#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and created >= '2022-08-18 10:35:48' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по createdTo" id="4abae11d-f502-4d52-9899-d64f929392f4"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по createdTo" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
    "createdTo": "2022-08-18T11:15:59"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="8f1cd9b4-ae4c-4257-8522-94744ae32685" name="В ответе возвращены согласия созданные раньше переданной даты"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по createdTo#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and created &lt;= '2022-08-18 11:15:59' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по createdTo 2" id="e717fc3e-396b-4cc0-b44d-9c20fdb81a51"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по createdTo 2" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
    "createdTo": "2022-08-18T10:35:49"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="3ac99157-0041-49c6-b78d-a87bec5c90ba" name="В ответе возвращены согласия созданные раньше переданной даты"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по createdTo 2#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and created &lt;= '2022-08-18 10:35:49' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по createdFrom и createdTo" id="eeafb1a6-6daa-4f60-89c5-d2b3fcd0725e"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по createdFrom и createdTo" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
    "createdFrom": "2022-08-18T10:49:59",
     "createdTo": "2022-08-18T11:15:56"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="ed52a50e-5861-42bc-a040-c20311375539" name="В ответе возвращены согласия созданные между переданными датами"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по createdFrom и createdTo#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+" and created >= '2022-08-18 10:49:59' and created &lt;= '2022-08-18T11:15:56' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по deprecatedFrom" id="3f3ac3db-7b92-4550-8823-cd923e26c7a3"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по deprecatedFrom" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "deprecatedFrom": "2022-08-18T10:51:12"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="547a7b42-4141-4c2f-ac1e-b6b2bef343c4" name="В ответе возвращены согласия, аннулированные позже переданной даты"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по deprecatedFrom#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and deprecated > '2022-08-18 10:51:12' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по deprecatedFrom 2" id="3d72934b-a09e-471f-b7f7-7ff66259cffe"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по deprecatedFrom 2" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "deprecatedFrom": "2022-08-18T10:51:13"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="3b1bfdcb-d4a9-4c93-a192-e8b12374add6" name="В ответе возвращены согласия, аннулированные позже переданной даты"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по deprecatedFrom 2#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and deprecated > '2022-08-18 10:51:13' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по deprecatedTo" id="1767e4bd-79fd-4884-8a2d-931ac3934316"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по deprecatedTo" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "deprecatedTo": "2022-08-18T10:51:10"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="48e39761-5436-4eed-bd7c-25ec1964a3cc" name="В ответе возвращены согласия, аннулированные раньше переданной даты"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по deprecatedTo#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and deprecated &lt;= '2022-08-18 10:51:10' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по deprecatedTo 2" id="366cc46a-fa0d-4ad6-94e0-57a447889fa0"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по deprecatedTo 2" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "parameters" : {\r
     "deprecatedTo": "2022-08-18T10:51:12"
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="dfe6b8ed-17c6-4e3d-b154-ab3d42babb20" name="В ответе возвращены согласия, аннулированные раньше переданной даты"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по deprecatedTo 2#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and deprecated &lt;= '2022-08-18 10:51:12' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по deprecatedFrom и deprecatedTo" id="9a8f35de-f371-430b-9ad3-5ca61f132b78"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по deprecatedFrom и deprecatedTo" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
   "parameters" : {
     "deprecatedFrom": "2022-08-18T10:51:11",
     "deprecatedTo": "2022-08-18T10:51:12"
   }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="f0048d3d-4bde-47da-a715-2c74d69fc821" name="В ответе возвращены согласия, аннулированные между переданных дат"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по deprecatedFrom и deprecatedTo#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+creatorId+"and deprecated &lt;= '2022-08-18 10:51:12' and deprecated >= '2022-08-18 10:51:11' ORDER BY id limit 50")

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по consentParameters, передан 1 параметр" id="3e948f3c-6150-4b25-bdd6-dec98db529d3"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по consentParameters, передан 1 параметр" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
   "parameters" : {
    "consentParameters": [
      {
        "key": "1",
        "value": "1"
      }
    ]
   }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="dacbcab3-f32c-48fb-981f-083b204a1781" name="В ответе возвращены согласия с переданным параметром"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по consentParameters, передан 1 параметр#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

query="select distinct c.* from consent c "+
						"join consent_param cp on cp.consent_id=c.id  "+
						" WHERE c.created_by = "+creatorId+" and cp.\"key\"='1' and cp.value='1' "
						" ORDER BY c.id limit 50"

dbItems=sql.rows(query)

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по consentParameters, передан ключ параметра" id="f712cc9b-6cfc-494d-bad5-8cc2e19a650f"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по consentParameters, передан ключ параметра" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
   "parameters" : {
    "consentParameters": [
      {
        "key": "1"
      }
    ]
   }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="d423308f-d63f-4a16-840f-91108bb28b30" name="В ответе возвращены согласия, у которых есть параметр с переданным ключом"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по consentParameters, передан ключ параметра#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

query="select distinct c.* from consent c "+
						"join consent_param cp on cp.consent_id=c.id  "+
						" WHERE c.created_by = "+creatorId+" and cp.\"key\"='1' "
						" ORDER BY c.id  limit 50"

dbItems=sql.rows(query)

assert responseItems.size()==dbItems.size()

 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search по consentParameters, переданы несколько параметров" id="74628966-184d-441b-a5a5-a2c9293df2e8"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search по consentParameters, переданы несколько параметров" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
   "parameters" : {
    "consentParameters": [
      {
        "key": "1",
        "value": "2"
      },
      {
        "key": "1",
        "value": "1"
      }
    ]
   }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="839cece1-f7a7-45a8-9d58-cd55c0eb3fc1" name="В ответе возвращены согласия с переданными параметрами"><con:configuration><scriptText>import groovy.json.JsonSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search по consentParameters, переданы несколько параметров#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
creatorId= context.expand('${#TestCase#userId}')

query="select distinct c.* from consent c "+
						"join consent_param cp on cp.consent_id=c.id  "+
						" WHERE c.created_by = "+creatorId+" and (cp.\"key\"='1' and cp.value='1') and  c.id in (  "+
						"	select distinct c.id from consent c "+
						"	join consent_param cp on cp.consent_id=c.id  "+
						"WHERE c.created_by = "+creatorId+" and (cp.\"key\"='1' and cp.value='2')  )"+
						" ORDER BY c.id limit 50"
log.info query
dbItems=sql.rows(query)

assert responseItems.size()==dbItems.size()
 n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tenantId</con:name><con:value>34</con:value></con:property><con:property><con:name>userId</con:name><con:value>28</con:value></con:property><con:property><con:name>userId1</con:name><con:value>28</con:value></con:property><con:property><con:name>userId2</con:name><con:value>29</con:value></con:property><con:property><con:name>userId3</con:name><con:value>30</con:value></con:property><con:property><con:name>autorization</con:name><con:value>Basic YXV0b3Rlc3QyOEAzNDphdXRvdGVzdDI4</con:value></con:property></con:properties></con:testCase><con:testCase id="5a76c02c-b21f-4bfa-8695-50f5a74e3cfc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="search сортировка" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="search без сортировки" id="09cbd975-b55e-4a7f-89c4-796b9ba12918"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search без сортировки" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по умолчанию (по id)"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search без сортировки#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY id ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по userId desc" id="7f8df59a-c60b-4e43-ae62-335fcaad4aca"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по userId desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "userId"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по userId desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id desc ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по userId asc" id="e7167ab4-1b28-4984-b86b-eecd4553c6ad"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по userId asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "userId"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по userId asc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId asc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id  ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по types desc" id="c29991f2-0b5c-474a-bb4f-15f157c672f8"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по types desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "type"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по type desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по types desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY \"type\" desc ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по types asc" id="8b54ac79-70a9-4d5b-9375-29db3fb7253e"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по types asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "type"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по type"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по types asc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY \"type\"  ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по uuid desc" id="39ed875a-6f23-4072-a80c-5d24a55e9b30"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по uuid desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "uuid"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по uuid desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id desc ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по uuid asc" id="3823a8f0-bf1b-4a63-a35d-6c68cf1a05af"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по uuid asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "uuid"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по uuid asc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id desc ")

for(int i=0; i&lt;responseItems.size(); i++){
	assert dbItems[i].uuid==responseItems[i].uuid
}
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по version desc" id="1ffe0761-a706-48d1-98f2-d739434a50b6"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по version desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "version"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по version desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id desc ")


n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по version asc" id="96ed8022-86e7-477f-95c6-3553c396585e"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по version asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "version"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по version asc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId asc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id  ")


n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по dueDate desc" id="9c63d762-e1d8-4175-93cb-1391d772fdaf"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по dueDate desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "dueDate"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по dueDate desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id desc ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по dueDate asc" id="65541402-1981-43fb-a0dd-b1303eb644f2"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по dueDate asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "dueDate"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по dueDate asc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по dueDate asc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY due_date asc ")


n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по active desc" id="5ffc3e84-6f36-4a19-8de0-f36c3cc766d6"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по active desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "active"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по active desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id desc ")


n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по active asc" id="09ce1be8-72fd-49a2-a4da-960c65f9a39b"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по active asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "active"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по active asc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id desc ")


n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по created desc" id="8f3a16b1-b44e-4f93-8c34-92fd4906b927"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по created desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "created"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по created desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по userId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY user_id desc ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по created asc" id="1270f460-111f-41b2-bda8-344badd0fdf3"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по created asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "created"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по created asc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по created asc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY created")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по deprecated desc" id="cf16fc8f-e9e5-45ae-bace-01b4c699cd37"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по deprecated desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "deprecated"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по deprecated desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по deprecated desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY deprecated desc ")


n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по deprecated asc" id="0e2724eb-c26e-43f9-b510-ff268d17952b"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по deprecated asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "deprecated"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по deprecated asc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по deprecated asc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY deprecated ")


n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по organizationId desc" id="c30240b7-aab9-4c82-a5bb-d2e2169d63c3"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по organizationId desc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : false,\r
      "field" : "organizationId"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по organizationId desc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по organizationId desc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY organization_id desc ")


n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search сортировка по organizationId asc" id="cac92af7-3cef-4ff2-8aba-c273aa0ec50c"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search сортировка по organizationId asc" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r
   "sort" : {\r
      "direction" : true,\r
      "field" : "organizationId"\r
   }\r
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по organizationId asc"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search сортировка по organizationId asc#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY organization_id ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tenantId</con:name><con:value>34</con:value></con:property><con:property><con:name>userId</con:name><con:value>28</con:value></con:property><con:property><con:name>userId1</con:name><con:value>28</con:value></con:property><con:property><con:name>userId2</con:name><con:value>29</con:value></con:property><con:property><con:name>userId3</con:name><con:value>30</con:value></con:property><con:property><con:name>autorization</con:name><con:value>Basic YXV0b3Rlc3QyOEAzNDphdXRvdGVzdDI4</con:value></con:property></con:properties></con:testCase><con:testCase id="3c56aa25-4321-4773-b5cc-d6775e77a070" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searc пагинация" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="search без пагинации" id="4611d0d1-00aa-4af4-a64b-47a2c63c495f"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search без пагинации" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{\r}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по умолчанию (по id)"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search без пагинации#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY id ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}

</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageNumber по умолчанию"><con:configuration><path>$.paging.pageNumber</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageSize по умолчанию"><con:configuration><path>$.paging.pageSize</path><content>50</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageTotal=2"><con:configuration><path>$.paging.pageTotal</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе morePagesAvailable=true "><con:configuration><path>$.paging.morePagesAvailable</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search с пагинацией, вторая страница" id="6c1f6bac-b7a6-48a6-a6de-d58281addf32"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search с пагинацией, вторая страница" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
   "paging" : {
      "page" : 1,
      "pageSize" : 50
   }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по умолчанию (по id)"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search с пагинацией, вторая страница#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY id ")

n=50
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageNumber равен переданному в запросе"><con:configuration><path>$.paging.pageNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageSize  равен переданному в запросе"><con:configuration><path>$.paging.pageSize</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageTotal=2"><con:configuration><path>$.paging.pageTotal</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе morePagesAvailable=true "><con:configuration><path>$.paging.morePagesAvailable</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search с пагинацией" id="16b69b8b-2db0-402b-99b0-33fc4ce4d545"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search с пагинацией" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
   "paging" : {
      "page" : 0,
      "pageSize" : 2
   }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по умолчанию (по id)"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search с пагинацией#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY id ")

n=0
for(int i=0; i&lt;responseItems.size(); i++){
	assert dbItems[n].uuid==responseItems[i].uuid
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageNumber равен переданному в запросе"><con:configuration><path>$.paging.pageNumber</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageSize  равен переданному в запросе"><con:configuration><path>$.paging.pageSize</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageTotal=26"><con:configuration><path>$.paging.pageTotal</path><content>26</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе morePagesAvailable=true "><con:configuration><path>$.paging.morePagesAvailable</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="search с пагинацией 2" id="0fc9eb02-9992-41f6-886b-f3200137479e"><con:settings/><con:config service="http://telik-app.ehrdb.solit-clouds.ru" resourcePath="/consent/search" methodName="search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search с пагинацией 2" id="b77b6762-7c2e-479a-86a4-f85e52129ee9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://telik-app.ehrdb.solit-clouds.ru</con:endpoint><con:request>{
   "paging" : {
      "page" : 1,
      "pageSize" : 2
   }
}</con:request><con:originalUri>https://telik-app.ehrdb.solit-clouds.ru/consent/search</con:originalUri><con:assertion type="GroovyScriptAssertion" id="940a99ab-9e56-4c85-b980-f3b44c8922b5" name="В ответе элементы отсортированы по умолчанию (по id)"><con:configuration><scriptText>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import groovy.sql.Sql

def login =context.expand('${#Project#dbLogin}')
def password =context.expand('${#Project#dbPassword}')
def dbconstring =context.expand('${#Project#dbConnect}')

sql=Sql.newInstance("jdbc:postgresql://"+dbconstring+"?user="+login+"&amp;password="+password, "org.postgresql.Driver");


def searchResponse = context.expand('${search с пагинацией 2#Response}')
def slurperJson = new JsonSlurper()
def consents = slurperJson.parseText(searchResponse)
responseItems= consents.items
userId= context.expand('${#TestCase#userId}')

dbItems=sql.rows("select * from consent WHERE created_by = "+userId+" ORDER BY id ")

n=2
for(int i=0; i&lt;responseItems.size(); i++){
	log.info "i="+i
	assert dbItems[n].uuid==responseItems[i].uuid
	assert dbItems[n].user_id==responseItems[i].userId
	assert dbItems[n]."type"==responseItems[i].type.type
	assert dbItems[n].version==responseItems[i].type.version
	assert dbItems[n].active==responseItems[i].active
	dbCreated=dbItems[n].created.toString()
	assert dbCreated.replace(' ','T')==responseItems[i].created.toString()
	dbDeprecated=dbItems[n].deprecated !=null ? dbItems[n].deprecated.toString().replace(' ','T') : null
	responseDeprecated= responseItems[i].deprecated ? responseItems[i].deprecated.toString()  : null
	assert dbDeprecated==responseDeprecated
	
	query="select * from consent_param WHERE consent_id="+dbItems[n].id

	dbParams=sql.rows(query)
	log.info query
	log.info dbParams
	if(dbParams.size()==0){
		assert  responseItems[i].parameters.size()==0
	}
	else{
		for(int k=0;k&lt;responseItems[i].parameters.size(); k++){
			responseParams=responseItems[i].parameters[k]
			assert responseItems[i].parameters[k].key == dbParams[k]."key"
			assert responseItems[i].parameters[k].value == dbParams[k].value
		}
	}
	n=n+1
}
</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageNumber равен переданному в запросе"><con:configuration><path>$.paging.pageNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageSize  равен переданному в запросе"><con:configuration><path>$.paging.pageSize</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе pageTotal=26"><con:configuration><path>$.paging.pageTotal</path><content>26</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="068b746d-6c9a-49d9-84db-3ee11803cecd" name="В ответе morePagesAvailable=true "><con:configuration><path>$.paging.morePagesAvailable</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="authorization" value="${#TestCase#autorization}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tenantId</con:name><con:value>34</con:value></con:property><con:property><con:name>userId</con:name><con:value>28</con:value></con:property><con:property><con:name>userId1</con:name><con:value>28</con:value></con:property><con:property><con:name>userId2</con:name><con:value>29</con:value></con:property><con:property><con:name>userId3</con:name><con:value>30</con:value></con:property><con:property><con:name>autorization</con:name><con:value>Basic YXV0b3Rlc3QyOEAzNDphdXRvdGVzdDI4</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>userId1</con:name><con:value>7</con:value></con:property><con:property><con:name>userId2</con:name><con:value>8</con:value></con:property><con:property><con:name>userToken1</con:name><con:value>dGVzdDckJCQ3fDIwMjItMDgtMTVUMTk6MTM6MjYuMDYxNzMyNTA5fGYwODVjYTZlNDliYjE1Njk2ODRmODNlNmQ5ODBiNWQy</con:value></con:property><con:property><con:name>userToken2</con:name><con:value>dGVzdDgkJCQ4fDIwMjItMDgtMTZUMTI6MjU6MDguNDM1NDUzNjM5fDQ5NDAwMTZkNjcwNTFlMmUwZjMxODhjNjZhNDBkMGUy</con:value></con:property></con:properties></con:testSuite><con:properties><con:property><con:name>telikEndpoint</con:name><con:value>https://telik-app.ehrdb.solit-clouds.ru</con:value></con:property><con:property><con:name>dbLogin</con:name><con:value>telik</con:value></con:property><con:property><con:name>dbPassword</con:name><con:value>LahnaengauGheis0ohth</con:value></con:property><con:property><con:name>dbConnect</con:name><con:value>95.163.211.129:5432/telik</con:value></con:property><con:property><con:name>dbType</con:name><con:value>postgre</con:value></con:property><con:property><con:name>userId3</con:name><con:value>1</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>