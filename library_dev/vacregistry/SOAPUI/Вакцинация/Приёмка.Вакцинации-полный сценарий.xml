<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="8f5017b9-1185-464b-b3e6-9eae7aaa527b" created="3.10.0" activeEnvironment="Default" name="Приемка Вакцинации полный сценарий" updated="3.10.0 2021-09-14T15:18:10Z" abortOnError="false" runType="SEQUENTIAL" soapui-version="5.7.0" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="a2199598-3984-47b7-a890-4d134eb747cc" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint></con:endpoints><con:resource name="_search" path="/default_vaccination/_search" id="94ce6264-a533-4392-8b30-dc3e5555fb62"><con:settings/><con:parameters/><con:method name="_search 1" id="9244a940-5feb-461b-8134-bf34767fde27" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:_se="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search">_se:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="959c6439-ad92-4fbb-a752-90636b8e891c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":0,"track_total_hits":false,"query":{"bool":{"must":[{"match":{"groupId":{"query":"10000290"}}},{"match":{"data.attachment.attachments.areaId":{"query":196}}}]}},"aggs":{"attached":{"filter":{"bool":{"must":[{"match":{"data.attachment.attached.areaId":{"query":196}}},{"match":{"data.attachment.attached.moId":{"query":10000290}}}]}}},"detached":{"filter":{"bool":{"must":[{"match":{"data.attachment.attachments.areaId":{"query":196}}}]}}}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="lpu" path="/api/rest/v1/dictionary/lpu/items" id="fb1e0e7f-c657-4189-afe1-3fc9974cb352"><con:settings/><con:parameters/><con:method name="Method 1" id="3832236c-3ed6-421a-87cd-e816aa9d9732" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="5b2964e1-154a-4c01-9976-257a8dce5ae8" mediaType="application/json"><con:settings/><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="vaccinationNeed" path="/api/rest/v1/dictionary/vaccinationNeed/items" id="fb1e0e7f-c657-4189-afe1-3fc9974cb352"><con:settings/><con:parameters/><con:method name="Method 1" id="3832236c-3ed6-421a-87cd-e816aa9d9732" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="5b2964e1-154a-4c01-9976-257a8dce5ae8" mediaType="application/json"><con:settings/><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="educationOrganization" path="/api/rest/v1/dictionary/educationOrganization/items" id="fb1e0e7f-c657-4189-afe1-3fc9974cb352"><con:settings/><con:parameters/><con:method name="Method 1" id="3832236c-3ed6-421a-87cd-e816aa9d9732" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="5b2964e1-154a-4c01-9976-257a8dce5ae8" mediaType="application/json"><con:settings/><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="areaPassportInfectionsShort" path="/api/rest/v1/dictionary/areaPassportInfectionsShort/items" id="fb1e0e7f-c657-4189-afe1-3fc9974cb352"><con:settings/><con:parameters/><con:method name="Method 1" id="3832236c-3ed6-421a-87cd-e816aa9d9732" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="5b2964e1-154a-4c01-9976-257a8dce5ae8" mediaType="application/json"><con:settings/><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="_mappings" path="_mappings" id="fb1e0e7f-c657-4189-afe1-3fc9974cb352"><con:settings/><con:parameters/><con:method name="Method 1" id="3832236c-3ed6-421a-87cd-e816aa9d9732" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:_map="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_mappings">_map:Response</con:element></con:representation><con:request name="Request 1" id="5b2964e1-154a-4c01-9976-257a8dce5ae8" mediaType="application/json"><con:settings/><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="f0fffd8f-80e6-4f1b-bebb-e14bd3c7cb75" wadlVersion="http://wadl.dev.java.net/2009/02" name="Вакцинация" type="rest" definitionUrl="TBinfectionName2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints/></con:interface><con:interface xsi:type="con:WsdlInterface" id="8eab0890-8fb2-42cb-806a-894399a6d629" wsaVersion="NONE" name="searchServiceBinding" type="wsdl" bindingName="{http://emias.mos.ru/registry/searchService/v1/}searchServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="searchService" targetNamespace="http://emias.mos.ru/registry/searchService/v1/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ns1="http://emias.mos.ru/registry/searchService/v1/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://emias.mos.ru/registry/searchService/v1/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTKvxNbTSgK4Bk6ZwcUukuIMVXBhJtdv19xEFF.zw45KnloveC"/>
      <xs:import namespace="http://emias.mos.ru/registry/core/v1/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKbz.EqXHuJK_wQej6_YNgj9tQFVOGinXA1NZf7WTSWsXP25ZD0"/>
      <xs:import namespace="http://emias.mos.ru/registry/searchService/v1/types/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKbz.EqXHuJK_wQajSsd5U9lJ8PUew5NsVZRFgf6XzXdk34us.MgyOAqf3Co0qmBhYXSHnR"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchOutput">
    <wsdl:part element="ns1:searchResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchInput">
    <wsdl:part element="ns1:searchRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="searchServicePortType">
    <wsdl:operation name="search">
      <wsdl:input message="tns:searchInput"></wsdl:input>
      <wsdl:output message="tns:searchOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="searchServiceBinding" type="tns:searchServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="search">
      <soap:operation soapAction="search"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SearchService">
    <wsdl:port binding="tns:searchServiceBinding" name="SearchServicePort">
      <soap:address location="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTKvxNbTSgK4Bk6ZwcUukuIMVXBhJtdv19xEFF.zw45KnloveC</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTKvxNbTSgK4Bk6YIOQ4NGtRchBzj0JQagNQS08MA-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTKvxNbTSgK4Bk6Y8OQvcZPIVbEA4fvnTBYbdn5VIR4MPD7aNCVlvxsWk-"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTKvxNbTSgK4Bk6Y8OQvcZPIVbEA4fvnTBYbdn5VIR4MPD7aNCVlvxsWk-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:core="http://emias.mos.ru/system/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTKvxNbTSgK4Bk6YIOQ4NGtRchBzj0JQagNQS08MA-"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Роли пользователя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль пользователя"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>ИД Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTKvxNbTSgK4Bk6YIOQ4NGtRchBzj0JQagNQS08MA-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKbz.EqXHuJK_wQej6_YNgj9tQFVOGinXA1NZf7WTSWsXP25ZD0</con:url><con:content>&lt;!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->&#13;
&lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/registry/core/v1/" xmlns="http://emias.mos.ru/registry/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema">&#13;
  &lt;xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTOupMfH.7NNgttJ6jlK4Ti894wh2b3PSJYWVX"/>&#13;
&lt;/xs:schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTOupMfH.7NNgttJ6jlK4Ti894wh2b3PSJYWVX</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKb2OkkVHvTKvxNbTSgK4Bk6YIOQ4NGtRchBzj0JQagNQS08MA-"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKbz.EqXHuJK_wQajSsd5U9lJ8PUew5NsVZRFgf6XzXdk34us.MgyOAqf3Co0qmBhYXSHnR</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/registry/searchService/v1/types/" xmlns:core="http://emias.mos.ru/registry/core/v1/" xmlns:tns="http://emias.mos.ru/registry/searchService/v1/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/registry/core/v1/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsDIkRE95XKV3HbDsEr9t99yPSdaGh6kK9zIi1WjhvNPtWfG0ndTysyxFHGisEVfA.jNmZRd02A_rVKbz.EqXHuJK_wQej6_YNgj9tQFVOGinXA1NZf7WTSWsXP25ZD0"/>
  <xs:element name="searchRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="systemName" type="xs:string"/>
        <xs:element name="index" type="xs:string"/>
        <xs:element minOccurs="0" name="groupId" type="xs:string"/>
        <xs:element name="request" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="652b2352-2693-4aff-af97-638215ceba82" isOneWay="false" action="search" name="search" bindingOperationName="search" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="be849c3b-e837-423d-b7e7-3260900adbce" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/vacregistry/SearchService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:typ="http://emias.mos.ru/registry/searchService/v1/types/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <typ:searchRequest>\r
         <typ:systemName>?</typ:systemName>\r
         <typ:index>?</typ:index>\r
         <!--Optional:-->\r
         <typ:groupId>?</typ:groupId>\r
         <typ:request>?</typ:request>\r
      </typ:searchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/registry/searchService/v1/searchServicePortType/searchRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="1f2436e3-6a88-498b-8030-c0edd6b87036" name="patientInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="df4fbb3a-10cc-4cfa-912b-b8b821522321" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Формирование общих данных о пациенте из топика" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="f0d8c113-a8c8-425a-a5a3-54f5d3391a77"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="0331ed2d-64c5-40b5-8b44-a3e211976a4c" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="27e5f6af-e9c4-484d-9eab-1269fb259be6"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("ErpChangePatientPersonalData","""{
   "id": 1928138,
   "operationDate": "2022-02-19T10:48:13.759+03:00",
   "emiasId": """+patientId+""",
   "uklErp": "V3147770",
   "patientType": "I",
   "systemCode": "sch",
   "patientRecStatus": "Y",
   "entityName": "personalData",
   "entityData": [
      {
         "attributes": [
            {
               "name": "lastName",
               "type": "string",
               "value": {
                  "value": "Фамилия2"
               }
            },
            {
               "name": "firstName",
               "type": "string",
               "value": {
                  "value": "Имя2"
               }
            },
            {
               "name": "middleName",
               "type": "string",
               "value": {
                  "value": "Отчество2"
               }
            },
            {
               "name": "birthDate",
               "type": "date",
               "value": {
                  "value": "1996-01-16"
               }
            },
            {
               "name": "birthPlace",
               "type": "string",
               "value": {
                  "value": "v_birth_place"
               }
            },
            {
               "name": "gender",
               "type": "dictionary",
               "value": {
                  "code": "1"
               }
            },
            {
               "name": "socialStatus",
               "type": "dictionary",
               "value": {
                  "id": 128650422,
                  "code": "3",
                  "value": "Работающий"
               }
            },
            {
               "name": "armyCode",
               "type": "string",
               "value": {
                  "value": "q"
               }
            },
            {
               "name": "isDependent",
               "type": "boolean",
               "value": {
                  "value": "true"
               }
            },
            {
               "name": "educationState",
               "type": "dictionary",
               "value": {
                  "id": 156496744,
                  "code": "6",
                  "value": "высшее"
               }
            },
            {
               "name": "citizenship",
               "type": "dictionary",
               "value": {
                  "id": 125676888,
                  "code": "178",
                  "value": "Республика Конго"
               }
            },
            {
               "name": "ethnicGroup",
               "type": "dictionary",
               "value": {
                  "id": 128650302,
                  "code": "11",
                  "value": "Грузины"
               }
            },
            {
               "name": "resident",
               "type": "dictionary",
               "value": {
                  "code": "1",
                  "value": "Город"
               }
            },
            {
               "name": "disability",
               "type": "dictionary",
               "value": {
                  "code": "1",
                  "value": "нет"
               }
            },
            {
               "name": "comment",
               "type": "string",
               "value": {
                  "value": "v_additional_info"
               }
            },
            {
               "name": "erzSyncDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-21T10:44:25+03:00"
               }
            },
            {
               "name": "personIdErzl",
               "type": "guid",
               "value": {
                  "value": "2adef495-b318-0146-e053-c0a8c27103b8"
               }
            },
            {
               "name": "nonresIdErzl",
               "type": "integer",
               "value": {
                  "value": "1323"
               }
            },
            {
               "name": "nonresDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-21T10:44:25+03:00"
               }
            },
            {
               "name": "erzStatus",
               "type": "string",
               "value": {
                  "value": "Y"
               }
            },
            {
               "name": "deathDateTime",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-21T10:44:25+03:00"
               }
            },
            {
               "name": "deathDataSource",
               "type": "string",
               "value": {
                  "value": "21.02.22"
               }
            }
         ]
      }
   ]
}""")</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="e060beee-f67d-42cf-98c6-aa60f2f5a38e"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1119</con:value></con:property></con:properties></con:testCase><con:testCase id="06a25725-a601-4520-9fe6-3ef9ef73300e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Формирование данных о полисе пациента из топика" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="19fac9d7-fd71-4bde-ac1a-1172269f80ab"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="6640869a-b0f0-4a05-9b7e-de6421869b59" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="b4a99a35-d385-4bed-a054-1b9de19b5257"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("ErpChangePatientPolicies","""{
  "id": 30000000525780,
  "operationDate": "2021-12-06T11:09:48.973+03:00",
   "emiasId": """+patientId+""",
  "uklErp": "30000000525780",
  "patientType": "I",
  "patientRecStatus": "Y",
  "entityName": "policies",
  "entityData": [
    {
      "attributes": [
        {
          "name": "policyOMSType",
          "type": "dictionary",
          "value": {
            "code": "N",
            "value": "полис ОМС единого образца"
          }
        },
        {
          "name": "policyNumber",
          "type": "string",
          "value": {
            "value": "7700009076266666"
          }
        },
        {
          "name": "policyBeginDate",
          "type": "date",
          "value": {
            "value": "2018-07-30"
          }
        },
        {
          "name": "policyEndDate",
          "type": "date",
          "value": {
            "value": "2099-12-31"
          }
        },
        {
          "name": "policySMO",
          "type": "dictionary",
          "value": {
            "id": 134750071,
            "code": "10002291",
            "value": "АКЦИОНЕРНОЕ ОБЩЕСТВО СОГАЗ-МЕД"
          }
        },
        {
          "name": "isExternalSMO",
          "type": "boolean",
          "value": {
            "value": "false"
          }
        },
        {
          "name": "policyInsuranceTerritoryName",
          "type": "string",
          "value": {
            "value": "г.Москва"
          }
        },
        {
          "name": "policyInsuranceTerritoryCode",
          "type": "string",
          "value": {
            "value": "45000"
          }
        },
        {
          "name": "policySMOOGRN",
          "type": "string",
          "value": {
            "value": "1027739008440"
          }
        },
        {
          "name": "policySMOBeginDate",
          "type": "date",
          "value": {
            "value": "2018-07-30"
          }
        },
        {
          "name": "policyStatus",
          "type": "dictionary",
          "value": {
            "code": "Y",
            "value": "действует"
          }
        },
        {
          "name": "policyChangeDate",
          "type": "dateTime",
          "value": {
            "value": "2021-10-15T10:54:54.926154+03:00"
          }
        }
      ]
    }
  ]
}""")</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="86f74c2c-26d6-433b-a9b2-a8a6ffac11b6"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:testCase id="8855f0a7-040f-45be-866a-85c0fc452321" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Формирование данных о контактах пациента из топика" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="022753ad-db8d-4895-b3c3-692804ab723d"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="2ad94635-7e8d-4a2b-994a-97e5a4c572ad" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="c9fd7dfc-671d-4f37-b735-2abbfb37cb75"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("ErpChangePatientContacts","""{
   "id": 5146566,
   "operationDate": "2022-02-08T19:00:51.092+03:00",
   "emiasId": """+patientId+""",
   "uklErp": "20309545",
   "patientType": "I",
   "patientRecStatus": "Y",
   "entityName": "contacts",
   "entityData": [
      {
         "attributes": [
            {
               "name": "contactId",
               "type": "integer",
               "value": {
                  "value": "27017111"
               }
            },
            {
               "name": "contactValue",
               "type": "string",
               "value": {
                  "value": "9100866535"
               }
            },
            {
               "name": "contactType",
               "type": "dictionary",
               "value": {
                  "code": "M",
                  "value": "Мобильный телефон"
               }
            },
            {
               "name": "contactAllowNotification",
               "type": "boolean",
               "value": {
                  "value": "true"
               }
            },
            {
               "name": "contactChangeDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-09T18:44:46.859339+03:00"
               }
            }
         ]
      },
      {
         "attributes": [
            {
               "name": "contactId",
               "type": "integer",
               "value": {
                  "value": "28737693"
               }
            },
            {
               "name": "contactValue",
               "type": "string",
               "value": {
                  "value": "9100866535"
               }
            },
            {
               "name": "contactType",
               "type": "dictionary",
               "value": {
                  "code": "T",
                  "value": "Домашний телефон"
               }
            },
            {
               "name": "contactAllowNotification",
               "type": "boolean",
               "value": {
                  "value": "false"
               }
            },
            {
               "name": "contactChangeDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-08T18:44:46.859339+03:00"
               }
            }
         ]
      },
      {
         "attributes": [
            {
               "name": "contactId",
               "type": "integer",
               "value": {
                  "value": "28737688"
               }
            },
            {
               "name": "contactValue",
               "type": "string",
               "value": {
                  "value": "araik.bagdasaryan@mail.ru"
               }
            },
            {
               "name": "contactType",
               "type": "dictionary",
               "value": {
                  "code": "E",
                  "value": "Электронная почта"
               }
            },
            {
               "name": "contactAllowNotification",
               "type": "boolean",
               "value": {
                  "value": "false"
               }
            },
            {
               "name": "contactChangeDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-05T18:44:27.324439+03:00"
               }
            }
         ]
      }
   ]
}""")</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="9dc148b9-bd00-4aca-9589-8411b6a36ab6"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:testCase id="e2224c53-98a0-46c0-ad41-f0a70787ae0d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ретро-данные. Информация о пациенте" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="0bdf3c83-994d-468f-bea0-8e0446564ec9"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="09c6f69a-06eb-4c3d-8b65-0b74f4b3b0c1" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Создание данных" id="b5ce4e43-cd0d-4200-91f0-6c799db66d3f"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://10.2.172.75:5432/vacregistry_data?stringtype=unspecified&amp;user=vacregistry&amp;password=vacregistry</con:connectionString><con:connectionProperties/><con:query>INSERT INTO export_patients_test (emiasid, uklerp, patienttype, systemcode, "family", "name", patronymic, birthdate, birthplace, gender, lastnamelat, firstnamelat, middlenamelat, socialstatus, armycode, isdependent, educationstate, citizenship, ethnicgroup, resident, disability, "comment", erzsyncdate, personiderzl, nonresiderzl, nonresdate, erzstatus, deathdatetime, deathdatasource, lastdate, typesnils, numsnils, snilsabsencereason, datechangesnils) VALUES(${#TestCase#patientId}, '${#TestCase#patientId}', 'I', NULL, 'Галахов', 'Сергей', 'Иванович', '1911-09-21', NULL, '1', NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, '', '2020-05-17 17:31:47.000', NULL, NULL, NULL, 'D', '2008-09-26', NULL, '2020-06-08 23:50:35.000', NULL, NULL, NULL, NULL);
INSERT INTO export_contacts_test (emiasid, uklerp, patienttype, systemcode, contactid, contactvalue, contacttype, contactallownotification, contactchangedate) VALUES(${#TestCase#patientId}, '${#TestCase#patientId}', 'I', NULL, 4006525, '9164357899', 'M', '1', '2020-06-08 22:45:14.000');
INSERT INTO export_policies_test (emiasid, uklerp, patienttype, systemcode, policyomstype, policynumber, policybegindate, policyenddate, policysmo, isexternalsmo, policyinsuranceterritorycode, policyinsuranceterritoryname, policysmoogrn, policysmobegindate, policysmoenddate, policystatus, policyerzlstatus, policychangedate, policycserzlsync, policycserzldate) VALUES(${#TestCase#patientId}, '${#TestCase#patientId}', 'I', NULL, 'N', '6858400830000313', '2013-09-09', NULL, '10002811', NULL, '68000', 'Тамбовская область', '1027806865481', '2013-09-09', NULL, 'Y', NULL, '2020-04-27', NULL, NULL);</con:query><con:properties/></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="cc01e319-e25f-412c-9cad-cd14383b4dc9"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="c025a294-e024-47d8-8536-58c758f0e18e"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="d95a85f5-76ef-4822-af1e-070d6a561715" name="attachment"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a3d57f5e-37dd-438f-b09b-842b69d86165" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Формирование данных о прикреплениях из топика" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="a5dbcdb8-f09a-4261-958f-f39347a534ed"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="c67554f6-545e-43db-b67b-8913dce52233" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="18ef041c-0575-45d2-842d-cd114ac21e3e"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("AttachmentEvent","""{
   "event": {
      "id": 33606129,
      "dateTime": "2022-09-21T15:41:54",
      "eventType": "CREATE"
   },
   "attachmentNewValue": {
      "attachId": 127636389,
      "patientId": """+patientId+""",
      "isActual": true,
      "attachPolType": {
         "globalId": 125694322,
         "code": "1",
         "title": "Обязательное медицинское страхование"
      },
      "noSelfAppointment": false,
      "moId": 204,
      "muId": 204,
      "areaId": 173933133,
      "attachBeginDate": "2022-02-21",
      "attachType": {
         "globalId": 128619858,
         "code": "1",
         "title": "базовое терапевтическое"
      },
      "areaTypeCode": 20,
   	 "areaNumber": 8,
      "processOfAttachment": {
         "globalId": 135857403,
         "code": "2",
         "title": "По заявлению"
      },
      "attachChangeType": {
         "globalId": 128619920,
         "code": "20",
         "title": "Выбор мед. организации пациентом"
      },
      "attachForm": {
         "globalId": 128620009,
         "code": "10",
         "title": "По участковому принципу (основное)"
      }
   }
}""")</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="6bdf0a72-c4a8-4899-9c82-cbade4e1476b"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:testCase id="06d06ed0-7295-4714-9ffb-62456625eef6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ретро-данные. Прикрепления" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="afd51e09-7821-43b6-bf75-1b045e5495f7"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="11590f83-f061-4516-84f9-24da54891ff8" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Создание данных" id="7e713fff-4316-48dc-9066-c4f0bd42ceec"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://10.2.172.75:5432/vacregistry_data?stringtype=unspecified&amp;user=vacregistry&amp;password=vacregistry</con:connectionString><con:connectionProperties/><con:query>INSERT INTO export_attachments_test (attachid, patientid, attachrequestid, attachpoltypecode, attachpoltypename, noselfappointment, moid, muid, areaid, attachbegindate, attachenddate, attachtypecode, attachtypename, processofattachmentcode, processofattachmentname, attachchangetypecode, attachchangetypename, attachformcode, attachformname, attachstatus, lastdate) VALUES(1${#TestCase#patientId}, ${#TestCase#patientId}, NULL, NULL, NULL, 0, 10000287, 209, 1877, '2022-12-19', NULL, 1, 'базовое терапевтическое', 2, 'По заявлению', 80, 'По сведениям МГФОМС', 10, 'По участковому принципу (основное)', 'Y', '2022-12-19 13:32:43.000');</con:query><con:properties/></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="c3fb55fb-9d87-41d2-8641-f31d8c1bd626"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="a65d9899-b05f-4b6f-ad93-ff599e301476"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="16ff4638-919c-4816-a369-e3b0211744a6" name="address"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="217bebf7-b9eb-482f-893d-8da5032f1692" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Формирование данных об адресе пациента из топика" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="6aa1e840-a7f2-4b7a-9e16-8d3b804f9679"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="47f9117a-da93-41d7-bc85-35266101ddc3" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="740843f5-440c-4a02-a7b0-4e0d8e80abf2"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("ErpChangePatientAddresses","""{
   "id": 5494563,
   "operationDate": "2022-02-15T11:02:17.932+03:00",
   "emiasId":  """+patientId+""",
   "uklErp": "9925449",
   "patientType": "I",
   "patientRecStatus": "Y",
   "entityName": "addresses",
   "entityData": [
      {
         "attributes": [
            {
               "name": "addressId",
               "type": "integer",
               "value": {
                  "value": "13821881"
               }
            },
            {
               "name": "addressMode",
               "type": "dictionary",
               "value": {
                  "code": "FACT",
                  "value": "адрес фактического проживания"
               }
            },
            {
               "name": "addressString",
               "type": "string",
               "value": {
                  "value": "г. Москва, улица Наташи Фактической, д. 4, кв. 28"
               }
            },
            {
               "name": "globalIdNsi",
               "type": "integer",
               "value": {
                  "value": "70992447"
               }
            },
			{
               "name": "codeKLADR",
               "type": "string",
               "value": {
                  "value": "4200700100000"
               }
            },
            {
               "name": "regionName",
               "type": "string",
               "value": {
                  "value": "Москва"
               }
            },
            {
               "name": "regionTypeFull",
               "type": "string",
               "value": {
                  "value": "Город"
               }
            },
            {
               "name": "regionTypeShort",
               "type": "string",
               "value": {
                  "value": "г"
               }
            },
            {
               "name": "regionId",
               "type": "string",
               "value": {
                  "value": "67200856"
               }
            },
            {
               "name": "regionCode",
               "type": "string",
               "value": {
                  "value": "77"
               }
            },
			{
               "name": "streetId",
               "type": "integer",
               "value": {
                  "value": "68126131"
               }
            },
            {
               "name": "streetCodeOMKUM",
               "type": "string",
               "value": {
                  "value": "09807"
               }
            },
            {
               "name": "streetName",
               "type": "string",
               "value": {
                  "value": "улица Наташи Фактической"
               }
            },
            {
               "name": "houseName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
			{
               "name": "buildName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
			{
               "name": "constructionName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
            {
               "name": "flatName",
               "type": "string",
               "value": {
                  "value": "28"
               }
            },
            {
               "name": "elevator",
               "type": "boolean",
               "value": {
                  "value": "false"
               }
            },
            {
               "name": "addressChangeDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-15T10:46:29.424806+03:00"
               }
            }
         ]
      },
      {
         "attributes": [
            {
               "name": "addressId",
               "type": "integer",
               "value": {
                  "value": "13821882"
               }
            },
            {
               "name": "addressMode",
               "type": "dictionary",
               "value": {
                  "code": "RCONST",
                  "value": "адрес постоянной регистрации"
               }
            },
            {
               "name": "addressString",
               "type": "string",
               "value": {
                  "value": "г. Москва, улица Наташи постоянной, д. 4, кв. 28"
               }
            },
            {
               "name": "regionName",
               "type": "string",
               "value": {
                  "value": "Москва"
               }
            },
			{
               "name": "codeKLADR",
               "type": "string",
               "value": {
                  "value": "4200700100000"
               }
            },
            {
               "name": "globalIdNsi",
               "type": "integer",
               "value": {
                  "value": "70992447"
               }
            },
            {
               "name": "regionTypeFull",
               "type": "string",
               "value": {
                  "value": "Город"
               }
            },
            {
               "name": "regionTypeShort",
               "type": "string",
               "value": {
                  "value": "г"
               }
            },
            {
               "name": "regionId",
               "type": "string",
               "value": {
                  "value": "67200856"
               }
            },
            {
               "name": "regionCode",
               "type": "string",
               "value": {
                  "value": "77"
               }
            },
            {
               "name": "streetCodeOMKUM",
               "type": "string",
               "value": {
                  "value": "09807"
               }
            },
            {
               "name": "streetName",
               "type": "string",
               "value": {
                  "value": "улица Наташи постоянной"
               }
            },
			{
               "name": "streetId",
               "type": "integer",
               "value": {
                  "value": "68126131"
               }
            },
            {
               "name": "houseName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
			{
               "name": "buildName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
			{
               "name": "constructionName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
            {
               "name": "flatName",
               "type": "string",
               "value": {
                  "value": "28"
               }
            }
         ]
      },
	  {
         "attributes": [
            {
               "name": "addressId",
               "type": "integer",
               "value": {
                  "value": "13821881"
               }
            },
            {
               "name": "addressMode",
               "type": "dictionary",
               "value": {
                  "code": "RTEMP",
                  "value": "адрес временного проживания"
               }
            },
			{
               "name": "codeKLADR",
               "type": "string",
               "value": {
                  "value": "4200700100000"
               }
            },
            {
               "name": "addressString",
               "type": "string",
               "value": {
                  "value": "г. Москва, улица Наташи Временной, д. 4, кв. 28"
               }
            },
            {
               "name": "globalIdNsi",
               "type": "integer",
               "value": {
                  "value": "70992447"
               }
            },
            {
               "name": "regionName",
               "type": "string",
               "value": {
                  "value": "Москва"
               }
            },
            {
               "name": "regionTypeFull",
               "type": "string",
               "value": {
                  "value": "Город"
               }
            },
            {
               "name": "regionTypeShort",
               "type": "string",
               "value": {
                  "value": "г"
               }
            },
            {
               "name": "regionId",
               "type": "string",
               "value": {
                  "value": "67200856"
               }
            },
            {
               "name": "regionCode",
               "type": "string",
               "value": {
                  "value": "77"
               }
            },
            {
               "name": "streetCodeOMKUM",
               "type": "string",
               "value": {
                  "value": "09807"
               }
            },
            {
               "name": "streetName",
               "type": "string",
               "value": {
                  "value": "улица Наташи Временной"
               }
            },
			{
               "name": "streetId",
               "type": "integer",
               "value": {
                  "value": "68126131"
               }
            },
            {
               "name": "houseName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
			{
               "name": "buildName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
			{
               "name": "constructionName",
               "type": "string",
               "value": {
                  "value": "4"
               }
            },
            {
               "name": "flatName",
               "type": "string",
               "value": {
                  "value": "28"
               }
            },
            {
               "name": "elevator",
               "type": "boolean",
               "value": {
                  "value": "false"
               }
            },
            {
               "name": "addressChangeDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-15T10:46:29.424806+03:00"
               }
            }
         ]
      }
   ]
}""")</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="02e84535-8f43-41cc-8236-a61a7cf34541"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:testCase id="51c0a8e3-3bde-4da9-be13-0669aef4b38a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ретро-данные. Информация об адресе пациенте" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="d140a113-16f2-4f2a-a945-0626f5696d2b"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="1fe1e11b-08be-48a5-8e28-f6e4a2312f9c" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Создание данных" id="493aec6a-714a-4dc1-b022-b9256d6cf1a0"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://10.2.172.75:5432/vacregistry_data?stringtype=unspecified&amp;user=vacregistry&amp;password=vacregistry</con:connectionString><con:connectionProperties/><con:query>INSERT INTO export_addresses_test (emiasid, addressid, addressmode, globalidnsi, addressstring, areaomktecode, streetcodeomkum, streetid, streetname, codekladr, housename, buildname, constructionname, flatname, roomnumbername, addresschangedate) VALUES(${#TestCase#patientId}, 1${#TestCase#patientId}, 'FACT', NULL, 'г. Москва, Волков переулок, д. 21, кв. 6', NULL, '03820', NULL, 'Волков переулок', NULL, '21', NULL, NULL, '6', NULL, '2022-01-21 20:02:04.000');</con:query><con:properties/></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="7c12395b-87ab-4610-812c-70d77ed29a05"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="1b77b66b-c980-4b4f-b363-c2f2845eed47"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="89d65dc8-dce7-45a5-881f-511f52279826" name="studInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a5337499-2637-410a-a7bc-9db3c6b248a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Формирование данных об учёбе пациента" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="70c53302-ecea-4142-8d74-2e1cc80401fa"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="dd15374f-8685-4922-ad5e-dd632ca6b884" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="336e9496-948b-475f-b2a3-a9ed16a90cc4"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("SchoolAttachmentEvent","""{
   "id": 29,
   "operationDate": "2022-06-23T18:47:30.868+03:00",
   "emiasId": """+patientId+""",
   "uklErp": "30416317",
   "studentId": "e5c9b68a-a3c7-6688-e043-a2997e0ac8c8",
   "studentPersonId": "7445b4ed-f762-49c1-a58d-2edd164c95e3",
   "patientStudentLinkStatus": "Y",
   "patientType": "I",
   "patientRecStatus": "Y",
   "entityName": "schoolAttachment",
   "entityData": [
      {
         "attributes": [
            {
               "name": "attachId",
               "type": "integer",
               "value": {
                  "value": "124059879"
               }
            },
            {
               "name": "attachType",
               "type": "dictionary",
               "value": {
                  "id": 128619874,
                  "code": "9",
                  "value": "школьное"
               }
            },
            {
               "name": "attachForm",
               "type": "dictionary",
               "value": {
                  "id": 128620020,
                  "code": "60",
                  "value": "Прикрепление к классу"
               }
            },
            {
               "name": "organizationId",
               "type": "integer",
               "value": {
                  "value": "200001654989"
               }
            },
            {
               "name": "areaId",
               "type": "integer",
               "value": {
                  "value": "17411910615"
               }
            },
            {
               "name": "attachStartDate",
               "type": "date",
               "value": {
                  "value": "2019-08-16"
               }
            },
            {
               "name": "attachEndDate",
               "type": "date",
               "value": {
                  "value": "2021-06-17"
               }
            },
            {
               "name": "isActual",
               "type": "long",
               "value": {
                  "value": "true"
               }
            },
            {
               "name": "attachEndCause",
               "type": "dictionary",
               "value": {
                  "id": 128619975,
                  "code": "40",
                  "value": "Другие причины"
               }
            }
         ]
      }
   ]
}""")</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="cdd9c773-e717-4bbc-a973-ae03973add5a"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:testCase id="9e78314b-4187-4f14-be37-84f02481185e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Актуализация сведений о месте учёбы пациента" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="d4ed2e1c-31f1-4927-a296-e2193818ac1b"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="67e22a17-f328-4559-8c04-24e3230fcf54" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="8fde850c-318e-403b-bc76-0f2d7a90b5bb"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("SchoolAttachmentEvent","""{
   "id": 29,
   "operationDate": "2022-06-23T18:47:30.868+03:00",
   "emiasId": """+patientId+""",
   "uklErp": "30416317",
   "studentId": "e5c9b68a-a3c7-6688-e043-a2997e0ac8c8",
   "studentPersonId": "7445b4ed-f762-49c1-a58d-2edd164c95e3",
   "patientStudentLinkStatus": "Y",
   "patientType": "I",
   "patientRecStatus": "Y",
   "entityName": "schoolAttachment",
   "entityData": [
      {
         "attributes": [
            {
               "name": "attachId",
               "type": "integer",
               "value": {
                  "value": "124059879"
               }
            },
            {
               "name": "attachType",
               "type": "dictionary",
               "value": {
                  "id": 128619874,
                  "code": "9",
                  "value": "школьное"
               }
            },
            {
               "name": "attachForm",
               "type": "dictionary",
               "value": {
                  "id": 128620020,
                  "code": "60",
                  "value": "Прикрепление к классу"
               }
            },
            {
               "name": "organizationId",
               "type": "integer",
               "value": {
                  "value": "200001654989"
               }
            },
            {
               "name": "areaId",
               "type": "integer",
               "value": {
                  "value": "17411910615"
               }
            },
            {
               "name": "attachStartDate",
               "type": "date",
               "value": {
                  "value": "2019-08-16"
               }
            },
            {
               "name": "attachEndDate",
               "type": "date",
               "value": {
                  "value": "2021-06-17"
               }
            },
            {
               "name": "isActual",
               "type": "long",
               "value": {
                  "value": "true"
               }
            },
            {
               "name": "attachEndCause",
               "type": "dictionary",
               "value": {
                  "id": 128619975,
                  "code": "40",
                  "value": "Другие причины"
               }
            }
         ]
      }
   ]
}""")</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="80744554-7ac5-4a7d-a229-c7c09224a188"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="9784c209-918c-4152-869d-87d1a0252fbd"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:testCase id="3de2d345-69b3-47b1-8a92-dffd96fc71d5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ретро-данные. Информация о месте учёбы пациента" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="34f1c186-a8d9-470c-95eb-237187e4f556"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="6f43f41c-2e9d-452a-887d-bbca73693cf8" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Создание данных" id="5632cd12-71f3-4464-a575-49df5d3eced1"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://10.2.172.75:5432/vacregistry_data?stringtype=unspecified&amp;user=vacregistry&amp;password=vacregistry</con:connectionString><con:connectionProperties/><con:query>INSERT INTO export_studinfo_test (emias_id, attach_id, organization_id, area_id, last_date, is_actual) VALUES(${#TestCase#patientId}, 133380614, 200001570554, 17411968099, '2022-06-24 01:25:16.000', true);
</con:query><con:properties/></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="ce42b0d5-0a85-4c15-baba-f03acdd15e6f"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="63be60ad-cce3-4c69-8cca-e0bab550723f"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="a49b6135-520c-41ab-afe2-26e2120c8209" name="vaccinationInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="837eca58-9348-4ce8-8165-e8fa3f0c0f27" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoMobileCrewTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="a38a217d-8b7b-419d-9c3c-59c8627f0127"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="de7bb549-a810-4404-a541-379fe29ccca2" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="457feaf0-f8e0-4d57-9f97-a989dbeddbfa"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic9")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="66da0e3e-fc82-41c2-8f12-db909f232ce9"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\mobile_crew_vaccination.v1 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\mobile_crew_vaccination.v1 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\mobile_crew_vaccination.v1 delete.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Грипп</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>\vaccinationInfo\mobile_crew_vaccination.v1 vaccinationFrequency.json</con:value></con:property></con:properties></con:testCase><con:testCase id="1dce391d-64fe-4caa-ba6f-c5e762ce14a3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoCovidTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="c874efeb-3192-4237-adc2-68734a195f22"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="24dee0fa-8604-4a1d-aac2-53b5af00cdea" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="35e3703e-c5e3-4f89-8892-c7bbdcecdb68"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic2")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="780ac464-ac42-451d-b776-2249d0979e1c"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\t_COVID_vaccination.v1.3 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\t_COVID_vaccination.v1.3 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\t_COVID_vaccination.v1.3 delete.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>test</con:value></con:property></con:properties></con:testCase><con:testCase id="7c753d3f-c0ba-470f-9a22-b4e1e7e045e4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoPreventiveTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="e60ea671-4ab5-4ffc-9065-5cfd07d0930f"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="526433a2-000b-4f1b-9a01-6695dfadf225" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="d5ff5377-9aad-4deb-93f1-918e3e13b16a"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic10")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="a02ae5d9-8765-4ab7-b59e-3c00edd8c713"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\t_vaccination_preventive.v2 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\t_vaccination_preventive.v2 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\t_vaccination_preventive.v2 delete.json</con:value></con:property><con:property><con:name>test</con:name><con:value>\vaccinationInfo\t_vaccination_preventive.v2 test.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Туляремия</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>\vaccinationInfo\t_vaccination_preventive.v2 vaccinationFrequency.json</con:value></con:property></con:properties></con:testCase><con:testCase id="6b353d9e-043d-4d0b-9c2f-7b8f2a8740ff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoVaccinationTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="03da0112-bcea-46c9-8205-b16b9277c127"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="d7333b7b-3a82-46f5-8660-990fecd2577b" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="cc5d9e12-f357-4ea8-a580-74bcbf60e91a"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic3")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="48af5905-9fc4-4101-84d9-9819e0a63fe0"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\vaccination.v1.1 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\vaccination.v1.1 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\vaccination.v1.1 delete.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Грипп</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>\vaccinationInfo\vaccination.v1.1 vaccinationFrequency.json</con:value></con:property></con:properties></con:testCase><con:testCase id="d49e5022-0d65-4d88-9931-f672bb9d90d3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoPublishedTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="27d73d38-30cc-406f-b85a-7254fbfd4b55"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="77dd6ca4-4551-4563-8e5e-02c1e1af0d0c" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="5ade759c-2d85-43b9-8ea3-d5c725834b41"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic4")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="e7502f12-765b-4c1c-8696-da03eed75bb0"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\t_vaccination_published_info.v2.2 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\t_vaccination_published_info.v2.2 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\t_vaccination_published_info.v2.2 delete.json</con:value></con:property><con:property><con:name>true</con:name><con:value>\vaccinationInfo\vaccination_card.v3 true.json</con:value></con:property><con:property><con:name>create21</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2.1 create.json</con:value></con:property><con:property><con:name>delete21</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2.1 delete.json</con:value></con:property><con:property><con:name>create21ImmunoResult</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2.1 ImmunoResult.json</con:value></con:property><con:property><con:name>update21</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2.1 update.json</con:value></con:property><con:property><con:name>create2</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2 create.json</con:value></con:property><con:property><con:name>delete2</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2 delete.json</con:value></con:property><con:property><con:name>create2ImmunoResult</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2 ImmunoResult.json</con:value></con:property><con:property><con:name>update2</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2 update.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Грипп</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>\vaccinationInfo\t_vaccination_published_info.v2.2 vaccinationFrequency.json</con:value></con:property><con:property><con:name>vaccinationFrequency21</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2.1 vaccinationFrequency.json</con:value></con:property><con:property><con:name>vaccinationFrequency2</con:name><con:value>\vaccinationInfo\vaccination_published_info.v2 vaccinationFrequency.json</con:value></con:property></con:properties></con:testCase><con:testCase id="47a87eec-0db7-40c1-960a-ac87b11ff76e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoVaccinationCardTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="bd3e0314-f994-4e8d-9b99-488e2e18ffaf"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="48e79af7-93cb-4f48-9399-271b03510126" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="513976f0-524d-4e8c-a972-8625f9c2a99a"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic5")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="a3e3ab25-a843-4700-afb2-2a62575740ef"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\vaccination_card.v3 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\vaccination_card.v3 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\vaccination_card.v3 delete.json</con:value></con:property><con:property><con:name>true</con:name><con:value>\vaccinationInfo\vaccination_card.v3 true.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Полиомиелит</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>\vaccinationInfo\vaccination_card.v3 vaccinationFrequency.json</con:value></con:property></con:properties></con:testCase><con:testCase id="17211b20-187d-45ee-ac99-16cee039f4b4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoNewbornInfoQuestionaryTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="ba2e5d19-7b45-4c8a-a5f8-a52c93281950"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="f594d4be-7372-41af-9985-1e5605bf7de6" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="9e97519a-6bf4-4c20-8ebf-51adb4cf9c6d"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic6")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def HBinfectionName =testRunner.testCase.getPropertyValue("HBinfectionName")
 def v2OinfectionName =testRunner.testCase.getPropertyValue("v2OinfectionName")
 String message = file.replace("\$patientId",patientId).replace("\$HBinfectionName",HBinfectionName).replace("\$v2OinfectionName",v2OinfectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="86a91018-6014-4ebf-9e3c-f8f67d9cc480"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\t_newborn_info_questionarу_form_948.v4 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\t_newborn_info_questionarу_form_948.v4 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\t_newborn_info_questionarу_form_948.v4 delete.json</con:value></con:property><con:property><con:name>true</con:name><con:value>\vaccinationInfo\vaccination_card.v3 true.json</con:value></con:property><con:property><con:name>HBinfectionName</con:name><con:value>Грипп</con:value></con:property><con:property><con:name>v2OinfectionName</con:name><con:value>Грипп</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>\vaccinationInfo\t_newborn_info_questionarу_form_948.v4 vaccinationFrequency.json</con:value></con:property></con:properties></con:testCase><con:testCase id="269f2bbd-84df-42c8-b6c2-ba2f7ddee745" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoCovidVacPublishedInfoTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="70cd085f-f8c6-40af-9e4e-9bdfb1cc2df7"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="123db9e3-59c8-4090-9c5c-b590615144e6" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание t_COVID_vaccination_published_info" id="ce1de238-3650-4042-9d69-661c0959ac71"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic12")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="groovy" name="Создание t_COVID_vaccination_published_info_external" id="4270e6dc-9415-4251-811e-28be4aa3fe55"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic12")
 String file =scripts.returnFileAsText("create2")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="a00abc61-edad-4d52-9fe7-3e53a0ccd232"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\t_COVID_vaccination_published_info.v1 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\t_COVID_vaccination_published_info.v1 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\t_COVID_vaccination_published_info.v1 delete.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Корь, паротит</con:value></con:property><con:property><con:name>create2</con:name><con:value>\vaccinationInfo\t_COVID_vaccination_published_info_external.v1 create.json</con:value></con:property><con:property><con:name>delete2</con:name><con:value>\vaccinationInfo\t_COVID_vaccination_published_info_external.v1 delete.json</con:value></con:property><con:property><con:name>update2</con:name><con:value>\vaccinationInfo\t_COVID_vaccination_published_info_external.v1 update.json</con:value></con:property></con:properties></con:testCase><con:testCase id="76f9eafe-fe68-4e62-93d2-ceb680459029" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoPrenatalRecordVisitingNurseTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="fdce4fe8-1a47-4ab3-b717-33d1e34ed900"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="fdd3518e-175d-49d2-a869-7258192e5890" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="71e61b9b-5381-4a07-bd84-ff0438bdad0a"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic7")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def HBinfectionName =testRunner.testCase.getPropertyValue("HBinfectionName")
 def v2OinfectionName =testRunner.testCase.getPropertyValue("v2OinfectionName")
 String message = file.replace("\$patientId",patientId).replace("\$HBinfectionName",HBinfectionName).replace("\$v2OinfectionName",v2OinfectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="7dc7daa8-4163-4193-8327-68c6ad7d0688"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v2.1 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v2.1 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v2.1 delete.json</con:value></con:property><con:property><con:name>true</con:name><con:value>\vaccinationInfo\vaccination_card.v3 true.json</con:value></con:property><con:property><con:name>create2</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v2 create.json</con:value></con:property><con:property><con:name>update2</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v2 update.json</con:value></con:property><con:property><con:name>delete2</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v2 delete.json</con:value></con:property><con:property><con:name>create1</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v1 create.json</con:value></con:property><con:property><con:name>update1</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v1 update.json</con:value></con:property><con:property><con:name>delete1</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v1 delete.json</con:value></con:property><con:property><con:name>HBinfectionName</con:name><con:value>Туляремия</con:value></con:property><con:property><con:name>v2OinfectionName</con:name><con:value>Туляремия</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v2.1 vaccinationFrequency.json</con:value></con:property><con:property><con:name>vaccinationFrequency2</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v2 vaccinationFrequency.json</con:value></con:property><con:property><con:name>vaccinationFrequency1</con:name><con:value>\vaccinationInfo\t_prenatal_record_visiting_nurse.v1 vaccinationFrequency.json</con:value></con:property></con:properties></con:testCase><con:testCase id="0107b896-a031-4f80-a7d9-976741e508ab" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationInfoPrenatalRecordTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="f1b1788d-23d3-4b74-b208-ed1647e37dc6"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="e0a72bf2-1d81-4818-a27c-32198e1140c3" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="e2cddd68-3767-4799-9ead-e41944fcfef7"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic8")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 String message = file.replace("\$patientId",patientId)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="041d9f46-4dbb-463a-90da-d86ea65cc6b6"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfo\t_prenatal_record.v1.1 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationInfo\t_prenatal_record.v1.1 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationInfo\t_prenatal_record.v1.1 delete.json</con:value></con:property><con:property><con:name>partially</con:name><con:value>\vaccinationInfo\t_prenatal_record.v1.1 partially.json</con:value></con:property></con:properties></con:testCase><con:testCase id="825acc16-dd49-4475-83b5-2b7d6b1bbee3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Актуализация данных о ходе вакцинации" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="4c50ded0-e58d-42b7-881f-2b4f95b147b6"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="495ea897-4c3b-42e3-b9b4-f750bcef7bfb" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="cfb201d7-6838-4d28-adab-8b2baca20d77"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="patientInfo" id="4fb09243-e733-44c3-82e9-6b91a6923118"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("ErpChangePatientPersonalData","""{
   "id": 1928138,
   "operationDate": "2022-02-21T10:48:13.759+03:00",
   "emiasId": """+patientId+""",
   "uklErp": "V3147770",
   "patientType": "I",
   "systemCode": "sch",
   "patientRecStatus": "Y",
   "entityName": "personalData",
   "entityData": [
      {
         "attributes": [
            {
               "name": "lastName",
               "type": "string",
               "value": {
                  "value": "Фамилия"
               }
            },
            {
               "name": "firstName",
               "type": "string",
               "value": {
                  "value": "Имя"
               }
            },
            {
               "name": "middleName",
               "type": "string",
               "value": {
                  "value": "Отчество"
               }
            },
            {
               "name": "birthDate",
               "type": "date",
               "value": {
                  "value": "2019-01-16"
               }
            },
            {
               "name": "birthPlace",
               "type": "string",
               "value": {
                  "value": "v_birth_place"
               }
            },
            {
               "name": "gender",
               "type": "dictionary",
               "value": {
                  "code": "1"
               }
            },
            {
               "name": "socialStatus",
               "type": "dictionary",
               "value": {
                  "id": 128650422,
                  "code": "3",
                  "value": "Работающий"
               }
            },
            {
               "name": "armyCode",
               "type": "string",
               "value": {
                  "value": "q"
               }
            },
            {
               "name": "isDependent",
               "type": "boolean",
               "value": {
                  "value": "true"
               }
            },
            {
               "name": "educationState",
               "type": "dictionary",
               "value": {
                  "id": 156496744,
                  "code": "6",
                  "value": "высшее"
               }
            },
            {
               "name": "citizenship",
               "type": "dictionary",
               "value": {
                  "id": 125676888,
                  "code": "178",
                  "value": "Республика Конго"
               }
            },
            {
               "name": "ethnicGroup",
               "type": "dictionary",
               "value": {
                  "id": 128650302,
                  "code": "11",
                  "value": "Грузины"
               }
            },
            {
               "name": "resident",
               "type": "dictionary",
               "value": {
                  "code": "1",
                  "value": "Город"
               }
            },
            {
               "name": "disability",
               "type": "dictionary",
               "value": {
                  "code": "1",
                  "value": "нет"
               }
            },
            {
               "name": "comment",
               "type": "string",
               "value": {
                  "value": "v_additional_info"
               }
            },
            {
               "name": "erzSyncDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-21T10:44:25+03:00"
               }
            },
            {
               "name": "personIdErzl",
               "type": "guid",
               "value": {
                  "value": "2adef495-b318-0146-e053-c0a8c27103b8"
               }
            },
            {
               "name": "nonresIdErzl",
               "type": "integer",
               "value": {
                  "value": "1323"
               }
            },
            {
               "name": "nonresDate",
               "type": "dateTime",
               "value": {
                  "value": "2022-02-21T10:44:25+03:00"
               }
            },
            {
               "name": "erzStatus",
               "type": "string",
               "value": {
                  "value": "Y"
               }
            },
            {
               "name": "deathDateTime",
               "type": "dateTime",
               "value": {
                  "value": null
               }
            },
            {
               "name": "deathDataSource",
               "type": "string",
               "value": {
                  "value": "21.02.22"
               }
            }
         ]
      }
   ]
}""")</script></con:config></con:testStep><con:testStep type="groovy" name="vaccinationConsentInfos" id="3b058639-9a79-4451-8eac-c3b0826eab36"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic1")
 String file =scripts.returnFileAsText("create2")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 def date2 =testRunner.testCase.getPropertyValue("date2")
 def consentType =testRunner.testCase.getPropertyValue("consentType")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName).replace("\$date",date2).replace("\$consentType",consentType)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="groovy" name="vaccinationFact" id="59ae09e9-4a1f-4f9b-b6a9-d4a325c3c697"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic2")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 def date =testRunner.testCase.getPropertyValue("date")
 def vaccinationFrequency =testRunner.testCase.getPropertyValue("vaccinationFrequency")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName).replace("\$date",date).replace("\$vaccinationFrequency",vaccinationFrequency)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="ec4ec95f-0070-4de6-8e55-b4a95d679b2b"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="7fa033d9-d1c2-449e-8842-86605e2a49fb"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="JsonPath Match" id="3e558ed6-7b1f-4e65-b119-e70b99e42c74" name="Создан vaccinationFact"><con:configuration><path>$.hits.hits[0]._source.data.vaccinationInfo.vaccinations[0].vaccinationFact</path><content>[{"vaccinationDate":"2022-03-15T12:44:11.692623+03:00","infectionCode":"A16.5","docId":"bfb5827e-7220-4b4a-b207-fce7246c${#TestCase#patientId}","vaccinationFrequency":"N.61"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationInfoUpdate\t_COVID_vaccination.v1.3 create.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Туберкулез</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>V1</con:value></con:property><con:property><con:name>date</con:name><con:value>2022-09-13</con:value></con:property><con:property><con:name>create2</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent create2.json</con:value></con:property><con:property><con:name>date2</con:name><con:value>2022-05-31</con:value></con:property><con:property><con:name>consentType</con:name><con:value>частичный</con:value></con:property><con:property><con:name>create3</con:name><con:value>\immunoDiagnosticsInfo\vaccination_cardComposition create2.json</con:value></con:property><con:property><con:name>reaction</con:name><con:value>Положительная</con:value></con:property><con:property><con:name>resultDate</con:name><con:value>2022-05-31</con:value></con:property><con:property><con:name>immunodiagnosType</con:name><con:value>true</con:value></con:property><con:property><con:name>create4</con:name><con:value>\vaccinationExemptionInfo\t_vaccination_medical_exemption create 2.json</con:value></con:property><con:property><con:name>create5</con:name><con:value>\vaccinationExemptionInfo\t_vaccination_medical_exemption update 2.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-12-06T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-12-06</con:value></con:property></con:properties></con:testCase><con:testCase id="86b33de8-4a3d-401f-8872-d07bd7a9d913" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ретро-данные. Информация о вакцинации" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="46796b45-3b1b-4017-a5af-db7638460332"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="d2747c9b-8be2-4bcc-8037-238b157a8327" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Создание данных" id="a3129b4c-5e77-44c9-b404-1f4af7d6b7ef"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://10.2.172.75:5432/vacregistry_data?stringtype=unspecified&amp;user=vacregistry&amp;password=vacregistry</con:connectionString><con:connectionProperties/><con:query>INSERT INTO "export_vaccinationInfo_test" ("patientId", "docId", "vaccinationDate", "infectionName", "infectionCode", "vaccinationFrequency") VALUES(${#TestCase#patientId}, '9c66abf0-b84b-4e29-8052-fb3b8a4e306f', '2007-03-19 00:00:00.000', 'Необходимость иммунизации против полиомиелита', 'Z24.0', 'V2');</con:query><con:properties/></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="3291b8b9-ae77-4253-8410-0a4b3ae4ed31"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="d0096f4f-2885-49ca-a13e-2be702a331a0"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>topic1</con:name><con:value>t_vaccination_informed_consentComposition</con:value></con:property><con:property><con:name>topic2</con:name><con:value>t_COVID_vaccinationComposition</con:value></con:property><con:property><con:name>topic3</con:name><con:value>vaccinationComposition</con:value></con:property><con:property><con:name>topic4</con:name><con:value>vaccination_published_infoComposition</con:value></con:property><con:property><con:name>topic5</con:name><con:value>vaccination_cardComposition</con:value></con:property><con:property><con:name>topic6</con:name><con:value>t_newborn_info_questionary_form_948Composition</con:value></con:property><con:property><con:name>topic7</con:name><con:value>t_prenatal_record_visiting_nurseComposition</con:value></con:property><con:property><con:name>topic8</con:name><con:value>t_prenatal_recordComposition</con:value></con:property><con:property><con:name>topic9</con:name><con:value>VaccinationMobileCrewComposition</con:value></con:property><con:property><con:name>topic10</con:name><con:value>MedOrgVaccination</con:value></con:property><con:property><con:name>topic11</con:name><con:value>t_vaccination_medical_exemptionComposition</con:value></con:property><con:property><con:name>topic12</con:name><con:value>COVID_Historical_Vaccination</con:value></con:property></con:properties></con:testSuite><con:testSuite id="8a8680b6-ec29-4ee7-a07f-6297e11d4e96" name="vaccinationConsentInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="22ba2118-1303-4abd-8c06-2ca01a52b16e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationConsentInfoPrenatalRecordVisitingNurseTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="363ae8f1-fabb-40da-b999-49887190d79a"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="4b12c7bb-e7b6-4126-a3c6-3f570900f3f8" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="7c1b41aa-9aa6-4bb2-ac8b-a4c2295fc9e6"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic4")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)
</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="fb5f6e7d-1a1d-4d31-b524-e2b013f079a3"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationConsentInfo\t_prenatal_record_visiting_nurse create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationConsentInfo\t_prenatal_record_visiting_nurse update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationConsentInfo\t_prenatal_record_visiting_nurse delete.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="02e9ee97-cbb7-4bd4-a431-ead19766da95" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationConsentInfoNewbornInfoQuestionaryTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="08848ac7-6a19-4ee1-bc0b-369ae2c61340"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="5b6a6eb8-6cd1-49bd-8a3c-f4842bde5256" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="f5dc6a43-5fdb-4de5-b1f0-355cafc400ed"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic2")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="d98e981d-5e02-46db-b861-3398574f1b22"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationConsentInfo\t_newborn_info_questionary_form_948 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationConsentInfo\t_newborn_info_questionary_form_948 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationConsentInfo\t_newborn_info_questionary_form_948 delete.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="60fbe40b-80aa-4244-b05e-5726fea5f5cc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationConsentInfoPrenatalRecordTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="994e507c-ce99-41d7-857c-a67eb9499db6"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="e4fece7e-4aae-4654-96ad-df3cc01f5d34" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="75dc0e20-1f70-458e-9b64-9a1d44c0bd7e"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic3")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 String message = file.replace("\$patientId",patientId)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="eb79ed18-d316-4104-a54b-878b5f3a12a5"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationConsentInfo\t_prenatal_record create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationConsentInfo\t_prenatal_record update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationConsentInfo\t_prenatal_record delete.json</con:value></con:property></con:properties></con:testCase><con:testCase id="b50f621f-d904-492b-a0fe-4b166ff18ee1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationConsentInfoInformedConsentTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="59bc5169-2291-4354-9305-436e8bf74592"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="b221b0c6-b0dd-4f8c-bc8f-c93f19bbd758" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="11a906ef-20a2-435b-a455-133831029345"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic1")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="3d4a3dbf-0349-4b1e-80ac-edf7f1622199"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent delete.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="da77a2e6-05bc-4c8c-acdc-212fd2837c7b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationConsentInfoVaccinationCardTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="0a748b62-523d-418f-9930-c1f5bdcbe35f"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="155c4f6e-afb9-4ef2-aac2-72cefacee3c1" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="b44aded0-f5d1-43d8-9527-768df89a2aa6"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic5")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="5aa94689-cdf5-4c2b-a324-f4e784b31e71"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1147</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationConsentInfo\vaccination_card create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationConsentInfo\vaccination_card update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationConsentInfo\vaccination_card delete.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="5665c3c3-e835-4868-b90e-6356cbe01827" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Актуализация данных об отказах от вакцинации" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="b4970b6d-7179-43cc-9a9f-b68dbfe7d232"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="a6fab7c6-f602-49d5-96b2-023e23884b6b" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="02820ab1-5d47-4d94-acf9-ffec492ed7a1"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic1")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 String message = file.replace("\$patientId",patientId)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных 2" id="467f17f8-9647-4ba1-b49c-e71ebd78a706"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic6")
 String file =scripts.returnFileAsText("create2")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 def date =testRunner.testCase.getPropertyValue("date")
 def vaccinationFrequency =testRunner.testCase.getPropertyValue("vaccinationFrequency")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName).replace("\$date",date).replace("\$vaccinationFrequency",vaccinationFrequency)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="9ee61cec-30aa-4ff5-948d-ba4644c07283"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="9f852588-806c-4175-b314-8b3533e4a9ae"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1306</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent delete.json</con:value></con:property><con:property><con:name>create2</con:name><con:value>\vaccinationInfoUpdate\t_COVID_vaccination.v1.3 create.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Ветряная оспа V1</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>R2</con:value></con:property><con:property><con:name>date</con:name><con:value>2022-02-04</con:value></con:property><con:property><con:name>date2</con:name><con:value>2022-05-31</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>topic1</con:name><con:value>t_vaccination_informed_consentComposition</con:value></con:property><con:property><con:name>topic2</con:name><con:value>t_newborn_info_questionary_form_948Composition</con:value></con:property><con:property><con:name>topic3</con:name><con:value>t_prenatal_recordComposition</con:value></con:property><con:property><con:name>topic4</con:name><con:value>t_prenatal_record_visiting_nurseComposition</con:value></con:property><con:property><con:name>topic5</con:name><con:value>vaccination_cardComposition</con:value></con:property><con:property><con:name>topic6</con:name><con:value>t_COVID_vaccinationComposition</con:value></con:property></con:properties></con:testSuite><con:testSuite id="50fef59d-e7fa-4937-a173-0972f7a8dd92" name="vaccinationExemptionInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="73fd90bb-386e-4d32-85f5-04d083935857" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationExemptionMedicalExemptionTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="1fbcc271-674f-482a-a43e-5eec52beaf81"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="1f13ff75-170c-454f-8be1-605123d63b10" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="f3543ad4-d845-46ef-9e49-e6fb4f5feb94"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="bf4b9d62-c962-43bb-b308-e86ff31bd0c5"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic1")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
  def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$dateHigher2",dateHigher2).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="78d6d048-12b9-4f89-834b-6f9e9595a8c5"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2412</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\t_vaccination_medical_exemption create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\t_vaccination_medical_exemption update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\t_vaccination_medical_exemption delete.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-11-24T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-11-24</con:value></con:property><con:property><con:name>exemptionDuration</con:name><con:value>\vaccinationExemptionInfo\t_vaccination_medical_exemption exemptionDuration.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2021-12-18T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2021-12-18</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="6f3e4c94-2f47-4c9a-b379-eb6dd11c0c48" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationExemptionPrenatalRecordTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="9728e1c4-936a-4009-a45d-1c01d8b20398"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="c481d723-916c-4154-a732-195fbf4bcea4" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="22a2ecc0-9783-43c0-bfae-ab3e7653a286"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90" id="41c33cb1-d8f6-4ef5-bafd-6e81fbab624d"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -75;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90", currentDate_formatted )
def currentDate2 = today.getTime() -75;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date902", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90-365" id="aaeba205-07c7-4f90-b172-a15c7aba33c4"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -95;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90-365", currentDate_formatted )
def currentDate2 = today.getTime() -95;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date90-3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 365" id="1f058ba7-f4b3-4bb6-9da6-2b0d045533cd"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -370;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date365", currentDate_formatted )
def currentDate2 = today.getTime() -370;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="3e5164f9-a9d1-44ac-b065-6bd220c9830f"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic2")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
 def date902 =testRunner.testCase.getPropertyValue("date902")
 def date903652 =testRunner.testCase.getPropertyValue("date90-3652")
 String message = file.replace("\$patientId",patientId).replace("\$dateHigher2",dateHigher2).replace("\$date902",date902).replace("\$date90-3652",date903652)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="13d7f01c-da40-48b9-a52f-bbc40cc36c07"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2240</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\t_prenatal_record create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\t_prenatal_record update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\t_prenatal_record delete.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-11-24T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-11-24</con:value></con:property><con:property><con:name>check</con:name><con:value>\vaccinationExemptionInfo\t_prenatal_record check.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2022-01-07T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2022-01-07</con:value></con:property><con:property><con:name>date90-365</con:name><con:value>2021-12-18T00:00:00</con:value></con:property><con:property><con:name>date90-3652</con:name><con:value>2021-12-18</con:value></con:property><con:property><con:name>date365</con:name><con:value>2021-03-18T00:00:00</con:value></con:property><con:property><con:name>date3652</con:name><con:value>2021-03-18</con:value></con:property></con:properties></con:testCase><con:testCase id="afc64056-be4e-4702-aac8-27ec955eb6f2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationExemptionNewbornInfoQuestionaryTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="22aca662-3bf0-4d86-974d-3d06e33a2df0"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="ae9e72e2-6d18-4e23-bc52-5d5c7e78ebf1" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="d2726b50-c260-4c28-8c57-f4876b333535"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90" id="4b9c19ce-a330-4ff1-957a-61dadbd12134"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -75;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90", currentDate_formatted )
def currentDate2 = today.getTime() -75;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date902", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90-365" id="dba6f808-5a3e-4892-ad45-db43ac416aaf"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -95;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90-365", currentDate_formatted )
def currentDate2 = today.getTime() -95;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date90-3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 365" id="3156d301-21c6-45fc-878f-da6b6b4067d6"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -370;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date365", currentDate_formatted )
def currentDate2 = today.getTime() -370;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="dab562ed-3fe6-4845-9de2-fd4332964130"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic3")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
 def date902 =testRunner.testCase.getPropertyValue("date902")
 def date903652 =testRunner.testCase.getPropertyValue("date90-3652")
 def HBinfectionName =testRunner.testCase.getPropertyValue("HBinfectionName")
 String message = file.replace("\$patientId",patientId).replace("\$dateHigher2",dateHigher2).replace("\$date902",date902).replace("\$date90-3652",date903652).replace("\$HBinfectionName",HBinfectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="57827a4e-a712-471c-b4df-fd45960c6891"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2290</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\t_newborn_info_questionarу_form_948 create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\t_newborn_info_questionarу_form_948 update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\t_newborn_info_questionarу_form_948 delete.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-11-25T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-11-25</con:value></con:property><con:property><con:name>check</con:name><con:value>\vaccinationExemptionInfo\t_newborn_info_questionarу_form_948 check.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2022-09-10T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2022-09-10</con:value></con:property><con:property><con:name>date90-365</con:name><con:value>2022-08-21T00:00:00</con:value></con:property><con:property><con:name>date90-3652</con:name><con:value>2022-08-21</con:value></con:property><con:property><con:name>date365</con:name><con:value>2021-11-19T00:00:00</con:value></con:property><con:property><con:name>date3652</con:name><con:value>2021-11-19</con:value></con:property><con:property><con:name>HBinfectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="afa0a85a-1c3e-4f94-b5e9-b9ae926e42cf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationExemptionPrenatalVisitingNurseTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="e44200a1-cfc2-473d-8cb5-144b1328d5a7"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="6bfff3e4-30e5-4783-aec9-b4546b5d01ca" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="05bb2faf-907a-42e0-ab48-6d3a36149a1c"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90" id="89d0ff62-830a-4b49-ab66-12502a65de65"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -75;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90", currentDate_formatted )
def currentDate2 = today.getTime() -75;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date902", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90-365" id="fec6fd8d-b009-4a44-92db-d3d63da90bf4"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -95;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90-365", currentDate_formatted )
def currentDate2 = today.getTime() -95;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date90-3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 365" id="9d6e3347-7121-439f-8cc9-7c358dfe135c"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -370;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date365", currentDate_formatted )
def currentDate2 = today.getTime() -370;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="598392f0-b85b-42f4-8f2d-165bf624d858"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic6")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
 def date902 =testRunner.testCase.getPropertyValue("date902")
 def date903652 =testRunner.testCase.getPropertyValue("date90-3652")
  def HBinfectionName =testRunner.testCase.getPropertyValue("HBinfectionName")
 String message = file.replace("\$patientId",patientId).replace("\$dateHigher2",dateHigher2).replace("\$date902",date902).replace("\$date90-3652",date903652).replace("\$HBinfectionName",HBinfectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="d5c66e5d-61ba-4ad8-bf79-c5811d224057"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2247</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\t_prenatal_record_visiting_nurse create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\t_prenatal_record_visiting_nurse update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\t_prenatal_record_visiting_nurse delete.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-11-24T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-11-24</con:value></con:property><con:property><con:name>check</con:name><con:value>\vaccinationExemptionInfo\t_prenatal_record_visiting_nurse check.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2022-09-09T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2022-09-09</con:value></con:property><con:property><con:name>date90-365</con:name><con:value>2022-08-20T00:00:00</con:value></con:property><con:property><con:name>date90-3652</con:name><con:value>2022-08-20</con:value></con:property><con:property><con:name>date365</con:name><con:value>2021-11-18T00:00:00</con:value></con:property><con:property><con:name>date3652</con:name><con:value>2021-11-18</con:value></con:property><con:property><con:name>HBinfectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="be5911eb-04e3-404d-91ea-f5f4f019733c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationExemptionVaccinationCardTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="c4daa7cf-b42a-4bd9-ba16-382d7a3393aa"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="1041200a-e61b-4622-9d28-316fca35a8e1" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="a00b3f1e-0eba-47dd-8f6c-a8fc3443230e"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90" id="801fc0e1-2cf6-49ae-8d01-6baf39657c6c"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -75;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90", currentDate_formatted )
def currentDate2 = today.getTime() -75;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date902", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90-365" id="fb4909cd-a848-44a8-8452-9a3af1ca421d"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -95;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90-365", currentDate_formatted )
def currentDate2 = today.getTime() -95;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date90-3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 365" id="dfb1f31c-e83f-4473-baa5-d6f2a70cb8c3"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -370;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date365", currentDate_formatted )
def currentDate2 = today.getTime() -370;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="94a9545a-7b39-4abe-92a2-0295b49879a7"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic7")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
 def date902 =testRunner.testCase.getPropertyValue("date902")
 def date903652 =testRunner.testCase.getPropertyValue("date90-3652")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$dateHigher2",dateHigher2).replace("\$date902",date902).replace("\$date90-3652",date903652).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="347bd3f5-458e-47a9-bf47-7f5e1aa8d97e"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2264</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\vaccination_card create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\vaccination_card update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\vaccination_card delete.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-11-24T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-11-24</con:value></con:property><con:property><con:name>exemption</con:name><con:value>\vaccinationExemptionInfo\vaccination_card exemption.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2022-09-09T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2022-09-09</con:value></con:property><con:property><con:name>date90-365</con:name><con:value>2022-08-20T00:00:00</con:value></con:property><con:property><con:name>date90-3652</con:name><con:value>2022-08-20</con:value></con:property><con:property><con:name>date365</con:name><con:value>2021-11-18T00:00:00</con:value></con:property><con:property><con:name>date3652</con:name><con:value>2021-11-18</con:value></con:property><con:property><con:name>date</con:name><con:value>\vaccinationExemptionInfo\vaccination_card date.json</con:value></con:property><con:property><con:name>typecheck</con:name><con:value>\vaccinationExemptionInfo\vaccination_card typecheck.json</con:value></con:property><con:property><con:name>typecheck2</con:name><con:value>\vaccinationExemptionInfo\vaccination_card typecheck2.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="f2c51c8b-8c6d-47dd-8d7d-7c06eaae5a0f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationExemptionTImmunizationMedicalExemptionTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="7b10fa7f-db41-482a-8d90-85135705b890"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="753f89b2-84a8-4fcb-9580-b553cb1da4b2" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="5d612a09-6afb-4cb1-9787-1daa3196319d"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="931c3a6b-44d8-4865-9cec-58cf092a768e"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic8")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
 def date902 =testRunner.testCase.getPropertyValue("date902")
 def date903652 =testRunner.testCase.getPropertyValue("date90-3652")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$dateHigher2",dateHigher2).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="cd1f2af0-13fe-40ce-9d9a-ef1e0be95e0b"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2713</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\t_immunization_medical_exemption create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\t_immunization_medical_exemption update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\t_immunization_medical_exemption create.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-11-24T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-11-24</con:value></con:property><con:property><con:name>partial</con:name><con:value>\vaccinationExemptionInfo\t_immunization_medical_exemption partial.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2022-01-07T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2022-01-07</con:value></con:property><con:property><con:name>date90-365</con:name><con:value>2021-12-18T00:00:00</con:value></con:property><con:property><con:name>date90-3652</con:name><con:value>2021-12-18</con:value></con:property><con:property><con:name>date365</con:name><con:value>2021-03-18T00:00:00</con:value></con:property><con:property><con:name>date3652</con:name><con:value>2021-03-18</con:value></con:property><con:property><con:name>exemption</con:name><con:value>\vaccinationExemptionInfo\t_immunization_medical_exemption exemption.json</con:value></con:property><con:property><con:name>typecheck</con:name><con:value>\vaccinationExemptionInfo\vaccination_card typecheck.json</con:value></con:property><con:property><con:name>typecheck2</con:name><con:value>\vaccinationExemptionInfo\vaccination_card typecheck2.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Вирусный гепатит В</con:value></con:property></con:properties></con:testCase><con:testCase id="a1258b1b-ce02-4422-b97d-6ada54d82ba1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationExemptionInfoCovidVacMedicalExemptionTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="adac8339-f2de-4e3d-a866-337c2094145f"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="c91286f4-c73e-41a1-a68e-4db9d4e9b028" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="27e13f7f-0578-429a-9de8-3b4fb366ee88"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="b4249f71-42a6-4e3d-8012-c1f332136d8f"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic10")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
 String message = file.replace("\$patientId",patientId).replace("\$dateHigher2",dateHigher2)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="abfa8b33-570c-4bc8-a8c5-b641f45b5dd0"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2276</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\t_COVID_vaccination_medical_exemption create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\t_COVID_vaccination_medical_exemption update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\t_COVID_vaccination_medical_exemption delete.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-11-24T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-11-24</con:value></con:property><con:property><con:name>exemptionDuration</con:name><con:value>\vaccinationExemptionInfo\t_COVID_vaccination_medical_exemption exemptionDuration.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2021-12-18T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2021-12-18</con:value></con:property><con:property><con:name>delete docId</con:name><con:value>\vaccinationExemptionInfo\t_COVID_vaccination_medical_exemption docId.json</con:value></con:property><con:property><con:name>delete exemptionStartDate</con:name><con:value>\vaccinationExemptionInfo\t_COVID_vaccination_medical_exemption exemptionStartDate.json</con:value></con:property><con:property><con:name>delete exemptionEndDate</con:name><con:value>\vaccinationExemptionInfo\t_COVID_vaccination_medical_exemption exemptionEndDate.json</con:value></con:property><con:property><con:name>create date</con:name><con:value>\vaccinationExemptionInfo\t_COVID_vaccination_medical_exemption date.json</con:value></con:property></con:properties></con:testCase><con:testCase id="5c21d640-d656-4a67-a033-53ae135e19aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinationExemptionInfoImmunoprophylaxisMedicalExemptionTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="a934137d-c3c2-4d5a-9951-1ed1ec446604"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="54b84923-6ee4-4d27-b439-a573a9125b76" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set exemptionEndDate +1" id="9143326a-34a9-403f-b958-400e583fc46c"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set exemptionStartDate 90" id="53d6e0c6-360d-4962-bfbe-989bdda92e83"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate2 = today.getTime() -89;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "exemptionStartDate", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set exemptionStartDate 91" id="93fa176f-d5ee-469f-8604-077e6fbe8b53"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate2 = today.getTime() -90;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "exemptionStartDate", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set exemptionStartDate 364" id="75731c9b-bd3f-41bb-9505-0758040d0af9"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate2 = today.getTime() -363;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "exemptionStartDate", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="4883ed52-c89c-4e90-a958-58c6156ef999"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic11")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
 def exemptionStartDate =testRunner.testCase.getPropertyValue("exemptionStartDate")
 def infectionName1 =testRunner.testCase.getPropertyValue("infectionName1")
 def infectionName2 =testRunner.testCase.getPropertyValue("infectionName2")
 def immunoprophylaxisTypes =testRunner.testCase.getPropertyValue("immunoprophylaxisTypes")
 def exemptionDuration =testRunner.testCase.getPropertyValue("exemptionDuration")
 def exemptionType =testRunner.testCase.getPropertyValue("exemptionType")
 String message = file.replace("\$patientId",patientId).replace("\$exemptionStartDate",exemptionStartDate).replace("\$dateHigher2",dateHigher2).replace("\$infectionName1",infectionName1).replace("\$infectionName2",infectionName2).replace("\$immunoprophylaxisTypes",immunoprophylaxisTypes).replace("\$exemptionDuration",exemptionDuration).replace("\$exemptionType",exemptionType)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="16a387ee-dbf3-4961-8b1a-e764ca109f38"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>3088</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\t_immunoprophylaxis_medical_exemption create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\t_immunoprophylaxis_medical_exemption update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\t_immunoprophylaxis_medical_exemption delete.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-12-30T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-12-30</con:value></con:property><con:property><con:name>partial</con:name><con:value>\vaccinationExemptionInfo\t_immunization_medical_exemption partial.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2022-01-07T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2022-01-07</con:value></con:property><con:property><con:name>date90-365</con:name><con:value>2021-12-18T00:00:00</con:value></con:property><con:property><con:name>date90-3652</con:name><con:value>2021-12-18</con:value></con:property><con:property><con:name>date365</con:name><con:value>2021-03-18T00:00:00</con:value></con:property><con:property><con:name>date3652</con:name><con:value>2021-03-18</con:value></con:property><con:property><con:name>exemption</con:name><con:value>\vaccinationExemptionInfo\t_immunoprophylaxis_medical_exemption exemption.json</con:value></con:property><con:property><con:name>typecheck</con:name><con:value>\vaccinationExemptionInfo\vaccination_card typecheck.json</con:value></con:property><con:property><con:name>typecheck2</con:name><con:value>\vaccinationExemptionInfo\vaccination_card typecheck2.json</con:value></con:property><con:property><con:name>infectionName1</con:name><con:value>Коклюш, дифтерия, столбняк, полиомиелит, гемофильная инф.</con:value></con:property><con:property><con:name>infectionName2</con:name><con:value>Гепатит B</con:value></con:property><con:property><con:name>immunoprophylaxisTypes</con:name><con:value>Вакцинация</con:value></con:property><con:property><con:name>exemptionDuration</con:name><con:value>длительный</con:value></con:property><con:property><con:name>date</con:name><con:value>2022-09-22</con:value></con:property><con:property><con:name>end</con:name><con:value>\vaccinationExemptionInfo\t_immunoprophylaxis_medical_exemption exemption.json</con:value></con:property><con:property><con:name>deleted</con:name><con:value>\vaccinationExemptionInfo\t_immunoprophylaxis_medical_exemption deleted.json</con:value></con:property><con:property><con:name>exemptionStartDate</con:name><con:value>2022-10-02</con:value></con:property><con:property><con:name>exemptionType</con:name><con:value>Частичный</con:value></con:property></con:properties></con:testCase><con:testCase id="db66f284-e905-4781-9ea0-4adf46e564cf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Актуализация данных об отводах от вакцинации" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="e0c7efcd-cffd-4e67-8040-9e8e77a65d68"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="350b246f-665b-47b9-94d2-7b2f8f292e7b" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set Date +1" id="66680989-9140-4a92-aef3-683b94cea676"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() + 1;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "dateHigher", currentDate_formatted )
def currentDate2 = today.getTime() + 1;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "dateHigher2", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90" id="782b3149-e264-4a27-b2f8-90636dcce625"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -75;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90", currentDate_formatted )
def currentDate2 = today.getTime() -75;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date902", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 90-365" id="26360b29-3b54-43d2-b7a8-00466e9809f6"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -95;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date90-365", currentDate_formatted )
def currentDate2 = today.getTime() -95;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date90-3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Set Date 365" id="ab61a53d-c575-4589-9e45-91c3cf9776fc"><con:settings/><con:config><script>def today = Calendar.getInstance();
today.set(Calendar.HOUR_OF_DAY, 0);
today.set(Calendar.MINUTE, 0);
today.set(Calendar.SECOND, 0);
today.set(Calendar.MILLISECOND, 0);
def currentDate = today.getTime() -370;
def currentDate_formatted = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(currentDate);
testRunner.testCase.setPropertyValue( "date365", currentDate_formatted )
def currentDate2 = today.getTime() -370;
def currentDate_formatted2 = new java.text.SimpleDateFormat("yyyy-MM-dd").format(currentDate2);
testRunner.testCase.setPropertyValue( "date3652", currentDate_formatted2 )</script></con:config></con:testStep><con:testStep type="groovy" name="Create частичный" id="0af56263-4a84-4efb-b81e-084130a3f621"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic7")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def dateHigher2 =testRunner.testCase.getPropertyValue("dateHigher2")
 def date902 =testRunner.testCase.getPropertyValue("date902")
 def date903652 =testRunner.testCase.getPropertyValue("date90-3652")
 String message = file.replace("\$patientId",patientId).replace("\$dateHigher2",dateHigher2).replace("\$date902",date902).replace("\$date90-3652",date903652)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="groovy" name="vaccinationFact" id="7d365f50-3553-48db-b4bb-399236f81676"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic9")
 String file =scripts.returnFileAsText("create2")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 def date2 =testRunner.testCase.getPropertyValue("date2")
 def vaccinationFrequency =testRunner.testCase.getPropertyValue("vaccinationFrequency")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName).replace("\$date",date2).replace("\$vaccinationFrequency",vaccinationFrequency)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="00dfeb01-0e63-4813-b485-cbe45e671da7"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="83ea944a-937e-4960-83c3-ac1caacc2cd2"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1629</con:value></con:property><con:property><con:name>create</con:name><con:value>\vaccinationExemptionInfo\vaccination_card create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationExemptionInfo\vaccination_card update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\vaccinationExemptionInfo\vaccination_card delete.json</con:value></con:property><con:property><con:name>dateHigher</con:name><con:value>2022-06-17T00:00:00</con:value></con:property><con:property><con:name>dateHigher2</con:name><con:value>2022-06-17</con:value></con:property><con:property><con:name>exemption</con:name><con:value>\vaccinationExemptionInfo\vaccination_card exemption.json</con:value></con:property><con:property><con:name>date90</con:name><con:value>2022-04-02T00:00:00</con:value></con:property><con:property><con:name>date902</con:name><con:value>2022-04-02</con:value></con:property><con:property><con:name>date90-365</con:name><con:value>2022-03-13T00:00:00</con:value></con:property><con:property><con:name>date90-3652</con:name><con:value>2022-03-13</con:value></con:property><con:property><con:name>date365</con:name><con:value>2021-06-11T00:00:00</con:value></con:property><con:property><con:name>date3652</con:name><con:value>2021-06-11</con:value></con:property><con:property><con:name>date</con:name><con:value>\vaccinationExemptionInfo\vaccination_card date.json</con:value></con:property><con:property><con:name>typecheck</con:name><con:value>\vaccinationExemptionInfo\vaccination_card typecheck.json</con:value></con:property><con:property><con:name>typecheck2</con:name><con:value>\vaccinationExemptionInfo\vaccination_card typecheck2.json</con:value></con:property><con:property><con:name>create2</con:name><con:value>\vaccinationInfoUpdate\t_COVID_vaccination.v1.3 create.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>B.12 description</con:value></con:property><con:property><con:name>vaccinationFrequency</con:name><con:value>R2</con:value></con:property><con:property><con:name>date2</con:name><con:value>2019-09-01</con:value></con:property></con:properties></con:testCase><con:testCase id="b5d0825d-341a-431f-b501-4c1fa1ee8c93" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ретро-данные. Информация по отводам от вакцинации" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="97e3265b-9c7f-4266-bfc7-0b8a51fdba87"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="ba98697b-e984-42a5-b699-1c6210162cb9" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Создание данных" id="2f86c434-4bf1-4832-b9ba-98a1b19549ac"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://10.2.172.75:5432/vacregistry_data?stringtype=unspecified&amp;user=vacregistry&amp;password=vacregistry</con:connectionString><con:connectionProperties/><con:query>INSERT INTO export_exemption_info_test (document_id, patient_id, start_date, end_date, exemption_type, duration, infection_code, infection_name) VALUES('1f31adba-9abf-4d25-b9f3-c187e30309d5', ${#TestCase#patientId}, '2019-01-24 00:00:00.000', '2030-04-26 00:00:00.000', 'полный', 'постоянный', '', '');
</con:query><con:properties/></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="9f3c4275-7576-4f3c-89ee-7eee1b23cd32"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="2f1dffe6-d58a-4e25-864d-29659058aab4"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>3278</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>topic1</con:name><con:value>t_vaccination_medical_exemptionComposition</con:value></con:property><con:property><con:name>topic2</con:name><con:value>t_prenatal_recordComposition</con:value></con:property><con:property><con:name>topic3</con:name><con:value>t_newborn_info_questionary_form_948Composition</con:value></con:property><con:property><con:name>topic4</con:name><con:value>t_pediatrist_examination1to14Composition</con:value></con:property><con:property><con:name>topic5</con:name><con:value>t_pediatrist_examination15to17Composition</con:value></con:property><con:property><con:name>topic6</con:name><con:value>t_prenatal_record_visiting_nurseComposition</con:value></con:property><con:property><con:name>topic7</con:name><con:value>vaccination_cardComposition</con:value></con:property><con:property><con:name>topic8</con:name><con:value>t_immunization_medical_exemptionComposition</con:value></con:property><con:property><con:name>topic9</con:name><con:value>t_COVID_vaccinationComposition</con:value></con:property><con:property><con:name>topic10</con:name><con:value>t_COVID_vaccination_medical_exemptionComposition</con:value></con:property><con:property><con:name>topic11</con:name><con:value>t_immunoprophylaxis_medical_exemptionComposition</con:value></con:property></con:properties></con:testSuite><con:testSuite id="02f39c66-5756-4f12-8d49-a75f670bb584" name="immunoglobulinInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b46dd184-7e30-4495-a08a-179f1f46f581" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="immunoglobulin_published_infoComposition" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="bd9c726c-025a-4d41-9e94-b42b162ee30f"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="b8a6fafa-5d99-4a99-9d0a-0b6bb4ea2aec" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="c861a682-c922-4652-8b4f-3d44dc943593"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic1")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
  def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="55c1a2fc-6e02-4d8d-bf76-be0a773f9b08"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2768</con:value></con:property><con:property><con:name>create</con:name><con:value>\immunoglobulinInfo\immunoglobulin_published_infoComposition create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\immunoglobulinInfo\immunoglobulin_published_infoComposition update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\immunoglobulinInfo\immunoglobulin_published_infoComposition delete.json</con:value></con:property><con:property><con:name>infectionCode</con:name><con:value>\immunoglobulinInfo\immunoglobulin_published_infoComposition create no infectionCode.json</con:value></con:property><con:property><con:name>empty</con:name><con:value>\immunoglobulinInfo\immunoglobulin_published_infoComposition create no infectionName no drugName.json</con:value></con:property><con:property><con:name>sved</con:name><con:value>\immunoglobulinInfo\immunoglobulin_published_infoComposition create drugName - сведений.json</con:value></con:property><con:property><con:name>drugName</con:name><con:value>\immunoglobulinInfo\immunoglobulin_published_infoComposition create infectionName - drugName.json</con:value></con:property><con:property><con:name>date</con:name><con:value>2022-11-24T00:00:00</con:value></con:property><con:property><con:name>date2</con:name><con:value>2022-11-24</con:value></con:property><con:property><con:name>time</con:name><con:value>00:00:00</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>Грипп</con:value></con:property><con:property><con:name>noSved</con:name><con:value>\immunoglobulinInfo\immunoglobulin_published_infoComposition create drugName - не сведений.json</con:value></con:property></con:properties></con:testCase><con:testCase id="313d84a5-e572-4d06-bf5e-2ec01d9935f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="t_newborn_info_questionary_form_948" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="e1853ca6-8d80-407b-ac54-aa2cbe0912e1"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="db19a7af-e753-482c-9686-940364cc068d" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="25671823-8adc-4866-a669-3163ea06db84"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
def topic =testRunner.testCase.testSuite.getPropertyValue("topic2")
String file =scripts.returnFileAsText("create")
def patientId =testRunner.testCase.getPropertyValue("patientId")
def infectionName =testRunner.testCase.getPropertyValue("infectionName")

String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="ff70d478-a785-4252-91a9-b883febffd25"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>update</con:name><con:value>\immunoglobulinInfo\t_newborn_info_questionary_form_948Composition update.json</con:value></con:property><con:property><con:name>patientId</con:name><con:value>981651684</con:value></con:property><con:property><con:name>ocheck</con:name><con:value>\immunoglobulinInfo\t_newborn_info_questionary_form_948Composition Ocheck.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>гепатит B</con:value></con:property><con:property><con:name>infectionCode</con:name><con:value>\immunoglobulinInfo\t_newborn_info_questionary_form_948Composition no infectionCode.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\immunoglobulinInfo\t_newborn_info_questionary_form_948Composition delete.json</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>create</con:name><con:value>\immunoglobulinInfo\t_newborn_info_questionary_form_948Composition create.json</con:value></con:property></con:properties></con:testCase><con:testCase id="d3d241f1-b259-4ddd-8466-18540d980735" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="t_prenatal_record_visiting_nurse" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="63f6e758-56f3-4792-83ca-85f1a9b950c3"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="42c2993e-433b-4e68-8767-a018c99520e1" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="d6932f4a-9426-4923-9e6a-a471d18a4484"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic3")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 def infectionName =testRunner.testCase.getPropertyValue("infectionName")
 String message = file.replace("\$patientId",patientId).replace("\$infectionName",infectionName)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="082a8462-5e90-47b6-96ac-ff789f0d6c13"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>98465163</con:value></con:property><con:property><con:name>create</con:name><con:value>\immunoglobulinInfo\t_prenatal_record_visiting_nurseComposition create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\immunoglobulinInfo\t_prenatal_record_visiting_nurseComposition update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\immunoglobulinInfo\t_prenatal_record_visiting_nurseComposition delete.json</con:value></con:property><con:property><con:name>ocheck</con:name><con:value>\immunoglobulinInfo\t_prenatal_record_visiting_nurseComposition Ocheck.json</con:value></con:property><con:property><con:name>infectionCode</con:name><con:value>\immunoglobulinInfo\t_prenatal_record_visiting_nurseComposition no infectionCode.json</con:value></con:property><con:property><con:name>infectionName</con:name><con:value>гепатит B</con:value></con:property></con:properties></con:testCase><con:testCase id="053ed912-70d2-49ee-b05c-eb4ea2d342ae" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ретро-данные. Информация о введении иммуноглобулина" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="008e8c1d-eab6-4e31-9b14-5f22c6ddcf29"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="eec24cdc-a67c-4883-bd73-7f09ebd5365d" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Создание данных" id="c70f04d3-70f1-4290-a273-ca138ba97bc9"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://10.2.172.75:5432/vacregistry_data?stringtype=unspecified&amp;user=vacregistry&amp;password=vacregistry</con:connectionString><con:connectionProperties/><con:query>INSERT INTO export_immunoglobulininfo_test (patientid, docid, immunoglobulindate, infectionname) VALUES(${#TestCase#patientId}, 'f3f47209-3463-4b1e-9b11-57afef167575', '2020-12-02 05:00:00.000', 'Коклюш');
</con:query><con:properties/></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="32619717-4d57-4cc7-b048-3c186e69a288"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="6f8b50a5-6fdb-464e-b6bb-64f80448b510"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>3278</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>topic1</con:name><con:value>immunoglobulin_published_infoComposition</con:value></con:property><con:property><con:name>topic2</con:name><con:value>t_newborn_info_questionary_form_948Composition</con:value></con:property><con:property><con:name>topic3</con:name><con:value>t_prenatal_record_visiting_nurseComposition</con:value></con:property></con:properties></con:testSuite><con:testSuite id="8bac3fcf-da89-4fa0-99ae-8fae21bb4c63" name="immunoDiagnosticsInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="feab597b-446a-44af-9804-dc6d1a160f81" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="immunoDiagnosticsInfoTImmunodiagnosticsPreventiveTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="8331321d-4eff-4817-9d1b-ef8c16f16f25"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="ea10f74c-910d-40b7-930f-1184d8c97d11" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="ad0e9cc5-12a3-4c70-8f0e-27cfa06fd3e7"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic6")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 String message = file.replace("\$patientId",patientId)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="602e4915-e9f8-4363-834f-56abcdd84927"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2067</con:value></con:property><con:property><con:name>create</con:name><con:value>\immunoDiagnosticsInfo\t_immunodiagnostics_preventive create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\immunoDiagnosticsInfo\t_immunodiagnostics_preventive update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\immunoDiagnosticsInfo\t_immunodiagnostics_preventive delete.json</con:value></con:property><con:property><con:name>create2</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info2 create.json</con:value></con:property><con:property><con:name>delete2</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info2 delete.json</con:value></con:property><con:property><con:name>create21</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info21 create.json</con:value></con:property><con:property><con:name>delete21</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info21 delete.json</con:value></con:property></con:properties></con:testCase><con:testCase id="50b585ab-5e64-40de-ac3d-6e550ef23c97" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="immunoDiagnosticsInfoTImmunodiagnosticsResultTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="e49670b3-320b-4637-942b-304518c559aa"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="526d08c3-1fb2-4331-98c5-c2167f86421a" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="3243ffaa-1711-449c-8267-66cf79af9ba1"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic7")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 String message = file.replace("\$patientId",patientId)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="f21aa182-0f9f-4670-86e7-aa9d36b97a23"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2071</con:value></con:property><con:property><con:name>create</con:name><con:value>\immunoDiagnosticsInfo\t_immunodiagnostics_result create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\immunoDiagnosticsInfo\t_immunodiagnostics_result update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\immunoDiagnosticsInfo\t_immunodiagnostics_result delete.json</con:value></con:property><con:property><con:name>create2</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info2 create.json</con:value></con:property><con:property><con:name>delete2</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info2 delete.json</con:value></con:property><con:property><con:name>create21</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info21 create.json</con:value></con:property><con:property><con:name>delete21</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info21 delete.json</con:value></con:property></con:properties></con:testCase><con:testCase id="9fdc3449-ab95-4b3d-bfe8-2af1d78539a1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="immunoDiagnosticsInfoPrenatalRecordVisitingNurseTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="40f49d54-1382-45cc-bb48-a33c65d24ef3"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="652b56f9-37dc-4b6c-8259-46d74286fd16" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="03e344c5-7362-40cc-b8a1-3151aeda1747"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic2")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 String message = file.replace("\$patientId",patientId)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="477d7ecc-a30c-4403-b186-ef41e0155c12"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2566</con:value></con:property><con:property><con:name>create</con:name><con:value>\immunoDiagnosticsInfo\t_prenatal_record_visiting_nurse create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\immunoDiagnosticsInfo\t_prenatal_record_visiting_nurse delete.json</con:value></con:property></con:properties></con:testCase><con:testCase id="29bc947d-a5a4-4588-8930-8b8600cf9cbb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="immunoDiagnosticsInfoVaccinationCardTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="7fc23654-c3e9-4644-9d30-9d1ebb248531"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="cfb751ba-af78-4e22-8b49-b624b8e2d8c1" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="285dccc3-86ba-47ef-84c7-0b40efc2e46b"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic3")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 String message = file.replace("\$patientId",patientId)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="4857e3b7-cdb7-42aa-80ab-c9dbfde0a72b"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2103</con:value></con:property><con:property><con:name>create</con:name><con:value>\immunoDiagnosticsInfo\vaccination_cardComposition create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>false</con:name><con:value>\immunoDiagnosticsInfo\vaccination_cardComposition false.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\immunoDiagnosticsInfo\vaccination_cardComposition delete.json</con:value></con:property></con:properties></con:testCase><con:testCase id="511eea21-c758-4aa4-b46c-d592f540258b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="immunoDiagnosticsInfoPublishedTopicJob" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="23caff03-e375-49ea-8bb2-02d7d6ba6b48"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="647b1c80-6181-46a0-9976-ebfc2b2440da" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="c691afd3-b828-417d-9894-652bbb95ea4f"><con:settings/><con:config><script>def scripts = new ScriptLibrary(context, testRunner, log)
 def topic =testRunner.testCase.testSuite.getPropertyValue("topic4")
 String file =scripts.returnFileAsText("create")
 def patientId =testRunner.testCase.getPropertyValue("patientId")
 String message = file.replace("\$patientId",patientId)
 //return message
scripts. sendMessageToKafka(topic, message)</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="43fad4df-9fec-4a12-ad49-379ff5a9cbb8"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>2590</con:value></con:property><con:property><con:name>create</con:name><con:value>\immunoDiagnosticsInfo\t_vaccination_published_info create.json</con:value></con:property><con:property><con:name>dateLower</con:name><con:value>2022-02-06T00:00:00</con:value></con:property><con:property><con:name>dateLower2</con:name><con:value>2022-02-06</con:value></con:property><con:property><con:name>update</con:name><con:value>\vaccinationConsentInfo\t_vaccination_informed_consent update.json</con:value></con:property><con:property><con:name>delete</con:name><con:value>\immunoDiagnosticsInfo\t_vaccination_published_info delete.json</con:value></con:property><con:property><con:name>create2</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info2 create.json</con:value></con:property><con:property><con:name>delete2</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info2 delete.json</con:value></con:property><con:property><con:name>create21</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info21 create.json</con:value></con:property><con:property><con:name>delete21</con:name><con:value>\immunoDiagnosticsInfo\vaccination_published_info21 delete.json</con:value></con:property></con:properties></con:testCase><con:testCase id="d0f15a43-61bf-41cd-8b67-d06e7ab09e6d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ретро-данные. Информация об иммунодиагностике" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="acfe4eef-cba1-41b6-b385-f55ca41fbbc1"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="2b00da97-69ae-4b42-9c9d-6796190b4d79" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Создание данных" id="ac148e62-bd19-4db0-a5ae-a6bd4c0ff5b1"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>org.postgresql.Driver</con:driver><con:connectionString>jdbc:postgresql://10.2.172.75:5432/vacregistry_data?stringtype=unspecified&amp;user=vacregistry&amp;password=vacregistry</con:connectionString><con:connectionProperties/><con:query>INSERT INTO export_immunodiagnostics_test (patient_id, document_id, immunodiagnos_type_name, immunodiagnos_type_code, resultdate, reaction) VALUES(${#TestCase#patientId}, 'f6c47fc5-d182-4d80-bdf7-587a6b3d4a8f', 'Диаскинтест', '2', '2022-04-28 00:00:00.000', 'Отрицательная');
</con:query><con:properties/></con:config></con:testStep><con:testStep type="manualTestStep" name="Ручной запуск джобы" id="3685ba32-e8e3-429a-8e11-478c0dd31a98"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="6d60bba3-a4e5-448d-81cc-88f60a8cd8ee"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>3278</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>topic1</con:name><con:value>t_newborn_info_questionary_form_948Composition</con:value></con:property><con:property><con:name>topic2</con:name><con:value>t_prenatal_record_visiting_nurseComposition</con:value></con:property><con:property><con:name>topic3</con:name><con:value>vaccination_cardComposition</con:value></con:property><con:property><con:name>topic4</con:name><con:value>vaccination_published_infoComposition</con:value></con:property><con:property><con:name>topic5</con:name><con:value>vaccination_cardComposition</con:value></con:property><con:property><con:name>topic6</con:name><con:value>ImmunoComplete</con:value></con:property><con:property><con:name>topic7</con:name><con:value>ImmunoResult</con:value></con:property></con:properties></con:testSuite><con:testSuite id="41121748-0155-4d01-9a96-f8856586e5d7" name="dispensaryObservation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="d730a0df-0155-4128-96ff-4053fb257b64" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Формирование сведений о диспансерном наблюдении пациента" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Find patientId" id="2eeae215-eb8e-474b-9e09-84a1809a8055"><con:settings/><con:config><script>limit =testRunner.testCase.testSuite.project.getPropertyValue("limit").toInteger()

patientId =testRunner.testCase.testSuite.project.getPropertyValue("patientId").toInteger()

patientFound = false

i=0

while (patientFound==false &amp;&amp; i&lt;limit){

	testRunner.testCase.setPropertyValue("patientId", patientId.toString())

	testRunner.runTestStepByName( "search")

	obj = context.testCase.getTestStepByName("search")
	
	assertions = obj.getAssertionList()
	//errors=assertions[0].getErrors().toString()
	//log.info assertions[4].status
	patientId=patientId+1
	
	assertions.each{ //log.info(it.name + ' --> ' + it.status)
		stat = (it.status).toString()
		//log.info stat
	 	 if(stat == "VALID"){
	 	 	log.info " статус "+stat+" пациент "+(patientId-1)
	 	 	testRunner.testCase.testSuite.project.setPropertyValue("patientId",patientId.toString())
			patientFound=true
	   }
	}
	i=i+1
}
  </script></con:config></con:testStep><con:testStep type="restrequest" name="search" id="3f772e0e-248b-452f-8feb-bbe5c0f730f4" disabled="true"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="search" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:assertion type="Simple NotContains" id="f8a4344c-c45f-4e40-a269-bc473293ff5d" name="Not Contains"><con:configuration><token>patientId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Создание данных" id="3329e386-c368-4b5e-8b3b-44a4c4ee8474"><con:settings/><con:config><script>import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("DnForm30ToDisp","""{
   "operationType": "new",
   "basisTaskType": "DIGITIZED_DOCUMENT",
   "patientId": \""""+patientId+"""\",
   "groupCode": "DNC0411",
   "groupName": "Наименование",
   "groupSpecializationCode": "35",
   "groupSpecializationName": "464",
   "doctorFIO": "gehbr",
   "employeeId": "45354",
   "noDoctor": "true",
   "specialityCode": "6346",
   "specialityName": "643645",
   "specializationCode": "6547865",
   "specializationName": "657",
   "diagnosisCode": "A16.5",
   "diagnosisName": "A16.5 Туберкулезный плеврит без упоминания о бактериологическом или гистологическом подтверждении",
   "diagnosisDate": "2021-10-16",
   "repeat": "7868",
   "startDate": "2021-10-16",
   "timeCommitted": "2021-10-20T15:00:58+03:00",
   "dnDoctorJobExecutionId": "3454"
}""")</script></con:config></con:testStep><con:testStep type="restrequest" name="Проверка данных" id="7fca23c2-05c7-4f52-b821-93618fed6a40"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" methodName="_search 1" resourcePath="/default_vaccination/_search" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Проверка данных" id="3fd00108-310c-4fb4-8c21-4c6f2963d49c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request>{"size":20,"track_total_hits":false,"query":{"match":{"patientId":"${#TestCase#patientId}"}}}</con:request><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_search</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>3477</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="d98db78d-6505-4396-9a86-b03740caeddd" name="Справочники"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ba78d390-79c0-4b92-a812-2f750beddf3e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Справочник «Медицинские учреждения»" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Method 1 - Request 1" id="f4190039-d2df-4633-a2d4-e7ff2bea7f9e"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" resourcePath="/api/rest/v1/dictionary/lpu/items" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Method 1 - Request 1" id="24b79e06-4a44-413a-97f0-ca95d3980b49" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-AUTHENTICATION-TOKEN" value="YWRtaW4kJCQxfDIwMjMtMDItMjhUMTE6MzA6NDkuODEzMDE3fDZiZjcwZGI0OWNlMjk3ZDg3ZDUyNzY4YzQ4Njk2Zjg5" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://ehr-index.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/api/rest/v1/dictionary/lpu/items</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2e07a5d2-74b8-4f0a-8b3c-12b57fe0a61d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Справочник «Плановая вакцинация»" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Method 1 - Request 1" id="a4170d95-d041-4bfa-a815-843caa9674a7"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" resourcePath="/api/rest/v1/dictionary/vaccinationNeed/items" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Method 1 - Request 1" id="24b79e06-4a44-413a-97f0-ca95d3980b49" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-AUTHENTICATION-TOKEN" value="YWRtaW4kJCQxfDIwMjMtMDItMjhUMTE6MzA6NDkuODEzMDE3fDZiZjcwZGI0OWNlMjk3ZDg3ZDUyNzY4YzQ4Njk2Zjg5" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://ehr-index.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/api/rest/v1/dictionary/lpu/items</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="781be658-46e1-421c-ae0a-dc2c9168d997" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Справочник «Образовательные организации»" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Method 1 - Request 1" id="e2d71eba-efbe-483b-88c9-f24773af3106"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" resourcePath="/api/rest/v1/dictionary/educationOrganization/items" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Method 1 - Request 1" id="24b79e06-4a44-413a-97f0-ca95d3980b49" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-AUTHENTICATION-TOKEN" value="YWRtaW4kJCQxfDIwMjMtMDItMjhUMTE6MzA6NDkuODEzMDE3fDZiZjcwZGI0OWNlMjk3ZDg3ZDUyNzY4YzQ4Njk2Zjg5" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://ehr-index.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/api/rest/v1/dictionary/lpu/items</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5b3c685f-2728-4569-8fca-f72f42425d32" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Справочник «Инфекции»" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Method 1 - Request 1" id="7eec1969-9c7e-4126-b671-2dbbe0cbbff0"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" resourcePath="/api/rest/v1/dictionary/areaPassportInfectionsShort/items" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Method 1 - Request 1" id="24b79e06-4a44-413a-97f0-ca95d3980b49" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-AUTHENTICATION-TOKEN" value="YWRtaW4kJCQxfDIwMjMtMDItMjhUMTE6MzA6NDkuODEzMDE3fDZiZjcwZGI0OWNlMjk3ZDg3ZDUyNzY4YzQ4Njk2Zjg5" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://ehr-index.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/api/rest/v1/dictionary/lpu/items</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="1a7acffe-0c1d-47be-89d5-3d997d425244" name="Таблицы"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7a569910-3034-4a7b-853b-4e798d8a6128" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Method 1 - Request 1" id="2dc38f92-a5e7-4a09-b84b-2690eb68c7eb"><con:settings/><con:config service="http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru" resourcePath="/_mappings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Method 1 - Request 1" id="d7c1c193-5d39-4113-9626-cebcc334e8c6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://ehr-index-elasticsearch.vacregistry.test.emias.mos.ru/default_vaccination/_mappings</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>bootstrapServers</con:name><con:value>10.2.172.24:9092</con:value></con:property><con:property><con:name>dbType</con:name><con:value>postgre</con:value></con:property><con:property><con:name>dbLogin</con:name><con:value>dn</con:value></con:property><con:property><con:name>dbPassword</con:name><con:value>dn</con:value></con:property><con:property><con:name>dbConnect</con:name><con:value>10.2.172.90:5432/dn</con:value></con:property><con:property><con:name>elastic</con:name><con:value>http://ehr-index-elasticsearch.svc-emias-registry.test.emias.mos.ru/vaccination_vaccination/_search</con:value></con:property><con:property><con:name>patientId</con:name><con:value>1120</con:value></con:property><con:property><con:name>limit</con:name><con:value>100</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/><con:sensitiveInformation/></con:soapui-project>