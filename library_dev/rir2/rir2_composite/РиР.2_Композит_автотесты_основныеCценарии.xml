<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="24d0106d-e9f1-4fe6-933b-5e907cee0d48" activeEnvironment="Default" name="РиР.2_Композит_автотесты_основныеCценарии" resourceRoot="" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="487c1583-860f-449e-924f-17edb2dffe89" wsaVersion="NONE" name="scheduleSynchronizationServiceBinding" type="wsdl" bindingName="{http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/}scheduleSynchronizationServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://rir2composite.test.emias.mos.ru/api/Schedule?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://rir2composite.test.emias.mos.ru/api/Schedule?wsdl"><con:part><con:url>http://rir2composite.test.emias.mos.ru/api/Schedule?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="scheduleSynchronizationService" targetNamespace="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:tns="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:ns1="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:ns="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:core="http://emias.mos.ru/supp/rir2/core/v1/">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.userContext.xsd"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.faults.xsd"/>
      <xs:import namespace="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=supp.rir2.scheduleSynchronizationService.v1.types.xsd"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="createScheduleForHeadInput">
    <wsdl:part element="ns1:createScheduleForHeadRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createScheduleForBranchInput">
    <wsdl:part element="ns1:createScheduleForBranchRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createScheduleForBranchOutput">
    <wsdl:part element="ns1:createScheduleForBranchResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateScheduleForBranchOutput">
    <wsdl:part element="ns1:updateScheduleForBranchResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateScheduleForHeadOutput">
    <wsdl:part element="ns1:updateScheduleForHeadResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduleForBranchOutput">
    <wsdl:part element="ns1:deleteScheduleForBranchResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deactivateScheduleForHeadOutput">
    <wsdl:part element="ns1:deactivateScheduleForHeadResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deactivateScheduleForHeadInput">
    <wsdl:part element="ns1:deactivateScheduleForHeadRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateScheduleForBranchOutput">
    <wsdl:part element="ns1:activateScheduleForBranchResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateScheduleForBranchInput">
    <wsdl:part element="ns1:activateScheduleForBranchRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createScheduleForHeadOutput">
    <wsdl:part element="ns1:createScheduleForHeadResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduleForHeadInput">
    <wsdl:part element="ns1:deleteScheduleForHeadRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateScheduleForHeadOutput">
    <wsdl:part element="ns1:activateScheduleForHeadResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduleForHeadOutput">
    <wsdl:part element="ns1:deleteScheduleForHeadResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyScheduleInput">
    <wsdl:part element="ns1:copyScheduleRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateScheduleForHeadInput">
    <wsdl:part element="ns1:updateScheduleForHeadRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateScheduleForBranchInput">
    <wsdl:part element="ns1:updateScheduleForBranchRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduleForBranchInput">
    <wsdl:part element="ns1:deleteScheduleForBranchRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deactivateScheduleForBranchOutput">
    <wsdl:part element="ns1:deactivateScheduleForBranchResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="copyScheduleOutput">
    <wsdl:part element="ns1:copyScheduleResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateScheduleForHeadInput">
    <wsdl:part element="ns1:activateScheduleForHeadRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deactivateScheduleForBranchInput">
    <wsdl:part element="ns1:deactivateScheduleForBranchRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="scheduleSynchronizationServicePortType">
    <wsdl:operation name="createScheduleForBranch">
      <wsdl:input message="ns:createScheduleForBranchInput"></wsdl:input>
      <wsdl:output message="ns:createScheduleForBranchOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateScheduleForBranch">
      <wsdl:input message="ns:updateScheduleForBranchInput"></wsdl:input>
      <wsdl:output message="ns:updateScheduleForBranchOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteScheduleForBranch">
      <wsdl:input message="ns:deleteScheduleForBranchInput"></wsdl:input>
      <wsdl:output message="ns:deleteScheduleForBranchOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateScheduleForBranch">
      <wsdl:input message="ns:activateScheduleForBranchInput"></wsdl:input>
      <wsdl:output message="ns:activateScheduleForBranchOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateScheduleForBranch">
      <wsdl:input message="ns:deactivateScheduleForBranchInput"></wsdl:input>
      <wsdl:output message="ns:deactivateScheduleForBranchOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createScheduleForHead">
      <wsdl:input message="ns:createScheduleForHeadInput"></wsdl:input>
      <wsdl:output message="ns:createScheduleForHeadOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateScheduleForHead">
      <wsdl:input message="ns:updateScheduleForHeadInput"></wsdl:input>
      <wsdl:output message="ns:updateScheduleForHeadOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteScheduleForHead">
      <wsdl:input message="ns:deleteScheduleForHeadInput"></wsdl:input>
      <wsdl:output message="ns:deleteScheduleForHeadOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateScheduleForHead">
      <wsdl:input message="ns:activateScheduleForHeadInput"></wsdl:input>
      <wsdl:output message="ns:activateScheduleForHeadOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateScheduleForHead">
      <wsdl:input message="ns:deactivateScheduleForHeadInput"></wsdl:input>
      <wsdl:output message="ns:deactivateScheduleForHeadOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copySchedule">
      <wsdl:input message="ns:copyScheduleInput"></wsdl:input>
      <wsdl:output message="ns:copyScheduleOutput"></wsdl:output>
      <wsdl:fault message="ns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="scheduleSynchronizationServiceBinding" type="ns:scheduleSynchronizationServicePortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="createScheduleForBranch">
      <soap:operation soapAction="createScheduleForBranch"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateScheduleForBranch">
      <soap:operation soapAction="updateScheduleForBranch"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteScheduleForBranch">
      <soap:operation soapAction="deleteScheduleForBranch"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateScheduleForBranch">
      <soap:operation soapAction="activateScheduleForBranch"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateScheduleForBranch">
      <soap:operation soapAction="deactivateScheduleForBranch"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createScheduleForHead">
      <soap:operation soapAction="createScheduleForHead"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateScheduleForHead">
      <soap:operation soapAction="updateScheduleForHead"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteScheduleForHead">
      <soap:operation soapAction="deleteScheduleForHead"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="activateScheduleForHead">
      <soap:operation soapAction="activateScheduleForHead"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deactivateScheduleForHead">
      <soap:operation soapAction="deactivateScheduleForHead"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="copySchedule">
      <soap:operation soapAction="copySchedule"/>
      <wsdl:input>
        <soap:header message="ns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="scheduleSynchronizationService">
    <wsdl:port binding="ns:scheduleSynchronizationServiceBinding" name="scheduleSynchronizationServicePort">
      <soap:address location="http://rir2composite.test.emias.mos.ru/api/Schedule"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.userContext.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:core="http://emias.mos.ru/system/v1/" xmlns="http://emias.mos.ru/system/v1/userContext/">
  <xs:include schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.xsd"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Роли пользователя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль пользователя"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>ИД Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.faults.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/system/v1/faults/">
  <xs:include schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.xsd"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.userContext.xsd"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=supp.rir2.scheduleSynchronizationService.v1.types.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by DIT (DIT)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:core="http://emias.mos.ru/supp/rir2/core/v1/" xmlns="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/">
  <xs:import namespace="http://emias.mos.ru/supp/rir2/core/v1/" schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=supp.rir2.core.v1.xsd"/>
  <xs:element name="scheduleIdRIR" type="core:ID"/>
  <xs:element name="scheduleIdRIR2" type="core:ID"/>
  <xs:element name="versionRIR" type="xs:long"/>
  <xs:element name="versionRIR2" type="xs:long"/>
  <xs:element name="scheduleRIR" type="VersionedSchedule"/>
  <xs:element name="scheduleRIR2" type="VersionedSchedule"/>
  <xs:complexType name="VersionedSchedule">
    <xs:complexContent>
      <xs:extension base="core:VersionedEntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CopyScheduleParams">
    <xs:annotation>
      <xs:documentation>Параметры копирования определений содержания Расписаний композитных ресурсов</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="arSchedulesParams">
        <xs:annotation>
          <xs:documentation>Параметры копирования определений содержания Расписаний ДР</xs:documentation>
        </xs:annotation>
        <xs:complexType/>
      </xs:element>
      <xs:element minOccurs="0" name="sarSchedulesParams">
        <xs:annotation>
          <xs:documentation>Параметры копирования определений содержания Расписаний СДР</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="sarScheduleRuleTypeKinds">
              <xs:annotation>
                <xs:documentation>Перечень видов Типов правил расписания СДР, подлежащих копированию</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element maxOccurs="3" name="sarScheduleRuleTypeKind" type="core:CopySarScheduleRuleTypeKinds">
                    <xs:annotation>
                      <xs:documentation>Вид Типов правил расписания СДР</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--requests & responses (methods to manage branches' shedules)-->
  <xs:element name="createScheduleForBranchRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода createScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:schedulePeriod"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="createScheduleForBranchResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода createScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="scheduleIdRIR"/>
        <xs:element ref="scheduleIdRIR2"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="updateScheduleForBranchRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода updateScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleRIR"/>
        <xs:element ref="scheduleRIR2"/>
        <xs:element ref="core:schedulePeriod"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="updateScheduleForBranchResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода updateScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="versionRIR"/>
        <xs:element ref="versionRIR2"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deleteScheduleForBranchRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода deleteScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleRIR"/>
        <xs:element ref="scheduleRIR2"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deleteScheduleForBranchResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода deleteScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="activateScheduleForBranchRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода activateScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleRIR"/>
        <xs:element ref="scheduleRIR2"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="activateScheduleForBranchResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода activateScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="deactivateScheduleForBranchRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода deactivateScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleRIR"/>
        <xs:element ref="scheduleRIR2"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deactivateScheduleForBranchResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода deactivateScheduleForBranch</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <!--requests & responses (methods to manage heads' shedules)-->
  <xs:element name="createScheduleForHeadRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода createScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:schedulePeriod"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="createScheduleForHeadResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода createScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="scheduleIdRIR"/>
        <xs:element ref="scheduleIdRIR2"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="updateScheduleForHeadRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода updateScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleRIR"/>
        <xs:element ref="scheduleRIR2"/>
        <xs:element ref="core:schedulePeriod"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="updateScheduleForHeadResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода updateScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="versionRIR"/>
        <xs:element ref="versionRIR2"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deleteScheduleForHeadRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода deleteScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleRIR"/>
        <xs:element ref="scheduleRIR2"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deleteScheduleForHeadResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода deleteScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="activateScheduleForHeadRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода activateScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleRIR"/>
        <xs:element ref="scheduleRIR2"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="activateScheduleForHeadResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода activateScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <xs:element name="deactivateScheduleForHeadRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода deactivateScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleRIR"/>
        <xs:element ref="scheduleRIR2"/>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="deactivateScheduleForHeadResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода deactivateScheduleForHead</xs:documentation>
    </xs:annotation>
    <xs:complexType/>
  </xs:element>
  <!--requests & responses (methods to copy schedules)-->
  <xs:element name="copyScheduleRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода copySchedule</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="core:medicalFacilityId"/>
        <xs:element ref="core:medicalOrganizationId"/>
        <xs:element ref="scheduleIdRIR"/>
        <xs:element ref="scheduleIdRIR2">
          <xs:annotation>
            <xs:documentation>Считаем, что расписания в РиР и РиР2 полностью синхронизированы</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="core:schedulePeriod"/>
        <xs:element minOccurs="0" name="params" type="CopyScheduleParams">
          <xs:annotation>
            <xs:documentation>Параметры копирования определений содержания Расписаний композитных ресурсов</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="copyScheduleResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода copySchedule</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="scheduleIdRIR"/>
        <xs:element minOccurs="0" ref="scheduleIdRIR2">
          <xs:annotation>
            <xs:documentation>ИД расписания в РиР2 известно только если оно создано, а не скопировано. В случае успешного копирования ИД расписания в РиР2 не передаётся!!!</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=supp.rir2.core.v1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/supp/rir2/core/v1/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://emias.mos.ru/supp/rir2/core/v1/">
  <xs:include schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.core.v1.xsd"/>
  <!--rules components-->
  <xs:complexType name="TreatmentsIdCollection">
    <xs:annotation>
      <xs:documentation>Коллекция идентификаторов Медицинских манипуляций</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="treatmentId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Медицинской манипуляции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RuleTimeInterval">
    <xs:annotation>
      <xs:documentation>Временной интервал Правила расписания</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:restriction base="TimeInterval">
        <xs:sequence>
          <xs:element name="start" type="xs:time">
            <xs:annotation>
              <xs:documentation>Время начала интервала</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="end" type="xs:time">
            <xs:annotation>
              <xs:documentation>Время окончания интервала</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="RuleTypeId">
    <xs:annotation>
      <xs:documentation>Идентификатор типа Правила расписания</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ID"/>
  </xs:simpleType>
  <xs:simpleType name="LocationId">
    <xs:annotation>
      <xs:documentation>Идентификатор локации</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ID"/>
  </xs:simpleType>
  <xs:complexType name="RuleDatePeriod">
    <xs:annotation>
      <xs:documentation>Период действия Правила расписания</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:restriction base="DatePeriod">
        <xs:sequence>
          <xs:element name="start" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата начала периода</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="end" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата окончания периода</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <!--excluded dates definition-->
  <xs:complexType name="ExcludedDates">
    <xs:annotation>
      <xs:documentation>Описание исключаемых дней</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="excludedDay" type="xs:date">
        <xs:annotation>
          <xs:documentation>Исключаемые даты</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isExcludedHoliday" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Исключая праздничные дни" (в соответствии с производственным календарем)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="7" minOccurs="0" name="excludedDayOfWeek" type="DayOfWeekNumber">
        <xs:annotation>
          <xs:documentation>Исключаемые дни недели</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--date templates definitions-->
  <xs:complexType name="DayOfMonthDatesTemplate">
    <xs:annotation>
      <xs:documentation>Шаблон дат "Ежемесячно в заданные даты каждого календарного месяца"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DatesTemplate">
        <xs:sequence>
          <xs:element maxOccurs="31" name="dayOfMonth" type="DayOfMonthNumber">
            <xs:annotation>
              <xs:documentation>Номер дня месяца (число от 1 до 31)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DayOfWeekByMonthDatesTemplate">
    <xs:annotation>
      <xs:documentation>Шаблон дат "Ежемесячно по дням недели" (например, каждый 3-й понедельник месяца)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DatesTemplate">
        <xs:sequence>
          <xs:element maxOccurs="5" name="week" type="WeekOfMonthNumber">
            <xs:annotation>
              <xs:documentation>Номер недели месяца (число от 1 до 5)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="dayOfWeek" type="DayOfWeekNumber">
            <xs:annotation>
              <xs:documentation>Номер дня недели (число от 1 до 7)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SpecialDayDatesTemplate">
    <xs:annotation>
      <xs:documentation>Шаблон дат "В конкретные даты" (например, 25 января 2015 года и т. д)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DatesTemplate">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="day" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EvenDatesTemplate">
    <xs:annotation>
      <xs:documentation>Шаблон дат "По четным или нечетным числам"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DatesTemplate">
        <xs:sequence>
          <xs:element name="isEven" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак «Четные числа»</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DayOfWeekDatesTemplate">
    <xs:annotation>
      <xs:documentation>Шаблон дат "По дням недели"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="DatesTemplate">
        <xs:sequence>
          <xs:element maxOccurs="7" name="dayOfWeek" type="DayOfWeekNumber">
            <xs:annotation>
              <xs:documentation>Номер дня недели (число от 1 до 7)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="DatesTemplate">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип описания Шаблона дат</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--templates components-->
  <xs:simpleType name="DayOfWeekNumber">
    <xs:annotation>
      <xs:documentation>Номер дня недели</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:unsignedByte">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="7"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DayOfMonthNumber">
    <xs:annotation>
      <xs:documentation>Номер дня месяца</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:unsignedByte">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="31"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="WeekOfMonthNumber">
    <xs:annotation>
      <xs:documentation>Номер недели месяца</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:unsignedByte">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="5"/>
    </xs:restriction>
  </xs:simpleType>
  <!--composite resources schedule-->
  <xs:complexType name="CompositeResourceSchedule">
    <xs:annotation>
      <xs:documentation>Сущность "Расписание композитного ресурса"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ResourceScheduleBase">
        <xs:sequence>
          <xs:element name="compositeResource" type="CompositeResource">
            <xs:annotation>
              <xs:documentation>Композитный ресурс</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CompositeResourceScheduleInfo">
    <xs:annotation>
      <xs:documentation>Сведения о Расписании композитного ресурса</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ResourceScheduleBase">
        <xs:sequence>
          <xs:element name="scheduleInfo">
            <xs:annotation>
              <xs:documentation>Сведения о Расписании МО/МУ, которому принадлежит Расписание СДР</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element ref="schedulePeriod"/>
                <xs:element ref="scheduleActiveState"/>
              </xs:sequence>
              <xs:attribute name="isLocked" type="xs:boolean" use="optional">
                <xs:annotation>
                  <xs:documentation>Признак блокировки Расписания МО/МУ, определяющий невозможность внесения изменений в определение его содержания</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ResourceScheduleBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания сущности "Расписание композитного ресурса"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="VersionedEntityBase">
        <xs:sequence>
          <xs:element ref="resourceScheduleStatus">
            <xs:annotation>
              <xs:documentation>Статус</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="completeness" type="xs:unsignedByte">
            <xs:annotation>
              <xs:documentation>Полнота расписания</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="resourceScheduleStatus" type="ResourceScheduleStatuses">
    <xs:annotation>
      <xs:documentation>Статус Расписания композитного ресурса</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:simpleType name="ResourceScheduleStatuses">
    <xs:annotation>
      <xs:documentation>Статусы Расписания композитного ресурса</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="NOT_DEFINED"/>
      <xs:enumeration value="DIRTY"/>
      <xs:enumeration value="READY"/>
      <xs:enumeration value="CALCULATION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CopySarScheduleRuleTypeKinds">
    <xs:annotation>
      <xs:documentation>Виды Типов правил расписания СДР подлежащих копированию</xs:documentation>
    </xs:annotation>
    <xs:restriction base="SarScheduleRuleTypeKinds">
      <xs:enumeration value="REJECTION"/>
      <xs:enumeration value="TREATMENT_REDEFINITION"/>
      <xs:enumeration value="AGE_GROUP_RESTRICTION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SarScheduleRuleTypeKinds">
    <xs:annotation>
      <xs:documentation>Виды Типов правил расписания СДР</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="WORK_TIME_DEFINITION"/>
      <xs:enumeration value="REJECTION"/>
      <xs:enumeration value="TREATMENT_REDEFINITION"/>
      <xs:enumeration value="AGE_GROUP_RESTRICTION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CopyArScheduleRuleTypeKinds">
    <xs:annotation>
      <xs:documentation>Виды Типов правил расписания ДР подлежащих копированию</xs:documentation>
    </xs:annotation>
    <xs:restriction base="ArScheduleRuleTypeKinds">
      <xs:enumeration value="REJECTION"/>
      <xs:enumeration value="TREATMENT_REDEFINITION"/>
      <xs:enumeration value="AGE_GROUP_RESTRICTION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ArScheduleRuleTypeKinds">
    <xs:annotation>
      <xs:documentation>Виды Типов правил расписания ДР</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="WORK_TIME_DEFINITION"/>
      <xs:enumeration value="REJECTION"/>
      <xs:enumeration value="TREATMENT_REDEFINITION"/>
      <xs:enumeration value="AGE_GROUP_RESTRICTION"/>
      <xs:enumeration value="LOCATION_REDEFINITION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--composite resources-->
  <xs:complexType name="SpecialAvailableResource">
    <xs:annotation>
      <xs:documentation>Сущность "Специальный доступный ресурс"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ResourceBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="parent" type="TreatmentRoom">
            <xs:annotation>
              <xs:documentation>Родительская сущность "Специализированный кабинет"</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="SPECIAL_AVAILABLE_RESOURCE" name="kind" type="ResourceKinds" use="required">
          <xs:annotation>
            <xs:documentation>Вид Композитного ресурса</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AvailableResource">
    <xs:annotation>
      <xs:documentation>Сущность "Доступный ресурс"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ResourceBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="parent" type="JobExecution">
            <xs:annotation>
              <xs:documentation>Родительская сущность "Исполнение должности"</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="AVAILABLE_RESOURCE" name="kind" type="ResourceKinds" use="required">
          <xs:annotation>
            <xs:documentation>Вид Композитного ресурса</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CompositeResource">
    <xs:annotation>
      <xs:documentation>Сущность "Композитный ресурс"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ResourceBase">
        <xs:sequence>
          <xs:element minOccurs="0" name="info" type="CompositeResourceInfo">
            <xs:annotation>
              <xs:documentation>Сведения о Композитном ресурсе</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CompositeResourceInfo">
    <xs:annotation>
      <xs:documentation>Сведения о Композитном ресурсе</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="resourceKind">
        <xs:annotation>
          <xs:documentation>Вид Композитного ресурса</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="parentId" type="ID">
        <xs:annotation>
          <xs:documentation>Хранит идентификатор сущности, принадлежащей ЕМИАС.СКУУ.СВМР, на основании которой был сформирован Композитный ресурс.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="type" type="CompositeResourceType">
        <xs:annotation>
          <xs:documentation>Тип Композитного ресурса</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="specialization" type="Specialization">
        <xs:annotation>
          <xs:documentation>Специализация Композитного ресурса</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="medicalOrganizationId">
        <xs:annotation>
          <xs:documentation>Идентификатор МО, которой принадлежит Композитный ресурс</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="department" type="Department">
        <xs:annotation>
          <xs:documentation>Структурное подразделение МО, которому принадлежит Композитный ресурс</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="functionTitle" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование функции Композитного ресурса</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="functionVolume" type="xs:float">
        <xs:annotation>
          <xs:documentation>Объем функции Композитного ресурса</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="medicalFacilityId">
        <xs:annotation>
          <xs:documentation>Идентификатор МУ, которому принадлежит Композитный ресурс</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="location" type="Location">
        <xs:annotation>
          <xs:documentation>Локация, связанная с Композитным ресурсом</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CompositeResourceType">
    <xs:annotation>
      <xs:documentation>Сведения о типе Композитного ресурса</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:restriction base="NsiBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="ID" use="required">
          <xs:annotation>
            <xs:documentation>Идентификатор</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="archived" type="xs:boolean" use="prohibited">
          <xs:annotation>
            <xs:documentation>Признак "Архивная запись"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ResourceBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания сущности "Композитный ресурс"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="syncStatus" type="ResourceSyncStatuses">
            <xs:annotation>
              <xs:documentation>Статус синхронизации</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="parameters" type="ResourceParameterCollection">
            <xs:annotation>
              <xs:documentation>Параметры</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="archived" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ResourceParameterCollection">
    <xs:annotation>
      <xs:documentation>Коллекция Параметров ресурса</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="parameter" type="ResourceParameter">
        <xs:annotation>
          <xs:documentation>Параметр ресурса</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResourceParameter">
    <xs:annotation>
      <xs:documentation>Параметр ресурса</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="KeyValuePair">
        <xs:attribute name="ownerSystemName" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Владелец параметра (шифр системы-потребителя, породившего параметр)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="resourceKind" type="ResourceKinds">
    <xs:annotation>
      <xs:documentation>Вид Композитного ресурса</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:simpleType name="ResourceKinds">
    <xs:annotation>
      <xs:documentation>Виды Композитного ресурса</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="AVAILABLE_RESOURCE"/>
      <xs:enumeration value="SPECIAL_AVAILABLE_RESOURCE"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ResourceSyncStatuses">
    <xs:annotation>
      <xs:documentation>Статусы синхронизации Композитных ресурсов</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="IN_PROGRESS"/>
      <xs:enumeration value="PROCESSING"/>
      <xs:enumeration value="OK"/>
      <xs:enumeration value="ERROR"/>
    </xs:restriction>
  </xs:simpleType>
  <!--MO/MU shedule and its components-->
  <xs:complexType name="Schedule">
    <xs:annotation>
      <xs:documentation>Сущность "Расписаниие МО/МУ"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="VersionedEntityBase">
        <xs:sequence>
          <xs:element ref="medicalFacilityId"/>
          <xs:element ref="schedulePeriod"/>
          <xs:element ref="scheduleActiveState"/>
        </xs:sequence>
        <xs:attribute name="isMo" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Признак принадлежности расписания МО</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="isLocked" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Признак блокировки Расписания МО/МУ, определяющий невозможность внесения изменений в определение его содержания</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="scheduleId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Расписания МО/МУ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="scheduleActiveState" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>Статус "Действующее" для Расписания МО/МУ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="schedulePeriod" type="SchedulePeriod">
    <xs:annotation>
      <xs:documentation>Период действия Расписания МО/МУ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SchedulePeriod">
    <xs:annotation>
      <xs:documentation>Период действия Расписания МО/МУ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:restriction base="DatePeriod">
        <xs:sequence>
          <xs:element name="start" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата начала периода</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="end" type="xs:date">
            <xs:annotation>
              <xs:documentation>Дата окончания периода</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  <!--business entities which belong to SVMR and their components-->
  <xs:complexType name="TreatmentRoom">
    <xs:annotation>
      <xs:documentation>Сущность "Специализированный кабинет"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="treatmentRoomKind" type="TreatmentRoomKind">
            <xs:annotation>
              <xs:documentation>Вид специализированного  кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="treatmentRoomProfile" type="TreatmentRoomProfile">
            <xs:annotation>
              <xs:documentation>Профиль специализированного кабинета</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="specialization" type="Specialization">
            <xs:annotation>
              <xs:documentation>Специализация</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="medicalOrganizationId"/>
          <xs:element ref="medicalFacilityId"/>
          <xs:element name="department" type="Department">
            <xs:annotation>
              <xs:documentation>Структурное подразделение МО</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="location" type="Location">
            <xs:annotation>
              <xs:documentation>Локация</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="treatments">
            <xs:annotation>
              <xs:documentation>Коллекция Медицинских манипуляций</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="treatment">
                  <xs:annotation>
                    <xs:documentation>Медицинская манипуляция</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="info" type="Treatment">
                        <xs:annotation>
                          <xs:documentation>Сведения о Медицинской манипуляции</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="useByDefault" type="xs:boolean">
                        <xs:annotation>
                          <xs:documentation>Признак "Использовать по умолчанию" в определении Правила рабочего времени.</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="equipments">
            <xs:annotation>
              <xs:documentation>Коллекция единиц оборудования</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="equipment" type="Equipment">
                  <xs:annotation>
                    <xs:documentation>Единица оборудования</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JobExecution">
    <xs:annotation>
      <xs:documentation>Сущность "Исполнение должности"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование должности в ЕМИАС.СКУУ.СВМР</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="nomId" type="ID">
            <xs:annotation>
              <xs:documentation>Идентификатор должности (в соответствии с Номенклатурой должностей медицинских организаций)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="employee" type="Employee">
            <xs:annotation>
              <xs:documentation>Сведения о работнике МО</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="jobExecutionVolume" type="xs:float">
            <xs:annotation>
              <xs:documentation>Ставка</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="jobExecutionPeriod">
            <xs:annotation>
              <xs:documentation>Период исполнения должности</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:complexContent>
                <xs:restriction base="DatePeriod">
                  <xs:sequence>
                    <xs:element name="start" type="xs:date">
                      <xs:annotation>
                        <xs:documentation>Дата начала периода</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element minOccurs="0" name="end" type="xs:date">
                      <xs:annotation>
                        <xs:documentation>Дата окончания периода</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:sequence>
                </xs:restriction>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element ref="medicalOrganizationId"/>
          <xs:element name="department" type="Department">
            <xs:annotation>
              <xs:documentation>Структурное подразделение МО</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="specialization" type="Specialization">
            <xs:annotation>
              <xs:documentation>Специализация</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="maternityLeave" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак "Декретный отпуск"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="defaultMedicalFacilityId" type="ID">
            <xs:annotation>
              <xs:documentation>Идентификатор МУ в котором "по умолчанию" осуществляется деятельность работника</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="defaultLocation" type="Location">
            <xs:annotation>
              <xs:documentation>Локация, в которой "по умолчанию" осуществляется деятельность работника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Location">
    <xs:annotation>
      <xs:documentation>Сущность "Локация"</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="roomTitle" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование кабинета (номер на табличке двери кабинета)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stage" type="xs:short">
            <xs:annotation>
              <xs:documentation>Этаж, на котором располагается Локация</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="subBuilding" type="xs:string">
            <xs:annotation>
              <xs:documentation>Корпус (строение) - используется в случае, если по адресу Адресного объекта располагается несколько "корпусов"</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="building" type="Building">
            <xs:annotation>
              <xs:documentation>Сведения об Адресном объекте</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="specialization" type="Specialization">
            <xs:annotation>
              <xs:documentation>Специализация</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element ref="medicalFacilityId">
            <xs:annotation>
              <xs:documentation>Идентификатор МУ, которому принадлежит Локация</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый тип для сущностей ЕМИАС.СКУУ.СВМР</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase">
        <xs:attribute name="archived" type="xs:boolean" use="optional">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Equipment">
    <xs:annotation>
      <xs:documentation>Оборудование</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование оборудования в ЕМИАС.СКУУ.СВМР</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Department">
    <xs:annotation>
      <xs:documentation>Структурное подразделение</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование структурного подразделения МО в ЕМИАС.СКУУ.СВМР</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="nomId" type="ID">
            <xs:annotation>
              <xs:documentation>Идентификатор структурного подразделения (в соответствии с Номенклатурой структурных подразделений медицинских организаций)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Employee">
    <xs:annotation>
      <xs:documentation>Сведения о работнике МО</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase">
        <xs:sequence>
          <xs:element name="snils" type="xs:string">
            <xs:annotation>
              <xs:documentation>СНИЛС</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="lastName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Фамилия</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="firstName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Имя</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="middleName" type="xs:string">
            <xs:annotation>
              <xs:documentation>Отчество</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Building">
    <xs:annotation>
      <xs:documentation>Адресный объект</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase">
        <xs:sequence>
          <xs:element name="buildingAddress" type="xs:string">
            <xs:annotation>
              <xs:documentation>Строковое представление адреса Адресного объекта</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый тип для компонентов сущностей ЕМИАС.СКУУ.СВМР</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор (совпадает с идентификатором с ЕМИАС.СКУУ.СВМР)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--nsi-->
  <xs:complexType name="Treatment">
    <xs:annotation>
      <xs:documentation>Медицинская манипуляция</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TreatmentRoomProfile">
    <xs:annotation>
      <xs:documentation>Профиль специализированного кабинета</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TreatmentRoomKind">
    <xs:annotation>
      <xs:documentation>Вид специализированного кабинета</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Specialization">
    <xs:annotation>
      <xs:documentation>Специализация</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый тип для справочников</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="title" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="archived" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Признак "Архивная запись"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--base types and elements-->
  <xs:element name="entityVersion" type="xs:long">
    <xs:annotation>
      <xs:documentation>Версия сущности ЕМИАС.СУПП.РиР</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="VersionedEntityBase">
    <xs:annotation>
      <xs:documentation>Версионированная сущность ЕМИАС.СУПП.РиР</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase">
        <xs:attribute name="version" type="xs:long" use="required">
          <xs:annotation>
            <xs:documentation>Версия сущности</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовая сущность ЕМИАС.СУПП.РиР</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор сущности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:element name="warnings" type="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений (предупреждений) об ошибках</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="ProcessingResultBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, определяющий результат выполнения операции обработки сущностей или их компонентов</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="succeededNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество обработанных сущностей (или компоненотов сущности)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="totalNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Общее количество сущностей (или компонентов сущности), подлежащих обработке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.core.v1.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://rir2composite.test.emias.mos.ru/api/Schedule?xsd=emias.system.v1.xsd"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint></con:endpoints><con:operation id="82e14b5f-aae7-4502-abdc-97906fe5fd87" isOneWay="false" action="activateScheduleForBranch" name="activateScheduleForBranch" bindingOperationName="activateScheduleForBranch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5ef7bd05-8d0c-4d7c-9751-500ba427ad90" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
     <user:userContext>
     <user:systemName>KPI_APC_METHODIST</user:systemName>
         <user:userName>HAdiatullina</user:userName>
         <user:userRoleId>7014</user:userRoleId>
         <user:userRights>
      </user:userRights>
         <user:jobExecutionId>112740</user:jobExecutionId>
      </user:userContext>
   <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
    <wsse:Username>KPI_APC_METHODIST/HAdiatullina</wsse:Username>
   </wsse:UsernameToken>
  </wsse:Security></soap:Header>
   <soap:Body>
      <typ:activateScheduleForBranchRequest>
         <v1:medicalFacilityId>10000456</v1:medicalFacilityId>
         <v1:medicalOrganizationId>141</v1:medicalOrganizationId>
         <typ:scheduleRIR id="22067458" version="1"/>
         <typ:scheduleRIR2 id="13515906" version="3"/>
      </typ:activateScheduleForBranchRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/activateScheduleForBranchRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e6d44d21-4831-4e8f-911c-753c2831d4d4" name="ОТРАБОТАВШИЙ activateScheduleForBranch!!"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>KPI_APC_METHODIST</user:systemName>\r
         <user:userName>AnGordeev</user:userName>\r
         <user:userRoleId>4</user:userRoleId>\r
         <user:userRights></user:userRights>\r
         <user:jobExecutionId>10992269</user:jobExecutionId>\r
      </user:userContext>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>KPI_APC_METHODIST/AnGordeev</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:activateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>10000456</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>141</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="22067458" version="1"/>\r
         <typ:scheduleRIR2 id="13515906" version="1"/>\r
      </typ:activateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/activateScheduleForBranchRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2dbdc4c5-2e88-4642-90e8-9bf0f3db24c7" name="Request 3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
      <user:userContext>
         <user:systemName>?</user:systemName>
         <user:userName>?</user:userName>
         <user:userRoleId>?</user:userRoleId>
         <user:userRights>
            </user:userRights>
         <user:jobExecutionId>?</user:jobExecutionId>
      </user:userContext>
   <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
    <wsse:Username>KPI_APC_METHODIST/HAdiatullina</wsse:Username>
   </wsse:UsernameToken>
  </wsse:Security></soap:Header>
   <soap:Body>
      <typ:activateScheduleForBranchRequest>
         <v1:medicalFacilityId>?</v1:medicalFacilityId>
         <v1:medicalOrganizationId>?</v1:medicalOrganizationId>
         <typ:scheduleRIR id="?" version="?"/>
         <typ:scheduleRIR2 id="?" version="?"/>
      </typ:activateScheduleForBranchRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/activateScheduleForBranchRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2d05f7ec-87a7-4280-a9d0-23496d1f2dce" name="Request 4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>KPI_APC_METHODIST</user:systemName>\r
         <user:userName>AnGordeev</user:userName>\r
         <user:userRoleId>4</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>10992269</user:jobExecutionId>\r
      </user:userContext>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>KPI_APC_METHODIST/AnGordeev</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:activateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>141</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>141</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="23523983" version="0"/>\r
         <typ:scheduleRIR2 id="13986955" version="1"/>\r
      </typ:activateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/activateScheduleForBranchRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="186f270a-e1d8-48fa-ac05-b19dc5a084a0" isOneWay="false" action="activateScheduleForHead" name="activateScheduleForHead" bindingOperationName="activateScheduleForHead" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dec668aa-f4ee-4f22-9e21-d4f9adb27caa" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
     <user:userContext>
     <user:systemName>KPI_APC_METHODIST</user:systemName>
         <user:userName>HAdiatullina</user:userName>
         <user:userRoleId>7014</user:userRoleId>
         <user:userRights>
      </user:userRights>
         <user:jobExecutionId>112740</user:jobExecutionId>
      </user:userContext>
   <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
    <wsse:Username>KPI_APC_METHODIST/HAdiatullina</wsse:Username>
   </wsse:UsernameToken>
  </wsse:Security></soap:Header>
   <soap:Body>
      <typ:activateScheduleForHeadRequest>
         <v1:medicalFacilityId>141</v1:medicalFacilityId>
         <v1:medicalOrganizationId>141</v1:medicalOrganizationId>
         <typ:scheduleRIR id="22254008" version="2"/>
         <typ:scheduleRIR2 id="13986955" version="2"/>
      </typ:activateScheduleForHeadRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/activateScheduleForHeadRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="95c98ff6-1e44-41c4-bd4e-1e8c70eb059e" isOneWay="false" action="copySchedule" name="copySchedule" bindingOperationName="copySchedule" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7d820302-d283-40f0-a868-8f2001a54393" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
      <user:userContext>
         <user:systemName>?</user:systemName>
         <user:userName>?</user:userName>
         <user:userRoleId>?</user:userRoleId>
         <user:userRights>
            </user:userRights>
         <user:jobExecutionId>?</user:jobExecutionId>
      </user:userContext>
   </soap:Header>
   <soap:Body>
      <typ:copyScheduleRequest>
         <v1:medicalFacilityId>?</v1:medicalFacilityId>
         <v1:medicalOrganizationId>?</v1:medicalOrganizationId>
         <typ:scheduleIdRIR>?</typ:scheduleIdRIR>
         <typ:scheduleIdRIR2>?</typ:scheduleIdRIR2>
         <v1:schedulePeriod>
            <v1:start>?</v1:start>
            <v1:end>?</v1:end>
         </v1:schedulePeriod>
      </typ:copyScheduleRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/copyScheduleRequest"/></con:call></con:operation><con:operation id="f10d6883-4793-432d-ace6-4aba80684655" isOneWay="false" action="createScheduleForBranch" name="createScheduleForBranch" bindingOperationName="createScheduleForBranch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="58bfe3d1-7e11-4b93-b362-82e0688fe324" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
<user:userContext>
         <user:systemName>KPI_APC_METHODIST</user:systemName>
         <user:userName>AnGordeev</user:userName>
         <user:userRoleId>4</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>10992269</user:jobExecutionId>
      </user:userContext>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>KPI_APC_METHODIST/AnGordeev</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:createScheduleForBranchRequest>
         <v1:medicalOrganizationId>141</v1:medicalOrganizationId>
         <v1:medicalFacilityId>149</v1:medicalFacilityId>
         <v1:schedulePeriod>
            <v1:start>2021-02-12</v1:start>
            <v1:end>2021-02-28</v1:end>
         </v1:schedulePeriod>
      </typ:createScheduleForBranchRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/createScheduleForBranchRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6ab15840-7039-43b0-ba4a-6002b339b394" isOneWay="false" action="createScheduleForHead" name="createScheduleForHead" bindingOperationName="createScheduleForHead" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="32f3cff9-a361-4886-a330-3b4b4cdf7d78" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
     <user:userContext>
     <user:systemName>KPI_APC_METHODIST</user:systemName>
         <user:userName>HAdiatullina</user:userName>
         <user:userRoleId>7014</user:userRoleId>
         <user:userRights>
      </user:userRights>
         <user:jobExecutionId>112740</user:jobExecutionId>
      </user:userContext>
   <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
    <wsse:Username>KPI_APC_METHODIST/HAdiatullina</wsse:Username>
   </wsse:UsernameToken>
  </wsse:Security></soap:Header>
   <soap:Body>
      <typ:createScheduleForHeadRequest>
         <v1:medicalOrganizationId>10000299</v1:medicalOrganizationId>
         <v1:medicalFacilityId>10000299</v1:medicalFacilityId>
         <v1:schedulePeriod>
            <v1:start>2021-02-01</v1:start>
            <v1:end>2021-02-28</v1:end>
         </v1:schedulePeriod>
      </typ:createScheduleForHeadRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/createScheduleForHeadRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="80133e0e-b202-40d1-8dba-31f02840211b" isOneWay="false" action="deactivateScheduleForBranch" name="deactivateScheduleForBranch" bindingOperationName="deactivateScheduleForBranch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="02e27468-3626-4c5e-a660-bc92f618ef76" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
      <user:userContext>
         <user:systemName>?</user:systemName>
         <user:userName>?</user:userName>
         <user:userRoleId>?</user:userRoleId>
         <user:userRights>
            </user:userRights>
         <user:jobExecutionId>?</user:jobExecutionId>
      </user:userContext>
   </soap:Header>
   <soap:Body>
      <typ:deactivateScheduleForBranchRequest>
         <v1:medicalFacilityId>?</v1:medicalFacilityId>
         <v1:medicalOrganizationId>?</v1:medicalOrganizationId>
         <typ:scheduleRIR id="?" version="?"/>
         <typ:scheduleRIR2 id="?" version="?"/>
      </typ:deactivateScheduleForBranchRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/deactivateScheduleForBranchRequest"/></con:call><con:call id="40fc90d8-d491-4889-aa7f-6a5d95911d74" name="COMP_deactivateScheduleForBranch_T"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
     <user:userContext>
         <user:systemName>KPI_APC_METHODIST</user:systemName>
         <user:userName>AnGordeev</user:userName>
         <user:userRoleId>4</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>10992269</user:jobExecutionId>
      </user:userContext>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>KPI_APC_METHODIST/AnGordeev</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>\r
   <soap:Body>\r
      <typ:deactivateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>141</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>141</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="22254008" version="1"/>\r
         <typ:scheduleRIR2 id="13986955" version="4"/>\r
      </typ:deactivateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/deactivateScheduleForBranchRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="6f2a2c36-bcae-4c77-a83c-573363ea98d2" isOneWay="false" action="deactivateScheduleForHead" name="deactivateScheduleForHead" bindingOperationName="deactivateScheduleForHead" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6d817ba4-eac0-4f1e-8321-382e03e20a37" name="COMP_deactivateScheduleForHead"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
     <user:userContext>
         <user:systemName>KPI_APC_METHODIST</user:systemName>
         <user:userName>AnGordeev</user:userName>
         <user:userRoleId>4</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>10992269</user:jobExecutionId>
      </user:userContext>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>KPI_APC_METHODIST/AnGordeev</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:deactivateScheduleForHeadRequest>
         <v1:medicalFacilityId>141</v1:medicalFacilityId>
         <v1:medicalOrganizationId>141</v1:medicalOrganizationId>
         <typ:scheduleRIR id="22254008" version="3"/>
         <typ:scheduleRIR2 id="13986955" version="3"/>
      </typ:activateScheduleForHeadRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/deactivateScheduleForHeadRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="14ddce31-26a0-4fe7-b65f-f621dc0ee6da" isOneWay="false" action="deleteScheduleForBranch" name="deleteScheduleForBranch" bindingOperationName="deleteScheduleForBranch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b33f4f3b-6ecc-4e87-abc1-066b2be5a993" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
      <user:userContext>
         <user:systemName>?</user:systemName>
         <user:userName>?</user:userName>
         <user:userRoleId>?</user:userRoleId>
         <user:userRights>
            </user:userRights>
         <user:jobExecutionId>?</user:jobExecutionId>
      </user:userContext>
   </soap:Header>
   <soap:Body>
      <typ:deleteScheduleForBranchRequest>
         <v1:medicalFacilityId>?</v1:medicalFacilityId>
         <v1:medicalOrganizationId>?</v1:medicalOrganizationId>
         <typ:scheduleRIR id="?" version="?"/>
         <typ:scheduleRIR2 id="?" version="?"/>
      </typ:deleteScheduleForBranchRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/deleteScheduleForBranchRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="548279ab-058e-434d-b1e7-fb96a49d42af" isOneWay="false" action="deleteScheduleForHead" name="deleteScheduleForHead" bindingOperationName="deleteScheduleForHead" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="43c7c18c-2893-42b4-87d2-f1d8b2161552" name="COMP_deleteScheduleForHead"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
      <user:userContext>
         <user:systemName>KPI_APC_METHODIST</user:systemName>
         <user:userName>AnGordeev</user:userName>
         <user:userRoleId>4</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>10992269</user:jobExecutionId>
      </user:userContext>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>KPI_APC_METHODIST/AnGordeev</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <typ:deleteScheduleForHeadRequest>
        <v1:medicalFacilityId>141</v1:medicalFacilityId>
         <v1:medicalOrganizationId>141</v1:medicalOrganizationId>
         <typ:scheduleRIR id="22254008" version="4"/>
         <typ:scheduleRIR2 id="13986955" version="4"/>
      </typ:deleteScheduleForHeadRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/deleteScheduleForHeadRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e0558180-27a9-4fae-aad0-e712c00f70f2" isOneWay="false" action="updateScheduleForBranch" name="updateScheduleForBranch" bindingOperationName="updateScheduleForBranch" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2ee36aa4-6288-4a24-bbc8-a0df7514a42c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
      <user:userContext>
         <user:systemName>?</user:systemName>
         <user:userName>?</user:userName>
         <user:userRoleId>?</user:userRoleId>
         <user:userRights>
            </user:userRights>
         <user:jobExecutionId>?</user:jobExecutionId>
      </user:userContext>
   </soap:Header>
   <soap:Body>
      <typ:updateScheduleForBranchRequest>
         <v1:medicalFacilityId>?</v1:medicalFacilityId>
         <v1:medicalOrganizationId>?</v1:medicalOrganizationId>
         <typ:scheduleRIR id="?" version="?"/>
         <typ:scheduleRIR2 id="?" version="?"/>
         <v1:schedulePeriod>
            <v1:start>?</v1:start>
            <v1:end>?</v1:end>
         </v1:schedulePeriod>
      </typ:updateScheduleForBranchRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/updateScheduleForBranchRequest"/></con:call></con:operation><con:operation id="59298406-ac82-461b-ac98-300dbbba370f" isOneWay="false" action="updateScheduleForHead" name="updateScheduleForHead" bindingOperationName="updateScheduleForHead" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3f4ce90d-18c9-4826-aec7-27911bf3a97b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">
   <soap:Header>
      <user:userContext>
         <user:systemName>?</user:systemName>
         <user:userName>?</user:userName>
         <user:userRoleId>?</user:userRoleId>
         <user:userRights>
            </user:userRights>
         <user:jobExecutionId>?</user:jobExecutionId>
      </user:userContext>
   </soap:Header>
   <soap:Body>
      <typ:updateScheduleForHeadRequest>
         <v1:medicalFacilityId>?</v1:medicalFacilityId>
         <v1:medicalOrganizationId>?</v1:medicalOrganizationId>
         <typ:scheduleRIR id="?" version="?"/>
         <typ:scheduleRIR2 id="?" version="?"/>
         <v1:schedulePeriod>
            <v1:start>?</v1:start>
            <v1:end>?</v1:end>
         </v1:schedulePeriod>
      </typ:updateScheduleForHeadRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/scheduleSynchronizationServicePortType/updateScheduleForHeadRequest"/></con:call></con:operation></con:interface><con:testSuite id="721e4e7f-095a-4230-ae58-4557836ee112" name="Автотест"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2bfb6038-b7e6-4024-b7fc-01f747813315" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Методы МУ, OC_ID79601" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Создание базового Расписания МУ в РиР1" id="4997a923-abdc-41f6-9076-187bb8914ea3"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def baseScheduleStart= testRunner.testCase.testSuite.getPropertyValue("baseScheduleStart")
  def baseScheduleEnd= testRunner.testCase.testSuite.getPropertyValue("baseScheduleEnd")

//Добавление расписания МУ
 sql.execute("INSERT INTO LPU_SCHEDULE (LPU_SCHEDULE_ID, LPU_ID, VERSION, START_DATE, END_DATE, IS_ACTIVE) values( (SELECT min(LPU_SCHEDULE_ID)-1 FROM LPU_SCHEDULE),"+moId+ ",0,TIMESTAMP '"+baseScheduleStart+" 00:00:00.000000',TIMESTAMP '"+baseScheduleEnd+" 00:00:00.000000',0 )")

//String  sql_query=("SELECT min(LPU_SCHEDULE_ID) AS ID FROM LPU_SCHEDULE ")

 def lpuSchedule=sql.rows("SELECT min(LPU_SCHEDULE_ID) AS ID FROM LPU_SCHEDULE ")

 String baselpuScheduleId=lpuSchedule[0].ID
 log.info("Идентификатор расписания МУ в РиР1: "+baselpuScheduleId+" Расписание с  "+baseScheduleStart+" по "+baseScheduleEnd)
  testRunner.testCase.setPropertyValue("baselpuScheduleId",baselpuScheduleId)</script></con:config></con:testStep><con:testStep type="groovy" name="Создание базового Расписания МУ в РиР2" id="9f7ce0fc-d369-49d9-b678-de8c2f56a597"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
 def baseScheduleStart= testRunner.testCase.testSuite.getPropertyValue("baseScheduleStart")
  def baseScheduleEnd= testRunner.testCase.testSuite.getPropertyValue("baseScheduleEnd")
  
//Добавление расписания МУ
 sql.execute("INSERT INTO SCHEDULE (ID, MEDICAL_FACILITY_ID, VERSION, START_DATE, END_DATE, IS_ACTIVE) values( (SELECT min(ID)-1 FROM SCHEDULE),"+moId+ ",0,TIMESTAMP '"+baseScheduleStart+" 00:00:00.000000',TIMESTAMP '"+baseScheduleEnd+" 00:00:00.000000',0 )")

//String  sql_query=("SELECT min(LPU_SCHEDULE_ID) AS ID FROM LPU_SCHEDULE ")

 def Schedule=sql.rows("SELECT min(ID) AS ID FROM SCHEDULE")

 String baseScheduleId=Schedule[0].ID
 log.info("Идентификатор расписания МУ в РиР2: "+baseScheduleId+" Расписание с  "+baseScheduleStart+" по "+baseScheduleEnd)
  testRunner.testCase.setPropertyValue("baseScheduleId",baseScheduleId)</script></con:config></con:testStep><con:testStep type="request" name="CreateScheduleForBranch" id="af62238d-2b4e-4b66-ba00-9836bc5befb3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>createScheduleForBranch</con:operation><con:request name="CreateScheduleForBranch" id="63d01c11-dcc7-43ba-9da3-d29bede24efc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
        <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
    <wsse:Username>${#Project#securityUsername}</wsse:Username>
   </wsse:UsernameToken>
  </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:createScheduleForBranchRequest>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:schedulePeriod>\r
            <v1:start>${#TestSuite#startSchedule}</v1:start>\r
            <v1:end>${#TestSuite#endSchedule}</v1:end>\r
         </v1:schedulePeriod>\r
      </typ:createScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="71d7817f-2402-4de9-84fb-8eaf36e7b7f6"/><con:assertion type="SOAP Fault Assertion" id="328a4446-7953-4c2e-9b1c-ce1765361170" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b72a80b8-fee4-448b-9c29-380eddacacdb" name="Contains rir1 schedule"><con:configuration><token>scheduleIdRIR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="70a29c9d-c96e-4250-9220-c191cb5808f7" name="Contains rir2 schedule"><con:configuration><token>scheduleIdRIR2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита5" id="904dceb3-0525-42c1-bbab-321c23c6c329"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='createScheduleForBranch' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
	//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)
	//log.info(checkCompositeStatuses)
int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="transfer" name="Получить идентификаторы расписаний" id="28f9d58f-28bd-4a4b-bdc2-a4ae7b64b545"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scheduleRIR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateScheduleForBranch</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://emias.mos.ru/supp/rir2/core/v1/';
declare namespace ns2='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/';
declare namespace ns3='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/';
declare namespace ns4='http://emias.mos.ru/system/v1/userContext/';
declare namespace ns5='http://emias.mos.ru/system/v1/faults/';
//*:scheduleIdRIR</con:sourcePath><con:targetType>lpuScheduleId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scheduleRIR2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateScheduleForBranch</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://emias.mos.ru/supp/rir2/core/v1/';
declare namespace ns2='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/';
declare namespace ns3='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/';
declare namespace ns4='http://emias.mos.ru/system/v1/userContext/';
declare namespace ns5='http://emias.mos.ru/system/v1/faults/';
//*:scheduleIdRIR2</con:sourcePath><con:targetType>ScheduleId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="activateScheduleForBranch" id="1684f093-2975-43bd-a166-bc16e08521a5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>activateScheduleForBranch</con:operation><con:request name="activateScheduleForBranch" id="8d96c915-70d6-4ba1-a1e5-6383a3850df6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>${#Project#securityUsername}</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>${#Project#systemName}</user:systemName>\r
         <user:userName>${#Project#userName}</user:userName>\r
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:activateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="0"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="0"/>\r
      </typ:activateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3ac69b6d-7b19-44d4-aa45-37bf939a3226"/><con:assertion type="SOAP Fault Assertion" id="d42ba7bd-824e-421a-84e0-5b0b450511da" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка активации расписания МУ в РиР1" id="e7fbd011-f71c-467b-9418-3e03e1db53f4"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID ="+moId+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")
row = sql(sql_query)
if (row==1){
	log.info('Расписание найдено')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

 def activeLpuSchedule=sql.rows(sql_query)
 if (activeLpuSchedule[0].IS_ACTIVE==1){
 	log.info('Расписание в РиР1 активировано')
 	}
 else {
 	testRunner.fail("Расписание в РиР1 не активировано")
 	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка активации расписания МУ в РиР2" id="86fc9c05-d3ad-4973-b09c-e91ea64de711"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT * FROM SCHEDULE WHERE MEDICAL_FACILITY_ID="+moId+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")

row = sql(sql_query)
if (row==1){
	log.info('Расписание найдено')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

 def activeSchedule=sql.rows(sql_query)

 
 if (activeSchedule[0].IS_ACTIVE=='1'){
 	log.info('Расписание в РиР2 активировано')
 	}
 else {
 	testRunner.fail("Расписание в РиР2 не активировано")
 	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита" id="6b8f490f-bfe3-43c5-ad67-1be6e3eec65b"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='activateScheduleForBranch' ORDER BY REQUEST_TIME  DESC) WHERE  ROWNUM = 1")

 def checkCompositeStatuses=sql.rows(sql_query)

int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="request" name="deactivateScheduleForBranch" id="a9bdd11d-a007-4606-9335-f0090609657c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>deactivateScheduleForBranch</con:operation><con:request name="deactivateScheduleForBranch" id="9d294a14-b8eb-4f69-839b-d350ebf66141"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
       <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:deactivateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="1"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="1"/>\r
      </typ:deactivateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="506f2dd4-cd8d-4d60-a656-ae0d1039c96d"/><con:assertion type="SOAP Fault Assertion" id="513226f5-71fb-41c3-aad8-7a4649e40f13" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка деактивации расписания МУ в РиР1" id="0254e669-f9de-4c41-9ab4-6930f43523c1"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID ="+moId+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")
row = sql(sql_query)
if (row==1){
	log.info('Расписание найдено')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

 def activeLpuSchedule=sql.rows(sql_query)
 if (activeLpuSchedule[0].IS_ACTIVE==0){
 	log.info('Расписание в РиР1 деактивировано')
 	}
 else {
 	testRunner.fail("Расписание в РиР1 не деактивировано")
 	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка деактивации расписания МУ в РиР2" id="798f3b3e-d3a2-4da4-b1a2-19cabe7b9dd2"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT * FROM SCHEDULE WHERE MEDICAL_FACILITY_ID="+moId+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")

row = sql(sql_query)
if (row==1){
	log.info('Расписание найдено')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

 def activeSchedule=sql.rows(sql_query)

 
 if (activeSchedule[0].IS_ACTIVE=='0'){
 	log.info('Расписание в РиР2 деактивировано')
 	}
 else {
 	testRunner.fail("Расписание в РиР2 не деактивировано")
 	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита2" id="fada86da-f45d-422c-8fd0-340cf64c56ac"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='deactivateScheduleForBranch' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)

int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="groovy" name="Подготовка расписаний для обновления" id="62256623-7d34-4715-ad69-0c6f60cec0ca"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

  def lpuScheduleId= testRunner.testCase.getPropertyValue("lpuScheduleId")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")
  def ScheduleId= testRunner.testCase.getPropertyValue("ScheduleId")

sql.execute("UPDATE lpu_schedule SET END_DATE = TO_TIMESTAMP('"+endSchedule+"', 'YYYY-MM-DD')-1 WHERE LPU_SCHEDULE_ID ="+lpuScheduleId)

   
username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);



   sql.execute("UPDATE schedule SET END_DATE = TO_TIMESTAMP('"+endSchedule+"', 'YYYY-MM-DD')-1 WHERE ID ="+ScheduleId)</script></con:config></con:testStep><con:testStep type="request" name="updateScheduleForBranch" id="28cbe398-6ffa-40f6-a4ee-f16a5547d575"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>updateScheduleForBranch</con:operation><con:request name="updateScheduleForBranch" id="67572531-87bd-4cac-aa82-c8e7152c0e7a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>${#Project#securityUsername}</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>${#Project#systemName}</user:systemName>\r
         <user:userName>${#Project#userName}</user:userName>\r
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:updateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="2"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="2"/>\r
         <v1:schedulePeriod>\r
            <v1:start>${#TestSuite#startSchedule}</v1:start>\r
            <v1:end>${#TestSuite#endSchedule}</v1:end>\r
         </v1:schedulePeriod>\r
      </typ:updateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b910cc44-07ae-414e-a387-49724adc0c9f"/><con:assertion type="SOAP Fault Assertion" id="3085ec30-fd21-4f2c-85ef-5bfef2e183c8" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b5bfca68-78ad-49a7-9a77-1113aab5afd0" name="Contains versionRIR"><con:configuration><token>versionRIR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b031d3f-e9a2-48d9-8ba3-45a1b23f9f4d" name="versionRIR2"><con:configuration><token>versionRIR2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка обновления расписания МУ в РиР1" id="45c354b9-92f4-4a17-b9f4-6f23cbfdf652"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def lpuScheduleId= testRunner.testCase.getPropertyValue("lpuScheduleId")
def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT LPU_ID, to_char(END_DATE, 'YYYY-MM-DD') AS END_DATE FROM LPU_SCHEDULE WHERE LPU_SCHEDULE_ID ="+lpuScheduleId)
/*log.info(sql_query)
log.info(sql.rows(sql_query))*/

 def endLpuSchedule=sql.rows(sql_query)

 assert endLpuSchedule[0].END_DATE == endSchedule
 log.info('Расписание в РиР1 обновлено')
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка обновления расписания МУ в РиР2" id="0e440f6c-81d3-414e-8d31-05a50510ff27"><con:settings/><con:config><script>import groovy.sql.Sql

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def ScheduleId= testRunner.testCase.getPropertyValue("ScheduleId")
def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query2=("SELECT to_char(END_DATE, 'YYYY-MM-DD') AS END_DATE  FROM SCHEDULE WHERE ID ="+ScheduleId)
/*log.info(sql_query)
log.info(sql.rows(sql_query))*/

 def endRiR2Schedule=sql.rows(sql_query2)

 assert endRiR2Schedule[0].END_DATE == endSchedule
 log.info('Расписание в РиР2 обновлено')</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита3" id="43b42c26-bb4f-4a68-a50c-859dd5057251"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='updateScheduleForBranch' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)

int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="request" name="copySchedule" id="6792be61-26a5-4f4c-bf52-1f58743ff3cb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>copySchedule</con:operation><con:request name="copySchedule" id="eb123b2c-33cc-466e-8546-e28a9c1024cc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:copyScheduleRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleIdRIR>${#TestCase#lpuScheduleId}</typ:scheduleIdRIR>\r
         <typ:scheduleIdRIR2>${#TestCase#ScheduleId}</typ:scheduleIdRIR2>\r
         <v1:schedulePeriod>\r
            <v1:start>${#TestSuite#startScheduleForCopy}</v1:start>\r
            <v1:end>${#TestSuite#endScheduleForCopy}</v1:end>\r
         </v1:schedulePeriod>\r
      </typ:copyScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d28a6111-d2d9-41a1-9301-726aca50bdbe"/><con:assertion type="SOAP Fault Assertion" id="e74473e7-27d5-4850-91ee-14801482c32e" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="7645f0ad-ef41-43ce-87fe-7a0b48c9797a" name="Contains scheduleIdRIR"><con:configuration><token>scheduleIdRIR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="012d3078-cbab-4765-ae7f-334abba13b15" name="Contains scheduleIdRIR2" disabled="true"><con:configuration><token>scheduleIdRIR2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Получить идентификаторы расписаний2" id="0550ada9-30d9-4a8b-916b-50db210c9dfd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scheduleRIR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>copySchedule</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://emias.mos.ru/supp/rir2/core/v1/';
declare namespace ns2='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/';
declare namespace ns3='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/';
declare namespace ns4='http://emias.mos.ru/system/v1/userContext/';
declare namespace ns5='http://emias.mos.ru/system/v1/faults/';
//*:scheduleIdRIR</con:sourcePath><con:targetType>lpuCopiedScheduleId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Проверка копирования расписания МУ в РиР1" id="d93ecb33-f2a2-4ef4-8cd3-d64d734becb1"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
def startScheduleForCopy= testRunner.testCase.testSuite.getPropertyValue("startScheduleForCopy")
def endScheduleForCopy= testRunner.testCase.testSuite.getPropertyValue("endScheduleForCopy")

String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID ="+moId+" AND START_DATE =TIMESTAMP '"+startScheduleForCopy+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endScheduleForCopy+" 00:00:00.000000'")
row = sql(sql_query)
if (row==1){
	log.info('Расписание скопировано корректно')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка копирования расписания МУ в РиР2" id="bd517f05-f40c-4779-ade5-fc0b6b135186"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
def startScheduleForCopy= testRunner.testCase.testSuite.getPropertyValue("startScheduleForCopy")
def endScheduleForCopy= testRunner.testCase.testSuite.getPropertyValue("endScheduleForCopy")

String  sql_query=("SELECT * FROM SCHEDULE WHERE MEDICAL_FACILITY_ID="+moId+" AND START_DATE =TIMESTAMP '"+startScheduleForCopy+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endScheduleForCopy+" 00:00:00.000000'")

row = sql(sql_query)
if (row==1){
	log.info('Расписание скопировано корректно')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

def copiedSchedule= sql.rows(sql_query)
String CopiedScheduleId = copiedSchedule.ID[0]
testRunner.testCase.setPropertyValue("CopiedScheduleId",CopiedScheduleId)</script></con:config></con:testStep><con:testStep type="request" name="deleteScheduleForBranch" id="93d54442-77bd-4a1e-9b43-23e7d2355232"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>deleteScheduleForBranch</con:operation><con:request name="deleteScheduleForBranch" id="0611e62c-458b-4d79-841c-c09f09dd7c28"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
     <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:deleteScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuCopiedScheduleId}" version="0"/>\r
         <typ:scheduleRIR2 id="${#TestCase#CopiedScheduleId}" version="0"/>\r
      </typ:deleteScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e37dca6f-d698-4e18-8474-670e795da546"/><con:assertion type="SOAP Fault Assertion" id="24694060-7054-46db-ae7b-90fcf796f530" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка удаления расписания МУ в РиР1" id="7a319927-dd3e-4c7d-8bd8-eb926b174f9d"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def lpuCopiedScheduleId= testRunner.testCase.getPropertyValue("lpuCopiedScheduleId")

String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_SCHEDULE_ID ="+lpuCopiedScheduleId)
/*log.info(sql_query)
log.info(sql.rows(sql_query))*/

 def LpuSchedule=sql(sql_query)

 assert LpuSchedule == 0
 log.info('Расписание в РиР1 удалено')
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка удаления расписания МУ в РиР2" id="84a50147-2832-45a3-aca8-9dd6ba475d48"><con:settings/><con:config><script>import groovy.sql.Sql

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def CopiedScheduleId= testRunner.testCase.getPropertyValue("CopiedScheduleId")

String  sql_query=("SELECT *  FROM SCHEDULE WHERE ID ="+CopiedScheduleId)
/*log.info(sql_query)
log.info(sql.rows(sql_query))*/

 def Schedule=sql(sql_query)

 assert Schedule == 0
 log.info('Расписание в РиР2 удалено')</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита4" id="abf2e0f4-2f51-403b-be08-c7abb947461f"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+" AND METHOD_NAME ='deleteScheduleForBranch' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)

int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="request" name="deleteScheduleForBranch2" id="e7b69df0-ddfe-4887-8842-87ccbad227d3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>deleteScheduleForBranch</con:operation><con:request name="deleteScheduleForBranch2" id="0611e62c-458b-4d79-841c-c09f09dd7c28"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
     <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:deleteScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="3"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="3"/>\r
      </typ:deleteScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e37dca6f-d698-4e18-8474-670e795da546"/><con:assertion type="SOAP Fault Assertion" id="24694060-7054-46db-ae7b-90fcf796f530" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Удаление базового Расписаний МУ в РиР1" id="6cfd5a73-e66b-4f2b-bfef-84f7ea9838b6"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);
def baselpuScheduleId= testRunner.testCase.getPropertyValue("baselpuScheduleId")
//log.info(baselpuScheduleId)

//Удаление  расписания МУ
 sql.execute("DELETE FROM LPU_SCHEDULE WHERE LPU_SCHEDULE_ID="+baselpuScheduleId)

</script></con:config></con:testStep><con:testStep type="groovy" name="Удаление базового Расписаний МУ в РиР2" id="541f5886-8c97-4877-9dd2-57ff62aafb92"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);
def baseScheduleId= testRunner.testCase.getPropertyValue("baseScheduleId")
log.info(baseScheduleId)

//Удаление  расписания МУ
 sql.execute("DELETE FROM SCHEDULE WHERE ID="+baseScheduleId)
</script></con:config></con:testStep><con:properties><con:property><con:name>muId4</con:name><con:value>10000283</con:value></con:property><con:property><con:name>muId3</con:name><con:value>10000245</con:value></con:property><con:property><con:name>muId2</con:name><con:value>10000456</con:value></con:property><con:property><con:name>muId1</con:name><con:value>149</con:value></con:property><con:property><con:name>moId</con:name><con:value>141</con:value></con:property><con:property><con:name>db_rir2_composite_user</con:name><con:value>RIR2COMP</con:value></con:property><con:property><con:name>db_rir2_composite_password</con:name><con:value>RIR2COMP</con:value></con:property><con:property><con:name>db_rir2_composite_con</con:name><con:value>@//10.2.172.16:1521/rir2.mosgorzdrav.local</con:value></con:property><con:property><con:name>db_rir1_user</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>db_rir1_password</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>db_rir1_con</con:name><con:value>@//10.2.172.21:1521/emiasdb</con:value></con:property><con:property><con:name>db_rir2_user</con:name><con:value>EMIAS_RIR2</con:value></con:property><con:property><con:name>db_rir2_password</con:name><con:value>EMIAS_RIR2</con:value></con:property><con:property><con:name>db_rir2_con</con:name><con:value>@//10.2.172.16:1521/rir2.mosgorzdrav.local</con:value></con:property><con:property><con:name>lpuScheduleId</con:name><con:value>22315508</con:value></con:property><con:property><con:name>ScheduleId</con:name><con:value>14089347</con:value></con:property><con:property><con:name>baselpuScheduleId</con:name><con:value>-1001</con:value></con:property><con:property><con:name>baseScheduleId</con:name><con:value>-1086</con:value></con:property><con:property><con:name>currentDate</con:name><con:value>2021-02-12</con:value></con:property><con:property><con:name>lpuCopiedScheduleId</con:name><con:value>22316533</con:value></con:property><con:property><con:name>CopiedScheduleId</con:name><con:value>14089348</con:value></con:property></con:properties></con:testCase><con:testCase id="c003e872-d47d-4320-960f-0ad498067853" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Методы МО, ОС" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Создание базового Расписания МО в РиР1" id="69624849-030f-4135-9090-54f6016f07e7"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
 def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def baseScheduleStart= testRunner.testCase.testSuite.getPropertyValue("baseScheduleStart")
  def baseScheduleEnd= testRunner.testCase.testSuite.getPropertyValue("baseScheduleEnd")



def MuIDs = [moId ,muId1,muId2,muId3,muId4]

   for (int i = 0; i &lt;= 4; i++) {
   log.info(MuIDs[i])
   String query=("INSERT INTO LPU_SCHEDULE (LPU_SCHEDULE_ID, LPU_ID, VERSION, START_DATE, END_DATE, IS_ACTIVE) values( (SELECT min(LPU_SCHEDULE_ID)-1 FROM LPU_SCHEDULE),"+MuIDs[i]+ ",0,TIMESTAMP '"+baseScheduleStart+" 00:00:00.000000',TIMESTAMP '"+baseScheduleEnd+" 00:00:00.000000',0 )")
    sql.execute(query)
       // log.info(query)
      
      String  sql_query1=("SELECT min(LPU_SCHEDULE_ID) AS ID FROM LPU_SCHEDULE WHERE LPU_ID = "+MuIDs[i])
	 def MuSchedule=sql.rows(sql_query1)
 	String baseMuScheduleId=MuSchedule[0].ID
 	if (i == 0){
 		log.info("Идентификатор расписания МО в РиР1: "+baseMuScheduleId+" Расписание с  "+baseScheduleStart+" по "+baseScheduleEnd)
  	testRunner.testCase.setPropertyValue("baselpuMOScheduleId",baseMuScheduleId)
 	}
 	else {
 		log.info("Идентификатор расписания МУ"+i+" в РиР1: "+baseMuScheduleId+" Расписание с  "+baseScheduleStart+" по "+baseScheduleEnd)
  	testRunner.testCase.setPropertyValue("baselpuMu"+i+"ScheduleId",baseMuScheduleId)
 		}
 	

   }

</script></con:config></con:testStep><con:testStep type="groovy" name="Создание базового Расписания МО в РиР2" id="d318a768-556f-47a6-86f4-c8f8b9309d8a"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);
 
 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
 def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def baseScheduleStart= testRunner.testCase.testSuite.getPropertyValue("baseScheduleStart")
  def baseScheduleEnd= testRunner.testCase.testSuite.getPropertyValue("baseScheduleEnd")

  def MuIDs = [moId ,muId1,muId2,muId3,muId4]

   for (int i = 0; i &lt;= 4; i++) {
   log.info(MuIDs[i])
   String query=("INSERT INTO SCHEDULE (ID, MEDICAL_FACILITY_ID, VERSION, START_DATE, END_DATE, IS_ACTIVE) values( (SELECT min(ID)-1 FROM SCHEDULE),"+MuIDs[i]+ ",0,TIMESTAMP '"+baseScheduleStart+" 00:00:00.000000',TIMESTAMP '"+baseScheduleEnd+" 00:00:00.000000',0 )")
    sql.execute(query)
       // log.info(query)
      
      String  sql_query1=("SELECT min(ID) AS ID FROM SCHEDULE WHERE MEDICAL_FACILITY_ID= "+MuIDs[i])
	 def MuSchedule=sql.rows(sql_query1)
 	String baseMuScheduleId=MuSchedule[0].ID
 	if (i == 0){
 		log.info("Идентификатор расписания МО в РиР2: "+baseMuScheduleId+" Расписание с  "+baseScheduleStart+" по "+baseScheduleEnd)
  	testRunner.testCase.setPropertyValue("baseMOScheduleId",baseMuScheduleId)
 	}
 	else {
 		log.info("Идентификатор расписания МУ"+i+" в РиР2: "+baseMuScheduleId+" Расписание с  "+baseScheduleStart+" по "+baseScheduleEnd)
  	testRunner.testCase.setPropertyValue("baseMu"+i+"ScheduleId",baseMuScheduleId)
 		}
 	

   }
</script></con:config></con:testStep><con:testStep type="request" name="createScheduleForHead" id="c832820f-f2aa-4141-910a-9c7f6365ecec"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>createScheduleForHead</con:operation><con:request name="createScheduleForHead" id="c61cf3a2-20f9-4e5a-a1b2-e8dbdbdb4d9b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:createScheduleForHeadRequest>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:schedulePeriod>\r
           <v1:start>${#TestSuite#startSchedule}</v1:start>
            <v1:end>${#TestSuite#endSchedule}</v1:end>
         </v1:schedulePeriod>\r
      </typ:createScheduleForHeadRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="780a4c19-6945-4e6c-8635-7e32a670d4e2"/><con:assertion type="SOAP Fault Assertion" id="f0f18c5f-a303-462d-8b4a-fd33de756208" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="f42d06c6-792d-4cf4-b66f-7be220a24fec" name="Contains scheduleIdRIR"><con:configuration><token>scheduleIdRIR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e70c8f66-1e64-4f7b-b016-de6ea9e1c968" name="Contains scheduleIdRIR2"><con:configuration><token>scheduleIdRIR2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита" id="df76ebb7-dcc7-4475-b758-e87f4410cd73"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='createScheduleForHead' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
	//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)
	//log.info(checkCompositeStatuses)
int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="transfer" name="Получить идентификаторы расписаний" id="3c8ee20b-a891-4260-912a-459dc7f7aefc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scheduleRIR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createScheduleForHead</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://emias.mos.ru/supp/rir2/core/v1/';
declare namespace ns2='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/';
declare namespace ns3='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/';
declare namespace ns4='http://emias.mos.ru/system/v1/userContext/';
declare namespace ns5='http://emias.mos.ru/system/v1/faults/';
//*:scheduleIdRIR</con:sourcePath><con:targetType>lpuScheduleId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scheduleRIR2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createScheduleForHead</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://emias.mos.ru/supp/rir2/core/v1/';
declare namespace ns2='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/';
declare namespace ns3='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/';
declare namespace ns4='http://emias.mos.ru/system/v1/userContext/';
declare namespace ns5='http://emias.mos.ru/system/v1/faults/';
//*:scheduleIdRIR2</con:sourcePath><con:targetType>ScheduleId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="activateScheduleForHead" id="3160a4c6-7bed-42ff-abdf-ca6c5cce2fac"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>activateScheduleForHead</con:operation><con:request name="activateScheduleForHead" id="fb647c88-e378-4057-a20a-e15e2c201156"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>${#Project#securityUsername}</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>${#Project#systemName}</user:systemName>\r
         <user:userName>${#Project#userName}</user:userName>\r
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:activateScheduleForHeadRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="0"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="0"/>\r
      </typ:activateScheduleForHeadRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="29044adb-7c4b-4f25-8029-a4a791f21d5c"/><con:assertion type="SOAP Fault Assertion" id="c8529ca5-ce93-4afa-b1aa-9ad661a7230a" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка активации расписания МО в РиР1" id="094d20eb-da2d-4800-9ef4-f80a45325f5f"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")


//def activeLpuSchedule=sql.rows(sql_query)
def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")
	//log.info(sql_query)
	def activeLpuSchedule=sql.rows(sql_query)
	//log.info(activeLpuSchedule.IS_ACTIVE)
	if (activeLpuSchedule.IS_ACTIVE[0].toInteger()==1){
 		log.info("'Расписание МУ "+MuIDs[i]+" в РиР1 активировано")
 	} else {
 		testRunner.fail("Расписание  МУ "+MuIDs[i]+" в РиР1 не активировано")
 	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка активации расписания МО в РиР2" id="7168382c-b686-4a5f-bbc1-e60c7ce8a933"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")


//def activeLpuSchedule=sql.rows(sql_query)
def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("SELECT * FROM SCHEDULE WHERE MEDICAL_FACILITY_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")
	//log.info(sql_query)
	def activeLpuSchedule=sql.rows(sql_query)
	//log.info(activeLpuSchedule.IS_ACTIVE)
	if (activeLpuSchedule.IS_ACTIVE[0].toInteger()==1){
 		log.info("'Расписание МУ "+MuIDs[i]+" в РиР2 активировано")
 	} else {
 		testRunner.fail("Расписание  МУ "+MuIDs[i]+" в РиР2 не активировано")
 	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита2" id="df94def6-2865-48b9-a260-2fa30ac7a5db"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='activateScheduleForHead' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
	//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)
	//log.info(checkCompositeStatuses)
int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="request" name="deactivateScheduleForHead" id="c88012bd-2036-4d12-a50b-3d0316ea6ed5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>deactivateScheduleForHead</con:operation><con:request name="deactivateScheduleForHead" id="072de4cd-593e-4360-af55-f4ae3d737873"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>${#Project#securityUsername}</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>${#Project#systemName}</user:systemName>\r
         <user:userName>${#Project#userName}</user:userName>\r
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:deactivateScheduleForHeadRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="1"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="1"/>\r
      </typ:deactivateScheduleForHeadRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6d6be68c-b5c0-4291-bfc1-d4f90fb439c3"/><con:assertion type="SOAP Fault Assertion" id="38cd334f-6ad2-41ae-944f-539ab9b3f810" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка деактивации расписания МО в РиР1" id="2a2a8173-825f-42f5-bd48-ac941db72074"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")


//def activeLpuSchedule=sql.rows(sql_query)
def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")
	//log.info(sql_query)
	def activeLpuSchedule=sql.rows(sql_query)
	//log.info(activeLpuSchedule.IS_ACTIVE)
	if (activeLpuSchedule.IS_ACTIVE[0].toInteger()==0){
 		log.info("'Расписание МУ "+MuIDs[i]+" в РиР1 деактивировано")
 	} else {
 		testRunner.fail("Расписание  МУ "+MuIDs[i]+" в РиР1 не деактивировано")
 	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка деактивации расписания МО в РиР2" id="1e8a82d5-f4aa-43c8-bb02-7478091fa45e"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")


//def activeLpuSchedule=sql.rows(sql_query)
def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("SELECT * FROM SCHEDULE WHERE MEDICAL_FACILITY_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")
	//log.info(sql_query)
	def activeLpuSchedule=sql.rows(sql_query)
	//log.info(activeLpuSchedule.IS_ACTIVE)
	if (activeLpuSchedule.IS_ACTIVE[0].toInteger()==0){
 		log.info("'Расписание МУ "+MuIDs[i]+" в РиР2 активировано")
 	} else {
 		testRunner.fail("Расписание  МУ "+MuIDs[i]+" в РиР2 не активировано")
 	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита3" id="a19cb6e9-dccb-4d68-8900-f8a2bb89130d"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='deactivateScheduleForHead' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
	//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)
	//log.info(checkCompositeStatuses)
int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="groovy" name="Подготовка Расписаний МО для обновления в РиР1" id="3e0e4a64-005c-48da-a1b0-5928f449d93e"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
 def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")



def MuIDs = [moId ,muId1,muId2,muId3,muId4]
def asString = MuIDs.join(", ")
String  sql_query=("UPDATE LPU_SCHEDULE SET END_DATE = TO_TIMESTAMP('"+endSchedule+"', 'YYYY-MM-DD')-1 WHERE LPU_ID IN ( "+asString+") AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' --AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")

sql.execute(sql_query)

</script></con:config></con:testStep><con:testStep type="groovy" name="Подготовка Расписаний МО для обновления в РиР2" id="99b5ba81-60b5-48a2-960d-b0998a9a1e87"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
 def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")



def MuIDs = [moId ,muId1,muId2,muId3,muId4]
def asString = MuIDs.join(", ")
String  sql_query=("UPDATE SCHEDULE SET END_DATE = TO_TIMESTAMP('"+endSchedule+"', 'YYYY-MM-DD')-1 WHERE MEDICAL_FACILITY_ID  IN ( "+asString+") AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' --AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")

sql.execute(sql_query)

</script></con:config></con:testStep><con:testStep type="request" name="updateScheduleForHead" id="49f80291-7c1d-4ee5-ae87-6d1eb8135946"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>updateScheduleForHead</con:operation><con:request name="updateScheduleForHead" id="635efebf-15e5-4539-9dbc-8907b800e29c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>${#Project#securityUsername}</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>${#Project#systemName}</user:systemName>\r
         <user:userName>${#Project#userName}</user:userName>\r
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:updateScheduleForHeadRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="2"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="2"/>\r
         <v1:schedulePeriod>\r
            <v1:start>${#TestSuite#startSchedule}</v1:start>\r
            <v1:end>${#TestSuite#endSchedule}</v1:end>\r
         </v1:schedulePeriod>\r
      </typ:updateScheduleForHeadRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="607f61a6-dc07-425f-9cc2-a9bd233fbd9e"/><con:assertion type="SOAP Fault Assertion" id="abf8772e-c0e4-4e8e-9842-33d806aa11e6" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="0acd407e-59ab-42fc-b80a-84c85ee3a0ec" name="Contains versionRIR"><con:configuration><token>versionRIR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="494a393e-ff83-4a95-aa17-13416318c4ff" name="Contains versionRIR2"><con:configuration><token>versionRIR2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка обновления расписания МО в РиР1" id="74a83caa-2212-479f-aefe-157484e2fdfb"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")


//def activeLpuSchedule=sql.rows(sql_query)
def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("SELECT to_char(END_DATE, 'YYYY-MM-DD') AS END_DATE FROM LPU_SCHEDULE WHERE LPU_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' ")
	//log.info(sql_query)
	def endLpuSchedule=sql.rows(sql_query)
	//log.info(activeLpuSchedule.END_DATE)
	if (endLpuSchedule.END_DATE[0]==endSchedule){
 		log.info("'Расписание МУ "+MuIDs[i]+" в РиР1 обновлено")
 	} else {
 		testRunner.fail("Расписание  МУ "+MuIDs[i]+" в РиР1 не обновлено")
 	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка обновления расписания МО в РиР2" id="0707dd24-8263-4326-a82c-9563fd4b24e9"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")


//def activeLpuSchedule=sql.rows(sql_query)
def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("SELECT to_char(END_DATE, 'YYYY-MM-DD') AS END_DATE FROM SCHEDULE WHERE MEDICAL_FACILITY_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' ")
	//log.info(sql_query)
	def endLpuSchedule=sql.rows(sql_query)
	//log.info(activeLpuSchedule.END_DATE)
	if (endLpuSchedule.END_DATE[0]==endSchedule){
 		log.info("'Расписание МУ "+MuIDs[i]+" в РиР2 обновлено")
 	} else {
 		testRunner.fail("Расписание  МУ "+MuIDs[i]+" в РиР2 не обновлено")
 	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита4" id="c2410e23-eb05-445a-91a1-ec181642d13c"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='updateScheduleForHead' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
	//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)
	//log.info(checkCompositeStatuses)
int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="request" name="deleteScheduleForHead" id="6d194006-8b8a-4dd2-b9b4-1972be173f2e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>deleteScheduleForHead</con:operation><con:request name="deleteScheduleForHead" id="3aca2cac-79a4-4c45-b460-7551602f2c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://rir2composite.test.emias.mos.ru/api/Schedule</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>${#Project#securityUsername}</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>${#Project#systemName}</user:systemName>\r
         <user:userName>${#Project#userName}</user:userName>\r
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:deleteScheduleForHeadRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="3"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="3"/>\r
      </typ:deleteScheduleForHeadRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f4c303a5-2d1f-4052-b75d-022c465c0aa7"/><con:assertion type="SOAP Fault Assertion" id="6c8d1e78-6092-4c30-bf4a-47a4374f3f60" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка удаления расписания МО в РиР1" id="602fbefb-eff3-4c37-a874-9557f1082e57"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")


//def activeLpuSchedule=sql.rows(sql_query)
def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' ")
	//log.info(sql_query)
	def deletedLpuSchedule=sql(sql_query)
	//log.info(deletedLpuSchedule)
	if (deletedLpuSchedule==0){
 		log.info("'Расписание МУ "+MuIDs[i]+" в РиР1 удалено")
 	} else {
 		testRunner.fail("Расписание  МУ "+MuIDs[i]+" в РиР1 не удалено")
 	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка удаления расписания МО в РиР2" id="7e8c4f20-be89-4e9a-89be-915f9ed6ee16"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")


//def activeLpuSchedule=sql.rows(sql_query)
def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("SELECT* FROM SCHEDULE WHERE MEDICAL_FACILITY_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' ")
	//log.info(sql_query)
	def deletedLpuSchedule=sql(sql_query)
	//log.info(activeLpuSchedule.END_DATE)
	if (deletedLpuSchedule==0){
 		log.info("'Расписание МУ "+MuIDs[i]+" в РиР2 удалено")
 	} else {
 		testRunner.fail("Расписание  МУ "+MuIDs[i]+" в РиР2 не удалено")
 	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита5" id="a67b686f-8cf8-4fde-a85d-d950795b0b2c"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='deleteScheduleForHead' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
	//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)
	//log.info(checkCompositeStatuses)
int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="groovy" name="Удаление базовых расписаний в РиР1" id="bf999176-ee41-4eba-9ee3-9ddc674cd354"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def baseScheduleStart= testRunner.testCase.testSuite.getPropertyValue("baseScheduleStart")
  def baseScheduleEnd= testRunner.testCase.testSuite.getPropertyValue("baseScheduleEnd")


def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("DELETE FROM LPU_SCHEDULE WHERE LPU_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+baseScheduleStart+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+baseScheduleEnd+" 00:00:00.000000'  ")
	//log.info(sql_query)
	sql.execute(sql_query)
}</script></con:config></con:testStep><con:testStep type="groovy" name="Удаление базовых расписаний в РиР2" id="2e56dd90-5742-4fff-b31c-303ef6c18e3a"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def muId1= testRunner.testCase.testSuite.getPropertyValue("muId1")
  def muId2= testRunner.testCase.testSuite.getPropertyValue("muId2")
   def muId3= testRunner.testCase.testSuite.getPropertyValue("muId3")
    def muId4= testRunner.testCase.testSuite.getPropertyValue("muId4")
  def baseScheduleStart= testRunner.testCase.testSuite.getPropertyValue("baseScheduleStart")
  def baseScheduleEnd= testRunner.testCase.testSuite.getPropertyValue("baseScheduleEnd")


def MuIDs = [moId ,muId1,muId2,muId3,muId4]
//log.info( MuIDs )
for (int i = 0; i &lt;= 4; i++) {
	String  sql_query=("DELETE FROM SCHEDULE WHERE MEDICAL_FACILITY_ID = "+MuIDs[i]+" AND START_DATE =TIMESTAMP '"+baseScheduleStart+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+baseScheduleEnd+" 00:00:00.000000'  ")
	//log.info(sql_query)
	sql.execute(sql_query)
}</script></con:config></con:testStep><con:properties><con:property><con:name>baselpuMoScheduleId</con:name><con:value>-1001</con:value></con:property><con:property><con:name>baselpuMuScheduleId</con:name><con:value>-1002</con:value></con:property><con:property><con:name>baseMoScheduleId</con:name><con:value>-1086</con:value></con:property><con:property><con:name>baseMuScheduleId</con:name><con:value>-1087</con:value></con:property><con:property><con:name>baselpuMu1ScheduleId</con:name><con:value>-1002</con:value></con:property><con:property><con:name>baselpuMu2ScheduleId</con:name><con:value>-1003</con:value></con:property><con:property><con:name>baselpuMu3ScheduleId</con:name><con:value>-1004</con:value></con:property><con:property><con:name>baselpuMu4ScheduleId</con:name><con:value>-1005</con:value></con:property><con:property><con:name>baseMu1ScheduleId</con:name><con:value>-1087</con:value></con:property><con:property><con:name>baseMu2ScheduleId</con:name><con:value>-1088</con:value></con:property><con:property><con:name>baseMu3ScheduleId</con:name><con:value>-1089</con:value></con:property><con:property><con:name>baseMu4ScheduleId</con:name><con:value>-1090</con:value></con:property><con:property><con:name>lpuScheduleId</con:name><con:value>22317558</con:value></con:property><con:property><con:name>ScheduleId</con:name><con:value>14089353</con:value></con:property></con:properties></con:testCase><con:testCase id="06378f4d-49bb-4a3b-a58e-ed6b199ebfef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="NAME_ID79601" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Создание базового Расписания МУ в РиР1" id="5ea73a2d-0316-4b16-b6e6-c4e5650fdfca"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def baseScheduleStart= testRunner.testCase.testSuite.getPropertyValue("baseScheduleStart")
  def baseScheduleEnd= testRunner.testCase.testSuite.getPropertyValue("baseScheduleEnd")

//Добавление расписания МУ
 sql.execute("INSERT INTO LPU_SCHEDULE (LPU_SCHEDULE_ID, LPU_ID, VERSION, START_DATE, END_DATE, IS_ACTIVE) values( (SELECT min(LPU_SCHEDULE_ID)-1 FROM LPU_SCHEDULE),"+moId+ ",0,TIMESTAMP '"+baseScheduleStart+" 00:00:00.000000',TIMESTAMP '"+baseScheduleEnd+" 00:00:00.000000',0 )")

//String  sql_query=("SELECT min(LPU_SCHEDULE_ID) AS ID FROM LPU_SCHEDULE ")

 def lpuSchedule=sql.rows("SELECT min(LPU_SCHEDULE_ID) AS ID FROM LPU_SCHEDULE ")

 String baselpuScheduleId=lpuSchedule[0].ID
 log.info("Идентификатор расписания МУ в РиР1: "+baselpuScheduleId+" Расписание с  "+baseScheduleStart+" по "+baseScheduleEnd)
  testRunner.testCase.setPropertyValue("baselpuScheduleId",baselpuScheduleId)</script></con:config></con:testStep><con:testStep type="groovy" name="Создание базового Расписания МУ в РиР2" id="2bd69717-16d1-4920-b9bb-d306e2239586"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
 def baseScheduleStart= testRunner.testCase.testSuite.getPropertyValue("baseScheduleStart")
  def baseScheduleEnd= testRunner.testCase.testSuite.getPropertyValue("baseScheduleEnd")
  
//Добавление расписания МУ
 sql.execute("INSERT INTO SCHEDULE (ID, MEDICAL_FACILITY_ID, VERSION, START_DATE, END_DATE, IS_ACTIVE) values( (SELECT min(ID)-1 FROM SCHEDULE),"+moId+ ",0,TIMESTAMP '"+baseScheduleStart+" 00:00:00.000000',TIMESTAMP '"+baseScheduleEnd+" 00:00:00.000000',0 )")

//String  sql_query=("SELECT min(LPU_SCHEDULE_ID) AS ID FROM LPU_SCHEDULE ")

 def Schedule=sql.rows("SELECT min(ID) AS ID FROM SCHEDULE")

 String baseScheduleId=Schedule[0].ID
 log.info("Идентификатор расписания МУ в РиР2: "+baseScheduleId+" Расписание с  "+baseScheduleStart+" по "+baseScheduleEnd)
  testRunner.testCase.setPropertyValue("baseScheduleId",baseScheduleId)</script></con:config></con:testStep><con:testStep type="request" name="CreateScheduleForBranch" id="9db6509f-0ee3-49be-b854-600e0511e4e9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>createScheduleForBranch</con:operation><con:request name="CreateScheduleForBranch" id="63d01c11-dcc7-43ba-9da3-d29bede24efc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
        <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
    <wsse:Username>${#Project#securityUsername}</wsse:Username>
   </wsse:UsernameToken>
  </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:createScheduleForBranchRequest>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:schedulePeriod>\r
            <v1:start>${#TestSuite#startSchedule}</v1:start>\r
            <v1:end>${#TestSuite#endSchedule}</v1:end>\r
         </v1:schedulePeriod>\r
      </typ:createScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="71d7817f-2402-4de9-84fb-8eaf36e7b7f6"/><con:assertion type="SOAP Fault Assertion" id="328a4446-7953-4c2e-9b1c-ce1765361170" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b72a80b8-fee4-448b-9c29-380eddacacdb" name="Contains rir1 schedule"><con:configuration><token>scheduleIdRIR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="70a29c9d-c96e-4250-9220-c191cb5808f7" name="Contains rir2 schedule"><con:configuration><token>scheduleIdRIR2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита5" id="a287ca49-c095-4fc2-aadc-c4ae0d395973"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='createScheduleForBranch' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
	//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)
	//log.info(checkCompositeStatuses)
int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="transfer" name="Получить идентификаторы расписаний" id="1d0981d5-ffb9-439b-8c88-fb5d43bdea03"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scheduleRIR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateScheduleForBranch</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://emias.mos.ru/supp/rir2/core/v1/';
declare namespace ns2='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/';
declare namespace ns3='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/';
declare namespace ns4='http://emias.mos.ru/system/v1/userContext/';
declare namespace ns5='http://emias.mos.ru/system/v1/faults/';
//*:scheduleIdRIR</con:sourcePath><con:targetType>lpuScheduleId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scheduleRIR2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>CreateScheduleForBranch</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://emias.mos.ru/supp/rir2/core/v1/';
declare namespace ns2='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/';
declare namespace ns3='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/';
declare namespace ns4='http://emias.mos.ru/system/v1/userContext/';
declare namespace ns5='http://emias.mos.ru/system/v1/faults/';
//*:scheduleIdRIR2</con:sourcePath><con:targetType>ScheduleId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="activateScheduleForBranch" id="ef4f21a4-0af3-4f2c-8f94-e528c3b95dd4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>activateScheduleForBranch</con:operation><con:request name="activateScheduleForBranch" id="8d96c915-70d6-4ba1-a1e5-6383a3850df6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>${#Project#securityUsername}</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>${#Project#systemName}</user:systemName>\r
         <user:userName>${#Project#userName}</user:userName>\r
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:activateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="0"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="0"/>\r
      </typ:activateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3ac69b6d-7b19-44d4-aa45-37bf939a3226"/><con:assertion type="SOAP Fault Assertion" id="d42ba7bd-824e-421a-84e0-5b0b450511da" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка активации расписания МУ в РиР1" id="487c7f99-6e6e-427f-a0bb-ccdd03abef7a"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID ="+moId+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")
row = sql(sql_query)
if (row==1){
	log.info('Расписание найдено')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

 def activeLpuSchedule=sql.rows(sql_query)
 if (activeLpuSchedule[0].IS_ACTIVE==1){
 	log.info('Расписание в РиР1 активировано')
 	}
 else {
 	testRunner.fail("Расписание в РиР1 не активировано")
 	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка активации расписания МУ в РиР2" id="87f3024e-4f0d-4cf8-a7ee-f8a07c752f73"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT * FROM SCHEDULE WHERE MEDICAL_FACILITY_ID="+moId+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")

row = sql(sql_query)
if (row==1){
	log.info('Расписание найдено')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

 def activeSchedule=sql.rows(sql_query)

 
 if (activeSchedule[0].IS_ACTIVE=='1'){
 	log.info('Расписание в РиР2 активировано')
 	}
 else {
 	testRunner.fail("Расписание в РиР2 не активировано")
 	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита" id="e8882c80-f6f5-4dea-bc52-9ef1773d6971"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='activateScheduleForBranch' ORDER BY REQUEST_TIME  DESC) WHERE  ROWNUM = 1")

 def checkCompositeStatuses=sql.rows(sql_query)

int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="request" name="deactivateScheduleForBranch" id="06f91633-0bb6-4934-920c-99a3c0ecf7f6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>deactivateScheduleForBranch</con:operation><con:request name="deactivateScheduleForBranch" id="9d294a14-b8eb-4f69-839b-d350ebf66141"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
       <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:deactivateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="1"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="1"/>\r
      </typ:deactivateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="506f2dd4-cd8d-4d60-a656-ae0d1039c96d"/><con:assertion type="SOAP Fault Assertion" id="513226f5-71fb-41c3-aad8-7a4649e40f13" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка деактивации расписания МУ в РиР1" id="f57a5a4a-21cb-4014-b018-5c1c071ad132"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID ="+moId+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")
row = sql(sql_query)
if (row==1){
	log.info('Расписание найдено')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

 def activeLpuSchedule=sql.rows(sql_query)
 if (activeLpuSchedule[0].IS_ACTIVE==0){
 	log.info('Расписание в РиР1 деактивировано')
 	}
 else {
 	testRunner.fail("Расписание в РиР1 не деактивировано")
 	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка деактивации расписания МУ в РиР2" id="f21e2ff1-0993-419f-a701-f809e66cf6e4"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  def startSchedule= testRunner.testCase.testSuite.getPropertyValue("startSchedule")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT * FROM SCHEDULE WHERE MEDICAL_FACILITY_ID="+moId+" AND START_DATE =TIMESTAMP '"+startSchedule+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endSchedule+" 00:00:00.000000'")

row = sql(sql_query)
if (row==1){
	log.info('Расписание найдено')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

 def activeSchedule=sql.rows(sql_query)

 
 if (activeSchedule[0].IS_ACTIVE=='0'){
 	log.info('Расписание в РиР2 деактивировано')
 	}
 else {
 	testRunner.fail("Расписание в РиР2 не деактивировано")
 	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита2" id="caa1c54c-6a71-4703-8302-f531317d7d09"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='deactivateScheduleForBranch' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)

int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="groovy" name="Подготовка расписаний для обновления" id="d399d25b-afd7-49f6-adef-e64d113adcb3"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

  def lpuScheduleId= testRunner.testCase.getPropertyValue("lpuScheduleId")
  def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")
  def ScheduleId= testRunner.testCase.getPropertyValue("ScheduleId")

sql.execute("UPDATE lpu_schedule SET END_DATE = TO_TIMESTAMP('"+endSchedule+"', 'YYYY-MM-DD')-1 WHERE LPU_SCHEDULE_ID ="+lpuScheduleId)

   
username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);



   sql.execute("UPDATE schedule SET END_DATE = TO_TIMESTAMP('"+endSchedule+"', 'YYYY-MM-DD')-1 WHERE ID ="+ScheduleId)</script></con:config></con:testStep><con:testStep type="request" name="updateScheduleForBranch" id="2d8aaf31-8665-4768-ac21-7070e30ec19a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>updateScheduleForBranch</con:operation><con:request name="updateScheduleForBranch" id="67572531-87bd-4cac-aa82-c8e7152c0e7a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">\r
            <wsse:Username>${#Project#securityUsername}</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>${#Project#systemName}</user:systemName>\r
         <user:userName>${#Project#userName}</user:userName>\r
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>\r
         <user:userRights/>\r
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:updateScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="2"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="2"/>\r
         <v1:schedulePeriod>\r
            <v1:start>${#TestSuite#startSchedule}</v1:start>\r
            <v1:end>${#TestSuite#endSchedule}</v1:end>\r
         </v1:schedulePeriod>\r
      </typ:updateScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b910cc44-07ae-414e-a387-49724adc0c9f"/><con:assertion type="SOAP Fault Assertion" id="3085ec30-fd21-4f2c-85ef-5bfef2e183c8" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="b5bfca68-78ad-49a7-9a77-1113aab5afd0" name="Contains versionRIR"><con:configuration><token>versionRIR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b031d3f-e9a2-48d9-8ba3-45a1b23f9f4d" name="versionRIR2"><con:configuration><token>versionRIR2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка обновления расписания МУ в РиР1" id="fd105b93-4d20-4c6e-93de-143a9fa8e65c"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def lpuScheduleId= testRunner.testCase.getPropertyValue("lpuScheduleId")
def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query=("SELECT LPU_ID, to_char(END_DATE, 'YYYY-MM-DD') AS END_DATE FROM LPU_SCHEDULE WHERE LPU_SCHEDULE_ID ="+lpuScheduleId)
/*log.info(sql_query)
log.info(sql.rows(sql_query))*/

 def endLpuSchedule=sql.rows(sql_query)

 assert endLpuSchedule[0].END_DATE == endSchedule
 log.info('Расписание в РиР1 обновлено')
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка обновления расписания МУ в РиР2" id="9b28496c-13f6-4eee-81c6-2b76d904f414"><con:settings/><con:config><script>import groovy.sql.Sql

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def ScheduleId= testRunner.testCase.getPropertyValue("ScheduleId")
def endSchedule= testRunner.testCase.testSuite.getPropertyValue("endSchedule")

String  sql_query2=("SELECT to_char(END_DATE, 'YYYY-MM-DD') AS END_DATE  FROM SCHEDULE WHERE ID ="+ScheduleId)
/*log.info(sql_query)
log.info(sql.rows(sql_query))*/

 def endRiR2Schedule=sql.rows(sql_query2)

 assert endRiR2Schedule[0].END_DATE == endSchedule
 log.info('Расписание в РиР2 обновлено')</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита3" id="0cebfdb4-66ee-4f72-aad8-c3f8bbc8dd10"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+"  AND METHOD_NAME ='updateScheduleForBranch' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)

int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="request" name="copySchedule" id="0b3d0aff-f4a7-41c0-a245-120e061c17b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>copySchedule</con:operation><con:request name="copySchedule" id="eb123b2c-33cc-466e-8546-e28a9c1024cc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:copyScheduleRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleIdRIR>${#TestCase#lpuScheduleId}</typ:scheduleIdRIR>\r
         <typ:scheduleIdRIR2>${#TestCase#ScheduleId}</typ:scheduleIdRIR2>\r
         <v1:schedulePeriod>\r
            <v1:start>${#TestSuite#startScheduleForCopy}</v1:start>\r
            <v1:end>${#TestSuite#endScheduleForCopy}</v1:end>\r
         </v1:schedulePeriod>\r
      </typ:copyScheduleRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d28a6111-d2d9-41a1-9301-726aca50bdbe"/><con:assertion type="SOAP Fault Assertion" id="e74473e7-27d5-4850-91ee-14801482c32e" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="7645f0ad-ef41-43ce-87fe-7a0b48c9797a" name="Contains scheduleIdRIR"><con:configuration><token>scheduleIdRIR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="012d3078-cbab-4765-ae7f-334abba13b15" name="Contains scheduleIdRIR2" disabled="true"><con:configuration><token>scheduleIdRIR2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Получить идентификаторы расписаний2" id="4a157ae2-f77e-441e-b387-935789590eb0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>scheduleRIR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>copySchedule</con:sourceStep><con:sourcePath>declare namespace soap='http://www.w3.org/2003/05/soap-envelope';
declare namespace ns1='http://emias.mos.ru/supp/rir2/core/v1/';
declare namespace ns2='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/';
declare namespace ns3='http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/';
declare namespace ns4='http://emias.mos.ru/system/v1/userContext/';
declare namespace ns5='http://emias.mos.ru/system/v1/faults/';
//*:scheduleIdRIR</con:sourcePath><con:targetType>lpuCopiedScheduleId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Проверка копирования расписания МУ в РиР1" id="9c7d8a16-9308-48ab-8e31-84b3ad8ba03b"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
def startScheduleForCopy= testRunner.testCase.testSuite.getPropertyValue("startScheduleForCopy")
def endScheduleForCopy= testRunner.testCase.testSuite.getPropertyValue("endScheduleForCopy")

String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_ID ="+moId+" AND START_DATE =TIMESTAMP '"+startScheduleForCopy+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endScheduleForCopy+" 00:00:00.000000'")
row = sql(sql_query)
if (row==1){
	log.info('Расписание скопировано корректно')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка копирования расписания МУ в РиР2" id="c84de0af-e699-4e32-9919-1afbd31b9017"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
def startScheduleForCopy= testRunner.testCase.testSuite.getPropertyValue("startScheduleForCopy")
def endScheduleForCopy= testRunner.testCase.testSuite.getPropertyValue("endScheduleForCopy")

String  sql_query=("SELECT * FROM SCHEDULE WHERE MEDICAL_FACILITY_ID="+moId+" AND START_DATE =TIMESTAMP '"+startScheduleForCopy+" 00:00:00.000000' AND END_DATE =TIMESTAMP '"+endScheduleForCopy+" 00:00:00.000000'")

row = sql(sql_query)
if (row==1){
	log.info('Расписание скопировано корректно')
	}
else{
	testRunner.fail("Расписание не найдено")
	}
	assert row == 1

def copiedSchedule= sql.rows(sql_query)
String CopiedScheduleId = copiedSchedule.ID[0]
testRunner.testCase.setPropertyValue("CopiedScheduleId",CopiedScheduleId)</script></con:config></con:testStep><con:testStep type="request" name="deleteScheduleForBranch" id="e487ed7e-d8e3-404c-8889-2c992921969e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>deleteScheduleForBranch</con:operation><con:request name="deleteScheduleForBranch" id="0611e62c-458b-4d79-841c-c09f09dd7c28"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
     <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:deleteScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuCopiedScheduleId}" version="0"/>\r
         <typ:scheduleRIR2 id="${#TestCase#CopiedScheduleId}" version="0"/>\r
      </typ:deleteScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e37dca6f-d698-4e18-8474-670e795da546"/><con:assertion type="SOAP Fault Assertion" id="24694060-7054-46db-ae7b-90fcf796f530" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка удаления расписания МУ в РиР1" id="6ec4b47e-4c23-4283-89ba-5a164e1a4bc4"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def lpuCopiedScheduleId= testRunner.testCase.getPropertyValue("lpuCopiedScheduleId")

String  sql_query=("SELECT * FROM LPU_SCHEDULE WHERE LPU_SCHEDULE_ID ="+lpuCopiedScheduleId)
/*log.info(sql_query)
log.info(sql.rows(sql_query))*/

 def LpuSchedule=sql(sql_query)

 assert LpuSchedule == 0
 log.info('Расписание в РиР1 удалено')
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка удаления расписания МУ в РиР2" id="d5f445c7-b7c8-4016-a762-392facfe437f"><con:settings/><con:config><script>import groovy.sql.Sql

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

def CopiedScheduleId= testRunner.testCase.getPropertyValue("CopiedScheduleId")

String  sql_query=("SELECT *  FROM SCHEDULE WHERE ID ="+CopiedScheduleId)
/*log.info(sql_query)
log.info(sql.rows(sql_query))*/

 def Schedule=sql(sql_query)

 assert Schedule == 0
 log.info('Расписание в РиР2 удалено')</script></con:config></con:testStep><con:testStep type="groovy" name="Проверка отстутствия ошибок в БД Композита4" id="a658e12e-e604-42a8-92d4-3f260e0d531b"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_composite_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);

 def moId= testRunner.testCase.testSuite.getPropertyValue("moId")
  //def startSchedule= testRunner.testCase.getPropertyValue("startSchedule")
  // def endSchedule= testRunner.testCase.getPropertyValue("endSchedule")

//Проверить статусы риров в композите
String  sql_query=("SELECT * FROM (SELECT * FROM SYNCHRONIZATION_RIR sr WHERE MO_ID ="+moId+" AND METHOD_NAME ='deleteScheduleForBranch' ORDER BY REQUEST_TIME DESC) WHERE  ROWNUM = 1")
//log.info(sql_query)
 def checkCompositeStatuses=sql.rows(sql_query)

int statusRIR1=checkCompositeStatuses[0].REQUEST_STATUS_RIR_1
int statusRIR2=checkCompositeStatuses[0].REQUEST_STATUS_RIR_2
 
 if (statusRIR1==4 &amp; statusRIR2 ==4){
 	log.info('Исполнение метода в РиР и РиР.2 зафиксировано в композите успешно')
 	}
 else if (statusRIR1 ==4) {
 	testRunner.fail("Исполнение метода в  РиР.2 зафиксировано в композите некорректно")
 	}
 	 else if (statusRIR2==4) {
 	testRunner.fail("Исполнение метода в РиР зафиксировано в композите некорректно")
 	}
 else {
 	testRunner.fail("Исполнение метода в РиР и РиР.2 зафиксировано в композите некорректно")
 	}

//проверка, что МУ не внесено в "заблокированные"
 String  sql_query2=("SELECT * FROM SYNCHRONIZATION_RIR_QUEUE WHERE MO_ID ="+moId)

row=sql(sql_query2)

 assert row == 0

 
</script></con:config></con:testStep><con:testStep type="request" name="deleteScheduleForBranch2" id="369ebbd8-29e9-43b5-ab1b-64e96dfe3158"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>scheduleSynchronizationServiceBinding</con:interface><con:operation>deleteScheduleForBranch</con:operation><con:request name="deleteScheduleForBranch2" id="0611e62c-458b-4d79-841c-c09f09dd7c28"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#compositeScheduleWSDL}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/supp/rir2/scheduleSynchronizationService/v1/types/" xmlns:v1="http://emias.mos.ru/supp/rir2/core/v1/">\r
   <soap:Header>\r
     <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-25145CA5C92E7F5041155145445404887">
            <wsse:Username>${#Project#securityUsername}</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <user:userContext>
         <user:systemName>${#Project#systemName}</user:systemName>
         <user:userName>${#Project#userName}</user:userName>
         <user:userRoleId>${#Project#userRoleId}</user:userRoleId>
         <user:userRights/>
         <user:jobExecutionId>${#Project#jobExecutionId}</user:jobExecutionId>
      </user:userContext>
   </soap:Header>\r
   <soap:Body>\r
      <typ:deleteScheduleForBranchRequest>\r
         <v1:medicalFacilityId>${#TestSuite#moId}</v1:medicalFacilityId>\r
         <v1:medicalOrganizationId>${#TestSuite#moId}</v1:medicalOrganizationId>\r
         <typ:scheduleRIR id="${#TestCase#lpuScheduleId}" version="3"/>\r
         <typ:scheduleRIR2 id="${#TestCase#ScheduleId}" version="3"/>\r
      </typ:deleteScheduleForBranchRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e37dca6f-d698-4e18-8474-670e795da546"/><con:assertion type="SOAP Fault Assertion" id="24694060-7054-46db-ae7b-90fcf796f530" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Удаление базового Расписаний МУ в РиР1" id="75be8f82-65ed-4352-9be9-b2ddc1067bb5"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir1_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir1_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir1_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);
def baselpuScheduleId= testRunner.testCase.getPropertyValue("baselpuScheduleId")
//log.info(baselpuScheduleId)

//Удаление  расписания МУ
 sql.execute("DELETE FROM LPU_SCHEDULE WHERE LPU_SCHEDULE_ID="+baselpuScheduleId)

</script></con:config></con:testStep><con:testStep type="groovy" name="Удаление базового Расписаний МУ в РиР2" id="86b73aa9-8121-4e8e-a1a2-fd16e4c7ae79"><con:settings/><con:config><script>import groovy.sql.Sql

/*if (context.dbConnect != null) {      
sql = context.dbConnect;*/

username =testRunner.testCase.testSuite.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.getPropertyValue("db_rir2_con")

sql = Sql.newInstance("jdbc:oracle:thin:"+username+"/"+password+dbconstring, username, password, "oracle.jdbc.driver.OracleDriver")
//log.info("jdbc:oracle:thin:"+username+"/"+password+dbconstring);
def baseScheduleId= testRunner.testCase.getPropertyValue("baseScheduleId")
log.info(baseScheduleId)

//Удаление  расписания МУ
 sql.execute("DELETE FROM SCHEDULE WHERE ID="+baseScheduleId)
</script></con:config></con:testStep><con:properties><con:property><con:name>muId4</con:name><con:value>10000283</con:value></con:property><con:property><con:name>muId3</con:name><con:value>10000245</con:value></con:property><con:property><con:name>muId2</con:name><con:value>10000456</con:value></con:property><con:property><con:name>muId1</con:name><con:value>149</con:value></con:property><con:property><con:name>moId</con:name><con:value>141</con:value></con:property><con:property><con:name>db_rir2_composite_user</con:name><con:value>RIR2COMP</con:value></con:property><con:property><con:name>db_rir2_composite_password</con:name><con:value>RIR2COMP</con:value></con:property><con:property><con:name>db_rir2_composite_con</con:name><con:value>@//10.2.172.16:1521/rir2.mosgorzdrav.local</con:value></con:property><con:property><con:name>db_rir1_user</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>db_rir1_password</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>db_rir1_con</con:name><con:value>@//10.2.172.21:1521/emiasdb</con:value></con:property><con:property><con:name>db_rir2_user</con:name><con:value>EMIAS_RIR2</con:value></con:property><con:property><con:name>db_rir2_password</con:name><con:value>EMIAS_RIR2</con:value></con:property><con:property><con:name>db_rir2_con</con:name><con:value>@//10.2.172.16:1521/rir2.mosgorzdrav.local</con:value></con:property><con:property><con:name>lpuScheduleId</con:name><con:value>22315508</con:value></con:property><con:property><con:name>ScheduleId</con:name><con:value>14089347</con:value></con:property><con:property><con:name>baselpuScheduleId</con:name><con:value>-1001</con:value></con:property><con:property><con:name>baseScheduleId</con:name><con:value>-1086</con:value></con:property><con:property><con:name>currentDate</con:name><con:value>2021-02-12</con:value></con:property><con:property><con:name>lpuCopiedScheduleId</con:name><con:value>22316533</con:value></con:property><con:property><con:name>CopiedScheduleId</con:name><con:value>14089348</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>muId4</con:name><con:value>10000283</con:value></con:property><con:property><con:name>muId3</con:name><con:value>10000245</con:value></con:property><con:property><con:name>muId2</con:name><con:value>10000456</con:value></con:property><con:property><con:name>muId1</con:name><con:value>149</con:value></con:property><con:property><con:name>moId</con:name><con:value>141</con:value></con:property><con:property><con:name>db_rir2_composite_user</con:name><con:value>RIR2COMP</con:value></con:property><con:property><con:name>db_rir2_composite_password</con:name><con:value>RIR2COMP</con:value></con:property><con:property><con:name>db_rir2_composite_con</con:name><con:value>@//10.2.172.16:1521/rir2.mosgorzdrav.local</con:value></con:property><con:property><con:name>db_rir1_user</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>db_rir1_password</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>db_rir1_con</con:name><con:value>@//10.2.172.21:1521/emiasdb</con:value></con:property><con:property><con:name>db_rir2_user</con:name><con:value>EMIAS_RIR2</con:value></con:property><con:property><con:name>db_rir2_password</con:name><con:value>EMIAS_RIR2</con:value></con:property><con:property><con:name>db_rir2_con</con:name><con:value>@//10.2.172.16:1521/rir2.mosgorzdrav.local</con:value></con:property><con:property><con:name>baseScheduleStart</con:name><con:value>2121-01-01</con:value></con:property><con:property><con:name>baseScheduleEnd</con:name><con:value>2121-01-31</con:value></con:property><con:property><con:name>startSchedule</con:name><con:value>2121-02-01</con:value></con:property><con:property><con:name>endSchedule</con:name><con:value>2121-02-28</con:value></con:property><con:property><con:name>startScheduleForCopy</con:name><con:value>2121-03-01</con:value></con:property><con:property><con:name>endScheduleForCopy</con:name><con:value>2121-03-31</con:value></con:property></con:properties></con:testSuite><con:properties><con:property><con:name>securityUsername</con:name><con:value>KPI_APC_METHODIST/AnGordeev</con:value></con:property><con:property><con:name>systemName</con:name><con:value>KPI_APC_METHODIST</con:value></con:property><con:property><con:name>userName</con:name><con:value>AnGordeev</con:value></con:property><con:property><con:name>userRoleId</con:name><con:value>4</con:value></con:property><con:property><con:name>jobExecutionId</con:name><con:value>10992269</con:value></con:property><con:property><con:name>compositeScheduleWSDL</con:name><con:value>http://rir2composite.test.emias.mos.ru/api/Schedule</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>