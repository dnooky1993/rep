<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="DBUSER" elementType="Argument">
            <stringProp name="Argument.name">DBUSER</stringProp>
            <stringProp name="Argument.value">EMIAS_RIR2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">логин БД РиР2</stringProp>
          </elementProp>
          <elementProp name="DBPASSWORD" elementType="Argument">
            <stringProp name="Argument.name">DBPASSWORD</stringProp>
            <stringProp name="Argument.value">EMIAS_RIR2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">пароль БД РиР2</stringProp>
          </elementProp>
          <elementProp name="DBCONSTRING" elementType="Argument">
            <stringProp name="Argument.name">DBCONSTRING</stringProp>
            <stringProp name="Argument.value">@10.2.172.16:1521</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">адрес БД РиР2</stringProp>
          </elementProp>
          <elementProp name="SAVE_DIR" elementType="Argument">
            <stringProp name="Argument.name">SAVE_DIR</stringProp>
            <stringProp name="Argument.value">/tests/preconditionData</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Директория для сохранения данных</stringProp>
          </elementProp>
          <elementProp name="arSchedule" elementType="Argument">
            <stringProp name="Argument.name">arSchedule</stringProp>
            <stringProp name="Argument.value">arschedule.rir2.test.emias.mos.ru</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sarSchedule" elementType="Argument">
            <stringProp name="Argument.name">sarSchedule</stringProp>
            <stringProp name="Argument.value">sarschedule.rir2.test.emias.mos.ru</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="resources" elementType="Argument">
            <stringProp name="Argument.name">resources</stringProp>
            <stringProp name="Argument.value">resources.rir2.test.emias.mos.ru</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="schedule" elementType="Argument">
            <stringProp name="Argument.name">schedule</stringProp>
            <stringProp name="Argument.value">schedule.rir2.test.emias.mos.ru</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="route" elementType="Argument">
            <stringProp name="Argument.name">route</stringProp>
            <stringProp name="Argument.value">route.rir2.test.emias.mos.ru</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="journal" elementType="Argument">
            <stringProp name="Argument.name">journal</stringProp>
            <stringProp name="Argument.value">journal.rir2.test.emias.mos.ru</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DIAG_COUNT" elementType="Argument">
            <stringProp name="Argument.name">DIAG_COUNT</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Количество блоков diagnosis в методе createRoute</stringProp>
          </elementProp>
          <elementProp name="DMP_COUNT" elementType="Argument">
            <stringProp name="Argument.name">DMP_COUNT</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Количество блоков directMedPosition в методе createRoute</stringProp>
          </elementProp>
          <elementProp name="RT_COUNT" elementType="Argument">
            <stringProp name="Argument.name">RT_COUNT</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Количество блоков receiveTretment в методе createRoute</stringProp>
          </elementProp>
          <elementProp name="DMO_COUNT" elementType="Argument">
            <stringProp name="Argument.name">DMO_COUNT</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Количество блоков medicalOrganization в методе createRoute(первая секция)</stringProp>
          </elementProp>
          <elementProp name="MF_COUNT" elementType="Argument">
            <stringProp name="Argument.name">MF_COUNT</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Количество блоков medicalFacility в методе createRoute(первая секция)</stringProp>
          </elementProp>
          <elementProp name="MO_COUNT" elementType="Argument">
            <stringProp name="Argument.name">MO_COUNT</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Количество блоков medicalOrganization в методе createRoute(вторая секция)</stringProp>
          </elementProp>
          <elementProp name="RMU_COUNT" elementType="Argument">
            <stringProp name="Argument.name">RMU_COUNT</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Количество блоков medecalFacility в методе createRoute(вторая секция)</stringProp>
          </elementProp>
          <elementProp name="PARAM_COUNT" elementType="Argument">
            <stringProp name="Argument.name">PARAM_COUNT</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Количество параметров для методов setCompositeResourceParameter и resetCompositeResourceParameter</stringProp>
          </elementProp>
          <elementProp name="mfIdNew" elementType="Argument">
            <stringProp name="Argument.name">mfIdNew</stringProp>
            <stringProp name="Argument.value">-10000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moIdNew" elementType="Argument">
            <stringProp name="Argument.name">moIdNew</stringProp>
            <stringProp name="Argument.value">-10000000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="moIdSuit2" elementType="Argument">
            <stringProp name="Argument.name">moIdSuit2</stringProp>
            <stringProp name="Argument.value">-9999999</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">конфигурационный файл с переменными</stringProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="Database Connection" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">DB_VARIABLE</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@//10.2.172.16:1521/rir2.mosgorzdrav.local</stringProp>
        <stringProp name="driver">oracle.jdbc.OracleDriver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">EMIAS_RIR2</stringProp>
        <stringProp name="poolMax">100</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">EMIAS_RIR2</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Preconditions Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Preconditions for SOAP Requests(JDBC select)" enabled="true"/>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell SOAP property converting" enabled="true">
            <stringProp name="BeanShellSampler.query">// Выполнение этого скрипта предполагает наличие заранее выгруженных пропертей по пути: /soap/otherData.txt

import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

	   String counter = &quot;&quot;;
        String dnId = &quot;&quot;;
        String dnIdcreatedByTest = &quot;&quot;;
        String epId = &quot;&quot;;
        String epIdcreatedByTest = &quot;&quot;;
        String moId = &quot;&quot;;
        String pnId = &quot;&quot;;
        String pnIdcreatedByTest = &quot;&quot;;
        String prodCalId = &quot;&quot;;
        String prodCalIdcreatedByTest= &quot;&quot;;
        String resTypeArId = &quot;&quot;;
        String resTypeArIdcreatedByTest = &quot;&quot;;
        String resTypeSarId = &quot;&quot;;
        String resTypeSarIdcreatedByTest = &quot;&quot;;
        String routeId = &quot;&quot;;
        String rpcmId = &quot;&quot;;
        String rpcmIdcreatedByTest = &quot;&quot;;
        String rtlmCode = &quot;&quot;;
        String rtlmId = &quot;&quot;;
        String rtlmIdcreatedByTest = &quot;&quot;;
        String scheduleId = &quot;&quot;;
        String scheduleNewPeriodEnd = &quot;&quot;;
        String scheduleNewPeriodStart = &quot;&quot;;
        String schedulePeriodEnd = &quot;&quot;;
        String schedulePeriodStart = &quot;&quot;;
        String scheduleVersion = &quot;&quot;;
        String specId = &quot;&quot;;
        String specIdcreatedByTest = &quot;&quot;;
        String tcId = &quot;&quot;;
        String tcIdcreatedByTest = &quot;&quot;;
        String tId = &quot;&quot;;
        String tIdcreatedByTest = &quot;&quot;;
        String trkId = &quot;&quot;;
        String ctrkIdcreatedByTest = &quot;&quot;;
        String aoId = &quot;&quot;;
        String aoIdcreatedByTest = &quot;&quot;;
        String agId = &quot;&quot;;
        String agIdcreatedByTest = &quot;&quot;;
        String arSchruleTypeId = &quot;&quot;;
        String sarSchruleTypeId = &quot;&quot;;
        String arSchruleTypeIdcreatedByTest = &quot;&quot;;
        String sarSchruleTypeIdcreatedByTest = &quot;&quot;;
        
        String filePath = &quot;/soap/otherData.txt&quot;;
        HashMap map = new HashMap();
        // bsh.shared.map = new java.util.HashMap();
       
        String line;
        BufferedReader reader = new BufferedReader(new FileReader(filePath));
        while ((line = reader.readLine()) != null)
        {
            String[] parts = line.split(&quot;=&quot;, 2);
            if (parts.length &gt;= 2)
            {
                String key = parts[0];
                String value = parts[1];
                map.put(key, value);
            } else {
                System.out.println(&quot;ignoring line: &quot; + line);
            }
        }
        
        bsh.shared.myMap = map;
        reader.close();
        counter = map.get(&quot;counter&quot;);
        scheduleNewPeriodStart = map.get(&quot;scheduleNewPeriodStart&quot;);
        scheduleNewPeriodEnd = map.get(&quot;scheduleNewPeriodEnd&quot;);
        arSchruleTypeId = map.get(&quot;arSchruleTypeId&quot;);
        sarSchruleTypeId = map.get(&quot;sarSchruleTypeId&quot;);
        agId = map.get(&quot;agId&quot;);
        tId = map.get(&quot;tId&quot;);
        moId = map.get(&quot;moId&quot;);
        routeId = map.get(&quot;routeId&quot;);
        rtlmCode = map.get(&quot;rtlmCode&quot;);

        // getArScheduleList, getSarScheduleList, createArScheduleRule, updateArScheduleRule, createSarScheduleRule, updateSarScheduleRule
        props.put(&quot;schPerStart&quot;, scheduleNewPeriodStart);
        props.put(&quot;schPerEnd&quot;, scheduleNewPeriodEnd);
        
        // createArScheduleRule, updateArScheduleRule, createSarScheduleRule, updateSarScheduleRule
        props.put(&quot;arSchruleTypeId&quot;, arSchruleTypeId);
        props.put(&quot;agId&quot;, agId);
        props.put(&quot;tId&quot;, tId);
        props.put(&quot;moIdACH&quot;, moId);

        // createSarScheduleRule, updateSarScheduleRule
        props.put(&quot;sarSchruleTypeId&quot;, sarSchruleTypeId);

        // checkRouteInSchedule
        props.put(&quot;routeId&quot;, routeId);

        // createRoute, editRoute
        props.put(&quot;rtlmCode&quot;, rtlmCode);


        
 </stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. ArScheduleService. GetArSchedule &amp; GetArScheduleList" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select rs.RESOURCE_ID as arId, rs.ID as arScheduleId from &quot;RESOURCE&quot; res
join RESOURCE_SCHEDULE rs on rs.RESOURCE_ID = res.ID
where res.RESOURCE_KIND = &apos;AVAILABLE_RESOURCE&apos;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getArSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/ArSchedule/&quot;;
	String name = &quot;getArScheduleList.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. ArScheduleService. CreateArSchedule" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select rs.ID as arScheduleId from &quot;RESOURCE&quot; res
join RESOURCE_SCHEDULE rs on rs.RESOURCE_ID = res.ID
where res.RESOURCE_KIND = &apos;AVAILABLE_RESOURCE&apos; AND res.MEDICAL_ORGANIZATION_ID = ${moIdSuit2}</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">arSchedId</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getArSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/ArSchedule/&quot;;
	String name = &quot;createArSchedule.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. for clearArSchedule" enabled="false">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select * from (
                  select &quot;RESOURCE&quot;.id                  as resource_id,
                         &quot;RESOURCE&quot;.MEDICAL_FACILITY_ID as medical_facility_id,
                         max(SCHEDULE.END_DATE)         as current_schedule_end_date
                  from &quot;RESOURCE&quot;
                           left join RESOURCE_SCHEDULE on &quot;RESOURCE&quot;.ID = RESOURCE_SCHEDULE.RESOURCE_ID
                           left join SCHEDULE on RESOURCE_SCHEDULE.SCHEDULE_ID = SCHEDULE.ID
                  where RESOURCE_KIND = &apos;AVAILABLE_RESOURCE&apos;
                  group by &quot;RESOURCE&quot;.id, &quot;RESOURCE&quot;.MEDICAL_FACILITY_ID
              ) where current_schedule_end_date is not null</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">RES_ID,MFAC_ID,CSED</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/ArSchedule/&quot;;
	String name = &quot;clearArSchedule.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. SarScheduleService.GetSarSchedule &amp; GetSarScheduleList" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select rs.RESOURCE_ID as sarId, rs.ID as sarScheduleId from &quot;RESOURCE&quot; res
join RESOURCE_SCHEDULE rs on rs.RESOURCE_ID = res.ID
where res.RESOURCE_KIND = &apos;SPECIAL_AVAILABLE_RESOURCE&apos;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">SARS_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSarSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/sarSchedule/&quot;;
	String name = &quot;getSarScheduleList.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. ArScheduleService. CreateSarSchedule" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select rs.ID as sarScheduleId from &quot;RESOURCE&quot; res
join RESOURCE_SCHEDULE rs on rs.RESOURCE_ID = res.ID
where res.RESOURCE_KIND = &apos;SPECIAL_AVAILABLE_RESOURCE&apos; AND res.MEDICAL_ORGANIZATION_ID = ${moIdSuit2}</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">arSchedId</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getArSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/SarSchedule/&quot;;
	String name = &quot;createSarSchedule.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. for searchSarTreatments" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT e.MEDICAL_ORGANIZATION_ID , tc.CODE TREATMENT_CATEGORY_CODE FROM EQUIPMENT_TREATMENT et 
JOIN TREATMENT t ON t.ID = et.TREATMENT_ID
JOIN TREATMENT_CATEGORY tc ON tc.ID =t.TREATMENT_CATEGORY_ID
JOIN EQUIPMENT e ON et.EQUIPMENT_ID =e.id</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">MEDO_ID,TCC_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor 2" enabled="false">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">setStrictJava (true);

        String amount2 = &quot;39&quot;;
        log.info(&quot;AMOUNT: &quot;, amount2);
        int am = Integer.parseInt(amount2);
        log.info(&quot;AMOUNT INT: &quot;, am);
        Random random = new Random();
        int rnd = random.nextInt(am);
        if(rnd == 0)
            rnd++;
        String medo_id = &quot;MEDO_ID_&quot; + rnd;
        String tcc_id = &quot;TCC_ID_&quot; + rnd;
        
        String soapMedO = vars.get(medo_id);
        String soapTcc = vars.get(tcc_id);
        vars.put(&quot;SOAP_MO_ID&quot;, soapMedO);
        vars.put(&quot;SOAP_TCC_ID&quot;, soapTcc);

                               
       
          
       </stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/sarSchedule/&quot;;
	String name = &quot;searchSarTreatments.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. CompositeResource.Select Resource Id&apos;s" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT ID FROM &quot;RESOURCE&quot;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">CR_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getCompositeResource</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/CompositeResource/&quot;;
	String name = &quot;getCompositeResource.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. CompositeResource.Select MedOrg Id&apos;s" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT MEDICAL_ORGANIZATION_ID FROM &quot;RESOURCE&quot; 
WHERE MEDICAL_ORGANIZATION_ID IS NOT NULL</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">MOR_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getCompositeResource</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/CompositeResource/&quot;;
	String name = &quot;getCompositeResourceList.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. CompositeResource.for getCompositeResourceByIncludedEntity" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT PARENT_ID FROM &quot;RESOURCE&quot;
WHERE RESOURCE_KIND =&apos;SPECIAL_AVAILABLE_RESOURCE&apos;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">PAR_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getCompositeResource</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/CompositeResource/&quot;;
	String name = &quot;getCompositeResourceByIncludedEntity.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Create MO. For setCompositeResourceParameter(Возможно не нужны)" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO
        MEDICAL_ORGANIZATION
        (
                ID       ,
                ARCHIVED ,
                NAME     ,
                NAME_FULL,
                OGRN     ,
                CLOSED   ,
                CREATED
        )
        VALUES
        (
        (
                SELECT
                        id-1 AS next_id
                FROM
                        (
                                SELECT
                                        COALESCE(MIN(ID), 0) AS id
                                FROM
                                        MEDICAL_ORGANIZATION )
                WHERE
                        ROWNUM = 1
        )
        ,0               ,
        &apos;название&apos;       ,
        &apos;полное название&apos;,
        1037700223604    ,
        NULL             ,
        TIMESTAMP&apos;1991-12-25 00:00:00.000000&apos;
        )</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getCompositeResource</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Create MU. For setCompositeResourceParameter(Возможно не нужны)" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO
        MEDICAL_FACILITY
        (
                ID                     ,
                ARCHIVED               ,
                MEDICAL_ORGANIZATION_ID,
                NAME_SHORT             ,
                NAME                   ,
                NAME_FULL              ,
                IS_HEAD                ,
                ADDRESS_OBJECT_ID      ,
                CLOSED                 ,
                CREATED
        )
        VALUES
        (
        (
                SELECT
                        id-1 AS next_id
                FROM
                        (
                                SELECT
                                        COALESCE(MIN(ID), 0) AS id
                                FROM
                                        MEDICAL_FACILITY )
                WHERE
                        ROWNUM = 1
        )
        ,
        0,
        (
                SELECT
                        COALESCE(MIN(ID), 0) AS id
                FROM
                        MEDICAL_ORGANIZATION ),
        &apos;короткое название&apos;                   ,
        &apos;название&apos;                            ,
        &apos;полное название&apos;                     ,
        0                                     ,
        (
                SELECT
                        COALESCE(MIN(ID), 0) AS id
                FROM
                        ADDRESS_OBJECT ),
        NULL                            ,
        TIMESTAMP&apos;1991-12-25 00:00:00.000000&apos;
        )</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getCompositeResource</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Create ComRes. For setCompositeResourceParameter" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO
        &quot;RESOURCE&quot;
        (
                ID,
                ARCHIVED,
                RESOURCE_KIND,
                PARENT_ID,
                MEDICAL_FACILITY_ID,
                SYNC_STATUS,
                SYNC_STATUS_CHANGED
        )
        VALUES
        (
        (
                SELECT
                        id-1 AS next_id
                FROM
                        (
                                SELECT
                                        COALESCE(MIN(ID), 0) AS id
                                FROM
                                        &quot;RESOURCE&quot; )
                WHERE
                        ROWNUM = 1
        )
        ,
        0,
        &apos;SPECIAL_AVAILABLE_RESOURCE&apos;,
        (
                SELECT
                        id-1 AS next_id
                FROM
                        (
                                SELECT
                                        COALESCE(MIN(PARENT_ID), 0) AS id
                                FROM
                                        &quot;RESOURCE&quot; )
                WHERE
                        ROWNUM = 1),
        (
                SELECT
                        COALESCE(MIN(ID), 0) AS id
                FROM
                        MEDICAL_FACILITY ),
        &apos;ERROR&apos;,
        TIMESTAMP &apos;2020-08-11 15:08:00.029285&apos;
        )</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getCompositeResource</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Create ComRes.Select Resource" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM &quot;RESOURCE&quot; WHERE ARCHIVED=0</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getCompositeResource</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/CompositeResource/&quot;;
	String name = &quot;setCompositeResourceParameter.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. ScheduleService. Select Schedule Id&apos;s" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT distinct SCHEDULE_ID FROM RESOURCE_SCHEDULE</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">S_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Schedule/&quot;;
	String name = &quot;getSchedule.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. ScheduleService. Select ScheduleList Id&apos;s" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT MEDICAL_FACILITY_ID FROM SCHEDULE</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">MF_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Schedule/&quot;;
	String name = &quot;getScheduleList.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. ScheduleService. for getWorkHoursForBranch" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT MEDICAL_FACILITY_ID FROM MEDICAL_FACILITY_WORKHOURS</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">MEF_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Schedule/&quot;;
	String name = &quot;getWorkHoursForBranch.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. MF for setWorkHoursForBranch and removeWorkHoursForBranch" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM MEDICAL_FACILITY WHERE id &lt;= ${mfIdNew}</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getCompositeResource</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.nio.file.Files;
import java.nio.file.Path;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

 public void readTxtFile() throws IOException {
String path = &quot;/soap/setAndRemoveWH.txt&quot;;
String counter = &quot;&quot;;
String moId = &quot;&quot;;
String mfId = &quot;&quot;;
String aoId =&quot;&quot;;
Path fileName = Path.of(path);
        String actual = Files.readString(fileName);
        log.info(&quot;FILE: &quot; + actual);
        String regexString = &quot;counter=(.*)\\RmoId=(.*)\\RmfId=(.*)\\RaoId=(.*)&quot;;
        Matcher m = Pattern.compile(regexString).matcher(actual);
        while(m.find())
        {
            counter = m.group(1);
            moId = m.group(2);
            mfId = m.group(3);
            aoId = m.group(4);

            vars.put(&quot;Cnt&quot;, counter);
            vars.put(&quot;moIdNew&quot;, moId);
            vars.put(&quot;mfIdNew&quot;, mfId);
            vars.put(&quot;aoId&quot;, aoId);
        }
 }
 log.info(&quot;Medical Facility VALUE for set/removeWorkHours for branch IS: &quot; + vars.get(&quot;mfIdNew&quot;));</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Schedule/&quot;;
	String name = &quot;setAndRemoveWrkHrsForBranch.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. for creareRoute(directMedPosition NPC_ID)" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT NSI_POSITION_CODE_CODE FROM ROUTE_POSITION_CODE_MAPPING</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">NPC_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Route/&quot;;
	String name = &quot;NPC_ID.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(NPC_ID,${NPC_ID_1})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. for creareRoute(receiveTreatment TLDP_ID)" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT TREATMENT_CODE FROM ROUTE_TREATMENT_LDP_MAPPING</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">TLDP_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Route/&quot;;
	String name = &quot;TLDP_ID.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(TLDP_ID,${TLDP_ID_1})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. RouteService. for getRoute" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id FROM ROUTE</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">R_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Route/&quot;;
	String name = &quot;getRoute.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. RouteService. for getRouteHistory" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT ROUTE_ID FROM ROUTE_JOURNAL</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">RH_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Route/&quot;;
	String name = &quot;getRouteHistory.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. RouteService. for searchRoutes" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT MEDICAL_ORGANIZATION_ID FROM DIRECT_MEDICAL_ORGANIZATIONS</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">M_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Route/&quot;;
	String name = &quot;searchRoutes.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. RouteService. for searchRoutesForAssignment" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT
    dmo.MEDICAL_ORGANIZATION_ID DIRECT_MEDICAL_ORGANIZATION_ID,
    dmp.CODE DIRECT_MEDICAL_POSITION_CODE,
    TC.CODE TREATMENT_CATEGORY_CODE
FROM ROUTE r
JOIN DIRECT_MEDICAL_ORGANIZATIONS dmo ON dmo.ROUTE_ID =r.ID
JOIN DIRECT_MEDICAL_POSITIONS dmp ON dmp.ROUTE_ID=r.id
JOIN ROUTE_TREATMENTS rt ON rt.ROUTE_ID=r.ID
JOIN TREATMENT t ON t.ID=RT.TREATMENT_ID
JOIN TREATMENT_CATEGORY tc ON tc.id=t.TREATMENT_CATEGORY_ID</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">DMO_ID,DMP_ID,TC</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Route/&quot;;
	String name = &quot;searchRoutesForAssignment.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. JournalService. for getJournal" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT DISTINCT MU_ID FROM JOURNAL
WHERE code IN (
&apos;CREATE_RULE&apos;,
&apos;UPDATE_RULE&apos;,
&apos;DELETE_RULE&apos;,
&apos;COPY_RULES&apos;,
&apos;CREATE_MU_SCHEDULE&apos;,
&apos;COPY_MU_SCHEDULE&apos;,
&apos;CHANGE_MU_SCHEDULE_PERIOD&apos;,
&apos;CHANGE_MU_SCHEDULE_STATUS&apos;,
&apos;DELETE_MU_SCHEDULE&apos;,
&apos;CREATE_MO_SCHEDULE&apos;,
&apos;COPY_MO_SCHEDULE&apos;,
&apos;CHANGE_MO_SCHEDULE_PERIOD&apos;,
&apos;CHANGE_MO_SCHEDULE_STATUS&apos;,
&apos;DELETE_MO_SCHEDULE&apos;)</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">MEU_ID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Route/&quot;;
	String name = &quot;getJournal.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. ScheduleService. Select MedFacility MIN value" enabled="false">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT MIN(ID) FROM MEDICAL_FACILITY mf</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">MFAC_MIN</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getArSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Schedule/&quot;;
	String name = &quot;MedFac_MIN.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(MedFac_MIN,${MFAC_MIN_1})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. ScheduleService. Select MedOrg MIN value" enabled="false">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT MIN(ID) FROM MEDICAL_ORGANIZATION mo</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">MO_MIN</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">getArSchedule</stringProp>
          </JDBCSampler>
          <hashTree>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor SOHRANYATOR 3000" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">if (prev.getResponseCode().equals(&quot;200&quot;)){
	String res=prev.getResponseDataAsString();
	String path = &quot;${SAVE_DIR}/${__threadNum}/Schedule/&quot;;
	String name = &quot;MedOrg_MIN.csv&quot;;
	
	new File(path).mkdirs();
	f = new FileOutputStream(path + name, true);
	p = new PrintStream(f, true, &quot;UTF-8&quot;); 
	this.interpreter.setOut(p); 
	print(res);
	f.close();
}
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(MedOrg_MIN,${MO_MIN_1})}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="useGroupName">true</boolProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Async Methods" enabled="false">
        <stringProp name="TestPlan.comments">Для их корректного пуска необходимо запустить проксирующую утилиту</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="arScheduleService" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AsyncMethods" enabled="true"/>
          <hashTree>
            <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Copy and clearArSchedule" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="copyArScheduleSync" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/copyArScheduleSync?id=654439&amp;vid=654438</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="copyArSchedule" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/types/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:copyArScheduleRequest&gt;&#xd;
         &lt;typ:arScheduleIdFrom&gt;654439&lt;/typ:arScheduleIdFrom&gt;&#xd;
         &lt;typ:arScheduleIdTo&gt;654438&lt;/typ:arScheduleIdTo&gt;&#xd;
      &lt;/typ:copyArScheduleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${arSchedule}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/ArSchedule?wsdl</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/arScheduleServicePortType/copyArScheduleRequest&quot;</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="clearArScheduleSync" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/clearArScheduleSync?id=654438</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="arApplyChanges" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ar applyChanges and getStatus" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/applyChangesToArScheduleSync?id=616609</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Update ResourceSchedule" enabled="true">
                <stringProp name="dataSource">DB_VARIABLE</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">UPDATE RESOURCE_SCHEDULE SET STATUS=&apos;DIRTY&apos; WHERE ID=616609</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="sarScheduleService" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AsyncMethods" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Copy and clearSarSchedule" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="copySarScheduleSync" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/copySarScheduleSync?id=1719399&amp;vid=1719398</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="copySarSchedule" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:copySarScheduleRequest&gt;&#xd;
         &lt;typ:sarScheduleIdFrom&gt;1719399&lt;/typ:sarScheduleIdFrom&gt;&#xd;
         &lt;typ:sarScheduleIdTo&gt;1719398&lt;/typ:sarScheduleIdTo&gt;&#xd;
      &lt;/typ:copySarScheduleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/copySarScheduleRequest&quot;</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="clearSarSchedule OLD" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:clearSarScheduleRequest&gt;&#xd;
         &lt;typ:sarScheduleId&gt;655462&lt;/typ:sarScheduleId&gt;&#xd;
      &lt;/typ:clearSarScheduleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/clearSarScheduleRequest&quot;</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="clearSarScheduleSync" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/clearSarScheduleSync?id=1719398</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="sarApplyChanges" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sar applyChanges and getStatus" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/applyChangesToSarScheduleSync?id=1739879</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
                  <stringProp name="RegexExtractor.refname">SAR_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">id=(.+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">notFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Update ResourceSchedule" enabled="true">
                <stringProp name="dataSource">DB_VARIABLE</stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="query">UPDATE RESOURCE_SCHEDULE SET STATUS=&apos;DIRTY&apos; WHERE ID=${SAR_ID}</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="scheduleService" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AsyncMethods" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="copySchedule" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="copySchedule" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/copyScheduleSync?id=13638762</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/copyScheduleRequest&quot;</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. For deleteSchreduleForBranch" enabled="true">
                <stringProp name="dataSource">DB_VARIABLE</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT ID, VERSION FROM SCHEDULE WHERE MEDICAL_FACILITY_ID= -100010 AND START_DATE = TIMESTAMP &apos;2102-01-01 00:00:00.000000&apos;
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">ID_SCHEDULE, VER_SCHEDULE</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="deleteScheduleForBranch" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteScheduleForBranch" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/deleteScheduleForBranch?id=${ID_SCHEDULE_1}&amp;vid=${VER_SCHEDULE_1}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/deleteScheduleForBranchRequest&quot;</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="activateScheduleForHead" enabled="true"/>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. For activatecheduleForHead" enabled="true">
                <stringProp name="dataSource">DB_VARIABLE</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT VERSION FROM SCHEDULE WHERE ID = -1
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">VERSID</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">getSchedule</stringProp>
              </JDBCSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="activateScheduleForhead" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/activateScheduleForHead?id=-1&amp;vid=${VERSID_1}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/activateScheduleForHeadRequest&quot;</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="deactivateScheduleForHead" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. For deactivatecheduleForHead" enabled="true">
                <stringProp name="dataSource">DB_VARIABLE</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT VERSION FROM SCHEDULE WHERE ID = -1
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">VERID</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">getSchedule</stringProp>
              </JDBCSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deactivateScheduleForhead" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/deactivateScheduleForHead?id=-1&amp;vid=${VERID_1}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/deactivateScheduleForHeadRequest&quot;</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Methods for once only execution" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="createScheduleForHead" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller Async" enabled="true"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Select Version Schedule" enabled="true">
                <stringProp name="dataSource">DB_VARIABLE</stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="query">SELECT VERSION FROM SCHEDULE WHERE ID = -1</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="variableNames">VERSION_ID</stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="TestPlan.comments">getArSchedule</stringProp>
              </JDBCSampler>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="activateScheduleForHead" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/activateScheduleForHeadSync?id=-1&amp;vid=${VERSION_ID_1}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">SOAPAction</stringProp>
                      <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/activateScheduleForHeadRequest&quot;</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ScheduleForHead and getStatus" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/activateScheduleForHeadSync?id=-1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createScheduleForHead" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:createScheduleForHeadRequest&gt;&#xd;
         &lt;v1:medicalFacilityId&gt;-1&lt;/v1:medicalFacilityId&gt;&#xd;
         &lt;v1:schedulePeriod&gt;&#xd;
            &lt;v1:start&gt;2101-01-01&lt;/v1:start&gt;&#xd;
            &lt;v1:end&gt;2101-12-31&lt;/v1:end&gt;&#xd;
         &lt;/v1:schedulePeriod&gt;&#xd;
      &lt;/typ:createScheduleForHeadRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${schedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Schedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/createScheduleForHeadRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SID</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;scheduleId&gt;(.+?)&lt;/scheduleId&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">SIDnotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete R_Schedule" enabled="true">
              <stringProp name="dataSource">DB_VARIABLE</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DELETE FROM RESOURCE_SCHEDULE rs WHERE SCHEDULE_ID in(
SELECT distinct s.id FROM SCHEDULE s
JOIN MEDICAL_FACILITY mf ON MF.ID=s.MEDICAL_FACILITY_ID
WHERE s.START_DATE = TIMESTAMP &apos;2101-01-01 00:00:00.000000&apos;
AND mf.MEDICAL_ORGANIZATION_ID=-1)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete Schedule" enabled="true">
              <stringProp name="dataSource">DB_VARIABLE</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">DELETE FROM SCHEDULE WHERE ID IN (
SELECT  DISTINCT s.id FROM SCHEDULE s
JOIN MEDICAL_FACILITY mf ON MF.ID=s.MEDICAL_FACILITY_ID
WHERE s.START_DATE = TIMESTAMP &apos;2101-01-01 00:00:00.000000&apos; AND mf.MEDICAL_ORGANIZATION_ID=-1)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RiR2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(threads,50)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="arScheduleService" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getArSchedule" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getArSchedule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
  &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
      &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
        &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
      &lt;/wsse:UsernameToken&gt;&#xd;
    &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:getArScheduleRequest&gt;&#xd;
         &lt;typ:arScheduleId&gt;${ARSCHEDULEID}&lt;/typ:arScheduleId&gt;        &#xd;
      &lt;/typ:getArScheduleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${arSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/ArSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/arScheduleServicePortType/getArScheduleRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/ArSchedule/getArScheduleList.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getArScheduleList" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getArScheduleList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
      &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
        &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
      &lt;/wsse:UsernameToken&gt;&#xd;
    &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:getArScheduleListRequest&gt;&#xd;
         &lt;typ:arId&gt;${ARID}&lt;/typ:arId&gt;&#xd;
         &lt;v1:schedulePeriod&gt;&#xd;
            &lt;v1:start&gt;${__property(schPerStart)}&lt;/v1:start&gt;&#xd;
            &lt;v1:end&gt;${__property(schPerEnd)}&lt;/v1:end&gt;&#xd;
         &lt;/v1:schedulePeriod&gt;        &#xd;
      &lt;/typ:getArScheduleListRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${arSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/ArSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/arScheduleServicePortType/getArScheduleListRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/ArSchedule/getArScheduleList.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getArScheduleRuleTypeList" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getArScheduleRuleTypeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getArScheduleRuleTypeListRequest/&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${arSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/ArSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/arScheduleServicePortType/getArScheduleRuleTypeListRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="createArScheduleRule &amp; updateArScheduleRule" enabled="false"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">\t</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">/tests/preconditionData/1/ArSchedule/createArSchedule.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames"></stringProp>
            </CSVDataSet>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createArScheduleRule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:createArScheduleRuleRequest&gt;&#xd;
         &lt;typ:arScheduleId&gt;${ARSCHEDULEID}&lt;/typ:arScheduleId&gt;&#xd;
         &lt;typ:info&gt;&#xd;
            &lt;typ:typeId&gt;${__property(arSchruleTypeId)}&lt;/typ:typeId&gt;&#xd;
            &lt;typ:locationId&gt;${__property(moIdACH)}&lt;/typ:locationId&gt;&#xd;
            &lt;typ:datePeriod&gt;&#xd;
               &lt;v1:start&gt;${__property(schPerStart)}&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;${__property(schPerEnd)}&lt;/v1:end&gt;&#xd;
            &lt;/typ:datePeriod&gt;&#xd;
            &lt;typ:dateTemplate xsi:type=&quot;v1:DayOfWeekDatesTemplate&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
               &lt;v1:dayOfWeek&gt;1&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;2&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;3&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;4&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;5&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;6&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;7&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;/typ:dateTemplate&gt;&#xd;
            &lt;typ:timeIntervals&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;typ:timeInterval&gt;&#xd;
                  &lt;v1:start&gt;${CURRENT_S_TIME}&lt;/v1:start&gt;&#xd;
                  &lt;v1:end&gt;${CURRENT_E_TIME}&lt;/v1:end&gt;&#xd;
               &lt;/typ:timeInterval&gt;&#xd;
            &lt;/typ:timeIntervals&gt;&#xd;
            &lt;typ:ageGroups&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;v1:ageGroupId&gt;${__property(agId)}&lt;/v1:ageGroupId&gt;&#xd;
            &lt;/typ:ageGroups&gt;&#xd;
            &lt;typ:treatments&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;v1:treatmentId&gt;${__property(tId)}&lt;/v1:treatmentId&gt;&#xd;
            &lt;/typ:treatments&gt;&#xd;
         &lt;/typ:info&gt;&#xd;
      &lt;/typ:createArScheduleRuleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${arSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/ArSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/arScheduleServicePortType/createArScheduleRuleRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.time.LocalTime;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

  LocalDate currentDate = LocalDate.now();
        
        DateTimeFormatter formatter1 = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd&quot;);
        DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern(&quot;HH:mm:ss&quot;);
        
        //LocalDate currentDate = LocalDate.now().plusYears(80);
        //LocalDate tomorrowDate = LocalDate.now().plusYears(80).plusDays(1);
        LocalDate currentDate = LocalDate.parse(&quot;2100-01-01&quot;);
        LocalDate tomorrowDate = currentDate.plusDays(1);
        
        String cuDate = formatter1.format(currentDate);
        String tomDate = formatter1.format(tomorrowDate);
        
        LocalTime startTime = LocalTime.now().MIN.plusSeconds(${__threadNum});
        LocalTime endTime = startTime.plusSeconds(1);
        String currentStartTime = formatter2.format(startTime);
        String currentEndTime = formatter2.format(endTime);
        
         vars.put(&quot;CURRENT_DATE&quot;, cuDate);
         vars.put(&quot;TOMORROW_DATE&quot;, tomDate);
         vars.put(&quot;CURRENT_S_TIME&quot;, currentStartTime);
         vars.put(&quot;CURRENT_E_TIME&quot;, currentEndTime);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">RULEID${__threadNum}</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;arScheduleRule version=&quot;0&quot; id=&quot;(.+?)&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">valNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/ArSchedule/createArSchedule.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateArScheduleRule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:updateArScheduleRuleRequest&gt;&#xd;
         &lt;typ:id&gt;${__V(RULEID${__threadNum})}&lt;/typ:id&gt;&#xd;
         &lt;typ:arScheduleRuleInfo&gt;&#xd;
            &lt;typ:typeId&gt;${__property(arSchruleTypeId)}&lt;/typ:typeId&gt;&#xd;
            &lt;typ:locationId&gt;${__property(moIdACH)}&lt;/typ:locationId&gt;&#xd;
            &lt;typ:datePeriod&gt;&#xd;
               &lt;v1:start&gt;${__property(schPerStart)}&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;${__property(schPerEnd)}&lt;/v1:end&gt;&#xd;
            &lt;/typ:datePeriod&gt;&#xd;
            &lt;typ:dateTemplate xsi:type=&quot;v1:DayOfWeekDatesTemplate&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
               &lt;v1:dayOfWeek&gt;1&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;2&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;3&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;4&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;5&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;6&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;7&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;/typ:dateTemplate&gt;&#xd;
            &lt;typ:timeIntervals&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;typ:timeInterval&gt;&#xd;
                  &lt;v1:start&gt;${CURRENT_S_TIME}&lt;/v1:start&gt;&#xd;
                  &lt;v1:end&gt;${CURRENT_E_TIME}&lt;/v1:end&gt;&#xd;
               &lt;/typ:timeInterval&gt;&#xd;
            &lt;/typ:timeIntervals&gt;&#xd;
            &lt;typ:ageGroups&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;v1:ageGroupId&gt;${__property(agId)}&lt;/v1:ageGroupId&gt;&#xd;
            &lt;/typ:ageGroups&gt;&#xd;
            &lt;typ:treatments&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;v1:treatmentId&gt;${__property(tId)}&lt;/v1:treatmentId&gt;&#xd;
            &lt;/typ:treatments&gt;&#xd;
         &lt;/typ:arScheduleRuleInfo&gt;&#xd;
         &lt;typ:version&gt;0&lt;/typ:version&gt;&#xd;
      &lt;/typ:updateArScheduleRuleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${arSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/ArSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/arScheduleServicePortType/updateArScheduleRuleRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/ArSchedule/createArSchedule.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="sarScheduleService" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getSarSchedule" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSarSchedule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
  &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
      &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
        &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
      &lt;/wsse:UsernameToken&gt;&#xd;
    &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:getSarScheduleRequest&gt;&#xd;
         &lt;typ:sarScheduleId&gt;${SARSCHEDULEID}&lt;/typ:sarScheduleId&gt;        &#xd;
      &lt;/typ:getSarScheduleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/getSarScheduleRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/sarSchedule/getSarScheduleList.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getSarScheduleList" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSarScheduleList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
      &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
        &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
      &lt;/wsse:UsernameToken&gt;&#xd;
    &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:getSarScheduleListRequest&gt;&#xd;
         &lt;typ:sarId&gt;${SARID}&lt;/typ:sarId&gt;&#xd;
         &lt;v1:schedulePeriod&gt;&#xd;
            &lt;v1:start&gt;${__property(schPerStart)}&lt;/v1:start&gt;&#xd;
            &lt;v1:end&gt;${__property(schPerEnd)}&lt;/v1:end&gt;&#xd;
         &lt;/v1:schedulePeriod&gt;        &#xd;
      &lt;/typ:getSarScheduleListRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/getSarScheduleListRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/sarSchedule/getSarScheduleList.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getSarScheduleRuleTypeList" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSarScheduleRuleTypeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getSarScheduleRuleTypeListRequest/&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/getSarScheduleRuleTypeListRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="checkRouteInSchedule" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="checkRouteInSchedule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:checkRouteInScheduleRequest&gt;&#xd;
            &lt;typ:routeId&gt;${__property(routeId)}&lt;/typ:routeId&gt;&#xd;
        &lt;/typ:checkRouteInScheduleRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/checkRouteInScheduleRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="createSarScheduleRule &amp; updateSarScheduleRule" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">\t</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">/tests/preconditionData/1/SarSchedule/createSarSchedule.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames"></stringProp>
            </CSVDataSet>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createSarScheduleRule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:createSarScheduleRuleRequest&gt;&#xd;
         &lt;typ:sarScheduleId&gt;${SARSCHEDULEID}&lt;/typ:sarScheduleId&gt;&#xd;
         &lt;typ:info&gt;&#xd;
            &lt;typ:typeId&gt;${__property(sarSchruleTypeId)}&lt;/typ:typeId&gt;&#xd;
            &lt;typ:datePeriod&gt;&#xd;
              &lt;v1:start&gt;${__property(schPerStart)}&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;${__property(schPerEnd)}&lt;/v1:end&gt;&#xd;
            &lt;/typ:datePeriod&gt;&#xd;
            &lt;typ:dateTemplate xsi:type=&quot;v1:DayOfWeekDatesTemplate&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
               &lt;v1:dayOfWeek&gt;1&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;2&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;3&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;4&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;5&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;6&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;7&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;/typ:dateTemplate&gt;&#xd;
            &lt;typ:timeIntervals&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;typ:timeInterval&gt;&#xd;
                  &lt;v1:start&gt;${CURRENT_S_TIMES}&lt;/v1:start&gt;&#xd;
                  &lt;v1:end&gt;${CURRENT_E_TIMES}&lt;/v1:end&gt;&#xd;
               &lt;/typ:timeInterval&gt;&#xd;
            &lt;/typ:timeIntervals&gt;&#xd;
            &lt;typ:ageGroups&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;v1:ageGroupId&gt;${__property(agId)}&lt;/v1:ageGroupId&gt;&#xd;
            &lt;/typ:ageGroups&gt;&#xd;
            &lt;typ:treatments&gt;&#xd;
               &lt;!--1 or more repetitions:--&gt;&#xd;
               &lt;v1:treatmentId&gt;${__property(tId)}&lt;/v1:treatmentId&gt;&#xd;
            &lt;/typ:treatments&gt;&#xd;
            &lt;typ:location&gt;${__property(moIdACH)}&lt;/typ:location&gt;&#xd;
         &lt;/typ:info&gt;&#xd;
      &lt;/typ:createSarScheduleRuleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/createSarScheduleRuleRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.time.LocalTime;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

  LocalDate currentDate = LocalDate.now();
        
        DateTimeFormatter formatter1 = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd&quot;);
        DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern(&quot;HH:mm:ss&quot;);
        
        //LocalDate currentDate = LocalDate.now().plusYears(80);
        //LocalDate tomorrowDate = LocalDate.now().plusYears(80).plusDays(1);
        LocalDate currentDate = LocalDate.parse(&quot;2100-01-01&quot;);
        LocalDate tomorrowDate = currentDate.plusDays(1);
        
        String cuDate = formatter1.format(currentDate);
        String tomDate = formatter1.format(tomorrowDate);
        
        LocalTime startTime = LocalTime.now().MIN.plusSeconds(${__threadNum});
        LocalTime endTime = startTime.plusSeconds(1);
        String currentStartTime = formatter2.format(startTime);
        String currentEndTime = formatter2.format(endTime);
        
         vars.put(&quot;CURRENT_DATES&quot;, cuDate);
         vars.put(&quot;TOMORROW_DATES&quot;, tomDate);
         vars.put(&quot;CURRENT_S_TIMES&quot;, currentStartTime);
         vars.put(&quot;CURRENT_E_TIMES&quot;, currentEndTime);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">RULESID${__threadNum}</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;sarScheduleRule version=&quot;0&quot; id=&quot;(.+?)&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">valNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateSarScheduleRule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
     &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:updateSarScheduleRuleRequest&gt;&#xd;
         &lt;typ:sarScheduleRule id=&quot;${__V(RULESID${__threadNum})}&quot; version=&quot;0&quot;&gt;&#xd;
            &lt;typ:sarScheduleId&gt;${SARSCHEDULEID}&lt;/typ:sarScheduleId&gt;&#xd;
            &lt;typ:info&gt;&#xd;
               &lt;typ:typeId&gt;${__property(sarSchruleTypeId)}&lt;/typ:typeId&gt;&#xd;
               &lt;typ:datePeriod&gt;&#xd;
                  &lt;v1:start&gt;${TOMORROW_DATES}&lt;/v1:start&gt;&#xd;
                  &lt;v1:end&gt;${TOMORROW_DATES}&lt;/v1:end&gt;&#xd;
               &lt;/typ:datePeriod&gt;&#xd;
               &lt;typ:dateTemplate xsi:type=&quot;v1:DayOfWeekDatesTemplate&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
               &lt;v1:dayOfWeek&gt;1&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;2&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;3&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;4&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;5&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;6&lt;/v1:dayOfWeek&gt;&#xd;
               &lt;v1:dayOfWeek&gt;7&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;/typ:dateTemplate&gt;&#xd;
            &lt;typ:timeIntervals&gt;&#xd;
                  &lt;!--1 or more repetitions:--&gt;&#xd;
                  &lt;typ:timeInterval&gt;&#xd;
                     &lt;v1:start&gt;${CURRENT_S_TIMES}&lt;/v1:start&gt;&#xd;
                     &lt;v1:end&gt;${CURRENT_E_TIMES}&lt;/v1:end&gt;&#xd;
                  &lt;/typ:timeInterval&gt;&#xd;
               &lt;/typ:timeIntervals&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;typ:ageGroups&gt;&#xd;
                  &lt;!--1 or more repetitions:--&gt;&#xd;
                  &lt;v1:ageGroupId&gt;${__property(agId)}&lt;/v1:ageGroupId&gt;&#xd;
               &lt;/typ:ageGroups&gt;&#xd;
               &lt;!--Optional:--&gt;&#xd;
               &lt;typ:treatments&gt;&#xd;
                  &lt;!--1 or more repetitions:--&gt;&#xd;
                  &lt;v1:treatmentId&gt;${__property(tId)}&lt;/v1:treatmentId&gt;&#xd;
               &lt;/typ:treatments&gt;&#xd;
               &lt;typ:location&gt;${__property(moIdACH)}&lt;/typ:location&gt;&#xd;
            &lt;/typ:info&gt;&#xd;
         &lt;/typ:sarScheduleRule&gt;&#xd;
      &lt;/typ:updateSarScheduleRuleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/updateSarScheduleRuleRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="routeService" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getRoute" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getRoute" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/routeService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:getRouteRequest&gt;&#xd;
         &lt;typ:routeId&gt;${ID}&lt;/typ:routeId&gt;&#xd;
      &lt;/typ:getRouteRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${route}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Route?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/routeService/v1/routeServicePortType/getRouteRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Route/getRoute.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getRouteHistory" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getRouteHistory" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/routeService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getRouteHistoryRequest&gt;&#xd;
            &lt;typ:routeId&gt;${ROUTE_ID}&lt;/typ:routeId&gt;&#xd;
        &lt;/typ:getRouteHistoryRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${route}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Route?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/routeService/v1/routeServicePortType/getRouteHistoryRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Route/getRouteHistory.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="searchRoutes" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="searchRoutes" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/routeService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:searchRoutesRequest&gt;&#xd;
         &lt;typ:directMedicalOrganizationId&gt;${MEDICAL_ORGANIZATION_ID}&lt;/typ:directMedicalOrganizationId&gt;&#xd;
      &lt;/typ:searchRoutesRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${route}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Route?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/routeService/v1/routeServicePortType/searchRoutesRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Route/searchRoutes.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="searchRoutesForAssignment" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="searchRoutesForAssignment" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/routeService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:searchRoutesForAssignmentRequest&gt;&#xd;
            &lt;typ:directMedicalPositionCode&gt;${SOAP_DMP}&lt;/typ:directMedicalPositionCode&gt;&#xd;
            &lt;!--1 or more repetitions:--&gt;&#xd;
            &lt;typ:directMedicalOrganizationId&gt;${SOAP_DMO}&lt;/typ:directMedicalOrganizationId&gt;&#xd;
            &lt;typ:receiveTreatmentCategoryCode&gt;${SOAP_TC}&lt;/typ:receiveTreatmentCategoryCode&gt;&#xd;
        &lt;/typ:searchRoutesForAssignmentRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${route}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Route?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/routeService/v1/routeServicePortType/searchRoutesForAssignmentRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Route/searchRoutesForAssignment.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">DMO_ID,DMP_ID,TC</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor 4 old" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">
        String amount4 = &quot;129&quot;;
        log.info(&quot;AMOUNT is: &quot;, amount4);
        int am = Integer.parseInt(amount4);
        Random random = new Random();
        int rnd = random.nextInt(am);
        if(rnd == 0)
            rnd++;
        String dmo_id = &quot;DMO_ID_&quot; + rnd;
        String dmp_id = &quot;DMP_ID_&quot; + rnd;
        String code = &quot;TC_&quot; + rnd;
        log.info(&quot;DMO_ID IS &quot;, dmo_id);
        
        String soapDmo = vars.get(dmo_id);
        String soapDmp = vars.get(dmp_id);
        String soapCode = vars.get(code);
        vars.put(&quot;SOAP_DMO&quot;, soapDmo);
        vars.put(&quot;SOAP_DMP&quot;, soapDmp);
        vars.put(&quot;SOAP_TC&quot;, soapCode);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor 4 new" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">
       
        String dmo_id = &quot;DMO_ID&quot;;
        String dmp_id = &quot;DMP_ID&quot;;
        String code = &quot;TC&quot;;
        log.info(&quot;DMO_ID IS &quot;, dmo_id);
        
        String soapDmo = vars.get(dmo_id);
        String soapDmp = vars.get(dmp_id);
        String soapCode = vars.get(code);
        vars.put(&quot;SOAP_DMO&quot;, soapDmo);
        vars.put(&quot;SOAP_DMP&quot;, soapDmp);
        vars.put(&quot;SOAP_TC&quot;, soapCode);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="createRoute" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createRoute" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/routeService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/route/core/v1/&quot; xmlns:v11=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:createRouteRequest&gt;&#xd;
         &lt;typ:ownerMedicalOrganizationId&gt;1&lt;/typ:ownerMedicalOrganizationId&gt;&#xd;
         &lt;typ:info&gt;&#xd;
            &lt;v1:document&gt;autotest-document_${__RandomString(10,abcdefghijk)}&lt;/v1:document&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            ${DIAGNOSIS}&#xd;
            ${DMP_POSITION}&#xd;
            ${R_TREATMENT}&#xd;
            &lt;!--1 or more repetitions:--&gt;&#xd;
            &lt;v1:directMedicalOrganization&gt;&#xd;
               ${M_ORGANIZATION}&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               ${M_FACILITY}&#xd;
            &lt;/v1:directMedicalOrganization&gt;&#xd;
            &lt;!--1 or more repetitions:--&gt;&#xd;
            &lt;v1:receiveMedicalOrganization&gt;&#xd;
               ${M_ORGANIZATION}&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               ${RM_ORGANIZATION}&#xd;
            &lt;/v1:receiveMedicalOrganization&gt;&#xd;
         &lt;/typ:info&gt;&#xd;
      &lt;/typ:createRouteRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${route}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Route?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/routeService/v1/routeServicePortType/createRouteRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor 5" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.util.List;
import java.util.ArrayList;

        diagList = new ArrayList();
        dmpList = new ArrayList();
        rTreatmentList = new ArrayList();
        dmoList = new ArrayList();
        mfList = new ArrayList();
        moList = new ArrayList();
        rmuList = new ArrayList();
        
        for (int i = 1; i &lt;= ${DIAG_COUNT}; i++) {
          diagList.add(&quot;\n            &lt;v1:diagnosis id=\&quot;&quot; + i + &quot;\&quot; code=\&quot;&quot; + i + &quot;\&quot;&gt;\n&quot; +
                  &quot;               &lt;v1:title&gt;autotest-diagn&quot; + i + &quot;&lt;/v1:title&gt;\n&quot; +
                  &quot;               &lt;/v1:diagnosis&gt;&quot;);
        }
        for (int i = 1; i &lt;= ${DMP_COUNT}; i++) {
          dmpList.add(&quot;\n            &lt;v1:directMedPosition id=\&quot;&quot;+ i + &quot;\&quot; code=\&quot;&quot; + &quot;${NPC_ID}&quot; + &quot;\&quot;&gt;\n&quot; +
                  &quot;               &lt;v1:title&gt;autotest-direct_med_pos&quot; + i + &quot;&lt;/v1:title&gt;\n&quot; +
                  &quot;               &lt;/v1:directMedPosition&gt;&quot;);
        }
        for (int i = 1; i &lt;= ${RT_COUNT}; i++) {
          rTreatmentList.add(&quot;\n            &lt;v1:receiveTreatment id=\&quot;&quot; + ${__property(tId)} + &quot;\&quot; code=\&quot;&quot; + &quot;${__property(rtlmCode)}&quot; + &quot;\&quot;&gt;\n&quot; +
                  &quot;               &lt;v1:title&gt;autotest-treatment&quot; + i + &quot;&lt;/v1:title&gt;\n&quot; +
                  &quot;               &lt;v1:categoryCode&gt;autotest-treatment_category_code&quot; + i + &quot;&lt;/v1:categoryCode&gt;\n&quot; +
                  &quot;               &lt;/v1:receiveTreatment&gt;&quot;);
        }
        for (int i = 1; i &lt;= ${DMO_COUNT}; i++) {
          dmoList.add(&quot;\n            &lt;v1:medicalOrganization&gt;\n&quot; +
                  &quot;                  &lt;v1:id&gt;&quot; + i + &quot;&lt;/v1:id&gt;\n&quot; +
                  &quot;                  &lt;v1:title&gt;autotest-direct_mo&quot; + i + &quot;&lt;/v1:title&gt;\n&quot; +
                  &quot;               &lt;/v1:medicalOrganization&gt;&quot;);
        }
        for (int i = 1; i &lt;= ${MF_COUNT}; i++) {
          mfList.add(&quot;\n            &lt;v1:medicalFacility&gt;\n&quot; +
                  &quot;                  &lt;v1:id&gt;&quot; + i + &quot;&lt;/v1:id&gt;\n&quot; +
                  &quot;                  &lt;v1:title&gt;autotest-direct_mu&quot; + i + &quot;&lt;/v1:title&gt;\n&quot; +
                  &quot;               &lt;/v1:medicalFacility&gt;&quot;);
        }
        for (int i = 1; i &lt;= ${MO_COUNT}; i++) {
          moList.add(&quot;\n            &lt;v1:medicalOrganization&gt;\n&quot; +
                  &quot;                  &lt;v1:id&gt;&quot; + i + &quot;${__threadNum}&quot; + &quot;&lt;/v1:id&gt;\n&quot; +
                  &quot;                  &lt;v1:title&gt;autotest-recieve_mo&quot; + i + &quot;${__threadNum}&quot; + &quot;&lt;/v1:title&gt;\n&quot; +
                  &quot;               &lt;/v1:medicalOrganization&gt;&quot;);
        }
        for (int i = 1; i &lt;= ${RMU_COUNT}; i++) {
          rmuList.add(&quot;\n            &lt;v1:medicalFacility&gt;\n&quot; +
                  &quot;                  &lt;v1:id&gt;&quot; + i + &quot;${__threadNum}&quot; + &quot;&lt;/v1:id&gt;\n&quot; +
                  &quot;                  &lt;v1:title&gt;autotest-recieve_mu&quot; + i + &quot;${__threadNum}&quot; + &quot;&lt;/v1:title&gt;\n&quot; +
                  &quot;               &lt;/v1:medicalFacility&gt;&quot;);
        }

        String diagListString = &quot;&quot;;
        for (String s : diagList)
        {
            diagListString += s;
        }
         String dmpListString = &quot;&quot;;
        for (String s : dmpList)
        {
            dmpListString += s;
        }
        String rTreatmentListString = &quot;&quot;;
        for (String s : rTreatmentList)
        {
            rTreatmentListString += s;
        }
        String dmoListString = &quot;&quot;;
        for (String s : dmoList)
        {
            dmoListString += s;
        }
        String mfListString = &quot;&quot;;
        for (String s : mfList)
        {
            mfListString += s;
        }
        String moListString = &quot;&quot;;
        for (String s : moList)
        {
            moListString += s;
        }
        String rmuListString = &quot;&quot;;
        for (String s : rmuList)
        {
            rmuListString += s;
        }
        
        vars.put(&quot;DIAGNOSIS&quot;, diagListString);
        vars.put(&quot;DMP_POSITION&quot;, dmpListString);
        vars.put(&quot;R_TREATMENT&quot;, rTreatmentListString);
        vars.put(&quot;M_ORGANIZATION&quot;, dmoListString);
        vars.put(&quot;M_FACILITY&quot;, mfListString);
        vars.put(&quot;M_ORGANIZATION&quot;, moListString);
        vars.put(&quot;RM_ORGANIZATION&quot;, rmuListString);
</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ROUTEID${__threadNum}</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;id&gt;(.+?)&lt;/id&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">valueNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor Id&apos;s saving" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.io.FileWriter;
import java.io.BufferedReader;

if (prev.getResponseCode().equals(&quot;200&quot;)){
vari = vars.get(&quot;ROUTEID${__threadNum}&quot;);
 
 FileWriter fstream = new FileWriter(&quot;${SAVE_DIR}/1/Route/routeIdList.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(vari);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();
}



</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Route/NPC_ID.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">NPC_ID</stringProp>
              </CSVDataSet>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Route/TLDP_ID.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">TLDP_ID</stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="editRoute" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="editRoute" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/routeService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/route/core/v1/&quot; xmlns:v11=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:editRouteRequest&gt;&#xd;
         &lt;typ:routeId&gt;${__V(ROUTEID${__threadNum})}&lt;/typ:routeId&gt;&#xd;
         &lt;typ:info&gt;&#xd;
            &lt;v1:document&gt;PerfomanceTest_${__RandomString(15, abcdefghijklmnopqrstuvwxyz)}&lt;/v1:document&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            ${DIAGNOSIS}&#xd;
            ${DMP_POSITION}&#xd;
            ${R_TREATMENT}&#xd;
            &lt;!--1 or more repetitions:--&gt;&#xd;
            &lt;v1:directMedicalOrganization&gt;&#xd;
                ${M_ORGANIZATION}&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               ${M_FACILITY}&#xd;
            &lt;/v1:directMedicalOrganization&gt;&#xd;
            &lt;!--1 or more repetitions:--&gt;&#xd;
            &lt;v1:receiveMedicalOrganization&gt;&#xd;
               ${M_ORGANIZATION}&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               ${RM_ORGANIZATION}&#xd;
            &lt;/v1:receiveMedicalOrganization&gt;&#xd;
         &lt;/typ:info&gt;&#xd;
      &lt;/typ:editRouteRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${route}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Route?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/routeService/v1/routeServicePortType/editRouteRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="archiveRoute" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="archiveRoute" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/routeService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
&lt;soap:Header&gt;&#xd;
    &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
        &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
        &lt;/wsse:UsernameToken&gt;&#xd;
    &lt;/wsse:Security&gt;&#xd;
    &lt;user:userContext&gt;&#xd;
        &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
        &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
        &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
        &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
        &lt;/user:userRights&gt;&#xd;
        &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
    &lt;/user:userContext&gt;&#xd;
&lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:archiveRouteRequest&gt;&#xd;
         &lt;typ:routeId&gt;${__V(ROUTEID${__threadNum})}&lt;/typ:routeId&gt;&#xd;
      &lt;/typ:archiveRouteRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${route}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Route?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/routeService/v1/routeServicePortType/archiveRouteRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="restoreArchivedRoute" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="restoreArchivedRoute" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/routeService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:restoreArchivedRouteRequest&gt;&#xd;
         &lt;typ:routeId&gt;${__V(ROUTEID${__threadNum})}&lt;/typ:routeId&gt;&#xd;
      &lt;/typ:restoreArchivedRouteRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${route}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Route?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/routeService/v1/routeServicePortType/restoreArchivedRouteRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="journalService" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getJournal" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getJournal" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/journalService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:getJournalRequest&gt;&#xd;
         &lt;typ:searchParams&gt;&#xd;
            &lt;typ:medicalFacilityId&gt;${MU_ID}&lt;/typ:medicalFacilityId&gt;&#xd;
         &lt;/typ:searchParams&gt;&#xd;
      &lt;/typ:getJournalRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${journal}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/Journal?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/journalService/v1/journalServicePortType/getJournalRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Route/getJournal.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="scheduleService" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getSchedule" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSchedule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getScheduleRequest&gt;&#xd;
            &lt;v1:scheduleId&gt;${SCHEDULE_ID}&lt;/v1:scheduleId&gt;&#xd;
        &lt;/typ:getScheduleRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${schedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Schedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/getScheduleListRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Schedule/getSchedule.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getScheduleList" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getScheduleList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getScheduleListRequest&gt;&#xd;
            &lt;!--1 to 10 repetitions:--&gt;&#xd;
            &lt;v1:medicalFacilityId&gt;${MEDICAL_FACILITY_ID}&lt;/v1:medicalFacilityId&gt;&#xd;
        &lt;/typ:getScheduleListRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${schedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Schedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/getScheduleRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/Schedule/getScheduleList.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getProductionCalendarList" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getProductionCalendarList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getProductionCalendarListRequest&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;typ:datePeriod&gt;&#xd;
                &lt;!--Optional:--&gt;&#xd;
                &lt;v1:start&gt;1900-01-01&lt;/v1:start&gt;&#xd;
            &lt;/typ:datePeriod&gt;&#xd;
        &lt;/typ:getProductionCalendarListRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${schedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Schedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/getScheduleListRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getWorkHoursForBranch" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getWorkHoursForBranch" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getWorkHoursForBranchRequest&gt;&#xd;
            &lt;v1:medicalFacilityId&gt;${MEDICAL_FACILITY_ID}&lt;/v1:medicalFacilityId&gt;&#xd;
            &lt;v1:dayOfWeek&gt;1&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;2&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;4&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;3&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;5&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;6&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;7&lt;/v1:dayOfWeek&gt;&#xd;
        &lt;/typ:getWorkHoursForBranchRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${schedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Schedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/getWorkHoursForBranchRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">\t</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">/tests/preconditionData/1/Schedule/getWorkHoursForBranch.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames"></stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="setWorkHoursForBranch &amp; removeWorkHoursForBranch" enabled="true"/>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">\t</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">/tests/preconditionData/1/Schedule/setAndRemoveWrkHrsForBranch.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.group</stringProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="variableNames"></stringProp>
            </CSVDataSet>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="setWorkHoursForBranch" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_AUTOTEST_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_AUTOTEST_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:setWorkHoursForBranchRequest&gt;&#xd;
         &lt;v1:medicalFacilityId&gt;${ID}&lt;/v1:medicalFacilityId&gt;&#xd;
         &lt;!--1 to 7 repetitions:--&gt;&#xd;
         &lt;typ:workHoursForDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;1&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:workHours&gt;&#xd;
               &lt;v1:start&gt;08:00:00&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;11:00:02&lt;/v1:end&gt;&#xd;
            &lt;/v1:workHours&gt;&#xd;
         &lt;/typ:workHoursForDayOfWeek&gt;&#xd;
         &lt;typ:workHoursForDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;2&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:workHours&gt;&#xd;
               &lt;v1:start&gt;08:00:00&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;12:00:02&lt;/v1:end&gt;&#xd;
            &lt;/v1:workHours&gt;&#xd;
         &lt;/typ:workHoursForDayOfWeek&gt;&#xd;
         &lt;typ:workHoursForDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;3&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:workHours&gt;&#xd;
               &lt;v1:start&gt;08:00:00&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;13:00:02&lt;/v1:end&gt;&#xd;
            &lt;/v1:workHours&gt;&#xd;
         &lt;/typ:workHoursForDayOfWeek&gt;&#xd;
         &lt;typ:workHoursForDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;4&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:workHours&gt;&#xd;
               &lt;v1:start&gt;08:00:00&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;14:00:02&lt;/v1:end&gt;&#xd;
            &lt;/v1:workHours&gt;&#xd;
         &lt;/typ:workHoursForDayOfWeek&gt;&#xd;
         &lt;typ:workHoursForDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;5&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:workHours&gt;&#xd;
               &lt;v1:start&gt;08:00:00&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;15:00:02&lt;/v1:end&gt;&#xd;
            &lt;/v1:workHours&gt;&#xd;
         &lt;/typ:workHoursForDayOfWeek&gt;&#xd;
         &lt;typ:workHoursForDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;6&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:workHours&gt;&#xd;
               &lt;v1:start&gt;08:00:00&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;16:00:02&lt;/v1:end&gt;&#xd;
            &lt;/v1:workHours&gt;&#xd;
         &lt;/typ:workHoursForDayOfWeek&gt;&#xd;
         &lt;typ:workHoursForDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;7&lt;/v1:dayOfWeek&gt;&#xd;
            &lt;v1:workHours&gt;&#xd;
               &lt;v1:start&gt;08:00:01&lt;/v1:start&gt;&#xd;
               &lt;v1:end&gt;17:00:02&lt;/v1:end&gt;&#xd;
            &lt;/v1:workHours&gt;&#xd;
         &lt;/typ:workHoursForDayOfWeek&gt;&#xd;
      &lt;/typ:setWorkHoursForBranchRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${schedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Schedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/setWorkHoursForBranchRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="removeWorkHoursForBranch " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_AUTOTEST_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_AUTOTEST_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:removeWorkHoursForBranchRequest&gt;&#xd;
         &lt;v1:medicalFacilityId&gt;${ID}&lt;/v1:medicalFacilityId&gt;&#xd;
         &lt;typ:removeDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;1&lt;/v1:dayOfWeek&gt;&#xd;
         &lt;/typ:removeDayOfWeek&gt;&#xd;
         &lt;typ:removeDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;2&lt;/v1:dayOfWeek&gt;&#xd;
         &lt;/typ:removeDayOfWeek&gt;&#xd;
         &lt;typ:removeDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;3&lt;/v1:dayOfWeek&gt;&#xd;
         &lt;/typ:removeDayOfWeek&gt;&#xd;
         &lt;typ:removeDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;4&lt;/v1:dayOfWeek&gt;&#xd;
         &lt;/typ:removeDayOfWeek&gt;&#xd;
         &lt;typ:removeDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;5&lt;/v1:dayOfWeek&gt;&#xd;
         &lt;/typ:removeDayOfWeek&gt;&#xd;
         &lt;typ:removeDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;6&lt;/v1:dayOfWeek&gt;&#xd;
         &lt;/typ:removeDayOfWeek&gt;&#xd;
         &lt;typ:removeDayOfWeek&gt;&#xd;
            &lt;v1:dayOfWeek&gt;7&lt;/v1:dayOfWeek&gt;&#xd;
         &lt;/typ:removeDayOfWeek&gt;&#xd;
      &lt;/typ:removeWorkHoursForBranchRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${schedule}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Schedule?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/scheduleService/v1/scheduleServicePortType/removeWorkHoursForBranchRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="resourcesServicePortType" enabled="false">
          <stringProp name="TestPlan.comments">Доделать после получения инфы</stringProp>
        </GenericController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getCompositeResource" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCompositeResource" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights/&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getCompositeResourceRequest&gt;&#xd;
            &lt;typ:compositeResourceId&gt;${ID}&lt;/typ:compositeResourceId&gt;&#xd;
        &lt;/typ:getCompositeResourceRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${resources}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Resources?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/resourcesServicePortType/getCompositeResourceRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/CompositeResource/getCompositeResource.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getCompositeResourceList" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCompositeResourceList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getCompositeResourceListRequest&gt;&#xd;
            &lt;v1:medicalOrganizationId&gt;${MEDICAL_ORGANIZATION_ID}&lt;/v1:medicalOrganizationId&gt;&#xd;
        &lt;/typ:getCompositeResourceListRequest&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${resources}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Resources?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/resourcesServicePortType/getCompositeResourceListRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/CompositeResource/getCompositeResourceList.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getCompositeResourceTypeList" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCompositeResourceTypeList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getCompositeResourceTypeListRequest/&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${resources}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Resources?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/resourcesServicePortType/getCompositeResourceTypeListRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="searchSarTreatments" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="searchSarTreatments" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:searchSarTreatmentsRequest&gt;&#xd;
         &lt;v1:medicalOrganizationId&gt;${SOAP_MO_ID}&lt;/v1:medicalOrganizationId&gt;&#xd;
         &lt;typ:treatmentCategoryCode&gt;${SOAP_TCC_ID}&lt;/typ:treatmentCategoryCode&gt;&#xd;
      &lt;/typ:searchSarTreatmentsRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${resources}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Resources?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/resourcesServicePortType/searchSarTreatmentsRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor 2 old" enabled="false">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">

        String amount2 = &quot;39&quot;;
        log.info(&quot;AMOUNT: &quot;, amount2);
        int am = Integer.parseInt(amount2);
        log.info(&quot;AMOUNT INT: &quot;, am);
        Random random = new Random();
        int rnd = random.nextInt(am);
        if(rnd == 0)
            rnd++;
        String medo_id = &quot;MEDO_ID_&quot; + rnd;
        String tcc_id = &quot;TCC_ID_&quot; + rnd;
        
        String soapMedO = vars.get(medo_id);
        String soapTcc = vars.get(tcc_id);
        vars.put(&quot;SOAP_MO_ID&quot;, soapMedO);
        vars.put(&quot;SOAP_TCC_ID&quot;, soapTcc);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/sarSchedule/searchSarTreatments.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">MEDO_ID,TCC_ID</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor 2 new" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">

        String medo_id = &quot;MEDO_ID&quot;;
        String tcc_id = &quot;TCC_ID&quot;;
        
        String soapMedO = vars.get(medo_id);
        String soapTcc = vars.get(tcc_id);
        vars.put(&quot;SOAP_MO_ID&quot;, soapMedO);
        vars.put(&quot;SOAP_TCC_ID&quot;, soapTcc);</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getCompositeResourceByIncludedEntity" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCompositeResourceByIncludedEntity" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:getCompositeResourceByIncludedEntityRequest&gt;&#xd;
         &lt;typ:includedEntity&gt;&#xd;
            &lt;typ:id&gt;${PARENT_ID}&lt;/typ:id&gt;&#xd;
            &lt;typ:includedEntityType&gt;EQUIPMENT&lt;/typ:includedEntityType&gt;&#xd;
         &lt;/typ:includedEntity&gt;&#xd;
      &lt;/typ:getCompositeResourceByIncludedEntityRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${resources}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Resources?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/resourcesServicePortType/getCompositeResourceByIncludedEntityRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/CompositeResource/getCompositeResourceByIncludedEntity.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames"></stringProp>
              </CSVDataSet>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="setCompositeResourceParameter" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="setCompositeResourceParameter" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_AUTOTEST_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_AUTOTEST_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:setCompositeResourceParameterRequest&gt;&#xd;
         &lt;typ:compositeResourceId&gt;${IDRP}&lt;/typ:compositeResourceId&gt;&#xd;
         &lt;typ:parameters&gt;&#xd;
            &lt;!--1 or more repetitions:--&gt;&#xd;
            ${PARAMETERS}&#xd;
         &lt;/typ:parameters&gt;&#xd;
      &lt;/typ:setCompositeResourceParameterRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${resources}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Resources?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">\t</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">/tests/preconditionData/1/CompositeResource/setCompositeResourceParameter.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">IDRP</stringProp>
              </CSVDataSet>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor 6" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.util.List;
import java.util.ArrayList;

        paramList = new ArrayList();
        keysList = new ArrayList();
        
        for (int i = 1; i &lt;= ${PARAM_COUNT}; i++) {
          paramList.add(&quot;            &lt;typ:parameter key=\&quot;&quot; + i + &quot;\&quot;&gt;&quot; + i + &quot;&lt;/typ:parameter&gt;\n&quot;);
          keysList.add(&quot;           &lt;typ:key&gt;&quot; + i + &quot;&lt;/typ:key&gt;\n&quot;);
        }
     
        String paramListString = &quot;&quot;;
        for (String s : paramList)
        {
            paramListString += s;
        }
        String keysListString = &quot;&quot;;
        for (String s : keysList)
        {
            keysListString += s;
        }
        
        vars.put(&quot;PARAMETERS&quot;, paramListString);
        vars.put(&quot;KEYS&quot;, keysListString);


        </stringProp>
              </JSR223PreProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CRID${__threadNum}</stringProp>
                <stringProp name="RegexExtractor.regex">&lt;resource id=&quot;(.+?)&quot;&gt;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">vNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor Id&apos;s saving" enabled="true">
                <stringProp name="scriptLanguage">java</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import java.io.FileWriter;
import java.io.BufferedReader;

if (prev.getResponseCode().equals(&quot;200&quot;)){
vari = vars.get(&quot;CRID${__threadNum}&quot;);
 
 FileWriter fstream = new FileWriter(&quot;${SAVE_DIR}/1/CompositeResource/argList.csv&quot;, true);
 BufferedWriter out = new BufferedWriter(fstream);
 out.write(vari);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();
}



</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/resourcesServicePortType/setCompositeResourceParameterRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="resetCompositeResourceParameter" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="resetCompositeResourceParameter" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_AUTOTEST_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_AUTOTEST_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:resetCompositeResourceParameterRequest&gt;&#xd;
         &lt;typ:compositeResourceId&gt;${__V(CRID${__threadNum})}&lt;/typ:compositeResourceId&gt;&#xd;
         &lt;typ:keys&gt;&#xd;
            &lt;!--1 or more repetitions:--&gt;&#xd;
 ${KEYS}&#xd;
         &lt;/typ:keys&gt;&#xd;
      &lt;/typ:resetCompositeResourceParameterRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${resources}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/Resources?wsdl</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">SOAPAction</stringProp>
                    <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/resourcesService/v1/resourcesServicePortType/resetCompositeResourceParameterRequest&quot;</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-type</stringProp>
                    <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>true</latency>
              <timestamp>false</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <url>true</url>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/tests/SummaryReport_${__time(/1000,)}.csv</stringProp>
          <boolProp name="useGroupName">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/tests/AggregateReport_${__time(/1000,)}.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="Postconditions Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="clearArSchedule" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="clearArSchedule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
  &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
      &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
        &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
      &lt;/wsse:UsernameToken&gt;&#xd;
    &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:clearArScheduleRequest&gt;&#xd;
         &lt;typ:arScheduleId&gt;388222&lt;/typ:arScheduleId&gt;      &#xd;
      &lt;/typ:clearArScheduleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${arSchedule}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/ArSchedule?wsdl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">arScheduleId взят из createArScheduleRule</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/arScheduleServicePortType/clearArScheduleRequest&quot;</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">\t</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">/tests/preconditionData/1/ArSchedule/clearArSchedule.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">RES_ID,MFAC_ID,CSED</stringProp>
            </CSVDataSet>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor old" enabled="false">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">setStrictJava (true);
import java.text.SimpleDateFormat;
import java.util.Date;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
        String amount1 = vars.get(&quot;CSED_#&quot;);
        int am = Integer.parseInt(amount1);
        Random random = new Random();
        int rnd = random.nextInt(am);
        if(rnd == 0)
            rnd++;
        String csed_id = &quot;CSED_&quot; + rnd;
        String res_id = &quot;RES_ID_&quot; + rnd;
        String mfac_id = &quot;MFAC_ID_&quot; + rnd;
        
        String defaultDate = vars.get(csed_id);
        log.info(&quot;Дата для операций: &quot; + defaultDate);
        String dafaultRes = vars.get(res_id);
        log.info(&quot;Ресурс для операций: &quot; + defaultRes);
        String defaultMedFac = vars.get(mfac_id);
        log.info(&quot;MedicalFacility для операций: &quot; + defaultMedFac);
        vars.put(&quot;SOAP_MF&quot;, defaultMedFac);

        // Преобразование даты под тестовые условия
                               
        String date = vars.get(csed_id);
        log.info(&quot;Значение - &quot; + date);
        Date midDate = dateFormat.parse(date);
        String date2 = dateFormat.format(midDate);
        LocalDate dateN = LocalDate.parse(date2);
        LocalDate endDate = dateN.plusMonths(1);
        LocalDate startDate = endDate.withDayOfMonth(1);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd&quot;);
        String sDate = startDate.format(formatter);
        String eDate = endDate.format(formatter);
        log.info(&quot;Начало: &quot; + sDate);
        log.info(&quot;Конец: &quot; + eDate);
        vars.put(&quot;SDATE&quot;, sDate);
        vars.put(&quot;EDATE&quot;, eDate);</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor new" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">setStrictJava (true);
import java.text.SimpleDateFormat;
import java.util.Date;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
       
        String csed_id = &quot;CSED&quot;;
        String res_id = &quot;RES_ID&quot;;
        String mfac_id = &quot;MFAC_ID&quot;;
        
        String defaultDate = vars.get(csed_id);
        log.info(&quot;Дата для операций: &quot; + defaultDate);
        String dafaultRes = vars.get(res_id);
        log.info(&quot;Ресурс для операций: &quot; + defaultRes);
        String defaultMedFac = vars.get(mfac_id);
        log.info(&quot;MedicalFacility для операций: &quot; + defaultMedFac);
        vars.put(&quot;SOAP_MF&quot;, defaultMedFac);

        // Преобразование даты под тестовые условия
                               
        String date = vars.get(csed_id);
        log.info(&quot;Значение - &quot; + date);
        Date midDate = dateFormat.parse(date);
        String date2 = dateFormat.format(midDate);
        LocalDate dateN = LocalDate.parse(date2);
        LocalDate endDate = dateN.plusMonths(1);
        LocalDate startDate = endDate.withDayOfMonth(1);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd&quot;);
        String sDate = startDate.format(formatter);
        String eDate = endDate.format(formatter);
        log.info(&quot;Начало: &quot; + sDate);
        log.info(&quot;Конец: &quot; + eDate);
        vars.put(&quot;SDATE&quot;, sDate);
        vars.put(&quot;EDATE&quot;, eDate);</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="clearSarSchedule" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="clearSarSchedule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
         &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
            &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
         &lt;/wsse:UsernameToken&gt;&#xd;
      &lt;/wsse:Security&gt;&#xd;
      &lt;user:userContext&gt;&#xd;
         &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
         &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
         &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
         &lt;user:userRights&gt;&#xd;
            &lt;!--Zero or more repetitions:--&gt;&#xd;
            &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
         &lt;/user:userRights&gt;&#xd;
         &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
      &lt;/user:userContext&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;typ:clearSarScheduleRequest&gt;&#xd;
         &lt;typ:sarScheduleId&gt;388221&lt;/typ:sarScheduleId&gt;&#xd;
      &lt;/typ:clearSarScheduleRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${sarSchedule}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/SarSchedule?wsdl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/sarScheduleService/v1/sarScheduleServicePortType/clearSarScheduleRequest&quot;</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="delimiter">\t</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="filename">/tests/preconditionData/1/ArSchedule/clearArSchedule.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">RES_ID,MFAC_ID,CSED</stringProp>
            </CSVDataSet>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor old" enabled="false">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">setStrictJava (true);
import java.text.SimpleDateFormat;
import java.util.Date;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
        String amount1 = vars.get(&quot;CSED_#&quot;);
        int am = Integer.parseInt(amount1);
        Random random = new Random();
        int rnd = random.nextInt(am);
        if(rnd == 0)
            rnd++;
        String csed_id = &quot;CSED_&quot; + rnd;
        String res_id = &quot;RES_ID_&quot; + rnd;
        String mfac_id = &quot;MFAC_ID_&quot; + rnd;
        
        String defaultDate = vars.get(csed_id);
        log.info(&quot;Дата для операций: &quot; + defaultDate);
        String dafaultRes = vars.get(res_id);
        log.info(&quot;Ресурс для операций: &quot; + defaultRes);
        String defaultMedFac = vars.get(mfac_id);
        log.info(&quot;MedicalFacility для операций: &quot; + defaultMedFac);
        vars.put(&quot;SOAP_MF&quot;, defaultMedFac);

        // Преобразование даты под тестовые условия
                               
        String date = vars.get(csed_id);
        log.info(&quot;Значение - &quot; + date);
        Date midDate = dateFormat.parse(date);
        String date2 = dateFormat.format(midDate);
        LocalDate dateN = LocalDate.parse(date2);
        LocalDate endDate = dateN.plusMonths(1);
        LocalDate startDate = endDate.withDayOfMonth(1);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd&quot;);
        String sDate = startDate.format(formatter);
        String eDate = endDate.format(formatter);
        log.info(&quot;Начало: &quot; + sDate);
        log.info(&quot;Конец: &quot; + eDate);
        vars.put(&quot;SDATE&quot;, sDate);
        vars.put(&quot;EDATE&quot;, eDate);</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor new" enabled="true">
              <stringProp name="scriptLanguage">java</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">setStrictJava (true);
import java.text.SimpleDateFormat;
import java.util.Date;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
       
        String csed_id = &quot;CSED&quot;;
        String res_id = &quot;RES_ID&quot;;
        String mfac_id = &quot;MFAC_ID&quot;;
        
        String defaultDate = vars.get(csed_id);
        log.info(&quot;Дата для операций: &quot; + defaultDate);
        String dafaultRes = vars.get(res_id);
        log.info(&quot;Ресурс для операций: &quot; + defaultRes);
        String defaultMedFac = vars.get(mfac_id);
        log.info(&quot;MedicalFacility для операций: &quot; + defaultMedFac);
        vars.put(&quot;SOAP_MF&quot;, defaultMedFac);

        // Преобразование даты под тестовые условия
                               
        String date = vars.get(csed_id);
        log.info(&quot;Значение - &quot; + date);
        Date midDate = dateFormat.parse(date);
        String date2 = dateFormat.format(midDate);
        LocalDate dateN = LocalDate.parse(date2);
        LocalDate endDate = dateN.plusMonths(1);
        LocalDate startDate = endDate.withDayOfMonth(1);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd&quot;);
        String sDate = startDate.format(formatter);
        String eDate = endDate.format(formatter);
        log.info(&quot;Начало: &quot; + sDate);
        log.info(&quot;Конец: &quot; + eDate);
        vars.put(&quot;SDATE&quot;, sDate);
        vars.put(&quot;EDATE&quot;, eDate);</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor FIleToString Converter 1" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">${__FileToString(${SAVE_DIR}/1/CompositeResource/argList.csv,UTF-8,list)};</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor FIleToString Converter 2" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">${__FileToString(${SAVE_DIR}/1/Route/routeIdList.csv,UTF-8,routeList)};</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor Massive Parsing 1" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String templatesStr = vars.get(&quot;list&quot;);
String idsArr = templatesStr.replace(&quot;\n&quot;, &quot;,&quot;);
idsArr = idsArr.substring(0, idsArr.length() - 1);
vars.put(&quot;array&quot;,idsArr);
</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor Massive Parsing 2" enabled="true">
          <stringProp name="scriptLanguage">java</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">String templatesStr2 = vars.get(&quot;routeList&quot;);
String idsRoute = templatesStr2.replace(&quot;\n&quot;, &quot;,&quot;);
idsRoute = idsRoute.substring(0, idsRoute.length() - 1);
vars.put(&quot;routeArray&quot;,idsRoute);
log.info(&quot;LIST: &quot;, templatesStr2);</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="JDBC Requests. Delete Route" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from DMF" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM DIRECT_MEDICAL_FACILITIES dmf WHERE ROUTE_ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from DMO" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM DIRECT_MEDICAL_ORGANIZATIONS dmo WHERE ROUTE_ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from DMP" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM DIRECT_MEDICAL_POSITIONS dmp  WHERE ROUTE_ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from RMF" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM RECEIVE_MEDICAL_FACILITIES rmf WHERE ROUTE_ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from RMO" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM RECEIVE_MEDICAL_ORGANIZATIONS rmo WHERE ROUTE_ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from RD" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM ROUTE_DIAGNOSES rd WHERE ROUTE_ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from RT" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM ROUTE_TREATMENTS rt WHERE ROUTE_ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from RJ" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM ROUTE_JOURNAL rj WHERE ROUTE_ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete route from R" enabled="true">
            <stringProp name="dataSource">DB_VARIABLE</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM ROUTE r2 WHERE ID IN (${routeArray})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete Relative resources NEW" enabled="true">
          <stringProp name="dataSource">DB_VARIABLE</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">DELETE FROM &quot;RESOURCE&quot; WHERE MEDICAL_FACILITY_ID &lt;= ${mfIdNew}</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete Relative resources" enabled="false">
          <stringProp name="dataSource">DB_VARIABLE</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">DELETE FROM &quot;RESOURCE&quot; WHERE MEDICAL_FACILITY_ID IN (${MFAC_MINID})</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">/tests/preconditionData/1/Schedule/MedFac_MIN.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">MIN(ID)2</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete MU" enabled="false">
          <stringProp name="dataSource">DB_VARIABLE</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">DELETE FROM MEDICAL_FACILITY WHERE ID IN (${MFAC_MINID})</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">/tests/preconditionData/1/Schedule/MedFac_MIN.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">MFAC_MINID</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request. Delete MO" enabled="false">
          <stringProp name="dataSource">DB_VARIABLE</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">DELETE FROM MEDICAL_ORGANIZATION WHERE ID IN (${MO_MINID})</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">/tests/preconditionData/1/Schedule/MedOrg_MIN.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">MO_MINID</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">60</stringProp>
        <stringProp name="RampUp">20</stringProp>
        <stringProp name="Steps">2</stringProp>
        <stringProp name="Hold">60</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">S</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="getArScheduleRuleTypeList" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getArScheduleRuleTypeList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:user=&quot;http://emias.mos.ru/system/v1/userContext/&quot; xmlns:typ=&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/types/&quot; xmlns:v1=&quot;http://emias.mos.ru/supp/rir2/core/v1/&quot;&gt;&#xd;
    &lt;soap:Header&gt;&#xd;
        &lt;wsse:Security xmlns:wsse=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
            &lt;wsse:UsernameToken wsu:Id=&quot;UsernameToken-25145CA5C92E7F5041155145445404887&quot;&gt;&#xd;
                &lt;wsse:Username&gt;KPI_APC_METHODIST/HAdiatullina&lt;/wsse:Username&gt;&#xd;
            &lt;/wsse:UsernameToken&gt;&#xd;
        &lt;/wsse:Security&gt;&#xd;
        &lt;user:userContext&gt;&#xd;
            &lt;user:systemName&gt;KPI_APC_METHODIST&lt;/user:systemName&gt;&#xd;
            &lt;user:userName&gt;HAdiatullina&lt;/user:userName&gt;&#xd;
            &lt;user:userRoleId&gt;7014&lt;/user:userRoleId&gt;&#xd;
            &lt;user:userRights&gt;&#xd;
                &lt;!--Zero or more repetitions:--&gt;&#xd;
                &lt;user:userRightId&gt;0&lt;/user:userRightId&gt;&#xd;
            &lt;/user:userRights&gt;&#xd;
            &lt;user:jobExecutionId&gt;112740&lt;/user:jobExecutionId&gt;&#xd;
        &lt;/user:userContext&gt;&#xd;
    &lt;/soap:Header&gt;&#xd;
    &lt;soap:Body&gt;&#xd;
        &lt;typ:getArScheduleRuleTypeListRequest/&gt;&#xd;
    &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${arSchedule}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/ArSchedule?wsdl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://emias.mos.ru/supp/rir2/arScheduleService/v1/arScheduleServicePortType/getArScheduleRuleTypeListRequest&quot;</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/soap+xml;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>true</latency>
              <timestamp>false</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <url>true</url>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/tests/SummaryReport_${__time(/1000,)}.csv</stringProp>
          <boolProp name="useGroupName">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/tests/AggregateReport_${__time(/1000,)}.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
