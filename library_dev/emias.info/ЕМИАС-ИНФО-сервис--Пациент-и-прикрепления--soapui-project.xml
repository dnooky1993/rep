<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="25cf7cd7-be57-477c-9379-d2385cc98d9d" activeEnvironment="Default" name="ЕМИАС.ИНФО сервис &quot;Пациент и прикрепления&quot;" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="c12333c6-3bfe-4255-b6e6-b20270b51ff4" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://emiasinfo1.emias.solit-clouds.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint></con:endpoints><con:resource name="policy" path="/api/v2/policy" id="a2cf54cf-049c-440a-8f41-e7254ee5f4b8"><con:settings/><con:parameters/><con:method name="POST policy" id="729130aa-ffe9-4793-ab6e-56b0e0edd024" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:pol="http://emiasinfo-application.test.emias.mos.ru/api/v2/policy">pol:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="POST policy" id="0b04d89c-7db0-4193-97c3-9778d4d0c3f0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "string",
  "birthDate": "2022-11-28",
  "typeAttach": [
    0
  ],
  "onlyMoscowPolicy": true
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="lpuScheduleInfo" path="/api/v2/policy/lpuScheduleInfo" id="51c366e8-e6c7-440e-8d6a-b3a84b9f2b2c"><con:settings/><con:parameters><con:parameter><con:name>lpuId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET lpuScheduleInfo" id="0dc7ef95-f47d-436f-b2b3-c85cb52b88fd" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:lpus="http://emiasinfo-application.test.emias.mos.ru/api/v2/policy/lpuScheduleInfo">lpus:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:lpus="http://emiasinfo-application.test.emias.mos.ru/api/v2/policy/lpuScheduleInfo">lpus:Response</con:element></con:representation><con:request name="GET lpuScheduleInfo" id="7c1ec1f9-586a-4db7-afea-f7a3f440b747" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>lpuId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="4350f1f0-1965-4b56-8361-823539ed66c6" wsaVersion="NONE" name="PGUContingentServicePTB" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/v2/}PGUContingentServicePTB" soapVersion="1_1" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="PGUServicesInfoV2" targetNamespace="http://impl.service.soap.emias.lanit.ru/v2/" xmlns:api="http://api.service.soap.emias.lanit.ru/v2/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/v2/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiIQ4qBnGzvi2yrsi.16MiA_xKpp83RleFguJcUcDjzvmbO9ApdFmlQfF8YXfI9mLkRpgH5fMr3szT60OOWNDjlmcK8bih9r50ZKQRYXTiKnzTG2._NQFGshLJMiJ8Ki2r0J_e1BSDWREkOA"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getPatientInfo2Response">
    <wsdl:part element="api:getPatientInfo2Response" name="getPatientInfo2Response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfo3">
    <wsdl:part element="api:getPatientInfo3" name="getPatientInfo3"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfo2">
    <wsdl:part element="api:getPatientInfo2" name="getPatientInfo2"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SoapException">
    <wsdl:part element="api:exception" name="SoapException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfo3Response">
    <wsdl:part element="api:getPatientInfo3Response" name="getPatientInfo3Response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusResponse">
    <wsdl:part element="api:getLpusResponse" name="getLpusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForAttachment">
    <wsdl:part element="api:getLpusForAttachment" name="getLpusForAttachment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfoResponse">
    <wsdl:part element="api:getPatientInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAttachment">
    <wsdl:part element="api:createAttachment" name="createAttachment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPatientInfo">
    <wsdl:part element="api:getPatientInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForAttachmentResponse">
    <wsdl:part element="api:getLpusForAttachmentResponse" name="getLpusForAttachmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpus">
    <wsdl:part element="api:getLpus" name="getLpus"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAttachmentResponse">
    <wsdl:part element="api:createAttachmentResponse" name="createAttachmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="PGUContingentServicePT">
    <wsdl:operation name="getPatientInfo">
      <wsdl:input message="tns:getPatientInfo" name="getPatientInfo"></wsdl:input>
      <wsdl:output message="tns:getPatientInfoResponse" name="getPatientInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo2">
      <wsdl:input message="tns:getPatientInfo2" name="getPatientInfo2"></wsdl:input>
      <wsdl:output message="tns:getPatientInfo2Response" name="getPatientInfo2Response"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAttachment">
      <wsdl:input message="tns:createAttachment" name="createAttachment"></wsdl:input>
      <wsdl:output message="tns:createAttachmentResponse" name="createAttachmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForAttachment">
      <wsdl:input message="tns:getLpusForAttachment" name="getLpusForAttachment"></wsdl:input>
      <wsdl:output message="tns:getLpusForAttachmentResponse" name="getLpusForAttachmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpus">
      <wsdl:input message="tns:getLpus" name="getLpus"></wsdl:input>
      <wsdl:output message="tns:getLpusResponse" name="getLpusResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo3">
      <wsdl:input message="tns:getPatientInfo3" name="getPatientInfo3"></wsdl:input>
      <wsdl:output message="tns:getPatientInfo3Response" name="getPatientInfo3Response"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PGUContingentServicePTB" type="tns:PGUContingentServicePT">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getPatientInfo">
      <soap:operation soapAction="urn://getPatientInfo"/>
      <wsdl:input name="getPatientInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPatientInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo2">
      <soap:operation soapAction="urn://getPatientInfo2"/>
      <wsdl:input name="getPatientInfo2">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPatientInfo2Response">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAttachment">
      <soap:operation soapAction="urn://createAttachment"/>
      <wsdl:input name="createAttachment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAttachmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForAttachment">
      <soap:operation soapAction="urn://getLpusForAttachment"/>
      <wsdl:input name="getLpusForAttachment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusForAttachmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpus">
      <soap:operation soapAction="urn://getLpus"/>
      <wsdl:input name="getLpus">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo3">
      <soap:operation soapAction="urn://getPatientInfo3"/>
      <wsdl:input name="getPatientInfo3">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPatientInfo3Response">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PGUContingentService">
    <wsdl:port binding="tns:PGUContingentServicePTB" name="PGUContingentServiceBinding">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiIQ4qBnGzvi2yrsi.16MiA_xKpp83RleFguJcUcDjzvmbO9ApdFmlQfF8YXfI9mLkRpgH5fMr3szT60OOWNDjlmcK8bih9r50ZKQRYXTiKnzTG2._NQFGshLJMiJ8Ki2r0J_e1BSDWREkOA</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://api.service.soap.emias.lanit.ru/v2/" xmlns:tns="http://api.service.soap.emias.lanit.ru/v2/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--======================== Элементы =====================================-->
  <!--Получение сведений о пациенте-->
  <xs:element name="getPatientInfo" type="tns:getPatientInfo"/>
  <xs:element name="getPatientInfoResponse" type="tns:getPatientInfoResponse"/>
  <!--Получение сведений о пациенте-->
  <xs:element name="getPatientInfo2" type="tns:getPatientInfo2"/>
  <xs:element name="getPatientInfo2Response" type="tns:getPatientInfo2Response"/>
  <!--Возвращает ЛПУ рекомендованные для прикрепления-->
  <xs:element name="getLpusForAttachment" type="tns:getLpusForAttachment"/>
  <xs:element name="getLpusForAttachmentResponse" type="tns:getLpusForAttachmentResponse"/>
  <!--Создание заявления на прикрепление-->
  <xs:element name="createAttachment" type="tns:createAttachment"/>
  <xs:element name="createAttachmentResponse" type="tns:createAttachmentResponse"/>
  <!--Предоставление переченя филиалов МО, найденных в системе по входным параметрам-->
  <xs:element name="getLpus" type="tns:getLpus"/>
  <xs:element name="getLpusResponse" type="tns:getLpusResponse"/>
  <!--Получение сведений о пациенте v3-->
  <xs:element name="getPatientInfo3" type="tns:getPatientInfo3"/>
  <xs:element name="getPatientInfo3Response" type="tns:getPatientInfo3Response"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="exception" nillable="true" type="xs:string"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="attachmentNew">
    <xs:sequence>
      <xs:element minOccurs="0" name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpu">
        <xs:annotation>
          <xs:documentation>ЛПУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="phone" type="xs:string"/>
            <xs:element minOccurs="0" name="groupId" type="xs:string"/>
            <xs:element minOccurs="0" name="address" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="districtNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="districtType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="doctorFio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="startDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="endDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Статус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="createDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата сооздания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Внешняя система</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachmentV3">
    <xs:sequence>
      <xs:element minOccurs="0" name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpu">
        <xs:annotation>
          <xs:documentation>ЛПУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="phone" type="xs:string"/>
            <xs:element minOccurs="0" name="groupId" type="xs:string"/>
            <xs:element minOccurs="0" name="address" type="xs:string"/>
            <xs:element minOccurs="0" name="type" type="tns:LpuType">
              <xs:annotation>
                <xs:documentation>Тип медицинского учреждения</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="districtNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="districtType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="doctorFio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="startDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="endDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Статус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="createDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата сооздания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Внешняя система</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xsd:complexType name="attachment">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpu">
        <xs:annotation>
          <xs:documentation>ЛПУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="phone" type="xs:string"/>
            <xs:element minOccurs="0" name="groupId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="districtNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="districtType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="doctorFio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="startDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="endDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Статус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="createDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата сооздания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Внешняя система</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="moSelected" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Выбор МО осуществлен</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xsd:complexType>
  <xs:complexType name="idNameType">
    <xs:annotation>
      <xs:documentation>ИД и наименование</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="district">
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="number" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="tns:idNameType">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attachmentsCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество прикрепленных</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalEmployee" type="tns:medicalEmployee"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuServiceDistrict">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="districtNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="address" nillable="true" type="tns:serviceLpuAddress"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xsd:simpleType name="OmsType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Temp">
        <xsd:annotation>
          <xsd:documentation>Временный полис</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Old">
        <xsd:annotation>
          <xsd:documentation>Полис старого образца</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="New">
        <xsd:annotation>
          <xsd:documentation>Полис нового образца</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Undefined">
        <xsd:annotation>
          <xsd:documentation>Тип полиса неопределен</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:complexType name="omsPolicy">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element minOccurs="0" name="birthDate" type="xs:dateTime"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="smoName" type="xs:string"/>
      <xs:element minOccurs="0" name="issueDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="omsPolicyFull">
    <xs:sequence>
      <xs:element name="omsNumber" type="xsd:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xsd:string"/>
      <xs:element name="status" type="xsd:string"/>
      <xs:element minOccurs="0" name="smoName" type="xsd:string"/>
      <xs:element minOccurs="0" name="region" type="xsd:string"/>
      <xs:element minOccurs="0" name="issueDate" type="xsd:dateTime"/>
      <xs:element name="type" type="tns:OmsType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patient">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="omsPolicy" type="tns:omsPolicy"/>
      <xs:element minOccurs="0" name="attachments">
        <xs:annotation>
          <xs:documentation>Информация о прикреплениях</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="4" minOccurs="0" name="attachment" type="tns:attachment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientAddress">
    <xs:annotation>
      <xs:documentation>Адрес пациента</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="house" type="xs:string">
        <xs:annotation>
          <xs:documentation>Дом</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="building" type="xs:string">
        <xs:annotation>
          <xs:documentation>Корпус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="construction" type="xs:string">
        <xs:annotation>
          <xs:documentation>Строение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="flat" type="xs:string">
        <xs:annotation>
          <xs:documentation>Квартира</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="street" type="xs:string">
        <xs:annotation>
          <xs:documentation>Улица</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="addressText">
        <xs:annotation>
          <xs:documentation>Полная строка адреса</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="250"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionView" nillable="true" type="tns:receptionView"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionView">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element minOccurs="0" name="primarySign" type="xs:string"/>
      <xs:element minOccurs="0" name="homeSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="replacementResource">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonReplacement" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="secondName" type="xs:string"/>
          <xs:element minOccurs="0" name="receptionTypes" type="tns:receptionTypes"/>
          <xs:element minOccurs="0" name="room" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="serviceDistricts">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="district" nillable="true" type="tns:lpuServiceDistrict"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="serviceLpuAddress">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="area" type="xs:string"/>
          <xs:element minOccurs="0" name="district" type="xs:string"/>
          <xs:element minOccurs="0" name="street" type="xs:string"/>
          <xs:element minOccurs="0" name="house" type="xs:string"/>
          <xs:element minOccurs="0" name="building" type="xs:string"/>
          <xs:element minOccurs="0" name="construction" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="document">
    <xs:sequence>
      <xs:element minOccurs="0" name="type" type="xs:int">
        <xs:annotation>
          <xs:documentation>Тип</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="number" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала действия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedBy" type="xs:string">
        <xs:annotation>
          <xs:documentation>Кем выдан</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalEmployee">
    <xs:sequence>
      <xs:element name="jobId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД МР в подразделении</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="middleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="position">
        <xs:annotation>
          <xs:documentation>Должность</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>ИД должности</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="shortName" type="xs:string">
              <xs:annotation>
                <xs:documentation>Краткое наименование</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="representative">
    <xs:sequence>
      <xs:element minOccurs="0" name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="middleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="basis" type="xs:string">
        <xs:annotation>
          <xs:documentation>Основания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="document" type="xs:string">
        <xs:annotation>
          <xs:documentation>Документ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuForAttachment">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Полное наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="phone" type="xs:string">
        <xs:annotation>
          <xs:documentation>Телефон</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attachmentsCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество прикрепленных</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recommended" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Рекомендуется для прикрепления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="district" type="tns:district">
        <xs:annotation>
          <xs:documentation>Участки</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LpuWithAddressPointPgu">
    <xs:annotation>
      <xs:documentation>ЛПУ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор группы МО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="mainLpuId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор головной организации</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="type" type="tns:LpuType">
        <xs:annotation>
          <xs:documentation>Тип медицинского учреждения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="address" type="tns:LpuAddress">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="phone" type="xs:string">
        <xs:annotation>
          <xs:documentation>Телефон</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="shortName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Краткое наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="headFinance" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак подушевого финансирования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ogrn" type="xs:string">
        <xs:annotation>
          <xs:documentation>ОГРН МУ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LpuType">
    <xs:annotation>
      <xs:documentation>Тип медицинского учреждения</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="MUTypeID" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор типа медицинского учреждения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование типа медицинского учреждения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LpuAddress">
    <xs:annotation>
      <xs:documentation>Адрес МО</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="addressPointId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор адресного объекта</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес здания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isMain" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак основного адреса</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAttachment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="placeOfBirth" type="xs:string"/>
      <xs:element minOccurs="0" name="citizenship" type="xs:string"/>
      <xs:element minOccurs="0" name="phone" type="xs:string"/>
      <xs:element minOccurs="0" name="email" type="xs:string"/>
      <xs:element name="requestId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:string"/>
      <xs:element name="areaType" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД типа участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="document" type="tns:document"/>
      <xs:element minOccurs="0" name="representative" type="tns:representative"/>
      <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="registrationAddress" type="tns:patientAddress"/>
      <xs:element minOccurs="0" name="actualAddress" type="tns:patientAddress"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAttachmentResponse">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPatientInfoBase">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="fio">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="lastName" type="xs:string"/>
            <xs:element name="firstName" type="xs:string"/>
            <xs:element minOccurs="0" name="middleName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xsd:complexType name="getPatientInfo">
    <xsd:complexContent>
      <xsd:extension base="tns:getPatientInfoBase">
        <xs:sequence>
          <xs:element name="typeAttach" type="xs:int"/>
          <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
        </xs:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="getPatientInfo2">
    <xsd:complexContent>
      <xsd:extension base="tns:getPatientInfoBase">
        <xs:sequence>
          <xs:element name="typeAttach" type="xs:int"/>
          <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
        </xs:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xs:complexType name="getPatientInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:patient"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPatientInfo2Response">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:patientNew"/>
    </xs:sequence>
  </xs:complexType>
  <xsd:complexType name="getPatientInfo3">
    <xsd:complexContent>
      <xsd:extension base="tns:getPatientInfoBase">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="typeAttach">
            <xsd:simpleType>
              <xsd:restriction base="xsd:int">
                <xsd:enumeration value="0">
                  <xs:annotation>
                    <xs:documentation>Небазовое (женская консультация)</xs:documentation>
                  </xs:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="1">
                  <xs:annotation>
                    <xs:documentation>Терапевтическое/Педиатрическое</xs:documentation>
                  </xs:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="2">
                  <xs:annotation>
                    <xs:documentation>Стоматологическое</xs:documentation>
                  </xs:annotation>
                </xsd:enumeration>
              </xsd:restriction>
            </xsd:simpleType>
          </xs:element>
          <xs:element name="onlyMoscowPolicy" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Признак предоставления данных пациента только при наличии постоянного московского полиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="syncAttach" type="xsd:boolean">
            <xs:annotation>
              <xs:documentation>Признак синхронизации прикреплений</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
        </xs:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xs:complexType name="getPatientInfo3Response">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:patientV3"/>
    </xs:sequence>
  </xs:complexType>
  <xsd:complexType name="patientNew">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="omsPolicy" type="tns:omsPolicy"/>
      <xs:element minOccurs="0" name="attachments">
        <xs:annotation>
          <xs:documentation>Информация о прикреплениях</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="4" minOccurs="0" name="attachment" type="tns:attachmentNew"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="moSelected" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Выбор МО осуществлен</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xsd:complexType>
  <xsd:complexType name="patientV3">
    <xs:sequence>
      <xs:element name="id" type="xsd:string"/>
      <xs:element minOccurs="0" name="birthDate" type="xsd:dateTime"/>
      <xs:element name="omsPolicy" type="tns:omsPolicyFull"/>
      <xs:element minOccurs="0" name="attachments">
        <xs:annotation>
          <xs:documentation>Информация о прикреплениях</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attachment" type="tns:attachmentV3"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="moSelected">
        <xs:annotation>
          <xs:documentation>Выбор МО осуществлен</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="areaType" type="xsd:string"/>
            <xs:element name="value" type="xsd:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xsd:complexType>
  <xs:complexType name="getLpusForAttachment">
    <xs:sequence>
      <xs:element name="birthDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата рождения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="capitaFinancing" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак участия в подушевом финансировании</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="typeAttach" type="xs:int">
        <xs:annotation>
          <xs:documentation>Тип прикрепления.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="district" type="xs:string">
        <xs:annotation>
          <xs:documentation>Округ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lpuName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы МУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="address">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="street" type="xs:string">
              <xs:annotation>
                <xs:documentation>Улица</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="house" type="xs:string">
              <xs:annotation>
                <xs:documentation>Дом</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="building" type="xs:string">
              <xs:annotation>
                <xs:documentation>Корпус</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="construction" type="xs:string">
              <xs:annotation>
                <xs:documentation>Строение</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForAttachmentResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="tns:lpuForAttachment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpus">
    <xs:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="id" type="xsd:long"/>
      <xsd:element minOccurs="0" name="name" type="xsd:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="tns:LpuWithAddressPointPgu"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint></con:endpoints><con:operation id="73fb6c0a-ebf7-4e58-853f-0ffc8c50f791" isOneWay="false" action="urn://createAttachment" name="createAttachment" bindingOperationName="createAttachment" type="Request-Response" outputName="createAttachmentResponse" inputName="createAttachment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fe4bf44a-8a76-4ab5-b7d5-fbbee6e1af34" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:createAttachment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <placeOfBirth>?</placeOfBirth>\r
         <!--Optional:-->\r
         <citizenship>?</citizenship>\r
         <!--Optional:-->\r
         <phone>?</phone>\r
         <!--Optional:-->\r
         <email>?</email>\r
         <requestId>?</requestId>\r
         <lpuId>?</lpuId>\r
         <areaType>?</areaType>\r
         <!--Optional:-->\r
         <document>\r
            <!--Optional:-->\r
            <type>?</type>\r
            <!--Optional:-->\r
            <number>?</number>\r
            <!--Optional:-->\r
            <start>?</start>\r
            <!--Optional:-->\r
            <issuedBy>?</issuedBy>\r
         </document>\r
         <!--Optional:-->\r
         <representative>\r
            <!--Optional:-->\r
            <lastName>?</lastName>\r
            <!--Optional:-->\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
            <!--Optional:-->\r
            <basis>?</basis>\r
            <!--Optional:-->\r
            <document>?</document>\r
         </representative>\r
         <!--Optional:-->\r
         <registrationDate>?</registrationDate>\r
         <!--Optional:-->\r
         <registrationAddress>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
            <!--Optional:-->\r
            <flat>?</flat>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <addressText>?</addressText>\r
         </registrationAddress>\r
         <!--Optional:-->\r
         <actualAddress>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
            <!--Optional:-->\r
            <flat>?</flat>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <addressText>?</addressText>\r
         </actualAddress>\r
         <externalSystemId>?</externalSystemId>\r
      </v2:createAttachment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://createAttachment"/></con:call></con:operation><con:operation id="cfa9b8af-1f7c-4146-87be-79468c463369" isOneWay="false" action="urn://getLpus" name="getLpus" bindingOperationName="getLpus" type="Request-Response" outputName="getLpusResponse" inputName="getLpus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0fe54692-7fbf-47e7-8704-7abd5564df45" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getLpus>\r
         <!--Zero or more repetitions:-->\r
         <id>?</id>\r
         <!--Optional:-->\r
         <name>?</name>\r
      </v2:getLpus>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getLpus"/></con:call></con:operation><con:operation id="fc66b88b-d224-4551-b0ee-214b1d674abd" isOneWay="false" action="urn://getLpusForAttachment" name="getLpusForAttachment" bindingOperationName="getLpusForAttachment" type="Request-Response" outputName="getLpusForAttachmentResponse" inputName="getLpusForAttachment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3905a48e-0335-4788-b177-96dc5d0b5e94" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getLpusForAttachment>\r
         <birthDate>?</birthDate>\r
         <capitaFinancing>?</capitaFinancing>\r
         <typeAttach>?</typeAttach>\r
         <!--Optional:-->\r
         <district>?</district>\r
         <!--Optional:-->\r
         <lpuName>?</lpuName>\r
         <!--Optional:-->\r
         <groupId>?</groupId>\r
         <!--Optional:-->\r
         <address>\r
            <street>?</street>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
         </address>\r
         <externalSystemId>?</externalSystemId>\r
      </v2:getLpusForAttachment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getLpusForAttachment"/></con:call></con:operation><con:operation id="2cb421d2-79f2-484e-9b37-75938282dc53" isOneWay="false" action="urn://getPatientInfo" name="getPatientInfo" bindingOperationName="getPatientInfo" type="Request-Response" outputName="getPatientInfoResponse" inputName="getPatientInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c53ce34c-d447-4224-bad1-3623ca8552d5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getPatientInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <fio>\r
            <lastName>?</lastName>\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
         </fio>\r
         <typeAttach>?</typeAttach>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </v2:getPatientInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getPatientInfo"/></con:call></con:operation><con:operation id="22a1d56f-32fc-4c5e-9d76-6a14874f87ad" isOneWay="false" action="urn://getPatientInfo2" name="getPatientInfo2" bindingOperationName="getPatientInfo2" type="Request-Response" outputName="getPatientInfo2Response" inputName="getPatientInfo2" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f7e3b702-90ae-4568-95eb-dd57c4912633" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getPatientInfo2>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <fio>\r
            <lastName>?</lastName>\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
         </fio>\r
         <typeAttach>?</typeAttach>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </v2:getPatientInfo2>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getPatientInfo2"/></con:call></con:operation><con:operation id="d980bd40-45b2-4ae4-b3a3-689922158d51" isOneWay="false" action="urn://getPatientInfo3" name="getPatientInfo3" bindingOperationName="getPatientInfo3" type="Request-Response" outputName="getPatientInfo3Response" inputName="getPatientInfo3" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4e451cb8-0e22-4780-b906-7ce3936180a6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <v2:getPatientInfo3>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <fio>\r
            <lastName>?</lastName>\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
         </fio>\r
         <!--1 or more repetitions:-->\r
         <typeAttach>?</typeAttach>\r
         <onlyMoscowPolicy>?</onlyMoscowPolicy>\r
         <!--Optional:-->\r
         <syncAttach>?</syncAttach>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </v2:getPatientInfo3>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn://getPatientInfo3"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="c010f476-d8e3-43ab-8486-454c81cacd6a" wsaVersion="NONE" name="Pguv1sBinding" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/}Pguv1sBinding" soapVersion="1_1" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?wsdl</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by gomozov (lanit)-->
<wsdl:definitions name="PGUServicesInfoV2" targetNamespace="http://impl.service.soap.emias.lanit.ru/" xmlns:ns1="http://api.service.soap.emias.lanit.ru/" xmlns:ns2="urn:emias:llo.lookup" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkfL9CkBjdVQzHLIl6HyYlWiZpdnb2p5oVnZMYLY5ML2CjZMBTjt6VLxr.IDIG1Sqg--"/>
      <import namespace="urn:emias:llo.lookup" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkfL9CkBjdVQzHLIl6HyYkf.dZFtblZdzCHfK.y1rIGiJlh4.kvxwlTi3K5KhctQQwTShXPUTFdDTQ--"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllLpusInfoResponse">
    <wsdl:part element="ns1:getAllLpusInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="checkAvailabilityResponse">
    <wsdl:part element="ns1:checkAvailabilityResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointment">
    <wsdl:part element="ns1:cancelAppointment" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="checkAvailability">
    <wsdl:part element="ns1:checkAvailability" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getReferralsInfo">
    <wsdl:part element="ns1:getReferralsInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="SoapException">
    <wsdl:part element="ns1:exception" name="SoapException"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoResponse">
    <wsdl:part element="ns1:getSpecialitiesInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoResponse">
    <wsdl:part element="ns1:getAvailableResourceScheduleInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLdpTypesInfoResponse">
    <wsdl:part element="ns1:getLdpTypesInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoResponse">
    <wsdl:part element="ns1:getDoctorsInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpusInfo">
    <wsdl:part element="ns1:getLpusInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpuTypesInfoResponse">
    <wsdl:part element="ns1:getLpuTypesInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfo">
    <wsdl:part element="ns1:getSpecialitiesInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatient">
    <wsdl:part element="ns1:getAppointmentReceptionsByPatient" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPatientInfoResponse">
    <wsdl:part element="ns1:getPatientInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpuTypesInfo">
    <wsdl:part element="ns1:getLpuTypesInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentResponse">
    <wsdl:part element="ns1:cancelAppointmentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpusInfoResponse">
    <wsdl:part element="ns1:getLpusInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfo">
    <wsdl:part element="ns1:getDoctorsInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getReferralsInfoResponse">
    <wsdl:part element="ns1:getReferralsInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="verifyBuild">
    <wsdl:part element="ns1:verifyBuild" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLdpTypesInfo">
    <wsdl:part element="ns1:getLdpTypesInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPatientInfo">
    <wsdl:part element="ns1:getPatientInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentResponse">
    <wsdl:part element="ns1:createAppointmentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="verifyBuildResponse">
    <wsdl:part element="ns1:verifyBuildResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfo">
    <wsdl:part element="ns1:getAvailableResourceScheduleInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatientResponse">
    <wsdl:part element="ns1:getAppointmentReceptionsByPatientResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAllLpusInfo">
    <wsdl:part element="ns1:getAllLpusInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAppointment">
    <wsdl:part element="ns1:createAppointment" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="digitalPrescription">
    <wsdl:part element="ns2:digitalPrescription" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="digitalPrescriptionResponseType">
    <wsdl:part element="ns2:digitalPrescriptionResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="lookupPrescription">
    <wsdl:part element="ns2:lookupPrescription" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="lookupPrescriptionResponse">
    <wsdl:part element="ns2:lookupPrescriptionResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getLpusForAttachment">
    <wsdl:part element="ns1:getLpusForAttachment" name="getLpusForAttachment"/>
  </wsdl:message>
  <wsdl:message name="getLpusForAttachmentResponse">
    <wsdl:part element="ns1:getLpusForAttachmentResponse" name="getLpusForAttachmentResponse"/>
  </wsdl:message>
  <wsdl:message name="createAttachment">
    <wsdl:part element="ns1:createAttachment" name="createAttachment"/>
  </wsdl:message>
  <wsdl:message name="createAttachmentResponse">
    <wsdl:part element="ns1:createAttachmentResponse" name="createAttachmentResponse"/>
  </wsdl:message>
  <wsdl:message name="updateAttachment">
    <wsdl:part element="ns1:updateAttachment" name="updateAttachment"/>
  </wsdl:message>
  <wsdl:message name="updateAttachmentResponse">
    <wsdl:part element="ns1:updateAttachmentResponse" name="updateAttachmentResponse"/>
  </wsdl:message>
  <wsdl:message name="getLpusList">
    <wsdl:part element="ns1:getLpusList" name="getLpusList"/>
  </wsdl:message>
  <wsdl:message name="getLpusListResponse">
    <wsdl:part element="ns1:getLpusListResponse" name="getLpusListResponse"/>
  </wsdl:message>
  <wsdl:message name="getLpuScheduleInfo">
    <wsdl:part element="ns1:getLpuScheduleInfo" name="getLpuScheduleInfo"/>
  </wsdl:message>
  <wsdl:message name="getLpuScheduleInfoResponse">
    <wsdl:part element="ns1:getLpuScheduleInfoResponse" name="getLpuScheduleInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointment">
    <wsdl:part element="ns1:shiftAppointment" name="shiftAppointment"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentResponse">
    <wsdl:part element="ns1:shiftAppointmentResponse" name="shiftAppointmentResponse"/>
  </wsdl:message>
  <wsdl:portType name="Pguv1sPortType">
    <wsdl:operation name="createAppointment">
      <wsdl:input message="tns:createAppointment" name="createAppointment"/>
      <wsdl:output message="tns:createAppointmentResponse" name="createAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <wsdl:input message="tns:getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo"/>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoResponse" name="getAvailableResourceScheduleInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <wsdl:input message="tns:getDoctorsInfo" name="getDoctorsInfo"/>
      <wsdl:output message="tns:getDoctorsInfoResponse" name="getDoctorsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <wsdl:input message="tns:getSpecialitiesInfo" name="getSpecialitiesInfo"/>
      <wsdl:output message="tns:getSpecialitiesInfoResponse" name="getSpecialitiesInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpusForAttachment">
      <wsdl:input message="tns:getLpusForAttachment" name="getLpusForAttachment"/>
      <wsdl:output message="tns:getLpusForAttachmentResponse" name="getLpusForAttachmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="createAttachment">
      <wsdl:input message="tns:createAttachment" name="createAttachment"/>
      <wsdl:output message="tns:createAttachmentResponse" name="createAttachmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpusList">
      <wsdl:input message="tns:getLpusList" name="getLpusList"/>
      <wsdl:output message="tns:getLpusListResponse" name="getLpusListResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpuScheduleInfo">
      <wsdl:input message="tns:getLpuScheduleInfo" name="getLpuScheduleInfo"/>
      <wsdl:output message="tns:getLpuScheduleInfoResponse" name="getLpuScheduleInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <wsdl:input message="tns:shiftAppointment" name="shiftAppointment"/>
      <wsdl:output message="tns:shiftAppointmentResponse" name="shiftAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <wsdl:input message="tns:cancelAppointment" name="cancelAppointment"/>
      <wsdl:output message="tns:cancelAppointmentResponse" name="cancelAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAllLpusInfo">
      <wsdl:input message="tns:getAllLpusInfo" name="getAllLpusInfo"/>
      <wsdl:output message="tns:getAllLpusInfoResponse" name="getAllLpusInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <wsdl:input message="tns:getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient"/>
      <wsdl:output message="tns:getAppointmentReceptionsByPatientResponse" name="getAppointmentReceptionsByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLdpTypesInfo">
      <wsdl:input message="tns:getLdpTypesInfo" name="getLdpTypesInfo"/>
      <wsdl:output message="tns:getLdpTypesInfoResponse" name="getLdpTypesInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpusInfo">
      <wsdl:input message="tns:getLpusInfo" name="getLpusInfo"/>
      <wsdl:output message="tns:getLpusInfoResponse" name="getLpusInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getLpuTypesInfo">
      <wsdl:input message="tns:getLpuTypesInfo" name="getLpuTypesInfo"/>
      <wsdl:output message="tns:getLpuTypesInfoResponse" name="getLpuTypesInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo">
      <wsdl:input message="tns:getPatientInfo" name="getPatientInfo"/>
      <wsdl:output message="tns:getPatientInfoResponse" name="getPatientInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <wsdl:input message="tns:getReferralsInfo" name="getReferralsInfo"/>
      <wsdl:output message="tns:getReferralsInfoResponse" name="getReferralsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="digitalPrescription">
      <wsdl:input message="tns:digitalPrescription" name="digitalPrescription"/>
      <wsdl:output message="tns:digitalPrescriptionResponseType" name="digitalPrescriptionResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="lookupPrescription">
      <wsdl:input message="tns:lookupPrescription" name="lookupPrescription"/>
      <wsdl:output message="tns:lookupPrescriptionResponse" name="lookupPrescriptionResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="Pguv1sBinding" type="tns:Pguv1sPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="createAppointment">
      <soap:operation soapAction="urn:#createAppointment"/>
      <wsdl:input name="createAppointment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <soap:operation soapAction="urn:#getAvailableResourceScheduleInfo"/>
      <wsdl:input name="getAvailableResourceScheduleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <soap:operation soapAction="urn:#getDoctorsInfo"/>
      <wsdl:input name="getDoctorsInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <soap:operation soapAction="urn:#getDoctorsInfo"/>
      <wsdl:input name="getSpecialitiesInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForAttachment">
      <soap:operation soapAction="urn:#getLpusForAttachment"/>
      <wsdl:input name="getLpusForAttachment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusForAttachmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAttachment">
      <soap:operation soapAction="urn:#createAttachment"/>
      <wsdl:input name="createAttachment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAttachmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusList">
      <soap:operation soapAction="urn:#getLpusList"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpuScheduleInfo">
      <soap:operation soapAction="urn:#getLpuScheduleInfo"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <soap:operation soapAction="urn:#shiftAppointment"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <soap:operation soapAction="urn:#cancelAppointment"/>
      <wsdl:input name="cancelAppointment">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllLpusInfo">
      <soap:operation soapAction="urn:#getAllLpusInfo"/>
      <wsdl:input name="getAllLpusInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllLpusInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <soap:operation soapAction="urn:#getAppointmentReceptionsByPatient"/>
      <wsdl:input name="getAppointmentReceptionsByPatient">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAppointmentReceptionsByPatientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLdpTypesInfo">
      <soap:operation soapAction="urn:#getLdpTypesInfo"/>
      <wsdl:input name="getLdpTypesInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLdpTypesInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusInfo">
      <soap:operation soapAction="urn:#getLpusInfo"/>
      <wsdl:input name="getLpusInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpuTypesInfo">
      <soap:operation soapAction="urn:#getLpuTypesInfo"/>
      <wsdl:input name="getLpuTypesInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpuTypesInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPatientInfo">
      <soap:operation soapAction="urn:#getPatientInfo"/>
      <wsdl:input name="getPatientInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPatientInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <soap:operation soapAction="urn:#getReferralsInfo"/>
      <wsdl:input name="getReferralsInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferralsInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="digitalPrescription">
      <soap:operation soapAction="urn:#digitalPrescription" style="document"/>
      <wsdl:input name="digitalPrescription">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="digitalPrescriptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="lookupPrescription">
      <soap:operation soapAction="urn:#lookupPrescription"/>
      <wsdl:input name="lookupPrescription">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="lookupPrescriptionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PguV1sService">
    <wsdl:port binding="tns:Pguv1sBinding" name="Pguv1sPortType">
      <soap:address location="http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkfL9CkBjdVQzHLIl6HyYlWiZpdnb2p5oVnZMYLY5ML2CjZMBTjt6VLxr.IDIG1Sqg--</con:url><con:content><![CDATA[<!--edited with XMLSpy v2011 rel. 2 (http://www.altova.com) by gomozov (lanit)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://api.service.soap.emias.lanit.ru/" xmlns:ns1="http://api.service.soap.emias.lanit.ru/" xmlns:tns="http://api.service.soap.emias.lanit.ru/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--======================== Элементы =====================================-->
  <!--Отмена записи на прием-->
  <xs:element name="cancelAppointment" type="tns:cancelAppointment"/>
  <xs:element name="cancelAppointmentResponse" type="tns:cancelAppointmentResponse"/>
  <!--Создание записи на прием-->
  <xs:element name="createAppointment" type="tns:createAppointment"/>
  <xs:element name="createAppointmentResponse" type="tns:createAppointmentResponse"/>
  <!--Получение полного списка ЛПУ-->
  <xs:element name="getAllLpusInfo" type="tns:getAllLpusInfo"/>
  <xs:element name="getAllLpusInfoResponse" type="tns:getAllLpusInfoResponse"/>
  <!--Получение списка назначений для пациента-->
  <xs:element name="getAppointmentReceptionsByPatient" type="tns:getAppointmentReceptionsByPatient"/>
  <xs:element name="getAppointmentReceptionsByPatientResponse" type="tns:getAppointmentReceptionsByPatientResponse"/>
  <!--Получение расписания врача-->
  <xs:element name="getAvailableResourceScheduleInfo" type="tns:getAvailableResourceScheduleInfo"/>
  <xs:element name="getAvailableResourceScheduleInfoResponse" type="tns:getAvailableResourceScheduleInfoResponse"/>
  <!--Получение списка врачей-->
  <xs:element name="getDoctorsInfo" type="tns:getDoctorsInfo"/>
  <xs:element name="getDoctorsInfoResponse" type="tns:getDoctorsInfoResponse"/>
  <!--Получение видов ЛДП-->
  <xs:element name="getLdpTypesInfo" type="tns:getLdpTypesInfo"/>
  <xs:element name="getLdpTypesInfoResponse" type="tns:getLdpTypesInfoResponse"/>
  <!--Получение сведений о пациенте-->
  <xs:element name="getPatientInfo" type="tns:getPatientInfo"/>
  <xs:element name="getPatientInfoResponse" type="tns:getPatientInfoResponse"/>
  <!--Получение сведений об ЛПУ-->
  <xs:element name="getLpusInfo" type="tns:getLpusInfo"/>
  <xs:element name="getLpusInfoResponse" type="tns:getLpusInfoResponse"/>
  <!--Получение направлений для пациента-->
  <xs:element name="getReferralsInfo" type="tns:getReferralsInfo"/>
  <xs:element name="getReferralsInfoResponse" type="tns:getReferralsInfoResponse"/>
  <!--Получение списка специальностей-->
  <xs:element name="getSpecialitiesInfo" type="tns:getSpecialitiesInfo"/>
  <xs:element name="getSpecialitiesInfoResponse" type="tns:getSpecialitiesInfoResponse"/>
  <!--Получение видов ЛПУ-->
  <xs:element name="getLpuTypesInfo" type="tns:getLpuTypesInfo"/>
  <xs:element name="getLpuTypesInfoResponse" type="tns:getLpuTypesInfoResponse"/>
  <!--Возвращает ЛПУ рекомендованные для прикрепления-->
  <xs:element name="getLpusForAttachment" type="tns:getLpusForAttachment"/>
  <xs:element name="getLpusForAttachmentResponse" type="tns:getLpusForAttachmentResponse"/>
  <!--Создание заявления на прикрепление-->
  <xs:element name="createAttachment" type="tns:createAttachment"/>
  <xs:element name="createAttachmentResponse" type="tns:createAttachmentResponse"/>
  <!--Изменение заявления на прикрепление-->
  <xs:element name="updateAttachment" type="tns:updateAttachment"/>
  <xs:element name="updateAttachmentResponse" type="tns:updateAttachmentResponse"/>
  <!--Перенос записи на прием-->
  <xs:element name="shiftAppointment" type="tns:shiftAppointment"/>
  <xs:element name="shiftAppointmentResponse" type="tns:shiftAppointmentResponse"/>
  <!--Получение списка ЛПУ-->
  <xs:element name="getLpusList" type="tns:getLpusList"/>
  <xs:element name="getLpusListResponse" type="tns:getLpusListResponse"/>
  <!--Получение расписания ЛПУ-->
  <xs:element name="getLpuScheduleInfo" type="tns:getLpuScheduleInfo"/>
  <xs:element name="getLpuScheduleInfoResponse" type="tns:getLpuScheduleInfoResponse"/>
  <!--======================== Неиспользуемые элементы =====================================-->
  <!--Проверка доступности-->
  <xs:element name="checkAvailability" type="tns:checkAvailability"/>
  <xs:element name="checkAvailabilityResponse" type="tns:checkAvailabilityResponse"/>
  <!--Возвращает версию билда-->
  <xs:element name="verifyBuild" type="tns:verifyBuild"/>
  <xs:element name="verifyBuildResponse" type="tns:verifyBuildResponse"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="exception" nillable="true" type="xs:string"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="allLpu">
    <xs:complexContent>
      <xs:extension base="tns:lpu">
        <xs:sequence>
          <xs:element minOccurs="0" name="director" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="subordination" type="xs:string"/>
          <xs:element minOccurs="0" name="hasPharmacy" type="xs:string"/>
          <xs:element minOccurs="0" name="hasEmergencyAidStation" type="xs:string"/>
          <xs:element minOccurs="0" name="emergencyAidStation" type="ns1:emergencyAidStation"/>
          <xs:element minOccurs="0" name="hasPediatricDepartment" type="xs:string"/>
          <xs:element minOccurs="0" name="parentLpu" type="ns1:lpu"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="appointmentReception">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="appointmentNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReceptionPatient">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element name="typeLpu" type="xs:string"/>
      <xs:element name="nameLpu" type="xs:string"/>
      <xs:element name="lpuAddress" type="xs:string"/>
      <xs:element name="dateBegin" type="xs:dateTime"/>
      <xs:element name="dateEnd" type="xs:dateTime"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="availableResourceId" type="xs:string"/>
      <xs:element name="complexResourceId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД КР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentReceptionToDoctor" type="tns:appointmentReceptionToDoctor"/>
      <xs:element minOccurs="0" name="appointmentReceptionToLdp" type="tns:lpdRegistration"/>
      <xs:element minOccurs="0" name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="enableCanceleration" type="xs:boolean"/>
      <xs:element name="enableShift" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Разрешен ли перенос</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="referral" type="tns:referralInfo">
        <xs:annotation>
          <xs:documentation>Направление</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReceptionToDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorSpecialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element minOccurs="0" name="viewReceptionCode" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="attachment">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpu">
        <xs:annotation>
          <xs:documentation>ЛПУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="phone" type="xs:string"/>
            <xs:element minOccurs="0" name="groupId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="districtNumber" type="xs:int">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="districtType" type="xs:string">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="doctorFio" type="xs:string">
        <xs:annotation>
          <xs:documentation>ФИО врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="startDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="endDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Статус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="moSelected" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Выбор МО осуществлен</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="rejectDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата отказа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeReason" type="xs:string">
        <xs:annotation>
          <xs:documentation>Причина закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="closeDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата закрытия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="createDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата сооздания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Внешняя система</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceScheduleV2">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpecialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceName" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="schedules" type="tns:scheduleOfDay"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceV2">
    <xs:sequence>
      <xs:element minOccurs="0" name="id" type="xs:string"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="firstName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element minOccurs="0" name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="receptionTypes" type="tns:receptionTypes"/>
      <xs:element minOccurs="0" name="ldpTypeCode" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuRoomsInfo" type="tns:lpuRoomsInfo"/>
      <xs:element minOccurs="0" name="replacement" type="xs:string"/>
      <xs:element minOccurs="0" name="district" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="build">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="serverTime" type="xs:string"/>
          <xs:element minOccurs="0" name="clientTime" type="xs:string"/>
          <xs:element minOccurs="0" name="buildTag" type="xs:string"/>
          <xs:element minOccurs="0" name="svnRevisionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="buildTime" type="xs:string"/>
          <xs:element minOccurs="0" name="scmPath" type="xs:string"/>
          <xs:element minOccurs="0" name="version" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="cancelAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="identificationData" type="tns:identificationData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cardIdentification">
    <xs:sequence>
      <xs:element name="cardType" type="tns:cardType"/>
      <xs:element name="uecCode" type="xs:string"/>
      <xs:element name="uecInstance" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="cardType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UEC"/>
      <xs:enumeration value="MSC"/>
      <xs:enumeration value="TEMP"/>
      <xs:enumeration value="OTHER"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="checkAvailability">
    <xs:sequence>
      <xs:element minOccurs="0" name="requestDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="checkAvailabilityResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointment">
    <xs:sequence>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="referralId" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="receptionDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="startTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="endTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="receptionTypeCodeOrLdpTypeCode" type="xs:string"/>
      <xs:element minOccurs="0" name="identificationData" type="tns:identificationData"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:appointmentReception"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="district">
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="number" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="type" type="ns1:idNameType">
        <xs:annotation>
          <xs:documentation>Тип участка</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attachmentsCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество прикрепленных</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalEmployee" type="ns1:medicalEmployee"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="emergencyAidStation">
    <xs:sequence>
      <xs:element minOccurs="0" name="teamCount" type="xs:integer"/>
      <xs:element minOccurs="0" name="phones">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lpuPhone" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllLpusInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="lpuTypeCode" type="xs:string"/>
      <xs:element minOccurs="0" name="returnBranches" type="xs:boolean"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAllLpusInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:allLpu"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatientResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:appointmentReceptionPatient"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="referralId" type="xs:string"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleV2"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="specialityId" type="xs:string"/>
      <xs:element minOccurs="0" name="referralId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResourceV2"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLdpTypesInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element minOccurs="0" name="birthDate" type="xs:dateTime"/>
      <xs:element name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLdpTypesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ldpType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpuScheduleInfo">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpuScheduleInfoResponse">
    <xs:sequence>
      <xs:element name="return" type="ns1:lpuScheduleInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForAttachment">
    <xs:sequence>
      <xs:element name="birthDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата рождения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="capitaFinancing" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак участия в подушевом финансировании</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="district" type="xs:string">
        <xs:annotation>
          <xs:documentation>Округ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lpuName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы МУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="address">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="street" type="xs:string">
              <xs:annotation>
                <xs:documentation>Улица</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="house" type="xs:string">
              <xs:annotation>
                <xs:documentation>Дом</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="building" type="xs:string">
              <xs:annotation>
                <xs:documentation>Корпус</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="construction" type="xs:string">
              <xs:annotation>
                <xs:documentation>Строение</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForAttachmentResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="ns1:lpuForAttachment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="lpuTypeCode" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="baseLpuAddress" type="xs:string"/>
      <xs:element minOccurs="0" name="serviceLpuAddress" type="tns:serviceLpuAddress"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:singleLpu"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpuTypesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpuTypesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:lpuType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPatientInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="fio">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="lastName" type="xs:string"/>
            <xs:element name="firstName" type="xs:string"/>
            <xs:element minOccurs="0" name="middleName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPatientInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:patient"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:referral"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:speciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="idNameType">
    <xs:annotation>
      <xs:documentation>ИД и наименование</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="identificationData">
    <xs:sequence>
      <xs:element name="cardOwner" type="tns:cardIdentification"/>
      <xs:element name="identificationDevice" type="tns:identificationDevice"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="identificationDevice">
    <xs:sequence>
      <xs:element name="uecDeviceInstance" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldpType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="procedure" type="xs:boolean"/>
      <xs:element minOccurs="0" name="investigation" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpdRegistration">
    <xs:sequence>
      <xs:element minOccurs="0" name="availableResource" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="xs:string"/>
      <xs:element minOccurs="0" name="viewLdp" type="xs:string"/>
      <xs:element minOccurs="0" name="viewLdpCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpu">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="lpuNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="lpuType" type="tns:lpuType"/>
          <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
          <xs:element minOccurs="0" name="lpuAddress" type="xs:string"/>
          <xs:element minOccurs="0" name="lpuWorkSchedule" type="tns:lpuWorkSchedule"/>
          <xs:element minOccurs="0" name="phones" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="lpuRoomsInfo">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpuRoomView" nillable="true" type="tns:lpuRoomView"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuRoomView">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuShortName" type="xs:string"/>
      <xs:element minOccurs="0" name="roomNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="availabilityDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuScheduleInfo">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование полное</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="addressInfo">
        <xs:annotation>
          <xs:documentation>Адреса МУ</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>ИД</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="address" type="xs:string">
              <xs:annotation>
                <xs:documentation>Строка адреса</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="isMain" type="xs:boolean">
              <xs:annotation>
                <xs:documentation>Признак основного адреса</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="weekDaySchedule" type="ns1:weekDaySchedule">
        <xs:annotation>
          <xs:documentation>Рабочее расписание</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource">
        <xs:annotation>
          <xs:documentation>Расписание доступных ресурсов заведения</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>ИД ДР</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="name" type="xs:string">
              <xs:annotation>
                <xs:documentation>Наименование</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="medicalEmployee">
              <xs:annotation>
                <xs:documentation>Медработник</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:complexContent>
                  <xs:extension base="ns1:medicalEmployee">
                    <xs:sequence>
                      <xs:element maxOccurs="unbounded" minOccurs="0" name="district">
                        <xs:annotation>
                          <xs:documentation>Участок обслуживания</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                          <xs:sequence>
                            <xs:element name="id" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>ИД участка</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="number" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>Номер участка</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="type" type="ns1:idNameType">
                              <xs:annotation>
                                <xs:documentation>Тип участка</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="lpuId" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>ИД ЛПУ</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="lpuShortName" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>Сокращенное наименование ЛПУ</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                            <xs:element name="isMainResource" type="xs:boolean">
                              <xs:annotation>
                                <xs:documentation>ДР является основным ресурсом на участке</xs:documentation>
                              </xs:annotation>
                            </xs:element>
                          </xs:sequence>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                  </xs:extension>
                </xs:complexContent>
              </xs:complexType>
            </xs:element>
            <xs:element name="lpuDepartment">
              <xs:annotation>
                <xs:documentation>Подразделение ЛПУ к которому относится ДР</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="id" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>ИД подразделения</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="name" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>Наименование полное</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="lpuId" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>ИД ЛПУ</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="lpuShortName" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>Краткое наименование ЛПУ</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="schedule">
              <xs:annotation>
                <xs:documentation>Расписание ДР</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="date" type="xs:date">
                    <xs:annotation>
                      <xs:documentation>Дата</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="weekDay" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>День недели</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="receptionInfo" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>Информация о приеме</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element maxOccurs="unbounded" name="cabinet">
                    <xs:annotation>
                      <xs:documentation>Кабинет</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="number" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>Номер кабинета</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element name="addressId" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>ИД адреса</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionTime">
                          <xs:annotation>
                            <xs:documentation>Время приема</xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="start" type="xs:time">
                                <xs:annotation>
                                  <xs:documentation>Время начала приема</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                              <xs:element name="end" type="xs:time">
                                <xs:annotation>
                                  <xs:documentation>Время окончания приема</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuServiceDistrict">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="districtNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="address" nillable="true" type="tns:serviceLpuAddress"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="lpuListItem">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Полное наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ageGroup" type="ns1:idNameType">
        <xs:annotation>
          <xs:documentation>Обслуживаемый возрастной контингент</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="district" type="ns1:idNameType">
        <xs:annotation>
          <xs:documentation>Округ по ОМК ТЕ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isPatientAttached" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак что пациент прикреплен</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isCurrent" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Является текущей</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isHeadOfGroup" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Является главной в группе</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="ambulatory" type="xs:string"/>
      <xs:element minOccurs="0" name="patientSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuWorkSchedule">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="weekDaySchedule" nillable="true" type="tns:weekDaySchedule"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="omsPolicy">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element minOccurs="0" name="birthDate" type="xs:dateTime"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element minOccurs="0" name="smoName" type="xs:string"/>
      <xs:element minOccurs="0" name="issueDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patient">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="omsPolicy" type="tns:omsPolicy"/>
      <xs:element minOccurs="0" name="attachments">
        <xs:annotation>
          <xs:documentation>Информация о прикреплениях</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="4" minOccurs="0" name="attachment" type="ns1:attachment"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientAddress">
    <xs:annotation>
      <xs:documentation>Адрес пациента</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="house" type="xs:string">
        <xs:annotation>
          <xs:documentation>Дом</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="building" type="xs:string">
        <xs:annotation>
          <xs:documentation>Корпус</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="construction" type="xs:string">
        <xs:annotation>
          <xs:documentation>Строение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="flat" type="xs:string">
        <xs:annotation>
          <xs:documentation>Квартира</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="street" type="xs:string">
        <xs:annotation>
          <xs:documentation>Улица</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="addressText">
        <xs:annotation>
          <xs:documentation>Полная строка адреса</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="250"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionView" nillable="true" type="tns:receptionView"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionView">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element minOccurs="0" name="primarySign" type="xs:string"/>
      <xs:element minOccurs="0" name="homeSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referral">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="startDate" type="xs:dateTime"/>
      <xs:element name="expirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="type" type="tns:referralType"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element name="lpuType" type="xs:string"/>
      <xs:element name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="freeResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referralInfo">
    <xs:sequence>
      <xs:element name="referralId" type="xs:string"/>
      <xs:element name="dateStart" type="xs:dateTime"/>
      <xs:element name="dateExpiration" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="referralType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TO_DOCTOR"/>
      <xs:enumeration value="TO_PROCEDURE"/>
      <xs:enumeration value="TO_INVESTIGATION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="registrationData">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorName" type="xs:string"/>
      <xs:element minOccurs="0" name="organizationCode" type="xs:string"/>
      <xs:element minOccurs="0" name="organizationStamp" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="replacementResource">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="reasonReplacement" type="xs:string"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="secondName" type="xs:string"/>
          <xs:element minOccurs="0" name="receptionTypes" type="tns:receptionTypes"/>
          <xs:element minOccurs="0" name="room" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="resourceSchedule">
    <xs:sequence>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="cabinetName" type="xs:string"/>
      <xs:element name="workTime" type="tns:workTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="timePeriods" type="tns:timePeriod"/>
      <xs:element minOccurs="0" name="liveQueueTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleOfDay">
    <xs:sequence>
      <xs:element name="date" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="resourceSchedule" type="tns:resourceSchedule"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="serviceDistricts">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="district" nillable="true" type="tns:lpuServiceDistrict"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="serviceLpuAddress">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="area" type="xs:string"/>
          <xs:element minOccurs="0" name="district" type="xs:string"/>
          <xs:element minOccurs="0" name="street" type="xs:string"/>
          <xs:element minOccurs="0" name="house" type="xs:string"/>
          <xs:element minOccurs="0" name="building" type="xs:string"/>
          <xs:element minOccurs="0" name="construction" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="singleLpu">
    <xs:complexContent>
      <xs:extension base="tns:lpu">
        <xs:sequence>
          <xs:element minOccurs="0" name="serviceDistricts" type="tns:serviceDistricts"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="speciality">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="male" type="xs:boolean"/>
      <xs:element minOccurs="0" name="female" type="xs:boolean"/>
      <xs:element minOccurs="0" name="only_by_refferal" type="xs:boolean"/>
      <xs:element minOccurs="0" name="primary" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="timePeriod">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="allowedAppointment" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="specialityId" type="xs:string"/>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element name="doctorFio" type="xs:string"/>
      <xs:element name="receptionTypeCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toLdp">
    <xs:sequence>
      <xs:element name="ldpTypeId" type="xs:string"/>
      <xs:element name="ldpTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="ldpCabinetName" type="xs:string"/>
      <xs:element minOccurs="0" name="countProcedures" type="xs:string"/>
      <xs:element minOccurs="0" name="countAssignmentProcedures" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="verifyBuild">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="verifyBuildResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:build"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="weekDaySchedule">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="weekDay" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="workItem" nillable="true" type="tns:workItem"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="workItem">
    <xs:complexContent>
      <xs:extension base="tns:baseDto">
        <xs:sequence>
          <xs:element minOccurs="0" name="from" type="xs:string"/>
          <xs:element minOccurs="0" name="to" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="createAttachment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="placeOfBirth" type="xs:string"/>
      <xs:element minOccurs="0" name="citizenship" type="xs:string"/>
      <xs:element minOccurs="0" name="phone" type="xs:string"/>
      <xs:element minOccurs="0" name="email" type="xs:string"/>
      <xs:element name="requestId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="document" type="ns1:document"/>
      <xs:element minOccurs="0" name="representative" type="ns1:representative"/>
      <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="registrationAddress" type="ns1:patientAddress"/>
      <xs:element minOccurs="0" name="actualAddress" type="ns1:patientAddress"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAttachmentResponse">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateAttachment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор заявления на прикрепление ЕМИАС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД внешней системы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateAttachmentResponse">
    <xs:sequence>
      <xs:element name="applicationId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД заявления на прикрепление</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointment">
    <xs:sequence>
      <xs:element minOccurs="0" name="referralId" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:string"/>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="receptionDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="startTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="endTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="receptionTypeCodeOrLdpTypeCode" type="xs:string"/>
      <xs:element name="appointmentId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:appointmentReception"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusList">
    <xs:sequence>
      <xs:element minOccurs="0" name="lpuId" type="xs:string"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="district" type="xs:string"/>
      <xs:element minOccurs="0" name="ageGroup">
        <xs:annotation>
          <xs:documentation>Обслуживаемый возраст</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="minAge">
              <xs:annotation>
                <xs:documentation>Минимальный возраст</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                  <xs:maxInclusive value="150"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="maxAge">
              <xs:annotation>
                <xs:documentation>Максимальный возраст</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:int">
                  <xs:minInclusive value="0"/>
                  <xs:maxInclusive value="150"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="patientInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="omsNumber" type="xs:string"/>
            <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
            <xs:element name="birthDate" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusListResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="ns1:lpuListItem"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="document">
    <xs:sequence>
      <xs:element minOccurs="0" name="type" type="xs:int">
        <xs:annotation>
          <xs:documentation>Тип</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="number" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала действия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedBy" type="xs:string">
        <xs:annotation>
          <xs:documentation>Кем выдан</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuForAttachment">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД группы</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Полное наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="address" type="xs:string">
        <xs:annotation>
          <xs:documentation>Адрес</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="phone" type="xs:string">
        <xs:annotation>
          <xs:documentation>Телефон</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="attachmentsCount" type="xs:int">
        <xs:annotation>
          <xs:documentation>Количество прикрепленных</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="recommended" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Рекомендуется для прикрепления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="district" type="ns1:district">
        <xs:annotation>
          <xs:documentation>Участки</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalEmployee">
    <xs:sequence>
      <xs:element name="jobId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД МР в подразделении</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="middleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="position">
        <xs:annotation>
          <xs:documentation>Должность</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="xs:string">
              <xs:annotation>
                <xs:documentation>ИД должности</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="shortName" type="xs:string">
              <xs:annotation>
                <xs:documentation>Краткое наименование</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="representative">
    <xs:sequence>
      <xs:element minOccurs="0" name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="middleName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="basis" type="xs:string">
        <xs:annotation>
          <xs:documentation>Основания</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="document" type="xs:string">
        <xs:annotation>
          <xs:documentation>Документ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="workTime">
    <xs:sequence>
      <xs:element minOccurs="0" name="startTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="endTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkfL9CkBjdVQzHLIl6HyYkf.dZFtblZdzCHfK.y1rIGiJlh4.kvxwlTi3K5KhctQQwTShXPUTFdDTQ--</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:emias:llo.lookup" version="1.0" xmlns:tns="urn:emias:llo.lookup" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="benefitBudget">
    <xs:restriction base="xs:string">
      <xs:enumeration value="federal"/>
      <xs:enumeration value="regional"/>
      <xs:enumeration value="municipal"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="benefitInfo">
    <xs:sequence>
      <xs:element minOccurs="0" name="budget" type="tns:benefitBudget"/>
      <xs:element name="code" type="xs:int"/>
      <xs:element minOccurs="0" name="discount" type="tns:discountValue"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="digitalPrescription" type="tns:digitalPrescription"/>
  <xs:complexType name="digitalPrescription">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:digitalPrescriptionRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="digitalPrescriptionRequestType">
    <xs:sequence>
      <xs:element minOccurs="0" name="ident" type="xs:string"/>
      <xs:element minOccurs="0" name="mode" type="tns:queryMode"/>
      <xs:element minOccurs="0" name="oms" type="tns:oms"/>
      <xs:element minOccurs="0" name="snils" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="digitalPrescriptionResponse" type="tns:digitalPrescriptionResponse"/>
  <xs:complexType name="digitalPrescriptionResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="result" type="tns:digitalPrescriptionResponseType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="digitalPrescriptionResponseType">
    <xs:sequence>
      <xs:element minOccurs="0" name="oms" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="prescriptionList" nillable="true" type="tns:prescriptionDigital"/>
      <xs:element minOccurs="0" name="result" type="tns:generalResponse"/>
      <xs:element minOccurs="0" name="snils" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="discountValue">
    <xs:restriction base="xs:string">
      <xs:enumeration value="_50"/>
      <xs:enumeration value="_100"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="drugsCodesRef">
    <xs:sequence>
      <xs:element minOccurs="0" name="code" type="xs:string"/>
      <xs:element minOccurs="0" name="reflist" type="xs:long"/>
      <xs:element minOccurs="0" name="version" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="drugsInfo">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="drugsCodes" nillable="true" type="tns:drugsCodesRef"/>
      <xs:element minOccurs="0" name="latTitle" type="xs:string"/>
      <xs:element minOccurs="0" name="mnnToOtn" type="tns:mnnToOtn"/>
      <xs:element minOccurs="0" name="rusTitle" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="drugstore">
    <xs:sequence>
      <xs:element minOccurs="0" name="address" type="xs:string"/>
      <xs:element minOccurs="0" name="ident" type="xs:string"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="dtd">
    <xs:sequence>
      <xs:element minOccurs="0" name="contentUnit" type="xs:long"/>
      <xs:element minOccurs="0" name="contentUnitName" type="xs:string"/>
      <xs:element minOccurs="0" name="contentValue" type="xs:string"/>
      <xs:element minOccurs="0" name="form" type="xs:long"/>
      <xs:element minOccurs="0" name="formUnit" type="xs:long"/>
      <xs:element minOccurs="0" name="formUnitName" type="xs:string"/>
      <xs:element name="formUnitValue" type="xs:double"/>
      <xs:element minOccurs="0" name="latForm" type="xs:string"/>
      <xs:element minOccurs="0" name="latPack" type="xs:string"/>
      <xs:element minOccurs="0" name="pack" type="xs:long"/>
      <xs:element minOccurs="0" name="rusForm" type="xs:string"/>
      <xs:element minOccurs="0" name="rusPack" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="generalResponse">
    <xs:sequence>
      <xs:element name="resultCode" type="xs:int"/>
      <xs:element minOccurs="0" name="resultDescription" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="lookupPrescription" type="tns:lookupPrescription"/>
  <xs:complexType name="lookupPrescription">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:prescriptionLookupRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="lookupPrescriptionResponse" type="tns:lookupPrescriptionResponse"/>
  <xs:complexType name="lookupPrescriptionResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="result" type="tns:prescriptionLookupResponseType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mnnToOtn">
    <xs:sequence>
      <xs:element minOccurs="0" name="mnn" type="xs:long"/>
      <xs:element minOccurs="0" name="otn" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="oms">
    <xs:sequence>
      <xs:element minOccurs="0" name="fullNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="serie" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="prescriptionDigital">
    <xs:sequence>
      <xs:element minOccurs="0" name="amount" type="xs:string"/>
      <xs:element minOccurs="0" name="benefitCode" type="xs:int"/>
      <xs:element minOccurs="0" name="ctime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="dosage" type="xs:string"/>
      <xs:element minOccurs="0" name="drugstore" type="tns:drugstore"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="rp" type="xs:string"/>
      <xs:element minOccurs="0" name="signature" type="xs:string"/>
      <xs:element minOccurs="0" name="status" type="tns:prescriptionStatus"/>
      <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="prescriptionLookup" type="tns:prescriptionLookup"/>
  <xs:complexType name="prescriptionLookup">
    <xs:sequence>
      <xs:element minOccurs="0" name="request" type="tns:prescriptionLookupRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="prescriptionLookupRequestType">
    <xs:sequence>
      <xs:element minOccurs="0" name="ident" type="xs:string"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="signature" type="xs:string"/>
      <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="prescriptionLookupResponse" type="tns:prescriptionLookupResponse"/>
  <xs:complexType name="prescriptionLookupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="result" type="tns:prescriptionLookupResponseType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="prescriptionLookupResponseType">
    <xs:sequence>
      <xs:element minOccurs="0" name="benefit" type="tns:benefitInfo"/>
      <xs:element minOccurs="0" name="digSign" type="xs:anyType"/>
      <xs:element minOccurs="0" name="dtd" type="tns:dtd"/>
      <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="medicine" type="tns:drugsInfo"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="pharmacy" type="tns:drugstore"/>
      <xs:element minOccurs="0" name="quantity" type="xs:int"/>
      <xs:element minOccurs="0" name="registrationData" type="tns:registrationData"/>
      <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="result" type="tns:generalResponse"/>
      <xs:element minOccurs="0" name="status" type="tns:prescriptionStatus"/>
      <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
      <xs:element minOccurs="0" name="usage" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="prescriptionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="active"/>
      <xs:enumeration value="inprogress"/>
      <xs:enumeration value="completed"/>
      <xs:enumeration value="canceled"/>
      <xs:enumeration value="expired"/>
      <xs:enumeration value="invalid"/>
      <xs:enumeration value="draft"/>
      <xs:enumeration value="delete"/>
      <xs:enumeration value="activePharmacy"/>
      <xs:enumeration value="previouslySigned"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="prescriptionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="benefit"/>
      <xs:enumeration value="commercial"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="queryMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="all"/>
      <xs:enumeration value="active"/>
      <xs:enumeration value="our"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="registrationData">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorName" type="xs:string"/>
      <xs:element minOccurs="0" name="organizationCode" type="xs:string"/>
      <xs:element minOccurs="0" name="organizationStamp" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint></con:endpoints><con:operation id="5e46d8bf-1314-4105-96a7-db51d70697ab" isOneWay="false" action="urn:#cancelAppointment" name="cancelAppointment" bindingOperationName="cancelAppointment" type="Request-Response" outputName="cancelAppointmentResponse" inputName="cancelAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6d6cb4be-4df0-48dd-b9c0-cd9d39e46dc2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:cancelAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <identificationData>\r
            <cardOwner>\r
               <cardType>?</cardType>\r
               <uecCode>?</uecCode>\r
               <uecInstance>?</uecInstance>\r
            </cardOwner>\r
            <identificationDevice>\r
               <uecDeviceInstance>?</uecDeviceInstance>\r
            </identificationDevice>\r
         </identificationData>\r
      </api:cancelAppointment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#cancelAppointment"/></con:call></con:operation><con:operation id="62cde07b-d7b8-447d-a445-d68888406360" isOneWay="false" action="urn:#createAppointment" name="createAppointment" bindingOperationName="createAppointment" type="Request-Response" outputName="createAppointmentResponse" inputName="createAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1a0dd664-2894-4683-ab17-836a25ec8f98" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:createAppointment>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <receptionDate>?</receptionDate>\r
         <!--Optional:-->\r
         <startTime>?</startTime>\r
         <!--Optional:-->\r
         <endTime>?</endTime>\r
         <!--Optional:-->\r
         <receptionTypeCodeOrLdpTypeCode>?</receptionTypeCodeOrLdpTypeCode>\r
         <!--Optional:-->\r
         <identificationData>\r
            <cardOwner>\r
               <cardType>?</cardType>\r
               <uecCode>?</uecCode>\r
               <uecInstance>?</uecInstance>\r
            </cardOwner>\r
            <identificationDevice>\r
               <uecDeviceInstance>?</uecDeviceInstance>\r
            </identificationDevice>\r
         </identificationData>\r
      </api:createAppointment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#createAppointment"/></con:call></con:operation><con:operation id="47478e66-66b7-424f-bcb9-3e04bee28724" isOneWay="false" action="urn:#createAttachment" name="createAttachment" bindingOperationName="createAttachment" type="Request-Response" outputName="createAttachmentResponse" inputName="createAttachment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b30e241e-ccee-436a-b99b-e018548a150e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:createAttachment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <placeOfBirth>?</placeOfBirth>\r
         <!--Optional:-->\r
         <citizenship>?</citizenship>\r
         <!--Optional:-->\r
         <phone>?</phone>\r
         <!--Optional:-->\r
         <email>?</email>\r
         <requestId>?</requestId>\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <document>\r
            <!--Optional:-->\r
            <type>?</type>\r
            <!--Optional:-->\r
            <number>?</number>\r
            <!--Optional:-->\r
            <start>?</start>\r
            <!--Optional:-->\r
            <issuedBy>?</issuedBy>\r
         </document>\r
         <!--Optional:-->\r
         <representative>\r
            <!--Optional:-->\r
            <lastName>?</lastName>\r
            <!--Optional:-->\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
            <!--Optional:-->\r
            <basis>?</basis>\r
            <!--Optional:-->\r
            <document>?</document>\r
         </representative>\r
         <!--Optional:-->\r
         <registrationDate>?</registrationDate>\r
         <!--Optional:-->\r
         <registrationAddress>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
            <!--Optional:-->\r
            <flat>?</flat>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <addressText>?</addressText>\r
         </registrationAddress>\r
         <!--Optional:-->\r
         <actualAddress>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
            <!--Optional:-->\r
            <flat>?</flat>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <addressText>?</addressText>\r
         </actualAddress>\r
         <externalSystemId>?</externalSystemId>\r
      </api:createAttachment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#createAttachment"/></con:call></con:operation><con:operation id="777693f2-0e2d-4e1b-a18d-8a6201c024da" isOneWay="false" action="urn:#digitalPrescription" name="digitalPrescription" bindingOperationName="digitalPrescription" type="Request-Response" outputName="digitalPrescriptionResponse" inputName="digitalPrescription" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6ccc5387-a79f-446e-9fb1-2e1083f62fd7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:emias:llo.lookup">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:digitalPrescription>\r
         <!--Optional:-->\r
         <request>\r
            <!--Optional:-->\r
            <ident>?</ident>\r
            <!--Optional:-->\r
            <mode>?</mode>\r
            <!--Optional:-->\r
            <oms>\r
               <!--Optional:-->\r
               <fullNumber>?</fullNumber>\r
               <!--Optional:-->\r
               <number>?</number>\r
               <!--Optional:-->\r
               <serie>?</serie>\r
            </oms>\r
            <!--Optional:-->\r
            <snils>?</snils>\r
         </request>\r
      </urn:digitalPrescription>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#digitalPrescription"/></con:call></con:operation><con:operation id="65b17f82-d9ae-41db-8a65-4143fd13fce4" isOneWay="false" action="urn:#getAllLpusInfo" name="getAllLpusInfo" bindingOperationName="getAllLpusInfo" type="Request-Response" outputName="getAllLpusInfoResponse" inputName="getAllLpusInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fa8d4c86-7da7-43fa-bf30-1736ce13da7a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getAllLpusInfo>\r
         <!--Optional:-->\r
         <lpuTypeCode>?</lpuTypeCode>\r
         <!--Optional:-->\r
         <returnBranches>?</returnBranches>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getAllLpusInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getAllLpusInfo"/></con:call></con:operation><con:operation id="78e789eb-3caf-4715-9e1a-0dc867398878" isOneWay="false" action="urn:#getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient" bindingOperationName="getAppointmentReceptionsByPatient" type="Request-Response" outputName="getAppointmentReceptionsByPatientResponse" inputName="getAppointmentReceptionsByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="549c3829-ca2b-436e-8820-9d05f7e983af" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getAppointmentReceptionsByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getAppointmentReceptionsByPatient>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getAppointmentReceptionsByPatient"/></con:call></con:operation><con:operation id="e0e35892-13cd-4d34-b32e-0d3d554eacec" isOneWay="false" action="urn:#getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo" bindingOperationName="getAvailableResourceScheduleInfo" type="Request-Response" outputName="getAvailableResourceScheduleInfoResponse" inputName="getAvailableResourceScheduleInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2bfdcb78-8fd6-4f50-af58-9b9fd57a8277" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getAvailableResourceScheduleInfo>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getAvailableResourceScheduleInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getAvailableResourceScheduleInfo"/></con:call></con:operation><con:operation id="77e2bba2-e38d-4249-9d61-9080ccc63b89" isOneWay="false" action="urn:#getDoctorsInfo" name="getDoctorsInfo" bindingOperationName="getDoctorsInfo" type="Request-Response" outputName="getDoctorsInfoResponse" inputName="getDoctorsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a86756b5-9117-4a20-b833-21ffaa05fc21" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getDoctorsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <specialityId>?</specialityId>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getDoctorsInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getDoctorsInfo"/></con:call></con:operation><con:operation id="2b10e190-0c0b-4963-b377-da3868084f50" isOneWay="false" action="urn:#getLdpTypesInfo" name="getLdpTypesInfo" bindingOperationName="getLdpTypesInfo" type="Request-Response" outputName="getLdpTypesInfoResponse" inputName="getLdpTypesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="af35fd2d-a238-4dc7-a709-37e38b25a498" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLdpTypesInfo>\r
         <!--Optional:-->\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <!--Optional:-->\r
         <birthDate>?</birthDate>\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLdpTypesInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLdpTypesInfo"/></con:call></con:operation><con:operation id="c72c776d-a937-456c-99f6-06f2618e7a99" isOneWay="false" action="urn:#getLpuScheduleInfo" name="getLpuScheduleInfo" bindingOperationName="getLpuScheduleInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="eb544d78-e137-4765-9171-b2bfe9705028" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpuScheduleInfo>\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpuScheduleInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpuScheduleInfo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="1941a84a-3c6d-4a94-9766-cfa4bec488f3" isOneWay="false" action="urn:#getLpusForAttachment" name="getLpusForAttachment" bindingOperationName="getLpusForAttachment" type="Request-Response" outputName="getLpusForAttachmentResponse" inputName="getLpusForAttachment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="55de1198-fb48-4912-b9bd-af56808cb596" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpusForAttachment>\r
         <birthDate>?</birthDate>\r
         <capitaFinancing>?</capitaFinancing>\r
         <!--Optional:-->\r
         <district>?</district>\r
         <!--Optional:-->\r
         <lpuName>?</lpuName>\r
         <!--Optional:-->\r
         <groupId>?</groupId>\r
         <!--Optional:-->\r
         <address>\r
            <street>?</street>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
         </address>\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpusForAttachment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpusForAttachment"/></con:call></con:operation><con:operation id="f9b62085-e480-4adc-a178-bf990c62f0ab" isOneWay="false" action="urn:#getLpusInfo" name="getLpusInfo" bindingOperationName="getLpusInfo" type="Request-Response" outputName="getLpusInfoResponse" inputName="getLpusInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cc6777ce-8eb0-4656-905d-92cbcd50fd01" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpusInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <lpuTypeCode>?</lpuTypeCode>\r
         <!--Optional:-->\r
         <lpuName>?</lpuName>\r
         <!--Optional:-->\r
         <baseLpuAddress>?</baseLpuAddress>\r
         <!--Optional:-->\r
         <serviceLpuAddress>\r
            <!--Optional:-->\r
            <area>?</area>\r
            <!--Optional:-->\r
            <district>?</district>\r
            <!--Optional:-->\r
            <street>?</street>\r
            <!--Optional:-->\r
            <house>?</house>\r
            <!--Optional:-->\r
            <building>?</building>\r
            <!--Optional:-->\r
            <construction>?</construction>\r
         </serviceLpuAddress>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpusInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpusInfo"/></con:call></con:operation><con:operation id="daf395db-ed79-4db8-831e-acf008d2bc9c" isOneWay="false" action="urn:#getLpusList" name="getLpusList" bindingOperationName="getLpusList" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="411008bd-0a4f-4008-a29c-62b99f34fc89" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpusList>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <name>?</name>\r
         <!--Optional:-->\r
         <district>?</district>\r
         <!--Optional:-->\r
         <ageGroup>\r
            <minAge>?</minAge>\r
            <maxAge>?</maxAge>\r
         </ageGroup>\r
         <!--Optional:-->\r
         <patientInfo>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientInfo>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpusList>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpusList"/></con:call></con:operation><con:operation id="6dbd94f2-37a5-4950-890a-c2fe98be0822" isOneWay="false" action="urn:#getLpuTypesInfo" name="getLpuTypesInfo" bindingOperationName="getLpuTypesInfo" type="Request-Response" outputName="getLpuTypesInfoResponse" inputName="getLpuTypesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0d8f2126-ca1e-4a96-a64e-ca6c267320f7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getLpuTypesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getLpuTypesInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpuTypesInfo"/></con:call></con:operation><con:operation id="6721b1c2-8134-4667-8644-0aa69ef0f819" isOneWay="false" action="urn:#getPatientInfo" name="getPatientInfo" bindingOperationName="getPatientInfo" type="Request-Response" outputName="getPatientInfoResponse" inputName="getPatientInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7644f3aa-46b0-4b18-a25e-52659d781674" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getPatientInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <fio>\r
            <lastName>?</lastName>\r
            <firstName>?</firstName>\r
            <!--Optional:-->\r
            <middleName>?</middleName>\r
         </fio>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getPatientInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getPatientInfo"/></con:call></con:operation><con:operation id="b8d61e88-28ec-413b-ad50-a6c6ada9726e" isOneWay="false" action="urn:#getReferralsInfo" name="getReferralsInfo" bindingOperationName="getReferralsInfo" type="Request-Response" outputName="getReferralsInfoResponse" inputName="getReferralsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="86503919-9035-4025-92fd-99a6e8733197" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getReferralsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getReferralsInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getReferralsInfo"/></con:call></con:operation><con:operation id="d87b34a0-5e5b-4d57-ba35-932f3a17ddb0" isOneWay="false" action="urn:#getDoctorsInfo" name="getSpecialitiesInfo" bindingOperationName="getSpecialitiesInfo" type="Request-Response" outputName="getSpecialitiesInfoResponse" inputName="getSpecialitiesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a2d813ae-d0ab-4c46-8898-0d7aa162cd40" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:getSpecialitiesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
      </api:getSpecialitiesInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getDoctorsInfo"/></con:call></con:operation><con:operation id="72fe3781-d48d-44a9-8035-f131f9c4de05" isOneWay="false" action="urn:#lookupPrescription" name="lookupPrescription" bindingOperationName="lookupPrescription" type="Request-Response" outputName="lookupPrescriptionResponse" inputName="lookupPrescription" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6a5e3272-3900-419a-8d93-733dad8583a0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:emias:llo.lookup">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:lookupPrescription>\r
         <!--Optional:-->\r
         <request>\r
            <!--Optional:-->\r
            <ident>?</ident>\r
            <!--Optional:-->\r
            <number>?</number>\r
            <!--Optional:-->\r
            <signature>?</signature>\r
            <!--Optional:-->\r
            <type>?</type>\r
         </request>\r
      </urn:lookupPrescription>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#lookupPrescription"/></con:call></con:operation><con:operation id="4ab4584a-a4bd-4132-83a0-a6e2552f7880" isOneWay="false" action="urn:#shiftAppointment" name="shiftAppointment" bindingOperationName="shiftAppointment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4aea501a-702a-44e5-bc59-d7332f8a71be" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <api:shiftAppointment>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <!--Optional:-->\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <receptionDate>?</receptionDate>\r
         <!--Optional:-->\r
         <startTime>?</startTime>\r
         <!--Optional:-->\r
         <endTime>?</endTime>\r
         <!--Optional:-->\r
         <receptionTypeCodeOrLdpTypeCode>?</receptionTypeCodeOrLdpTypeCode>\r
         <appointmentId>?</appointmentId>\r
      </api:shiftAppointment>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#shiftAppointment"/></con:call></con:operation></con:interface><con:testSuite id="81566854-597b-4055-b706-f6c5db92d805" name="lpuScheduleInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4bb88e15-d01a-4760-a538-b673d7a30ae6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Маппинг ответа getLpuScheduleInfo" searchProperties="true"><con:settings/><con:testStep type="request" id="a6013bb5-eb02-400e-a366-2e3027bdb083" name="getLpuScheduleInfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>Pguv1sBinding</con:interface><con:operation>getLpuScheduleInfo</con:operation><con:request name="getLpuScheduleInfo" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="640d53e1-b27d-4401-85b4-7cb9f4198120"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#suppEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:api="http://api.service.soap.emias.lanit.ru/">\r
  <soapenv:Header>
  <wsse:Security soapenv:mustUnderstand="0" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM</wsse:Username>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>\r
      <api:getLpuScheduleInfo>\r
         <lpuId>${#TestCase#lpuId}</lpuId>\r
         <!--Optional:-->\r
         <externalSystemId>EMIASINFO</externalSystemId>\r
      </api:getLpuScheduleInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ab2ee6ae-1e25-47d1-ae7a-fdc86f450bca" name="SOAP Response"/><con:assertion type="Simple Contains" id="27854d9e-ca31-4468-af18-7cf2c3d59fe0" name="Contains"><con:configuration><token>lpuId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="5c1b158d-bed2-491a-bbbf-cc99ec40a706" name="XPath Match" disabled="true"><con:configuration><path>count(:*schedule)</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="2b2333c5-bbed-48e6-a640-35d685713b48" name="Not SOAP Fault"/><con:assertion type="Not SOAP Fault Assertion" id="af0b4cf9-56d1-46e4-b0b8-575708bc3129" name="SOAP Fault" disabled="true"/><con:assertion type="Simple NotContains" id="5df2903c-e342-46d6-98bf-83838a65f76a" name="Not Contains"><con:configuration><token> ${#TestCase#lpuId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="ad089ea4-e995-4d4e-90f6-db2afd29067e" name="Valid HTTP Status Codes" disabled="true"><con:configuration><codes>404, 500</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="61e6193e-5d8d-4f2a-a7d9-f7868da79fe7" name="XPath Match 1"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" id="32c7a6ff-dfb5-46b5-bae6-ca5c1513332a" name="Script Assertion"><con:configuration/></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:#getLpuScheduleInfo"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="lpuScheduleInfo" id="eba1ad34-109f-4d11-89d7-39292146ff96"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/policy/lpuScheduleInfo" methodName="GET lpuScheduleInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="lpuScheduleInfo" id="981d2df2-4633-4c2a-82d0-730b7922b70d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/policy/lpuScheduleInfo</con:originalUri><con:assertion type="Simple Contains" id="0c38af31-4299-4832-91cd-10e1f73cf42c" name="Contains"><con:configuration><token>lpuId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="e4e72ce6-55ae-456e-8e44-5e9b7ae3713f" name="JsonPath Count" disabled="true"><con:configuration><path>$.payload.medicalEmployeeSchedule</path><content>1400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="45122568-55c4-44ee-adc5-e7f6111fe0d5" name="JsonPath Count 1"><con:configuration><path>$.payload.lpuInfo</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="lpuId" value="${#TestCase#lpuId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>lpuId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг ответов по элементу lpuInfo" id="0c858c31-290c-4262-ac9c-af373bbc2314"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

 DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
 today= LocalDate.now()
 
def lpuScheduleInfoResponse = context.expand('${lpuScheduleInfo#Response}')
def slurperJson = new JsonSlurper()
def lpuScheduleInfo = slurperJson.parseText(lpuScheduleInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getLpuScheduleInfoResponse = context.expand('${getLpuScheduleInfo#Response}')
getLpuScheduleInfo = new XmlSlurper().parseText(getLpuScheduleInfoResponse)

// проверить маппинг lpuId 
suppLpuId =getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.lpuId.toString()
infoLpuId = lpuScheduleInfo.payload.lpuInfo.lpuId
assert  infoLpuId==suppLpuId


// проверить маппинг name 
suppName = getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.name.toString().replace("\\","")
infoName = lpuScheduleInfo.payload.lpuInfo.name
assert  infoName==suppName

// проверить адреса
suppAddress =getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.addressInfo[0].address
log.info suppAddress

infoAddress =lpuScheduleInfo.payload.lpuInfo.address
log.info infoAddress
assert suppAddress==infoAddress

// проверить количество weekDaySchedule

suppWeekDaysCount =getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.weekDaySchedule ?  getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.weekDaySchedule.size(): 0
infoWeekDaysCount =lpuScheduleInfo.payload.lpuInfo.weekDaySchedule ? lpuScheduleInfo.payload.lpuInfo.weekDaySchedule.size() : 0
assert  infoWeekDaysCount==suppWeekDaysCount

//проверить каждый weekDaySchedule item
for(int i=0; i&lt;infoWeekDaysCount; i++){
	//проверить weekDay
	suppWeekDay =getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.weekDaySchedule.weekDay[i].toString()
	infoWeekDay =lpuScheduleInfo.payload.lpuInfo.weekDaySchedule.weekDay[i].toString()
	assert  infoWeekDay==suppWeekDay

	//проверить workItem.from
	suppWorkItemF =getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.weekDaySchedule.workItem[i].from.toString()
	infoWorkItemF =lpuScheduleInfo.payload.lpuInfo.weekDaySchedule.workItem[i].from.toString()
	assert  infoWorkItemF==suppWorkItemF

		//проверить workItem.to
	suppWorkItemT =getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.weekDaySchedule.workItem[i].to.toString()
	infoWorkItemT =lpuScheduleInfo.payload.lpuInfo.weekDaySchedule.workItem[i].to.toString()
	assert  infoWorkItemT==suppWorkItemT
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг ответов по элементу medicalEmployeeSchedule" id="d902855e-f9a5-4750-a357-fb8d73b7c422" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

 DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
 today= LocalDate.now()
 log.info today
def lpuScheduleInfoResponse = context.expand('${lpuScheduleInfo#Response}')
def slurperJson = new JsonSlurper()
def lpuScheduleInfo = slurperJson.parseText(lpuScheduleInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getLpuScheduleInfoResponse = context.expand('${getLpuScheduleInfo#Response}')
getLpuScheduleInfo = new XmlSlurper().parseText(getLpuScheduleInfoResponse)

// собрать medicalEmployeeSchedule из метода info

infoMedicalEmployeeSchedule=lpuScheduleInfo.payload.lpuInfo.lpuDepartment.medicalEmployee.schedule //Берем все schedule
infoMedicalEmployees=[] //Создаем для него массив
if (infoMedicalEmployeeSchedule){ //если schedule есть
	for(int i=0; i<infoMedicalEmployeeSchedule.size(); i++){ //перебираем каждый schedule
		cabinets=[]
		//availableResourceId=infoMedicalEmployeeSchedule[i].availableResourceId - не нужно по новому маппингу
		date=infoMedicalEmployeeSchedule[i].date //получаем дату
		weekDay=infoMedicalEmployeeSchedule[i].weekDay //получаем день недели
		receptionInfo=infoMedicalEmployeeSchedule[i].receptionInfo ? infoMedicalEmployeeSchedule[i].receptionInfo:null //Получаем receptionInfo, если нет то null
		cabinet=infoMedicalEmployeeSchedule[i].cabinet //Получаем кабинет
		cabinetMap=[:] //словарь
		if (cabinet){
			for(int j=0; j<cabinet.size(); j++){
				receptionTime=[] //объявляем массив receptionTime (там start end)
				number=cabinet[j].number //Номер кабинета из массива номеров
				//addressId=cabinet[j].addressId - не нужно по новому маппингу
				cabinetReceptionTime=cabinet[j].receptionTime //получаем массив receptionTime
				if (cabinetReceptionTime!=null){
					for(int m=0; m<cabinetReceptionTime.size();m++){
						start=cabinetReceptionTime[m].start.toString() //Получаем start
						end=cabinetReceptionTime[m].end.toString() //Получаем end
						receptionTimeMap=[start:start,end:end]
					}
					
					receptionTime<<receptionTimeMap
					//log.info " receptionTime "+receptionTime
				} 

				/*
				if (receptionTime){
					receptionTimeMap=[start:receptionTime.start,end:receptionTime.end]
				}
				*/
				cabinetMap=[number:number,receptionTime:receptionTime]
				log.info cabinets
				cabinets<<cabinetMap
				log.info cabinets
			}
		}
		def map=[/*availableResourceId:availableResourceId,*/ date:date,weekDay:weekDay,receptionInfo:receptionInfo,cabinet:cabinets]
		infoMedicalEmployees<< map
//		log.info"i ="+i+ " ресурс "+map
	}
}


// собрать medicalEmployeeSchedule из метода supp
def date
suppMedicalEmployeeSchedule=getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource //получаем ресурсы
suppMedicalEmployees=[]
if (suppMedicalEmployeeSchedule){
	for(int i=0; i<suppMedicalEmployeeSchedule.size(); i++){//перебираем все
	//for(int i=87; i<88; i++){
		cabinets=[]
		availableResourceId=suppMedicalEmployeeSchedule[i].id.toString()
		schedule=suppMedicalEmployeeSchedule[i].schedule
		if (schedule){
			for(int k=0;k<schedule.size(); k++){
				dateString=schedule[k].date.toString().replace("+03:00","")
				date = LocalDate.parse(dateString, formatter)
				weekDay=schedule[k].weekDay.toString()
				receptionInfo=schedule[k].receptionInfo.text() != ""?schedule[k].receptionInfo:null
				cabinet=schedule[k].cabinet
				cabinetMap=[:]
				if (cabinet){
					currentCabinets=[]
					receptionTime=[]
					for(int j=0; j<cabinet.size(); j++){
						receptionTime=[]
						number=cabinet[j].number
						addressId=cabinet[j].addressId
						cabinetReceptionTime=cabinet[j].receptionTime
						if(availableResourceId=='10477871' && dateString=='2022-07-11'&& cabinetReceptionTime.text()!=""){
							//log.info "number "+number+" cabinetReceptionTime "+cabinetReceptionTime
						}
						if (cabinetReceptionTime.text()!=""){
							for(int m=0; m<cabinetReceptionTime.size();m++){
								start=cabinetReceptionTime[m].start.toString().split(".000")[0]
								end=cabinetReceptionTime[m].end.toString().split(".000")[0]
								receptionTimeMap=[start:start,end:end]
							//log.info " receptionTime "+receptionTime
							}
							receptionTime<<receptionTimeMap
						} 
						if(availableResourceId=='10477871' && dateString=='2022-07-11'){
							//log.info "number "+number+" receptionTime "+receptionTime+" receptionInfo "+receptionInfo
							if (receptionInfo==null && receptionTime==[]){
								//log.info "надо скипнуть number "+number+" receptionTime "+receptionTime
							}
						}
						//log.info "receptionInfo "+receptionInfo+" receptionTime="+receptionTime+" j="+j
						if (receptionInfo==null && receptionTime==[]) continue
						else {
							cabinetMap=[number:number,addressId:addressId,receptionTime:receptionTime]
							currentCabinets<<cabinetMap
						}
					}
					cabinets=currentCabinets
					if(date>=today){
						def map=[availableResourceId:availableResourceId, date:dateString,weekDay:weekDay,receptionInfo:receptionInfo,cabinet:cabinets]
					//	log.info"i ="+i+ " ресурс "+map
						suppMedicalEmployees<< map
					}
				}
				//log.info "i ="+i+  " availableResourceId ="+availableResourceId+ " date ="+date+ " cabinets "+currentCabinets
								
			}
		}
	}
}


//assert  suppMedicalEmployees.size()==infoMedicalEmployees.size()
log.info "suppMedicalEmployees "+suppMedicalEmployees.size()+  " infoMedicalEmployees ="+infoMedicalEmployees.size()
for(int i=0; i<infoMedicalEmployees.size(); i++){
	if (infoMedicalEmployees.get(i).toString()!=suppMedicalEmployees.get(i).toString()){
		log.info " i ="+i
		log.info "инфо "+infoMedicalEmployees[i]
		log.info "супп "+suppMedicalEmployees[i]
		//assert  suppMedicalEmployees[i]==infoMedicalEmployees[i]
		//return
	}
	//assert infoMedicalEmployees.get(i).toString()==suppMedicalEmployees.get(i).toString()
}
log.info " end "



/* 
for (int i=1; i<suppMedicalEmployees.size(); i++){
	value=suppMedicalEmployees[i]
	if (value.receptionInfo ==null ) {
		for (int k=0; k<value.cabinet.size(); k++){
			if (value.cabinet[k].receptionTime!=[]){
				cab=value.cabinet[k]
				//log.info "i ="+i+ " k ="+k+" есть receptionTime . ресурс " +value.availableResourceId + " , дата " +value.date + " ,кабинет  " +cab
			}
		}
	}
	if (value.receptionInfo !=null) {
		for (int k=0; k<value.cabinet.size(); k++){
			if (value.cabinet[k].receptionTime==[]){
					//log.info "i ="+i+" нет receptionTime есть receptionInfo " + value
			}
		}
	}
}

*/
//log.info infoMedicalEmployees[0]

//assert infoMedicalEmployees==suppMedicalEmployees

/*
// узнать разницу между медиками
	def commons = infoMedicalEmployees.intersect(suppMedicalEmployees)
	def difference = infoMedicalEmployees.plus(suppMedicalEmployees)
	difference.removeAll(commons)
	
	log.info difference
*/]]></script></con:config></con:testStep><con:testStep type="groovy" name="Маппинг ответов по medicalEmployeeSchedule" id="3b530ee8-29f0-4514-ac87-45883a8bef45"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.util.Collections

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
today= LocalDate.now()
def lpuScheduleInfoResponse = context.expand('${lpuScheduleInfo#Response}')
def slurperJson = new JsonSlurper()
def lpuScheduleInfo = slurperJson.parseText(lpuScheduleInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getLpuScheduleInfoResponse = context.expand('${getLpuScheduleInfo#Response}')
getLpuScheduleInfo = new XmlSlurper().parseText(getLpuScheduleInfoResponse)

IdLpuDepartment=[]
//log.info lpuScheduleInfo.payload.lpuInfo.lpuDepartment.size()
for (int i=0; i<lpuScheduleInfo.payload.lpuInfo.lpuDepartment.size();i++){
	IdLpuDepartment << lpuScheduleInfo.payload.lpuInfo.lpuDepartment[i].id
}
log.info IdLpuDepartment
log.info IdLpuDepartment.size()

NumResoursesForLpuDepartment=[]
FIOEmployeeAll=[]
for (int i=0; i<IdLpuDepartment.size(); i++){
	nn=10
	availableResourceNum=[]
	FIOEmployee=[:]
	for (int j=0; j<getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource.size();j++){
		if (IdLpuDepartment[i].toString() == getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource[j].lpuDepartment.id.toString()){
			lastName = getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource[j].medicalEmployee.lastName
			firstName = getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource[j].medicalEmployee.firstName
			middleName = getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource[j].medicalEmployee.middleName
			FIO="$lastName $firstName $middleName"
			if (FIOEmployee.containsKey(FIO)){
				nn+=1
				FIO="$lastName $firstName $middleName $nn"
				FIOEmployee.put(FIO,j)
			}
			else{
				FIOEmployee.put(FIO,j)	
			}
		}
	}
	
	Map sortMap = new TreeMap<>(FIOEmployee);
//	log.info sortMap
	NumResoursesForLpuDepartment<<sortMap.values()
	FIOEmployeeAll<<sortMap
}
//log.info FIOEmployeeAll
log.info NumResoursesForLpuDepartment
infoMedicalEmployee=lpuScheduleInfo.payload.lpuInfo.lpuDepartment.medicalEmployee
suppMedicalEmployee=getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource
if (infoMedicalEmployee){
	for (int i=0; i<infoMedicalEmployee.size();i++){
		for (int j=0; j<infoMedicalEmployee[i].size();j++){
//			log.info "i" + i + "j"+j
			InfoDate=infoMedicalEmployee[i][j].schedule.date
//			log.info "InfoDate" + InfoDate
			InfoWeekDay=infoMedicalEmployee[i][j].schedule.weekDay
//			log.info "InfoWeekDay" + InfoWeekDay
			InfoReceptionInfo=infoMedicalEmployee[i][j].schedule.receptionInfo ? infoMedicalEmployee[i][j].schedule.receptionInfo:null
//			log.info "InfoReceptionInfo" + InfoReceptionInfo.size()
			cabinet=infoMedicalEmployee[i][j].schedule.cabinet
//			log.info "cabinetSize" + cabinet.size()
			if (cabinet){
				receptionTime=[]
				numbers=[]
				for(int x=0; x<cabinet.size(); x++){
					cabinetReceptionTime=cabinet[x].receptionTime
					if (cabinetReceptionTime!=null){
						for(int m=0; m<cabinetReceptionTime.size();m++){
							number=cabinet[x][m].get("number")
//							log.info cabinet[x][m].get("number")
							if (InfoReceptionInfo[x]!="Врач болеет" && InfoReceptionInfo[x]!="Обучение"){
								start=cabinetReceptionTime[m][0].get("start").toString()
								end=cabinetReceptionTime[m][0].get("end").toString() 
								receptionTimeMap=[start:start,end:end]
								receptionTime<<receptionTimeMap
							}
							numbers<<number.sort()
						}
					}
				}
//				log.info "receptionTime" + receptionTime
//				log.info receptionTime.size()
//				log.info "numbers" + numbers
//				log.info numbers.size()
			}
			//////////////////////////Чтение данных в СУПП/////////////////////////////
			
			n=NumResoursesForLpuDepartment[i][j]
			AvailRes=suppMedicalEmployee[n]
//			log.info AvailRes
			schedule=AvailRes.schedule
			suppReceptionTime=[]
			if (schedule){
				suppDate=[]
				suppWeekDay=[]
				suppReceptionInfo=[]
				suppReceptionTime=[]
				suppNumbers=[]
				for(int k=0;k<schedule.size(); k++){
					ostNumbers=[]
					mas=[]
					dateString=schedule[k].date.text().replace("+03:00","")
					date = LocalDate.parse(dateString, formatter)
					weekDay=schedule[k].weekDay.text()
					receptionInfo=schedule[k].receptionInfo.text() != "" ? schedule[k].receptionInfo.text() : null
					if (date < today || receptionInfo == null ){
						continue
					}
					suppDate<<dateString
					suppWeekDay<<weekDay
					suppReceptionInfo<<receptionInfo
					cabinet=schedule[k].cabinet
					if (cabinet){
//						suppReceptionTime=[]
						suppSize=suppNumbers.size()
						suppSizeRT=suppReceptionTime.size()
						for(int a=0; a<cabinet.size(); a++){
							cabinetReceptionTime=cabinet[a].receptionTime
							cabinetNumber=cabinet[a].number
							if (cabinetReceptionTime.text()){
									for(int m=0; m<cabinetReceptionTime.size();m++){
									start=cabinetReceptionTime[m].start.toString()
									end=cabinetReceptionTime[m].end.toString()
									suppReceptionTimeMap=[start:start,end:end]
									suppReceptionTime<<suppReceptionTimeMap
									mas=[cabinetNumber.toString()]
									suppNumbers<<mas
									}
							}	
							else{
								ostNumbers<<cabinetNumber.toString()
							}

							if (receptionInfo=="Врач болеет" || receptionInfo=="Обучение"){
									mas<<cabinetNumber.toString()
									if (a==cabinet.size()-1){
										suppNumbers<<mas.sort()
									}
							}
	
						}
						suppSize2=suppNumbers.size()
						suppSizeRT2=suppReceptionTime.size()
						if (suppSize2>suppSize  && ostNumbers.size()>0 && suppSizeRT2>suppSizeRT){
							for(int h = suppSize; h< suppSize2;h++ ){
								for(int g=0; g<ostNumbers.size(); g++){
									suppNumbers[h]<<ostNumbers[g]
								}
							suppNumbers[h].sort()
							}
						}
						
					}
				}
//			log.info suppReceptionInfo.size()
		//log.info "suppReceptionInfo " + suppReceptionInfo
		//log.info "InfoReceptionInfo " +  InfoReceptionInfo
			
			if(suppReceptionInfo==[]){
				assert !InfoReceptionInfo
			}
			else{
				assert suppReceptionInfo==InfoReceptionInfo
			}
			assert suppDate==InfoDate
			assert suppWeekDay==InfoWeekDay
			assert suppReceptionTime.sort()==receptionTime.sort()
			assert numbers.sort()==suppNumbers.sort()
			
			}
		}
	}
}

log.info "end"
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг ответов по элементу lpuDepartment" id="75a43de6-7e05-4a91-8bce-5b4bbb26b803"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

 DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
 today= LocalDate.now()
 
def lpuScheduleInfoResponse = context.expand('${lpuScheduleInfo#Response}')
def slurperJson = new JsonSlurper()
def lpuScheduleInfo = slurperJson.parseText(lpuScheduleInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getLpuScheduleInfoResponse = context.expand('${getLpuScheduleInfo#Response}')
getLpuScheduleInfo = new XmlSlurper().parseText(getLpuScheduleInfoResponse)


// проверить количество lpuDepartment

supplpuDepIds=getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource.lpuDepartment
suppAllDepList=[]
for(int i=0; i<supplpuDepIds.size(); i++){
	map=[id:supplpuDepIds[i].id.toString(), name:supplpuDepIds[i].name.toString()]
	suppAllDepList <<map
	
}
suppAllDepList.sort{it.name}
infolpuDepartmentsCount =lpuScheduleInfo.payload.lpuInfo.lpuDepartment.size()

List<String> suppUniqDepList = new ArrayList<>();
for (Map  x : suppAllDepList) {
    if (!suppUniqDepList.contains(x))
        suppUniqDepList.add(x);
}
//log.info "suppUniqDepList "+suppUniqDepList[0].name.getClass()
suppUniqDepartmentsCount =suppUniqDepList.size()

assert  infolpuDepartmentsCount==suppUniqDepartmentsCount
//
 suppDepartments=[]
 infoDepartments=[]
medEmployeeMap=[:]

 if (infolpuDepartmentsCount){
	//проверить каждый lpuDepartment item
	for(int i=0; i<infolpuDepartmentsCount; i++){
		def lpuDepartment = lpuScheduleInfo.payload.lpuInfo.lpuDepartment[i]
		medEmployees=[]
		if (lpuDepartment){
			name=lpuDepartment.name.toString()
			id=lpuDepartment.id.toString()
			medicalEmployee=lpuDepartment.medicalEmployee
			for(int m=0; m<medicalEmployee.size();m++){
				//availableResourceId=lpuDepartment.medicalEmployee[m].availableResourceId.toString()
				positionId=lpuDepartment.medicalEmployee[m].position.id.toString()
				positionName=lpuDepartment.medicalEmployee[m].position.name.toString()
				FIO =lpuDepartment.medicalEmployee[m].fio.toString()
				medEmployeeMap=[ positionId:positionId, positionName:positionName, FIO:FIO]
				medEmployees << medEmployeeMap
			}
		}
		def map=[id:id, name:name,medicalEmployee:medEmployees]
		infoDepartments << map
	}
	log.info "infoDepartments  " +infoDepartments
	
	suppAvResCount=infolpuDepartmentsCount=getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource.size()
	for(int i=0; i<suppUniqDepartmentsCount; i++){
		arList=[]
		for(int j=0; j<suppAvResCount; j++){
			def availableResource = getLpuScheduleInfo.Body.getLpuScheduleInfoResponse.return.availableResource[j]
			lpuDepartment=availableResource.lpuDepartment
			//log.info " suppUniqDepList[i].id "+suppUniqDepList[i].id
			if (suppUniqDepList[i].id==lpuDepartment.id.toString() ){
				//availableResourceId=availableResource.id.toString()
				positionId=availableResource.medicalEmployee.position.id.toString()
				positionName=availableResource.medicalEmployee.position.shortName.toString()
				lastName=availableResource.medicalEmployee.lastName.toString()
				middleName=availableResource.medicalEmployee.middleName.toString()
				firstName=availableResource.medicalEmployee.firstName.toString()
				FIO =lastName+' '+firstName+(middleName ? ' '+ middleName : "")
				//log.info infolpuDepartmentId
				def map=[ positionId:positionId, positionName:positionName, FIO:FIO]
				arList << map
				arList.sort{it.FIO}
			}
		}
		depMap=[id:suppUniqDepList[i].id, name:suppUniqDepList[i].name,medicalEmployee:arList]
		suppDepartments << depMap
	}
log.info "suppDepartments  " +suppDepartments
	
	assert infoDepartments.size()==suppDepartments.size()
	
	
	 
	// узнать разницу между департаментами
	def commons = infoDepartments.intersect(suppDepartments)
	def difference = infoDepartments.plus(suppDepartments)
	difference.removeAll(commons)
	
	log.info difference
	
	assert infoDepartments==suppDepartments
 }

log.info "end"
]]></script></con:config></con:testStep><con:properties><con:property><con:name>lpuId</con:name><con:value>204</con:value></con:property><con:property><con:name>прапрпарапр</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="45e247f9-c7dc-42c8-a4c9-9351ef1e26f6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Метод getLpuScheduleInfo вернул ошибку LPUS_NOT_FOUND" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="lpuScheduleInfo" id="d9657d5c-e718-42f2-81e3-52ccfb1538d4"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/policy/lpuScheduleInfo" methodName="GET lpuScheduleInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="lpuScheduleInfo" id="981d2df2-4633-4c2a-82d0-730b7922b70d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/policy/lpuScheduleInfo</con:originalUri><con:assertion type="JsonPath Match" id="f306aa8d-644d-4338-832a-70cca2e57dd2" name="Код ошибки =SUPP_LPU_NOT_FOUND"><con:configuration/></con:assertion><con:assertion type="JsonPath Match" id="f306aa8d-644d-4338-832a-70cca2e57dd2" name="Текст ошибки =Указанный идентификатор ЛПУ не найден"><con:configuration><path>$.error.description</path><content>Указанный идентификатор ЛПУ не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f306aa8d-644d-4338-832a-70cca2e57dd2" name="Тип ошибки=BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="6d778198-3291-48aa-9e2c-02241655a6eb" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="lpuId" value="${#TestCase#lpuId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>lpuId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>lpuId</con:name><con:value>1</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="645c4941-fb86-439b-b662-5169b0044d3b" name="policy"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="fd392550-db13-406f-96df-6d97bb31e674" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Пациент c прикреплениями" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Получить полис и дату рождения у пациента c прикреплениями" id="22611fe9-648e-447b-9101-5de208722f0d"><con:settings><con:setting id="discardResponse">false</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT * FROM
( select PATIENT_ID,OMS_ASSURANCE_SERIES,OMS_ASSURANCE_NUMBER,OMS_REGION_ASSURANCE_SERIES,OMS_REGION_ASSURANCE_NUMBER,OMS_NEW_ASSURANCE_NUMBER,
OMS_TEMP_ASSURANCE_NUMBER,BIRTH_DATE,IS_POLICY_VALID
from PATIENT
where ((OMS_ASSURANCE_SERIES IS NOT NULL AND OMS_ASSURANCE_NUMBER IS NOT NULL) 
	OR (OMS_REGION_ASSURANCE_SERIES IS NOT NULL AND OMS_REGION_ASSURANCE_NUMBER IS NOT NULL)
	OR OMS_NEW_ASSURANCE_NUMBER IS NOT NULL) AND IS_POLICY_VALID = 1 AND exists (
    select * 
    from ATTACHMENT
    where ATTACHMENT.PERSON_INSURANCE_CODE = PATIENT.PATIENT_ID)
AND ROWNUM&lt;201 ORDER BY dbms_random.value)
WHERE rownum = 1</con:query><con:assertion type="JDBC Status" id="5f75902c-360b-4b2e-9c02-4a2ded6a7712" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Записать ОМС и birthDate" id="d05aeb39-b08d-4a52-9df7-347c848d4a85"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
def PatientOmsResponse = context.expand('${Получить полис и дату рождения у пациента c прикреплениями#ResponseAsXml}')
PatientOms = new XmlSlurper().parseText(PatientOmsResponse)
OMS_ASSURANCE_SERIES = PatientOms.ResultSet.Row.OMS_ASSURANCE_SERIES !="" ? PatientOms.ResultSet.Row.OMS_ASSURANCE_SERIES:null
OMS_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_ASSURANCE_NUMBER: null
OMS_REGION_ASSURANCE_SERIES = PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_SERIES !="" ? PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_SERIES:null
OMS_REGION_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_NUMBER:null
OMS_NEW_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_NEW_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_NEW_ASSURANCE_NUMBER:null

BIRTH_DATE = PatientOms.ResultSet.Row.BIRTH_DATE.toString().split(" ")[0]
testRunner.testCase.setPropertyValue( "birthDate",BIRTH_DATE)

log.info OMS_NEW_ASSURANCE_NUMBER
log.info OMS_ASSURANCE_SERIES
log.info OMS_ASSURANCE_NUMBER
log.info OMS_REGION_ASSURANCE_SERIES
log.info OMS_REGION_ASSURANCE_NUMBER

if (OMS_NEW_ASSURANCE_NUMBER){
	oms = OMS_NEW_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 1
}

if (OMS_ASSURANCE_SERIES &amp;&amp; OMS_ASSURANCE_NUMBER){
	oms = OMS_ASSURANCE_SERIES.toString() + OMS_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 2
}

if (OMS_REGION_ASSURANCE_SERIES &amp;&amp; OMS_REGION_ASSURANCE_NUMBER){
	oms = OMS_REGION_ASSURANCE_SERIES.toString() + OMS_REGION_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 3
}</script></con:config></con:testStep><con:testStep type="request" name="getPatientInfo" id="1fd28ec5-0c03-4a19-9692-b1e7a5b5082f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PGUContingentServicePTB</con:interface><con:operation>getPatientInfo3</con:operation><con:request name="getPatientInfo" id="1afeb6ae-3b0a-42ef-b4c6-3e9a82820062"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#contingentEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header>
   	<wsse:Security soapenv:mustUnderstand="0" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   		<wsse:UsernameToken>
   			<wsse:Username>EIM</wsse:Username>
   		</wsse:UsernameToken>
   	</wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <v2:getPatientInfo3>\r
         <omsNumber>${#TestCase#omsNumber}</omsNumber>\r
         <birthDate>${#TestCase#birthDate}T00:00:00</birthDate>\r
         <typeAttach>0</typeAttach>
         <typeAttach>1</typeAttach>
         <typeAttach>2</typeAttach>\r
         <onlyMoscowPolicy>${#TestCase#onlyMoscowPolicy}</onlyMoscowPolicy>\r
      </v2:getPatientInfo3>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="daa5b256-457f-4641-9c71-4bdbbcc2a706"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Обработка ошибки &quot;Read timed out&quot;" id="275fa647-d443-4295-8187-d883d377826c"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Read timed out</con:name><con:type>XPATH</con:type><con:expression>//*:faultstring = "Read timed out"</con:expression><con:targetStep>getPatientInfo</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="policy" id="8a75c52f-3e63-42a6-b86e-1b9bfa8d391c"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/policy" methodName="POST policy" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="policy" id="077c527c-133b-428b-87ea-1b352ae13be8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber":"${#TestCase#omsNumber}",
    "birthDate":"${#TestCase#birthDate}",
    "typeAttach":[${#TestCase#typeAttach}],
    "onlyMoscowPolicy":"${#TestCase#onlyMoscowPolicy}"
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/policy</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="79381f20-e774-48d6-9064-87a40cf45ce7" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="8f0c149e-d334-44f0-9568-352e761a87b2"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList

//JSON Slurper
def policyResponse = context.expand('${policy#Response}')
def policy = new JsonSlurper().parseText(policyResponse)

//XML Slurper
def getPatientInfoResponse = context.expand('${getPatientInfo#Response}')
getPatientInfo = new XmlSlurper().parseText(getPatientInfoResponse)

soapData = getPatientInfo.Body.getPatientInfo3Response.return
restData = policy.payload.patient

//Проверка patientId
sPatientId = soapData.id
rPatientId = restData.patientId
assert sPatientId == rPatientId

//Проверка birthDate
sBirthDate = soapData.birthDate.toString().split("T")[0]
rBirthDate = restData.birthDate
assert sBirthDate == rBirthDate

//Проверка omsNumber
sOmsNumber = soapData.omsPolicy.omsNumber
rOmsNumber = restData.policy.omsNumber
assert sOmsNumber == rOmsNumber

//Проверка omsSeries
sOmsSeries = soapData.omsPolicy.omsSeries ? soapData.omsPolicy.omsSeries : ""
rOmsSeries = restData.policy.omsSeries ? restData.policy.omsSeries : ""
assert sOmsSeries == rOmsSeries

//Проверка status
sStatus = soapData.omsPolicy.status
rStatus = restData.policy.status
assert sStatus == rStatus

//Проверка smoName
sSmoName = soapData.omsPolicy.smoName ? soapData.omsPolicy.smoName : ""
rSmoName = restData.policy.smoName ? restData.policy.smoName : ""
assert sSmoName == rSmoName

//Проверка issueDate
sIssueDate = soapData.omsPolicy.issueDate.toString().split("T")[0] ? soapData.omsPolicy.issueDate.toString().split("T")[0] : ""
rIssueDate = restData.policy.issueDate ? restData.policy.issueDate : ""
assert sIssueDate == rIssueDate

//Проверка region
sRegion = soapData.omsPolicy.region ? soapData.omsPolicy.region : ""
rRegion = restData.policy.region ? restData.policy.region : ""
assert sRegion == rRegion

//Проверка type
sType = soapData.omsPolicy.type
rType = restData.policy.type
assert sType == rType

//Проверка attachments
sAttachments = soapData.attachments.attachment
rAttachments = restData.attachments
sAttach = [:]
n=0
for(int i = 0; i<sAttachments.size(); i++){
	sLpu = []
	if (sAttachments[i].status!="Закрыто" && sAttachments[i].status!="В прикреплении отказано"){
		n+=1
		phones=[]
		lpuId = sAttachments[i].lpu.id
		lpuName = sAttachments[i].lpu.name
		phone =  sAttachments[i].lpu.phone
		if (phone !=""){
			phone = sAttachments[i].lpu.phone.toString().split("; ") ? sAttachments[i].lpu.phone.toString().split("; ") : null
		}
		else{
			phone = null
		}
		for (int g = 0; phone != null ? g<phone.size() : 0; g++){
			phones<<"+7" + phone[g]
		}
		address = sAttachments[i].lpu.address
		districtNumber = "Участок №" + sAttachments[i].districtNumber
		districtType = sAttachments[i].districtType
		status = sAttachments[i].status
		specialityCode = null
		if (districtType == "Терапевтический" || districtType == "Педиатрический"){
			specialityCode = "theraupetist"
		}
		if (districtType == "Взрослый стоматологический" || districtType == "Детский стоматологический"){
			specialityCode = "stomatology_th"
		}
		if (districtType == "Гинекологический участок"){
			specialityCode = "gynecology"
		}
		sLpu = [lpuId, lpuName, phone != null ? phones : null, address, districtNumber, districtType, status, specialityCode]
		sAttach.put(n,sLpu)
	}
}
n=0
rAttach =[:]
for (int j = 0; j<rAttachments.size(); j++){
	n+=1
	rLpu = []
	lpuId = rAttachments[j].lpu.lpuId
	lpuName = rAttachments[j].lpu.lpuName
	phone = rAttachments[j].lpu.phone ? rAttachments[j].lpu.phone : null
	address = rAttachments[j].lpu.address
	districtNumber = rAttachments[j].districtNumber
	districtType = rAttachments[j].districtType
	status = rAttachments[j].status
	specialityCode = rAttachments[j].specialityCode ? rAttachments[j].specialityCode : null
	rLpu = [lpuId, lpuName, phone, address, districtNumber, districtType, status, specialityCode]
	rAttach.put(n,rLpu)
}
log.info sAttach
log.info rAttach
assert sAttach==rAttach]]></script></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7748000824000014</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1999-11-25</con:value></con:property><con:property><con:name>typeAttach</con:name><con:value>0,1,2</con:value></con:property><con:property><con:name>onlyMoscowPolicy</con:name><con:value>false</con:value></con:property></con:properties></con:testCase><con:testCase id="010179c5-3196-474d-b527-f8ac2b18548d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Пациент без прикреплений. Получение объекта noAttachment." searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Получить полис и дату рождения у пациента без прикрепления" id="30ad6461-750b-496c-af4b-0dc7c04d73ef"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT * FROM
( select PATIENT_ID,OMS_ASSURANCE_SERIES,OMS_ASSURANCE_NUMBER,OMS_REGION_ASSURANCE_SERIES,OMS_REGION_ASSURANCE_NUMBER,OMS_NEW_ASSURANCE_NUMBER,
OMS_TEMP_ASSURANCE_NUMBER,BIRTH_DATE,IS_POLICY_VALID
from PATIENT
where ((OMS_ASSURANCE_SERIES IS NOT NULL AND OMS_ASSURANCE_NUMBER IS NOT NULL) 
	OR (OMS_REGION_ASSURANCE_SERIES IS NOT NULL AND OMS_REGION_ASSURANCE_NUMBER IS NOT NULL)
	OR OMS_NEW_ASSURANCE_NUMBER IS NOT NULL) AND IS_POLICY_VALID = 1 AND not exists (
    select * 
    from ATTACHMENT
    where ATTACHMENT.PERSON_INSURANCE_CODE = PATIENT.PATIENT_ID)
AND ROWNUM&lt;11 ORDER BY dbms_random.value)
WHERE rownum = 1</con:query><con:assertion type="JDBC Status" id="5f75902c-360b-4b2e-9c02-4a2ded6a7712" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Записать ОМС и birthDate" id="365a6e02-40bb-40f1-885b-f84b9caaf8c5"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
import java.util.Calendar
import java.util.TimeZone
def PatientOmsResponse = context.expand('${Получить полис и дату рождения у пациента без прикрепления#ResponseAsXml}')
PatientOms = new XmlSlurper().parseText(PatientOmsResponse)
OMS_ASSURANCE_SERIES = PatientOms.ResultSet.Row.OMS_ASSURANCE_SERIES !="" ? PatientOms.ResultSet.Row.OMS_ASSURANCE_SERIES:null
OMS_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_ASSURANCE_NUMBER: null
OMS_REGION_ASSURANCE_SERIES = PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_SERIES !="" ? PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_SERIES:null
OMS_REGION_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_NUMBER:null
OMS_NEW_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_NEW_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_NEW_ASSURANCE_NUMBER:null

BIRTH_DATE = PatientOms.ResultSet.Row.BIRTH_DATE.toString().split(" ")[0]
testRunner.testCase.setPropertyValue( "birthDate",BIRTH_DATE)

log.info OMS_NEW_ASSURANCE_NUMBER
log.info OMS_ASSURANCE_SERIES
log.info OMS_ASSURANCE_NUMBER
log.info OMS_REGION_ASSURANCE_SERIES
log.info OMS_REGION_ASSURANCE_NUMBER

if (OMS_NEW_ASSURANCE_NUMBER){
	oms = OMS_NEW_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 1
}

if (OMS_ASSURANCE_SERIES &amp;&amp; OMS_ASSURANCE_NUMBER){
	oms = OMS_ASSURANCE_SERIES.toString() + OMS_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 2
}

if (OMS_REGION_ASSURANCE_SERIES &amp;&amp; OMS_REGION_ASSURANCE_NUMBER){
	oms = OMS_REGION_ASSURANCE_SERIES.toString() + OMS_REGION_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 3
}</script></con:config></con:testStep><con:testStep type="request" name="getPatientInfo" id="4ee487fd-c46e-46b3-a43d-4c7ad139d4bd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PGUContingentServicePTB</con:interface><con:operation>getPatientInfo3</con:operation><con:request name="getPatientInfo" id="1afeb6ae-3b0a-42ef-b4c6-3e9a82820062"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#contingentEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header>
   	<wsse:Security soapenv:mustUnderstand="0" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   		<wsse:UsernameToken>
   			<wsse:Username>EIM</wsse:Username>
   		</wsse:UsernameToken>
   	</wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <v2:getPatientInfo3>\r
         <omsNumber>${#TestCase#omsNumber}</omsNumber>\r
         <birthDate>${#TestCase#birthDate}T00:00:00</birthDate>\r
         <typeAttach>0</typeAttach>\r
         <typeAttach>1</typeAttach>
         <typeAttach>2</typeAttach>
         <onlyMoscowPolicy>${#TestCase#onlyMoscowPolicy}</onlyMoscowPolicy>\r
      </v2:getPatientInfo3>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="daa5b256-457f-4641-9c71-4bdbbcc2a706"/><con:assertion type="SOAP Fault Assertion" id="6d8c49d8-c2be-4acb-ae36-4cff03945501" name="Not SOAP Fault"/><con:assertion type="Simple Contains" id="4b9493bd-9a29-4bb1-8447-f1e9221038be" name="Массив прикреплений пустой"><con:configuration><token>&lt;attachments/></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="policy" id="dacd2887-7c09-4cfd-aea5-a25581ff05d8"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/policy" methodName="POST policy" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="policy" id="077c527c-133b-428b-87ea-1b352ae13be8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber":"${#TestCase#omsNumber}",
    "birthDate":"${#TestCase#birthDate}",
    "typeAttach":[${#TestCase#typeAttach}],
    "onlyMoscowPolicy":"${#TestCase#onlyMoscowPolicy}"
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/policy</con:originalUri><con:assertion type="JsonPath Match" id="a45f88d0-ed9d-42ec-9ed2-e53132ae7e61" name="Значение text = &quot;К сожалению, по полису нет прикреплений...&quot;"><con:configuration><path>$.payload.patient.noAttachment.content[0].text</path><content>К сожалению, по полису нет прикреплений и запись к врачу не доступна. Если ранее вы уже заполняли заявление на прикрепление, подождите ещё немного. От 3 до 7 дней требуется, чтобы информация попала в базу данных. Если этого не произошло, {{link_helpdesk}}.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74cdb262-c1a7-45b2-84b3-42e21a79a747" name="Значение variableDict.link_helpdesk.type = &quot;navigate&quot;"><con:configuration><path>$.payload.patient.noAttachment.content[0].variableDict.link_helpdesk.type</path><content>navigate</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e1e03d57-547c-4f73-890b-ab55ff1480ad" name="Значение variableDict.link_helpdesk.value = &quot;напишите в службу поддержки&quot;"><con:configuration><path>$.payload.patient.noAttachment.content[0].variableDict.link_helpdesk.value</path><content>напишите в службу поддержки</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5c98e589-8f74-422a-aa5b-f6453d008bfb" name="Значение variableDict.link_helpdesk.screenName = &quot;HelpdeskScreen&quot;"><con:configuration><path>$.payload.patient.noAttachment.content[0].variableDict.link_helpdesk.screenName</path><content>HelpdeskScreen</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="289e38d6-0d63-4d3a-b4ef-df1ce6a09b45" name="Значение text = &quot;Если еще не заполняли заявление...&quot;"><con:configuration><path>$.payload.patient.noAttachment.content[1].text</path><content>Если ещё не заполняли заявление, можете сделать это прямо сейчас {{link_mos_ru_attachments}}.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="43732af7-e449-4e7b-b0e9-df93dead411c" name="Значение variableDict.link_mos_ru_attachments.type = &quot;link&quot;"><con:configuration><path>$.payload.patient.noAttachment.content[1].variableDict.link_mos_ru_attachments.type</path><content>link</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c04df521-3905-499d-8a14-ec1a81233fb6" name="Значение variableDict.link_mos_ru_attachments.value = &quot;на сайте mos.ru&quot;"><con:configuration><path>$.payload.patient.noAttachment.content[1].variableDict.link_mos_ru_attachments.value</path><content>на сайте mos.ru</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a9768796-e4a0-42d7-a094-e65ca171d4f3" name="Значение variableDict.link_mos_ru_attachments.url = &quot;https://www.mos.ru/uslugi/zdorove/prikreplenie-k-poliklinike/&quot;"><con:configuration><path>$.payload.patient.noAttachment.content[1].variableDict.link_mos_ru_attachments.url</path><content>https://www.mos.ru/uslugi/zdorove/prikreplenie-k-poliklinike/</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7700007029190996</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1996-09-19</con:value></con:property><con:property><con:name>typeAttach</con:name><con:value>0,1,2</con:value></con:property><con:property><con:name>onlyMoscowPolicy</con:name><con:value>false</con:value></con:property></con:properties></con:testCase><con:testCase id="e7fdfbfa-4a07-4ad9-9d33-28062777a6a5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС1. Недействующий полис пациента. (SUPP_NO_VALID_POLICY)" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Получить дату рождения и недействующий полис ОМС" id="2d14b8d7-0e6d-4a8f-b330-8d8ff7e48385" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT * FROM
( select PATIENT_ID,OMS_ASSURANCE_SERIES,OMS_ASSURANCE_NUMBER,OMS_REGION_ASSURANCE_SERIES,OMS_REGION_ASSURANCE_NUMBER,OMS_NEW_ASSURANCE_NUMBER,
OMS_TEMP_ASSURANCE_NUMBER,BIRTH_DATE,IS_POLICY_VALID
from PATIENT
where ((OMS_ASSURANCE_SERIES IS NOT NULL AND OMS_ASSURANCE_NUMBER IS NOT NULL) 
	OR (OMS_REGION_ASSURANCE_SERIES IS NOT NULL AND OMS_REGION_ASSURANCE_NUMBER IS NOT NULL)
	OR OMS_NEW_ASSURANCE_NUMBER IS NOT NULL) AND IS_POLICY_VALID = 0
AND ROWNUM&lt;201 ORDER BY dbms_random.value)
WHERE rownum = 1</con:query><con:assertion type="JDBC Status" id="f1a2606a-b727-434a-941c-4e6151c31423" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Записать ОМС и birthDate" id="21d0497e-7085-47f2-b4c9-e5ea6e7724b0" disabled="true"><con:settings/><con:config><script>import groovy.xml.XmlSlurper
def PatientOmsResponse = context.expand('${Получить дату рождения и недействующий полис ОМС#ResponseAsXml}')
PatientOms = new XmlSlurper().parseText(PatientOmsResponse)
OMS_ASSURANCE_SERIES = PatientOms.ResultSet.Row.OMS_ASSURANCE_SERIES !="" ? PatientOms.ResultSet.Row.OMS_ASSURANCE_SERIES:null
OMS_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_ASSURANCE_NUMBER: null
OMS_REGION_ASSURANCE_SERIES = PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_SERIES !="" ? PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_SERIES:null
OMS_REGION_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_REGION_ASSURANCE_NUMBER:null
OMS_NEW_ASSURANCE_NUMBER = PatientOms.ResultSet.Row.OMS_NEW_ASSURANCE_NUMBER !="" ? PatientOms.ResultSet.Row.OMS_NEW_ASSURANCE_NUMBER:null

BIRTH_DATE = PatientOms.ResultSet.Row.BIRTH_DATE.toString().split(" ")[0]
testRunner.testCase.setPropertyValue( "birthDate",BIRTH_DATE)

log.info OMS_NEW_ASSURANCE_NUMBER
log.info OMS_ASSURANCE_SERIES
log.info OMS_ASSURANCE_NUMBER
log.info OMS_REGION_ASSURANCE_SERIES
log.info OMS_REGION_ASSURANCE_NUMBER

if (OMS_NEW_ASSURANCE_NUMBER){
	oms = OMS_NEW_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 1
}

if (OMS_ASSURANCE_SERIES &amp;&amp; OMS_ASSURANCE_NUMBER){
	oms = OMS_ASSURANCE_SERIES.toString() + OMS_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 2
}

if (OMS_REGION_ASSURANCE_SERIES &amp;&amp; OMS_REGION_ASSURANCE_NUMBER){
	oms = OMS_REGION_ASSURANCE_SERIES.toString() + OMS_REGION_ASSURANCE_NUMBER.toString()
	testRunner.testCase.setPropertyValue( "omsNumber",oms)
	return 3
}</script></con:config></con:testStep><con:testStep type="request" name="getPatientInfo" id="f0ae133a-af35-4380-b6cc-16f727fce4a2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PGUContingentServicePTB</con:interface><con:operation>getPatientInfo3</con:operation><con:request name="getPatientInfo" id="1afeb6ae-3b0a-42ef-b4c6-3e9a82820062"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#contingentEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header>
   	<wsse:Security soapenv:mustUnderstand="0" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   		<wsse:UsernameToken>
   			<wsse:Username>EIM</wsse:Username>
   		</wsse:UsernameToken>
   	</wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <v2:getPatientInfo3>\r
         <omsNumber>${#TestCase#omsNumber}</omsNumber>\r
         <birthDate>${#TestCase#birthDate}T00:00:00</birthDate>\r
         <typeAttach>0</typeAttach>\r
         <typeAttach>1</typeAttach>
         <typeAttach>2</typeAttach>
         <onlyMoscowPolicy>${#TestCase#onlyMoscowPolicy}</onlyMoscowPolicy>\r
      </v2:getPatientInfo3>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="daa5b256-457f-4641-9c71-4bdbbcc2a706"/><con:assertion type="Not SOAP Fault Assertion" id="1c118f2f-aff9-4a5c-aedf-1c1edff52504" name="SOAP Fault"/><con:assertion type="XPath Match" id="794aca03-401f-4479-a7dc-037bf7dac804" name="Описание ошибки = PATIENT_HAS_NO_VALID_OMS"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace pgu='http://api.service.soap.emias.lanit.ru/';
//*:faultstring</path><content>PATIENT_HAS_NO_VALID_OMS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="postPolicy" id="418ddfa7-ffad-4aa0-852e-9cf1caf8de1c"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/policy" methodName="POST policy" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="postPolicy" id="077c527c-133b-428b-87ea-1b352ae13be8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber":"${#TestCase#omsNumber}",
    "birthDate":"${#TestCase#birthDate}",
    "typeAttach":[${#TestCase#typeAttach}],
    "onlyMoscowPolicy":"${#TestCase#onlyMoscowPolicy}"
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/policy</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="747a20f4-22f9-434a-98a0-14db4170324f" name="Status Code = 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение code = SUPP_NO_VALID_POLICY"><con:configuration><path>$.error.code</path><content>SUPP_NO_VALID_POLICY</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение description = Полис пациента не действителен"><con:configuration><path>$.error.description</path><content>Полис пациента не действителен</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение origin = PATIENT_HAS_NO_VALID_OMS"><con:configuration><path>$.error.origin</path><content>PATIENT_HAS_NO_VALID_OMS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7754840880000312</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1951-05-19</con:value></con:property><con:property><con:name>typeAttach</con:name><con:value>0,1,2</con:value></con:property><con:property><con:name>onlyMoscowPolicy</con:name><con:value>false</con:value></con:property></con:properties></con:testCase><con:testCase id="4cd62b7a-5a2a-4f72-8493-0045b2a4f04b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС2. Несуществующий пациент. (SUPP_PATIENT_NOT_FOUND)" searchProperties="true"><con:settings/><con:testStep type="request" name="getPatientInfo" id="c7940cbe-d1de-46a7-b45c-25069d0d1555"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PGUContingentServicePTB</con:interface><con:operation>getPatientInfo3</con:operation><con:request name="getPatientInfo" id="1afeb6ae-3b0a-42ef-b4c6-3e9a82820062"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#contingentEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header>
   	<wsse:Security soapenv:mustUnderstand="0" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   		<wsse:UsernameToken>
   			<wsse:Username>EIM</wsse:Username>
   		</wsse:UsernameToken>
   	</wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <v2:getPatientInfo3>\r
         <omsNumber>${#TestCase#omsNumber}</omsNumber>\r
         <birthDate>${#TestCase#birthDate}T00:00:00</birthDate>\r
         <typeAttach>0</typeAttach>
         <typeAttach>1</typeAttach>
         <typeAttach>2</typeAttach>
         <onlyMoscowPolicy>${#TestCase#onlyMoscowPolicy}</onlyMoscowPolicy>\r
      </v2:getPatientInfo3>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="daa5b256-457f-4641-9c71-4bdbbcc2a706"/><con:assertion type="Not SOAP Fault Assertion" id="1c118f2f-aff9-4a5c-aedf-1c1edff52504" name="SOAP Fault"/><con:assertion type="XPath Match" id="794aca03-401f-4479-a7dc-037bf7dac804" name="Описание ошибки = PATIENT_NOT_FOUND"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace pgu='http://api.service.soap.emias.lanit.ru/';
//*:faultstring</path><content>PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="postPolicy" id="dad90a29-ec93-4340-9511-544162f4c188"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/policy" methodName="POST policy" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="postPolicy" id="077c527c-133b-428b-87ea-1b352ae13be8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber":"${#TestCase#omsNumber}",
    "birthDate":"${#TestCase#birthDate}",
    "typeAttach":[${#TestCase#typeAttach}],
    "onlyMoscowPolicy":"${#TestCase#onlyMoscowPolicy}"
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/policy</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="795c44c1-606d-41c3-a98d-c65ce70cce45" name="Status Code = 404"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение code = SUPP_PATIENT_NOT_FOUND"><con:configuration><path>$.error.code</path><content>SUPP_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение description = Пациент не найден"><con:configuration><path>$.error.description</path><content>Пациент не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение origin = PATIENT_NOT_FOUND"><con:configuration><path>$.error.origin</path><content>PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1985-02-01</con:value></con:property><con:property><con:name>typeAttach</con:name><con:value>0,1,2</con:value></con:property><con:property><con:name>onlyMoscowPolicy</con:name><con:value>false</con:value></con:property></con:properties></con:testCase><con:testCase id="d8a8afef-41ce-40f3-9595-34200b6be699" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС3. Неверный формат полиса ОМС. (SUPP_POLICY_WRONG_FORMAT)" searchProperties="true"><con:settings/><con:testStep type="request" name="getPatientInfo" id="ebf17fd6-a456-49c8-8e76-641c24b04ab6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PGUContingentServicePTB</con:interface><con:operation>getPatientInfo3</con:operation><con:request name="getPatientInfo" id="1afeb6ae-3b0a-42ef-b4c6-3e9a82820062"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#contingentEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v2="http://api.service.soap.emias.lanit.ru/v2/">\r
   <soapenv:Header>
   	<wsse:Security soapenv:mustUnderstand="0" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
   		<wsse:UsernameToken>
   			<wsse:Username>EIM</wsse:Username>
   		</wsse:UsernameToken>
   	</wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <v2:getPatientInfo3>\r
         <omsNumber>${#TestCase#omsNumber}</omsNumber>\r
         <birthDate>${#TestCase#birthDate}T00:00:00</birthDate>\r
         <typeAttach>0</typeAttach>
         <typeAttach>1</typeAttach>
         <typeAttach>2</typeAttach>
         <onlyMoscowPolicy>${#TestCase#onlyMoscowPolicy}</onlyMoscowPolicy>\r
      </v2:getPatientInfo3>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="daa5b256-457f-4641-9c71-4bdbbcc2a706"/><con:assertion type="Not SOAP Fault Assertion" id="1c118f2f-aff9-4a5c-aedf-1c1edff52504" name="SOAP Fault"/><con:assertion type="XPath Match" id="794aca03-401f-4479-a7dc-037bf7dac804" name="Описание ошибки = WRONG_NEW_OMS_FORMAT"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace pgu='http://api.service.soap.emias.lanit.ru/';
//*:faultstring</path><content>WRONG_NEW_OMS_FORMAT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="postPolicy" id="920660fd-c4dd-4565-834f-3a385ea7587c"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/policy" methodName="POST policy" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="postPolicy" id="077c527c-133b-428b-87ea-1b352ae13be8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber":"${#TestCase#omsNumber}",
    "birthDate":"${#TestCase#birthDate}",
    "typeAttach":[${#TestCase#typeAttach}],
    "onlyMoscowPolicy":"${#TestCase#onlyMoscowPolicy}"
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/policy</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6db349a3-c149-4390-abe5-b1ae7fb302d7" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение code"><con:configuration><path>$.error.code</path><content>SUPP_POLICY_WRONG_FORMAT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение description"><con:configuration><path>$.error.description</path><content>Указан неверный формат полиса ОМС</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение type"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="859a7e82-e560-4903-899c-34cc85997407" name="Значение origin"><con:configuration><path>$.error.origin</path><content>WRONG_NEW_OMS_FORMAT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>123456789012345665</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1985-02-01</con:value></con:property><con:property><con:name>typeAttach</con:name><con:value>0,1,2</con:value></con:property><con:property><con:name>onlyMoscowPolicy</con:name><con:value>false</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>contingentDbConnection</con:name><con:value/></con:property><con:property><con:name>contingentDbLogin</con:name><con:value/></con:property><con:property><con:name>contingentDbPassword</con:name><con:value/></con:property><con:property><con:name>contingentFullDbConnection</con:name><con:value/></con:property><con:property><con:name>contingentEndpoint</con:name><con:value>http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService  </con:value></con:property><con:property><con:name>emiasInfoEndpoint</con:name><con:value>http://emiasinfo1.emias.solit-clouds.ru</con:value></con:property><con:property><con:name>emiasInfoDbConnection</con:name><con:value>172.17.5.11:29100/emiasinfo</con:value></con:property><con:property><con:name>emiasInfoDbLogin</con:name><con:value>emiasinfo</con:value></con:property><con:property><con:name>emiasInfoDbPassword</con:name><con:value>emiasinfo</con:value></con:property><con:property><con:name>emiasInfoFullDbConnection</con:name><con:value>jdbc:postgresql://172.17.5.11:29100/emiasinfo?user=emiasinfo&amp;password=emiasinfo</con:value></con:property><con:property><con:name>emiasInfoDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>suppEndpoint</con:name><con:value>http://esbcamel.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService</con:value></con:property><con:property><con:name>suppDbConnection</con:name><con:value>@//10.2.172.242:1521/emiasdb</con:value></con:property><con:property><con:name>suppDbLogin</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>suppDbPassword</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>suppFullDbConnection</con:name><con:value> jdbc:oracle:thin:EMIAS_CLUSTER/EMIAS_CLUSTER@//10.2.172.242:1521/emiasdb</con:value></con:property><con:property><con:name>suppDBDriver</con:name><con:value>oracle.jdbc.driver.OracleDriver</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>