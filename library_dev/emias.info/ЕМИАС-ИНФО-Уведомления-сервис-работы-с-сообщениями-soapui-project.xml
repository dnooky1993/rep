<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="9161b388-d211-475d-b38c-8ce4a2b9c72e" activeEnvironment="Default" name="ЕМИАС.ИНФО.Уведомления сервис работы с сообщениями" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="8ddca34c-d949-4d6e-827b-64a95f824616" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://emiasinfo1.emias.solit-clouds.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint></con:endpoints><con:resource name="list" path="/api/v1/message/list" id="8e15f4a7-863b-4234-ba89-44545303cb95"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter><con:parameter><con:name>deviceGuid</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="Method 1" id="aac2c98e-e7ad-48d7-aea6-1aa12f3c0333" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:list="http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list">list:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 404</con:status><con:params/><con:element xmlns:list="http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list">list:Fault</con:element></con:representation><con:request name="Request 1" id="15fa0b10-0cc6-40aa-a27c-36e7af6f8aab" mediaType="application/json"><con:settings/><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="details" path="/api/v1/message/details" id="556fe9ed-fd8b-4ef7-b658-c2b9482d5304"><con:settings/><con:parameters><con:parameter><con:name>notificationId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>deviceGuid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="263b8c9a-5ac9-4905-aba1-39774ca40a36" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:det="http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details">det:Response</con:element></con:representation><con:request name="Request 1" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings/><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="142b10dc-9801-43a9-84ed-a99f10b1b027" name="GET message/list"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="de57d7bb-cb67-4f3f-a293-8a0fae4a657c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС_ID254434" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы юзеров и девайсов" id="b4e124c4-b5e5-4416-9c28-454ea3de574c"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()
//получить несушествующий id в таблице юзеров
userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
//для количества юзеров из пропертей записать юзерайди с индексом
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

//получить несушествующий id в таблице девайсов
deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
//для количества юзеров из пропертей записать девайс айди с индексом + генерировать гуид девайса и тоже записывть
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="4d50cbcc-9d5f-40d1-a168-1c85553cdeb3"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="3a3ac005-8dad-4d60-aa5a-d2841958233d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="78fadb18-179b-472e-8e5b-9cb84dc58084"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()
def countTasks = testRunner.testCase.getPropertyValue("countTasks").toInteger()


notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countTasks; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="efeca353-454a-4297-bfda-2dd83e14efda"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>-- создать уведомление и задачу в статусе send

INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');

-- создать уведомление без title и description и задачу в статусе dont_send
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId2}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, null, null, '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId2}, ${#TestCase#notificationId2}, ${#TestCase#deviceId1}, 'DONT_SEND', ' ${#TestCase#sendDate2}');

-- создать уведомление и задачу в статусе CREATE
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId3}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId3}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'CREATE', ' ${#TestCase#sendDate3}');

-- создать уведомление и задачу в статусе CREATE_SILENT
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId4}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId4}, ${#TestCase#notificationId4}, ${#TestCase#deviceId1}, 'CREATE_SILENT', ' ${#TestCase#sendDate4}');

-- создать уведомление и задачу в статусе SEND_SILENT
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId5}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId5}, ${#TestCase#notificationId5}, ${#TestCase#deviceId1}, 'SEND_SILENT', ' ${#TestCase#sendDate5}');

-- создать уведомление и задачу в статусе DONT_SEND_SILENT
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId6}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId6}, ${#TestCase#notificationId6}, ${#TestCase#deviceId1}, 'DONT_SEND_SILENT', ' ${#TestCase#sendDate6}')</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET message/list" id="761afc58-5e38-4538-9e6a-d412711e5e03"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET message/list" id="15fa0b10-0cc6-40aa-a27c-36e7af6f8aab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list</con:originalUri><con:assertion type="JsonPath Count" id="9d6cfe70-7591-49fc-992e-a6446ae93008" name="В ответе вернулось только 2 объекта"><con:configuration><path>$.payload.notificationsList[*]</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adf09506-7122-4df9-882e-9d8875d5d974" name="Уведомление с статусом dont_send и большей  датой первое в списке"><con:configuration><path>$.payload.notificationsList[0].notificationId</path><content>${#TestCase#notificationId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adf09506-7122-4df9-882e-9d8875d5d974" name="Значение sendDate в первом объекте соответствует значению в БД"><con:configuration><path>$.payload.notificationsList[0].sendDate</path><content>2023-03-02T16:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adf09506-7122-4df9-882e-9d8875d5d974" name="Значение isViewed в первом объекте соответствует значению в БД"><con:configuration><path>$.payload.notificationsList[0].isViewed</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f4a8b3ac-0168-470c-8710-efbe09a4a48c" name="В первом элементе не возвращен title "><con:configuration><scriptText>import groovy.json.JsonSlurper

ResponseJson = context.expand('${GET message/list#Response}')
response = new JsonSlurper().parseText(ResponseJson)
title= response.payload.notificationsList[0].title
assert !title</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f4a8b3ac-0168-470c-8710-efbe09a4a48c" name="В первом элементе не возвращен description "><con:configuration><scriptText>import groovy.json.JsonSlurper

ResponseJson = context.expand('${GET message/list#Response}')
response = new JsonSlurper().parseText(ResponseJson)
description= response.payload.notificationsList[0].description
assert !description</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adf09506-7122-4df9-882e-9d8875d5d974" name="Уведомление с статусом send второе в списке"><con:configuration><path>$.payload.notificationsList[1].notificationId</path><content>${#TestCase#notificationId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adf09506-7122-4df9-882e-9d8875d5d974" name="Значение sendDate во втором объекте соответствует значению в БД"><con:configuration><path>$.payload.notificationsList[1].sendDate</path><content>2023-03-01T16:00</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adf09506-7122-4df9-882e-9d8875d5d974" name="Значение isViewed во втором объекте соответствует значению в БД"><con:configuration><path>$.payload.notificationsList[1].isViewed</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adf09506-7122-4df9-882e-9d8875d5d974" name="Значение title во втором объекте соответствует значению в БД"><con:configuration><path>$.payload.notificationsList[1].title</path><content>Вы записаны на прием</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adf09506-7122-4df9-882e-9d8875d5d974" name="Значение description во втором объекте соответствует значению в БД"><con:configuration><path>$.payload.notificationsList[1].description</path><content>Невролог</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="5b28d378-f2d2-43e9-81a5-8a2bb14d8621"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1},${#TestCase#taskId2},${#TestCase#taskId3},${#TestCase#taskId4},${#TestCase#taskId5},${#TestCase#taskId6});
delete from f_notification where id in (${#TestCase#notificationId1},${#TestCase#notificationId2},${#TestCase#notificationId3},${#TestCase#notificationId4},${#TestCase#notificationId5},${#TestCase#notificationId6})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="f01254d5-47c8-402e-93f8-a49fa4ccc5c6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>1002</con:value></con:property><con:property><con:name>patientId2</con:name><con:value>1001</con:value></con:property><con:property><con:name>guide</con:name><con:value>fb7d4816-cc57-4fc2-ae7f-731d3b744030</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>2</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>6</con:value></con:property><con:property><con:name>userId1</con:name><con:value>117</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>121</con:value></con:property><con:property><con:name>deviceId2</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>591c82cb-715e-43fa-8649-99a283310354</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>2b84880c-6fb6-49a8-8087-d9168f35bcbb</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>3</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1652</con:value></con:property><con:property><con:name>notificationId2</con:name><con:value>1653</con:value></con:property><con:property><con:name>countTasks</con:name><con:value>6</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2475</con:value></con:property><con:property><con:name>taskId2</con:name><con:value>2476</con:value></con:property><con:property><con:name>taskId3</con:name><con:value>2477</con:value></con:property><con:property><con:name>taskId4</con:name><con:value>2478</con:value></con:property><con:property><con:name>taskId5</con:name><con:value>2479</con:value></con:property><con:property><con:name>taskId6</con:name><con:value>2480</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>sendDate2</con:name><con:value>2023-03-02 16:00:00.000</con:value></con:property><con:property><con:name>sendDate3</con:name><con:value>2023-03-03 16:00:00.000</con:value></con:property><con:property><con:name>sendDate4</con:name><con:value>2023-03-04 16:00:00.000</con:value></con:property><con:property><con:name>sendDate5</con:name><con:value>2023-03-05 16:00:00.000</con:value></con:property><con:property><con:name>sendDate6</con:name><con:value>2023-03-06 16:00:00.000</con:value></con:property><con:property><con:name>notificationId3</con:name><con:value>1654</con:value></con:property><con:property><con:name>notificationId4</con:name><con:value>1655</con:value></con:property><con:property><con:name>notificationId5</con:name><con:value>1656</con:value></con:property><con:property><con:name>notificationId6</con:name><con:value>1657</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77959797970000891</con:value></con:property></con:properties></con:testCase><con:testCase id="79f463e5-1496-4c36-b27c-3f7c8eded0d7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС1  USER_NOT_FOUND_ID254038" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="4757d9da-3789-4ed4-a14f-c98b52abbc4d"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="0564550f-036b-448e-b010-201c7dd3dcbd"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациентов и девайс" id="0fbfd201-796e-4a6b-9169-4c911fa73372"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс2" id="2e40a98c-73d6-4e6c-845d-05c627f04417"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId2", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms2", oms)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET message/list" id="4eb3906f-588f-4f9e-9545-d3ccef4ac047"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET message/list" id="15fa0b10-0cc6-40aa-a27c-36e7af6f8aab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list</con:originalUri><con:assertion type="JsonPath Count" id="6d60bc47-f821-4158-a2ec-65f213a649a5" name="В ответе вернулся один объект"><con:configuration><path>$</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="38fed92d-5e6f-4090-b73f-3f174d4126b5" name="Содержимое ошибки корректно"><con:configuration><path>$.error</path><content>{"code":"USER_NOT_FOUND","description":"Пользователь не найден","type":"BUSINESS"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId2}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="81ecca9f-2a30-4a5f-a330-e33bdfaef3e3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>1002</con:value></con:property><con:property><con:name>patientId2</con:name><con:value>1003</con:value></con:property><con:property><con:name>guide</con:name><con:value>fb7d4816-cc57-4fc2-ae7f-731d3b744030</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>2</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>6</con:value></con:property><con:property><con:name>userId1</con:name><con:value>117</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>121</con:value></con:property><con:property><con:name>deviceId2</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>e733abc4-80d9-4b9a-be27-74f6e49a31c9</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>3b4f191d-6ea0-4d66-a79e-274fbe312987</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>3</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1638</con:value></con:property><con:property><con:name>notificationId2</con:name><con:value>1639</con:value></con:property><con:property><con:name>countTasks</con:name><con:value>6</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2467</con:value></con:property><con:property><con:name>taskId2</con:name><con:value>2468</con:value></con:property><con:property><con:name>taskId3</con:name><con:value>2469</con:value></con:property><con:property><con:name>taskId4</con:name><con:value>2470</con:value></con:property><con:property><con:name>taskId5</con:name><con:value>2471</con:value></con:property><con:property><con:name>taskId6</con:name><con:value>2472</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>sendDate2</con:name><con:value>2023-03-02 16:00:00.000</con:value></con:property><con:property><con:name>sendDate3</con:name><con:value>2023-03-03 16:00:00.000</con:value></con:property><con:property><con:name>sendDate4</con:name><con:value>2023-03-04 16:00:00.000</con:value></con:property><con:property><con:name>sendDate5</con:name><con:value>2023-03-05 16:00:00.000</con:value></con:property><con:property><con:name>sendDate6</con:name><con:value>2023-03-06 16:00:00.000</con:value></con:property><con:property><con:name>notificationId3</con:name><con:value>1640</con:value></con:property><con:property><con:name>notificationId4</con:name><con:value>1641</con:value></con:property><con:property><con:name>notificationId5</con:name><con:value>1642</con:value></con:property><con:property><con:name>notificationId6</con:name><con:value>1643</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77959797970000891</con:value></con:property><con:property><con:name>oms2</con:name><con:value>779597979700008911</con:value></con:property></con:properties></con:testCase><con:testCase id="44ef41d9-c935-4504-8a6a-0b97a2530fe1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Передан несуществующий девайс АС2  DEVICE_NOT_FOUND_ID255608" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы юзеров и девайсов" id="e5745616-65ec-4437-b1a3-ecd18bdebf49"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

userId=sql.firstRow("select max(id)+1 as id from f_user").id
testRunner.testCase.setPropertyValue("userId1", userId.toString())
userId=userId+1


uuidFound=false
int i=0
while(uuidFound==false &amp;&amp; i&lt;20){
	uuid=java.util.UUID.randomUUID()
	result=sql.firstRow("select max(id)+1 as id from f_device where device_guid='"+uuid+"'")
	if(!result){
		testRunner.testCase.setPropertyValue("uuid", uuid.toString())
		uuidFound=true
	}
	else{
		i=i+1
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="b0345601-65ca-49cf-b125-4d20303bdd8e"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="72daf091-4621-4e1f-942e-791c922234b4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');
</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET message/list" id="d4ec213b-7334-4af3-a50d-87f0952fed9e"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET message/list" id="15fa0b10-0cc6-40aa-a27c-36e7af6f8aab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list</con:originalUri><con:assertion type="JsonPath Count" id="6d60bc47-f821-4158-a2ec-65f213a649a5" name="В ответе вернулся один объект"><con:configuration><path>$</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="38fed92d-5e6f-4090-b73f-3f174d4126b5" name="Содержимое ошибки корректно"><con:configuration><path>$.error</path><content>{"code":"DEVICE_NOT_FOUND","description":"Устройство не найдено","type":"BUSINESS"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента" id="7d764a94-f4fa-47fe-9cfc-8e0edae590d2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>1002</con:value></con:property><con:property><con:name>patientId2</con:name><con:value>1001</con:value></con:property><con:property><con:name>guide</con:name><con:value>fb7d4816-cc57-4fc2-ae7f-731d3b744030</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>2</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>6</con:value></con:property><con:property><con:name>userId1</con:name><con:value>117</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>118</con:value></con:property><con:property><con:name>deviceId2</con:name><con:value>119</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>f5034f07-1346-4ee1-9865-6f6cbc2082ac</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>ea8007f7-e622-449f-87bf-142d641e5b46</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>3</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1638</con:value></con:property><con:property><con:name>notificationId2</con:name><con:value>1639</con:value></con:property><con:property><con:name>countTasks</con:name><con:value>6</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2467</con:value></con:property><con:property><con:name>taskId2</con:name><con:value>2468</con:value></con:property><con:property><con:name>taskId3</con:name><con:value>2469</con:value></con:property><con:property><con:name>taskId4</con:name><con:value>2470</con:value></con:property><con:property><con:name>taskId5</con:name><con:value>2471</con:value></con:property><con:property><con:name>taskId6</con:name><con:value>2472</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>sendDate2</con:name><con:value>2023-03-02 16:00:00.000</con:value></con:property><con:property><con:name>sendDate3</con:name><con:value>2023-03-03 16:00:00.000</con:value></con:property><con:property><con:name>sendDate4</con:name><con:value>2023-03-04 16:00:00.000</con:value></con:property><con:property><con:name>sendDate5</con:name><con:value>2023-03-05 16:00:00.000</con:value></con:property><con:property><con:name>sendDate6</con:name><con:value>2023-03-06 16:00:00.000</con:value></con:property><con:property><con:name>notificationId3</con:name><con:value>1640</con:value></con:property><con:property><con:name>notificationId4</con:name><con:value>1641</con:value></con:property><con:property><con:name>notificationId5</con:name><con:value>1642</con:value></con:property><con:property><con:name>notificationId6</con:name><con:value>1643</con:value></con:property><con:property><con:name>oms</con:name><con:value>77959797970000891</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77959797970000891</con:value></con:property></con:properties></con:testCase><con:testCase id="d2c3a149-4983-423c-9687-9bf18b972821" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Передан  девайс другого пациента АС2  DEVICE_NOT_FOUND_ID277188" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="f16248ce-e1f3-402f-ac69-05c0e16f5aa7"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="0e0bc605-f9ca-4581-b27d-d6377325a905"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациентов и девайс" id="131ea8bb-86a9-4404-a0e9-b779dd9e96d1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс2" id="746f1de3-e2e9-46d4-8c3e-dbfe30d399a2"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId2", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms2", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента без девайса" id="e84261d3-58e6-4a58-a80e-714a89f77f9e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId2}, ${#TestCase#patientId2}, '${#TestCase#oms2}', '2023-01-22');
</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET message/list" id="21056f24-2a1d-4453-895c-bd5ac2f443fc"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET message/list" id="15fa0b10-0cc6-40aa-a27c-36e7af6f8aab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list</con:originalUri><con:assertion type="JsonPath Count" id="6d60bc47-f821-4158-a2ec-65f213a649a5" name="В ответе вернулся один объект"><con:configuration><path>$</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="38fed92d-5e6f-4090-b73f-3f174d4126b5" name="Содержимое ошибки корректно"><con:configuration><path>$.error</path><content>{"code":"DEVICE_NOT_FOUND","description":"Устройство не найдено","type":"BUSINESS"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId2}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациентов и девайс" id="bf35fd82-7f9d-48b9-9392-40b59714fb60"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1};
delete from f_user where patient_id=${#TestCase#patientId2}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>1002</con:value></con:property><con:property><con:name>patientId2</con:name><con:value>1003</con:value></con:property><con:property><con:name>guide</con:name><con:value>fb7d4816-cc57-4fc2-ae7f-731d3b744030</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>2</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>2</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>6</con:value></con:property><con:property><con:name>userId1</con:name><con:value>117</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>121</con:value></con:property><con:property><con:name>deviceId2</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>151550e9-122f-48cc-8bbb-1ccbbd2b75b5</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>5d54dc52-eab7-4baf-af99-5aa8f023963f</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>3</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1638</con:value></con:property><con:property><con:name>notificationId2</con:name><con:value>1639</con:value></con:property><con:property><con:name>countTasks</con:name><con:value>6</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2467</con:value></con:property><con:property><con:name>taskId2</con:name><con:value>2468</con:value></con:property><con:property><con:name>taskId3</con:name><con:value>2469</con:value></con:property><con:property><con:name>taskId4</con:name><con:value>2470</con:value></con:property><con:property><con:name>taskId5</con:name><con:value>2471</con:value></con:property><con:property><con:name>taskId6</con:name><con:value>2472</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>sendDate2</con:name><con:value>2023-03-02 16:00:00.000</con:value></con:property><con:property><con:name>sendDate3</con:name><con:value>2023-03-03 16:00:00.000</con:value></con:property><con:property><con:name>sendDate4</con:name><con:value>2023-03-04 16:00:00.000</con:value></con:property><con:property><con:name>sendDate5</con:name><con:value>2023-03-05 16:00:00.000</con:value></con:property><con:property><con:name>sendDate6</con:name><con:value>2023-03-06 16:00:00.000</con:value></con:property><con:property><con:name>notificationId3</con:name><con:value>1640</con:value></con:property><con:property><con:name>notificationId4</con:name><con:value>1641</con:value></con:property><con:property><con:name>notificationId5</con:name><con:value>1642</con:value></con:property><con:property><con:name>notificationId6</con:name><con:value>1643</con:value></con:property><con:property><con:name>userId2</con:name><con:value>118</con:value></con:property><con:property><con:name>oms</con:name><con:value>77959797970000891</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77959797970000891</con:value></con:property><con:property><con:name>oms2</con:name><con:value>779597979700008911</con:value></con:property></con:properties></con:testCase><con:testCase id="fc3acb97-9798-4706-a410-5708a85dfe89" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="У девайса пациента нет уведомлений_ID255178" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="9c4c7a35-5050-428b-afdb-73c585a4c6a5"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификатор пациента и омс" id="73cd770b-f375-4e6b-bdfe-1d85280fb81b"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="a44ad6a0-d137-423c-b22d-e979461d04c7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="2033b19d-80fc-4288-89b3-0ac9074cf5e1" disabled="true"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()
def countTasks = testRunner.testCase.getPropertyValue("countTasks").toInteger()


notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countTasks; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="c2c75bdd-86b9-46b0-8aca-f7cfd2ab1c94" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>-- создать уведомление и задачу в статусе send

INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');

-- создать уведомление без title и description и задачу в статусе dont_send
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId2}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, null, null, '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId2}, ${#TestCase#notificationId2}, ${#TestCase#deviceId1}, 'DONT_SEND', ' ${#TestCase#sendDate2}');

-- создать уведомление и задачу в статусе CREATE
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId3}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId3}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'CREATE', ' ${#TestCase#sendDate3}');

-- создать уведомление и задачу в статусе CREATE_SILENT
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId4}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId4}, ${#TestCase#notificationId4}, ${#TestCase#deviceId1}, 'CREATE_SILENT', ' ${#TestCase#sendDate4}');

-- создать уведомление и задачу в статусе SEND_SILENT
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId5}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId5}, ${#TestCase#notificationId5}, ${#TestCase#deviceId1}, 'SEND_SILENT', ' ${#TestCase#sendDate5}');

-- создать уведомление и задачу в статусе DONT_SEND_SILENT
INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId6}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId6}, ${#TestCase#notificationId6}, ${#TestCase#deviceId1}, 'DONT_SEND_SILENT', ' ${#TestCase#sendDate6}')</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET message/list" id="868621f5-0aed-440e-bb96-2b81dc1dd4be"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET message/list" id="15fa0b10-0cc6-40aa-a27c-36e7af6f8aab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list</con:originalUri><con:assertion type="JsonPath Match" id="ade6bfde-2cd6-4620-9523-be3d025c49bd" name="JsonPath Match"><con:configuration><path>$</path><content>{"payload":{"notificationsList":[]}}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="645042ce-3b00-4315-a008-12a69e906047" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1},${#TestCase#taskId2},${#TestCase#taskId3},${#TestCase#taskId4},${#TestCase#taskId5},${#TestCase#taskId6});
delete from f_notification where id in (${#TestCase#notificationId1},${#TestCase#notificationId2},${#TestCase#notificationId3},${#TestCase#notificationId4},${#TestCase#notificationId5},${#TestCase#notificationId6})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="3d34420d-eca5-418b-88aa-aeab5e91b13e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>1002</con:value></con:property><con:property><con:name>patientId2</con:name><con:value>1001</con:value></con:property><con:property><con:name>guide</con:name><con:value>fb7d4816-cc57-4fc2-ae7f-731d3b744030</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>2</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>6</con:value></con:property><con:property><con:name>userId1</con:name><con:value>117</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>121</con:value></con:property><con:property><con:name>deviceId2</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>f35f7712-85fa-47fa-a187-4390b982c447</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>ac781b7b-1453-47a6-8b7b-2b98bac4c062</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>3</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1638</con:value></con:property><con:property><con:name>notificationId2</con:name><con:value>1639</con:value></con:property><con:property><con:name>countTasks</con:name><con:value>6</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2467</con:value></con:property><con:property><con:name>taskId2</con:name><con:value>2468</con:value></con:property><con:property><con:name>taskId3</con:name><con:value>2469</con:value></con:property><con:property><con:name>taskId4</con:name><con:value>2470</con:value></con:property><con:property><con:name>taskId5</con:name><con:value>2471</con:value></con:property><con:property><con:name>taskId6</con:name><con:value>2472</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>sendDate2</con:name><con:value>2023-03-02 16:00:00.000</con:value></con:property><con:property><con:name>sendDate3</con:name><con:value>2023-03-03 16:00:00.000</con:value></con:property><con:property><con:name>sendDate4</con:name><con:value>2023-03-04 16:00:00.000</con:value></con:property><con:property><con:name>sendDate5</con:name><con:value>2023-03-05 16:00:00.000</con:value></con:property><con:property><con:name>sendDate6</con:name><con:value>2023-03-06 16:00:00.000</con:value></con:property><con:property><con:name>notificationId3</con:name><con:value>1640</con:value></con:property><con:property><con:name>notificationId4</con:name><con:value>1641</con:value></con:property><con:property><con:name>notificationId5</con:name><con:value>1642</con:value></con:property><con:property><con:name>notificationId6</con:name><con:value>1643</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77959797970000891</con:value></con:property></con:properties></con:testCase><con:testCase id="aea68c1e-897c-40f6-ab27-99f01ea015f6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС0 SERVER_ERROR_ID255808" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GET message/list" id="90ee13ee-46e0-4e25-9289-07e837a0c573"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET message/list" id="15fa0b10-0cc6-40aa-a27c-36e7af6f8aab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list</con:originalUri><con:assertion type="JsonPath Count" id="6d60bc47-f821-4158-a2ec-65f213a649a5" name="В ответе вернулся один объект"><con:configuration><path>$</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="38fed92d-5e6f-4090-b73f-3f174d4126b5" name="Содержимое ошибки корректно"><con:configuration><path>$.error</path><content>{"code":"SERVER_ERROR","description":"Ошибка выполнения метода","type":"TECHNICAL","origin":"Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: \"ыы\""}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="ыы"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>1003</con:value></con:property><con:property><con:name>patientId2</con:name><con:value>1004</con:value></con:property><con:property><con:name>guide</con:name><con:value>fb7d4816-cc57-4fc2-ae7f-731d3b744030</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>2</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>2</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>6</con:value></con:property><con:property><con:name>userId1</con:name><con:value>116</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>119</con:value></con:property><con:property><con:name>deviceId2</con:name><con:value>120</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>82f29070-7386-4124-9d66-b8f80918b26c</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>266efc10-df90-47af-b1a7-36e7fbf48ce0</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>3</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1638</con:value></con:property><con:property><con:name>notificationId2</con:name><con:value>1639</con:value></con:property><con:property><con:name>countTasks</con:name><con:value>6</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2467</con:value></con:property><con:property><con:name>taskId2</con:name><con:value>2468</con:value></con:property><con:property><con:name>taskId3</con:name><con:value>2469</con:value></con:property><con:property><con:name>taskId4</con:name><con:value>2470</con:value></con:property><con:property><con:name>taskId5</con:name><con:value>2471</con:value></con:property><con:property><con:name>taskId6</con:name><con:value>2472</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>sendDate2</con:name><con:value>2023-03-02 16:00:00.000</con:value></con:property><con:property><con:name>sendDate3</con:name><con:value>2023-03-03 16:00:00.000</con:value></con:property><con:property><con:name>sendDate4</con:name><con:value>2023-03-04 16:00:00.000</con:value></con:property><con:property><con:name>sendDate5</con:name><con:value>2023-03-05 16:00:00.000</con:value></con:property><con:property><con:name>sendDate6</con:name><con:value>2023-03-06 16:00:00.000</con:value></con:property><con:property><con:name>notificationId3</con:name><con:value>1640</con:value></con:property><con:property><con:name>notificationId4</con:name><con:value>1641</con:value></con:property><con:property><con:name>notificationId5</con:name><con:value>1642</con:value></con:property><con:property><con:name>notificationId6</con:name><con:value>1643</con:value></con:property><con:property><con:name>userId2</con:name><con:value>117</con:value></con:property></con:properties></con:testCase><con:testCase id="27d0e2ef-5f8a-432d-a7b6-b14d4b24dee5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение большого количества уведомлений_ID277190" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="3e48d2f1-c16a-417d-80b0-432c8ff0f07a"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="fc9b1cae-2d37-4c8c-818c-2ff9952fbe06"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="e52b9453-3783-41af-bf28-eb671f1a5a38"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="e6582a67-7da6-42b9-9aa2-c790e5353003"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()
def countTasks = testRunner.testCase.getPropertyValue("countTasks").toInteger()
def userId1 = testRunner.testCase.getPropertyValue("userId1")
def deviceId1 = testRunner.testCase.getPropertyValue("deviceId1")
def notificationTypeId = testRunner.testCase.getPropertyValue("notificationTypeId").toInteger()

notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
query=""
for(int i=1; i<=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	query=query+" INSERT INTO f_notification "+
"(id, user_id, notification_type_id, title, description, create_date, deleted, viewed) "+
"VALUES("+notificationId+", "+userId1+", "+notificationTypeId+", 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, true); "
	time=""
	if(i<10){           
            time="0:0"+ i.toString()
	}
	else if (i>=10 && i<60){
		 time="0:"+ i.toString()
	}
	else{
		min=i-60
		if(min<10){           
            time="1:0"+ min.toString()
		}
		else if(min>=10 && min<60){
			 time="1:"+min.toString()
		}
	}
	sendDate="2023-03-01 16:0"+time+".000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	end= i==countNotifications ? "" : ";"
	query=query+" INSERT INTO f_notification_task "+
	"(id, notification_id, device_id, status, send_date) "+
	"VALUES("+taskId+", "+notificationId+", "+deviceId1+", 'SEND', ' "+sendDate+"') "+end
	taskId=taskId+1
	notificationId=notificationId+1
}

sql.execute(query)
]]></script></con:config></con:testStep><con:testStep type="restrequest" name="GET message/list" id="ec0fa7e1-ac35-4baf-b174-2c04fa0e568a"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET message/list" id="15fa0b10-0cc6-40aa-a27c-36e7af6f8aab" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/list</con:originalUri><con:assertion type="JsonPath Count" id="9d6cfe70-7591-49fc-992e-a6446ae93008" name="В ответе вернулось только 100 объектов"><con:configuration><path>$.payload.notificationsList[*]</path><content>${#TestCase#countNotifications}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="11ae102d-0ab5-492d-9f30-28f41689d42a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where device_id=${#TestCase#deviceId1};
delete from f_notification where user_id=${#TestCase#userId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="2ef2a3fd-2930-46a6-b720-0995bea700b6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>1002</con:value></con:property><con:property><con:name>patientId2</con:name><con:value>10011</con:value></con:property><con:property><con:name>guide</con:name><con:value>fb7d4816-cc57-4fc2-ae7f-731d3b744030</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>2</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>100</con:value></con:property><con:property><con:name>userId1</con:name><con:value>117</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>121</con:value></con:property><con:property><con:name>deviceId2</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>483b2c70-4c41-4cb5-9393-9b67c8432d3b</con:value></con:property><con:property><con:name>uuid2</con:name><con:value>b266072c-6ee6-4b93-a3c5-9ccb839c7a00</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>3</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1652</con:value></con:property><con:property><con:name>notificationId2</con:name><con:value>1653</con:value></con:property><con:property><con:name>countTasks</con:name><con:value>6</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2475</con:value></con:property><con:property><con:name>taskId2</con:name><con:value>2476</con:value></con:property><con:property><con:name>taskId3</con:name><con:value>2477</con:value></con:property><con:property><con:name>taskId4</con:name><con:value>2478</con:value></con:property><con:property><con:name>taskId5</con:name><con:value>2479</con:value></con:property><con:property><con:name>taskId6</con:name><con:value>2480</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>sendDate2</con:name><con:value>2023-03-02 16:00:00.000</con:value></con:property><con:property><con:name>sendDate3</con:name><con:value>2023-03-03 16:00:00.000</con:value></con:property><con:property><con:name>sendDate4</con:name><con:value>2023-03-04 16:00:00.000</con:value></con:property><con:property><con:name>sendDate5</con:name><con:value>2023-03-05 16:00:00.000</con:value></con:property><con:property><con:name>sendDate6</con:name><con:value>2023-03-06 16:00:00.000</con:value></con:property><con:property><con:name>notificationId3</con:name><con:value>1654</con:value></con:property><con:property><con:name>notificationId4</con:name><con:value>1655</con:value></con:property><con:property><con:name>notificationId5</con:name><con:value>1656</con:value></con:property><con:property><con:name>notificationId6</con:name><con:value>1657</con:value></con:property><con:property><con:name>notificationId7</con:name><con:value>1658</con:value></con:property><con:property><con:name>taskId7</con:name><con:value>2481</con:value></con:property><con:property><con:name>notificationId8</con:name><con:value>1659</con:value></con:property><con:property><con:name>taskId8</con:name><con:value>2482</con:value></con:property><con:property><con:name>notificationId9</con:name><con:value>1660</con:value></con:property><con:property><con:name>taskId9</con:name><con:value>2483</con:value></con:property><con:property><con:name>notificationId10</con:name><con:value>1661</con:value></con:property><con:property><con:name>taskId10</con:name><con:value>2484</con:value></con:property><con:property><con:name>notificationId11</con:name><con:value>1662</con:value></con:property><con:property><con:name>taskId11</con:name><con:value>2485</con:value></con:property><con:property><con:name>notificationId12</con:name><con:value>1663</con:value></con:property><con:property><con:name>taskId12</con:name><con:value>2486</con:value></con:property><con:property><con:name>notificationId13</con:name><con:value>1664</con:value></con:property><con:property><con:name>taskId13</con:name><con:value>2487</con:value></con:property><con:property><con:name>notificationId14</con:name><con:value>1665</con:value></con:property><con:property><con:name>taskId14</con:name><con:value>2488</con:value></con:property><con:property><con:name>notificationId15</con:name><con:value>1666</con:value></con:property><con:property><con:name>taskId15</con:name><con:value>2489</con:value></con:property><con:property><con:name>notificationId16</con:name><con:value>1667</con:value></con:property><con:property><con:name>taskId16</con:name><con:value>2490</con:value></con:property><con:property><con:name>notificationId17</con:name><con:value>1668</con:value></con:property><con:property><con:name>taskId17</con:name><con:value>2491</con:value></con:property><con:property><con:name>notificationId18</con:name><con:value>1669</con:value></con:property><con:property><con:name>taskId18</con:name><con:value>2492</con:value></con:property><con:property><con:name>notificationId19</con:name><con:value>1670</con:value></con:property><con:property><con:name>taskId19</con:name><con:value>2493</con:value></con:property><con:property><con:name>notificationId20</con:name><con:value>1671</con:value></con:property><con:property><con:name>taskId20</con:name><con:value>2494</con:value></con:property><con:property><con:name>notificationId21</con:name><con:value>1672</con:value></con:property><con:property><con:name>taskId21</con:name><con:value>2495</con:value></con:property><con:property><con:name>notificationId22</con:name><con:value>1673</con:value></con:property><con:property><con:name>taskId22</con:name><con:value>2496</con:value></con:property><con:property><con:name>notificationId23</con:name><con:value>1674</con:value></con:property><con:property><con:name>taskId23</con:name><con:value>2497</con:value></con:property><con:property><con:name>notificationId24</con:name><con:value>1675</con:value></con:property><con:property><con:name>taskId24</con:name><con:value>2498</con:value></con:property><con:property><con:name>notificationId25</con:name><con:value>1676</con:value></con:property><con:property><con:name>taskId25</con:name><con:value>2499</con:value></con:property><con:property><con:name>notificationId26</con:name><con:value>1677</con:value></con:property><con:property><con:name>taskId26</con:name><con:value>2500</con:value></con:property><con:property><con:name>notificationId27</con:name><con:value>1678</con:value></con:property><con:property><con:name>taskId27</con:name><con:value>2501</con:value></con:property><con:property><con:name>notificationId28</con:name><con:value>1679</con:value></con:property><con:property><con:name>taskId28</con:name><con:value>2502</con:value></con:property><con:property><con:name>notificationId29</con:name><con:value>1680</con:value></con:property><con:property><con:name>taskId29</con:name><con:value>2503</con:value></con:property><con:property><con:name>notificationId30</con:name><con:value>1681</con:value></con:property><con:property><con:name>taskId30</con:name><con:value>2504</con:value></con:property><con:property><con:name>notificationId31</con:name><con:value>1682</con:value></con:property><con:property><con:name>taskId31</con:name><con:value>2505</con:value></con:property><con:property><con:name>notificationId32</con:name><con:value>1683</con:value></con:property><con:property><con:name>taskId32</con:name><con:value>2506</con:value></con:property><con:property><con:name>notificationId33</con:name><con:value>1684</con:value></con:property><con:property><con:name>taskId33</con:name><con:value>2507</con:value></con:property><con:property><con:name>notificationId34</con:name><con:value>1685</con:value></con:property><con:property><con:name>taskId34</con:name><con:value>2508</con:value></con:property><con:property><con:name>notificationId35</con:name><con:value>1686</con:value></con:property><con:property><con:name>taskId35</con:name><con:value>2509</con:value></con:property><con:property><con:name>notificationId36</con:name><con:value>1687</con:value></con:property><con:property><con:name>taskId36</con:name><con:value>2510</con:value></con:property><con:property><con:name>notificationId37</con:name><con:value>1688</con:value></con:property><con:property><con:name>taskId37</con:name><con:value>2511</con:value></con:property><con:property><con:name>notificationId38</con:name><con:value>1689</con:value></con:property><con:property><con:name>taskId38</con:name><con:value>2512</con:value></con:property><con:property><con:name>notificationId39</con:name><con:value>1690</con:value></con:property><con:property><con:name>taskId39</con:name><con:value>2513</con:value></con:property><con:property><con:name>notificationId40</con:name><con:value>1691</con:value></con:property><con:property><con:name>taskId40</con:name><con:value>2514</con:value></con:property><con:property><con:name>notificationId41</con:name><con:value>1692</con:value></con:property><con:property><con:name>taskId41</con:name><con:value>2515</con:value></con:property><con:property><con:name>notificationId42</con:name><con:value>1693</con:value></con:property><con:property><con:name>taskId42</con:name><con:value>2516</con:value></con:property><con:property><con:name>notificationId43</con:name><con:value>1694</con:value></con:property><con:property><con:name>taskId43</con:name><con:value>2517</con:value></con:property><con:property><con:name>notificationId44</con:name><con:value>1695</con:value></con:property><con:property><con:name>taskId44</con:name><con:value>2518</con:value></con:property><con:property><con:name>notificationId45</con:name><con:value>1696</con:value></con:property><con:property><con:name>taskId45</con:name><con:value>2519</con:value></con:property><con:property><con:name>notificationId46</con:name><con:value>1697</con:value></con:property><con:property><con:name>taskId46</con:name><con:value>2520</con:value></con:property><con:property><con:name>notificationId47</con:name><con:value>1698</con:value></con:property><con:property><con:name>taskId47</con:name><con:value>2521</con:value></con:property><con:property><con:name>notificationId48</con:name><con:value>1699</con:value></con:property><con:property><con:name>taskId48</con:name><con:value>2522</con:value></con:property><con:property><con:name>notificationId49</con:name><con:value>1700</con:value></con:property><con:property><con:name>taskId49</con:name><con:value>2523</con:value></con:property><con:property><con:name>notificationId50</con:name><con:value>1701</con:value></con:property><con:property><con:name>taskId50</con:name><con:value>2524</con:value></con:property><con:property><con:name>notificationId51</con:name><con:value>1702</con:value></con:property><con:property><con:name>taskId51</con:name><con:value>2525</con:value></con:property><con:property><con:name>notificationId52</con:name><con:value>1703</con:value></con:property><con:property><con:name>taskId52</con:name><con:value>2526</con:value></con:property><con:property><con:name>notificationId53</con:name><con:value>1704</con:value></con:property><con:property><con:name>taskId53</con:name><con:value>2527</con:value></con:property><con:property><con:name>notificationId54</con:name><con:value>1705</con:value></con:property><con:property><con:name>taskId54</con:name><con:value>2528</con:value></con:property><con:property><con:name>notificationId55</con:name><con:value>1706</con:value></con:property><con:property><con:name>taskId55</con:name><con:value>2529</con:value></con:property><con:property><con:name>notificationId56</con:name><con:value>1707</con:value></con:property><con:property><con:name>taskId56</con:name><con:value>2530</con:value></con:property><con:property><con:name>notificationId57</con:name><con:value>1708</con:value></con:property><con:property><con:name>taskId57</con:name><con:value>2531</con:value></con:property><con:property><con:name>notificationId58</con:name><con:value>1709</con:value></con:property><con:property><con:name>taskId58</con:name><con:value>2532</con:value></con:property><con:property><con:name>notificationId59</con:name><con:value>1710</con:value></con:property><con:property><con:name>taskId59</con:name><con:value>2533</con:value></con:property><con:property><con:name>notificationId60</con:name><con:value>1711</con:value></con:property><con:property><con:name>taskId60</con:name><con:value>2534</con:value></con:property><con:property><con:name>notificationId61</con:name><con:value>1712</con:value></con:property><con:property><con:name>taskId61</con:name><con:value>2535</con:value></con:property><con:property><con:name>notificationId62</con:name><con:value>1713</con:value></con:property><con:property><con:name>taskId62</con:name><con:value>2536</con:value></con:property><con:property><con:name>notificationId63</con:name><con:value>1714</con:value></con:property><con:property><con:name>taskId63</con:name><con:value>2537</con:value></con:property><con:property><con:name>notificationId64</con:name><con:value>1715</con:value></con:property><con:property><con:name>taskId64</con:name><con:value>2538</con:value></con:property><con:property><con:name>notificationId65</con:name><con:value>1716</con:value></con:property><con:property><con:name>taskId65</con:name><con:value>2539</con:value></con:property><con:property><con:name>notificationId66</con:name><con:value>1717</con:value></con:property><con:property><con:name>taskId66</con:name><con:value>2540</con:value></con:property><con:property><con:name>notificationId67</con:name><con:value>1718</con:value></con:property><con:property><con:name>taskId67</con:name><con:value>2541</con:value></con:property><con:property><con:name>notificationId68</con:name><con:value>1719</con:value></con:property><con:property><con:name>taskId68</con:name><con:value>2542</con:value></con:property><con:property><con:name>notificationId69</con:name><con:value>1720</con:value></con:property><con:property><con:name>taskId69</con:name><con:value>2543</con:value></con:property><con:property><con:name>notificationId70</con:name><con:value>1721</con:value></con:property><con:property><con:name>taskId70</con:name><con:value>2544</con:value></con:property><con:property><con:name>notificationId71</con:name><con:value>1722</con:value></con:property><con:property><con:name>taskId71</con:name><con:value>2545</con:value></con:property><con:property><con:name>notificationId72</con:name><con:value>1723</con:value></con:property><con:property><con:name>taskId72</con:name><con:value>2546</con:value></con:property><con:property><con:name>notificationId73</con:name><con:value>1724</con:value></con:property><con:property><con:name>taskId73</con:name><con:value>2547</con:value></con:property><con:property><con:name>notificationId74</con:name><con:value>1725</con:value></con:property><con:property><con:name>taskId74</con:name><con:value>2548</con:value></con:property><con:property><con:name>notificationId75</con:name><con:value>1726</con:value></con:property><con:property><con:name>taskId75</con:name><con:value>2549</con:value></con:property><con:property><con:name>notificationId76</con:name><con:value>1727</con:value></con:property><con:property><con:name>taskId76</con:name><con:value>2550</con:value></con:property><con:property><con:name>notificationId77</con:name><con:value>1728</con:value></con:property><con:property><con:name>taskId77</con:name><con:value>2551</con:value></con:property><con:property><con:name>notificationId78</con:name><con:value>1729</con:value></con:property><con:property><con:name>taskId78</con:name><con:value>2552</con:value></con:property><con:property><con:name>notificationId79</con:name><con:value>1730</con:value></con:property><con:property><con:name>taskId79</con:name><con:value>2553</con:value></con:property><con:property><con:name>notificationId80</con:name><con:value>1731</con:value></con:property><con:property><con:name>taskId80</con:name><con:value>2554</con:value></con:property><con:property><con:name>notificationId81</con:name><con:value>1732</con:value></con:property><con:property><con:name>taskId81</con:name><con:value>2555</con:value></con:property><con:property><con:name>notificationId82</con:name><con:value>1733</con:value></con:property><con:property><con:name>taskId82</con:name><con:value>2556</con:value></con:property><con:property><con:name>notificationId83</con:name><con:value>1734</con:value></con:property><con:property><con:name>taskId83</con:name><con:value>2557</con:value></con:property><con:property><con:name>notificationId84</con:name><con:value>1735</con:value></con:property><con:property><con:name>taskId84</con:name><con:value>2558</con:value></con:property><con:property><con:name>notificationId85</con:name><con:value>1736</con:value></con:property><con:property><con:name>taskId85</con:name><con:value>2559</con:value></con:property><con:property><con:name>notificationId86</con:name><con:value>1737</con:value></con:property><con:property><con:name>taskId86</con:name><con:value>2560</con:value></con:property><con:property><con:name>notificationId87</con:name><con:value>1738</con:value></con:property><con:property><con:name>taskId87</con:name><con:value>2561</con:value></con:property><con:property><con:name>notificationId88</con:name><con:value>1739</con:value></con:property><con:property><con:name>taskId88</con:name><con:value>2562</con:value></con:property><con:property><con:name>notificationId89</con:name><con:value>1740</con:value></con:property><con:property><con:name>taskId89</con:name><con:value>2563</con:value></con:property><con:property><con:name>notificationId90</con:name><con:value>1741</con:value></con:property><con:property><con:name>taskId90</con:name><con:value>2564</con:value></con:property><con:property><con:name>notificationId91</con:name><con:value>1742</con:value></con:property><con:property><con:name>taskId91</con:name><con:value>2565</con:value></con:property><con:property><con:name>notificationId92</con:name><con:value>1743</con:value></con:property><con:property><con:name>taskId92</con:name><con:value>2566</con:value></con:property><con:property><con:name>notificationId93</con:name><con:value>1744</con:value></con:property><con:property><con:name>taskId93</con:name><con:value>2567</con:value></con:property><con:property><con:name>notificationId94</con:name><con:value>1745</con:value></con:property><con:property><con:name>taskId94</con:name><con:value>2568</con:value></con:property><con:property><con:name>notificationId95</con:name><con:value>1746</con:value></con:property><con:property><con:name>taskId95</con:name><con:value>2569</con:value></con:property><con:property><con:name>notificationId96</con:name><con:value>1747</con:value></con:property><con:property><con:name>taskId96</con:name><con:value>2570</con:value></con:property><con:property><con:name>notificationId97</con:name><con:value>1748</con:value></con:property><con:property><con:name>taskId97</con:name><con:value>2571</con:value></con:property><con:property><con:name>notificationId98</con:name><con:value>1749</con:value></con:property><con:property><con:name>taskId98</con:name><con:value>2572</con:value></con:property><con:property><con:name>notificationId99</con:name><con:value>1750</con:value></con:property><con:property><con:name>taskId99</con:name><con:value>2573</con:value></con:property><con:property><con:name>notificationId100</con:name><con:value>1751</con:value></con:property><con:property><con:name>taskId100</con:name><con:value>2574</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77959797970000891</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="c382dee7-03db-47ec-8b78-a6197082fe6d" name="GET details"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a3301199-e6b5-47d5-a62d-06ae7f51c8ac" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи ко врачу в статусе create" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="5ac78ecc-b22b-44e1-8e0f-7ee8139a06e3"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="68fa5d02-807c-4200-9c6d-a485ba39cbe9"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="56f2d8ce-e1f6-4888-9eda-f8039b27fde4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="dcfdc0b2-7255-41c0-97be-75d088291b11"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="a734efb7-73e6-40b9-8532-6494cafa65ac"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="a1e47875-f47e-4311-9aad-649a2327c05f"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="16238cc4-8601-4b26-afd5-c0310bae6dab"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date, speciality_name, doctor_short_name, doctor_full_name,  lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CREATE', '${#TestCase#startDateForDB}', '${#TestCase#specName}', 'Абдувохидов П.А.', '${#TestCase#docFullName}', 'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1});
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="ae527213-48f7-40bc-b11b-85ae3c102e44"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Запись на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Врач: ${#TestCase#specName}, ${#TestCase#docFullName}</p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/active?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Запись на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Врач: ${#TestCase#specName}, ${#TestCase#docFullName}<\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/active?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="73db9cae-31a6-4d1b-9bf3-4dab598c812f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="528ececa-97f8-4a15-8590-1c200eb5eb72"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="d3205d09-c7f8-4dc6-a9cc-d473bdf28ba9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="6366b01c-5b9a-42d1-a94d-80b1cb0cb851"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>specName</con:name><con:value>Вакцинация от COVID-19</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property><con:property><con:name>docFullName</con:name><con:value>Абдувохидов Парвизджон Абдусамиевич</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1124</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766131</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893561599</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>117</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>121</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>9d488b1b-955f-4757-b37f-84f8a9868f27</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1002</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77959797970000891</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1652</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2475</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property></con:properties></con:testCase><con:testCase id="9fe53827-54f8-4c34-ba7d-3aeb2cd9a46f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи ко врачу в статусе change" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="d3831934-ef52-41a5-86ce-3f17570a2426"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="9eb51cca-b20e-433c-8f6a-ba06642947fc"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="534a53de-ff54-44d1-b9dd-850ee7a11af9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="91e89b21-475e-4613-8ac5-e34c60bfeff9"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="f3eab98b-106a-42fd-8c5b-4597973ee0d5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="0b4ef014-40f6-4c23-b5dd-85fe87c8afc5"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="698fe23d-cbe1-4b6e-b8e2-11a030651180"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date, speciality_name, doctor_short_name, doctor_full_name,  lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CHANGE', '${#TestCase#startDateForDB}', '${#TestCase#specName}', 'Абдувохидов П.А.', '${#TestCase#docFullName}', 'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1});
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="0b10e374-dfb3-4cb5-89a2-0d4ba259168d"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Изменение записи на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Врач: ${#TestCase#specName}, ${#TestCase#docFullName}</p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/active?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Изменение записи на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Врач: ${#TestCase#specName}, ${#TestCase#docFullName}<\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/active?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="661782ac-a18b-4e16-98ad-4851a8061757"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="7616ce68-8f2b-440f-b64f-ce588f345ca3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="52a4cc1b-74e5-43dc-ad13-9ba2c4d8af9f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="ae619f89-0956-484c-b6dc-753756e1cad0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>specName</con:name><con:value>Вакцинация от COVID-19</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property><con:property><con:name>docFullName</con:name><con:value>Абдувохидов Парвизджон Абдусамиевич</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1124</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766131</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893561599</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>117</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>121</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>b73c8980-9ea4-46f5-bb16-3f725aafb6dc</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1002</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77959797970000891</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1652</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2475</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property></con:properties></con:testCase><con:testCase id="dbb74265-1b7b-42a8-9f06-85f117cf7d8d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи ко врачу в статусе cancel" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="a5790b07-77c9-42c4-ad4b-0a7d7014941f"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="83f04f40-644f-4bc5-ae4e-6ed18213b0a8"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="cd9da498-aea7-4454-88b8-d5fc4622d6ec"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="0aa06876-7702-49ca-81a4-1935b6a0f95c"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="7ee4e33a-81df-4f20-ac24-640262426309"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="9706e0e3-983c-43e8-9217-f9841929a9e3"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="4506f7d3-1134-49d2-8dcd-ce32095f9c84"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date, speciality_name, doctor_short_name, doctor_full_name,  lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CANCEL', '${#TestCase#startDateForDB}', '${#TestCase#specName}', 'Абдувохидов П.А.', '${#TestCase#docFullName}', 'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1});
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="faaa6697-f1c7-47f2-a608-90e3daa33ecf"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Отмена записи на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Врач: ${#TestCase#specName}, ${#TestCase#docFullName}</p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/archived?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Отмена записи на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Врач: ${#TestCase#specName}, ${#TestCase#docFullName}<\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/archived?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="37aadfe4-4b1a-4455-9536-ac25fc76e750"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="96bffa4b-af48-401f-b7f1-b3354841d067"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="6f9b5589-2d51-4ffd-8847-140f55065b53"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="3dfebe0f-2396-4c56-b9ee-576dc29622b5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>specName</con:name><con:value>Вакцинация от COVID-19</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property><con:property><con:name>docFullName</con:name><con:value>Абдувохидов Парвизджон Абдусамиевич</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1125</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766132</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893561600</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>118</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>512cd1a7-17b0-49f3-a8f5-cf2421d9b747</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1003</con:value></con:property><con:property><con:name>oms1</con:name><con:value>779597979700008911</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1653</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2476</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property></con:properties></con:testCase><con:testCase id="77b2824d-a964-48fe-812f-7472484fae07" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи на ЛДП в статусе create" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="e03e85cf-0456-4ffe-bf8a-d40b66244f1f"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="1f3a6841-8312-4aba-9e55-1064a03a3daf"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="f460ca95-1a06-48ad-91dc-f5ba17f3dc45"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="08711cb2-b444-4858-a2ea-8fd270e16727"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="eaddd725-0e23-415b-a1f4-8fe44b8a8659"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="2228276c-be3d-4108-ac01-2b6fdcb6d6f8"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="ae80b647-4699-49f5-929e-eb39cc27575c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date, ldp_name,lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CREATE', '${#TestCase#startDateForDB}', '${#TestCase#ldpName}',  'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1})</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="746d62f2-e2d9-4677-a966-adc2511bb182"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Запись на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Диагностика: ${#TestCase#ldpName} </p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/active?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Запись на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Диагностика: ${#TestCase#ldpName} <\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/active?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="cab84386-bc1f-485e-95fa-dadf1390a399"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="ad153bec-c377-4916-a7dd-311b6e158ded"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="33caa832-3035-4bb1-bdeb-163c40c879c8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="17d6d8b1-7076-4576-8cac-1bd6de028bb1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>ldpName</con:name><con:value>Ультразвуковое исследование почек, надпочечников, забрюшинного пространства</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1133</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766132</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893658974</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>118</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>7761f33b-e657-444f-bce7-ae063a2aba3b</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1003</con:value></con:property><con:property><con:name>oms1</con:name><con:value>779597979700008911</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1661</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2480</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property></con:properties></con:testCase><con:testCase id="03320703-ce6c-48c4-aa3b-08c390319513" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи на ЛДП в статусе change" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="913a6d27-8e13-4f83-b75f-98721dd29257"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="ad7d7ed2-fa03-4498-9b6c-a1b2239f86bd"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="a321e1bd-2489-4bd7-a068-4ca3fa8cf6d4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="3275b95a-c4e7-4335-82ed-5ac97527cae0"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="c98ab621-d7a4-4b0b-bfef-3acd7fd238cc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="1dcd622b-3455-4dc1-94bf-cd84975886d5"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="3b9ce992-9272-4e82-9225-63635684700f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date, ldp_name,lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CHANGE', '${#TestCase#startDateForDB}', '${#TestCase#ldpName}',  'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1})</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="ece2cd3d-a328-4538-9af6-79943440fd62"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Изменение записи на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Диагностика: ${#TestCase#ldpName} </p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/active?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Изменение записи на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Диагностика: ${#TestCase#ldpName} <\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/active?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="682f7c73-d09b-4c8e-8195-dd1a3884c767"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="0a1a6fa5-a275-4b1e-8905-ac546a2d76bc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="38a737d3-ee89-4969-9a53-ce06a1f2b8c5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="10bcb25e-7711-4b8b-a8d5-c1a079b283fe"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>ldpName</con:name><con:value>Ультразвуковое исследование почек, надпочечников, забрюшинного пространства</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1133</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766132</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893658974</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>118</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>c6d3f1d8-20ba-45a6-a380-b279088e0174</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1003</con:value></con:property><con:property><con:name>oms1</con:name><con:value>779597979700008911</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1661</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2480</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property></con:properties></con:testCase><con:testCase id="e7356954-9667-418f-b9e0-306a75094cef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи на ЛДП в статусе cancel" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="52454895-2942-426c-97c9-80f5f5d51ec4"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="ad99c103-cc8f-422a-b2a7-2a86d1d49849"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="526c8640-5055-435b-8da3-4a4703352d58"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="abb15537-8be7-427b-9cf2-362a8a275d2c"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="49d715f7-8d23-4575-b5ed-4a9533912c2d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="c2c45ebe-cc48-4340-8b03-4a3cdaddc40c"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="f865f74d-d5a6-424c-963b-104555a167ee"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date, ldp_name,lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CANCEL', '${#TestCase#startDateForDB}', '${#TestCase#ldpName}',  'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1})</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="b2517c0b-1edf-4cf2-859f-515e5a74e823"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Отмена записи на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Диагностика: ${#TestCase#ldpName} </p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/archived?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Отмена записи на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Диагностика: ${#TestCase#ldpName} <\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/archived?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="e64b77b3-e84d-4b5c-8141-18aa80c3b551"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="ef546aba-0c65-405f-8fb1-c3474cc1f2b0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="84edfa27-e602-4dbe-ada0-eb86f621c750"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="63a21995-68c9-47b8-b360-d144bfef6a07"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>ldpName</con:name><con:value>Ультразвуковое исследование почек, надпочечников, забрюшинного пространства</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1133</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766132</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893658974</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>118</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>8cc5b069-a0f4-43aa-9ae0-0f408a482d32</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1003</con:value></con:property><con:property><con:name>oms1</con:name><con:value>779597979700008911</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1661</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2480</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property></con:properties></con:testCase><con:testCase id="4d1a3750-afb3-44f3-b38e-df7d4953f2a4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи на БМ в статусе create" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="13608d81-32d9-4893-8ea6-0c9d0d7d48ec"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="98a33bf3-3fac-43c2-a8dc-f55ca859545f"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="464f7a37-c71a-4205-8129-95284007a755"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="b29d43fd-53e2-4841-9099-369f8adc1445"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="374d40bf-d8ac-4ac5-90e5-d9f6efa80edf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="ce2f0454-0b1c-4bae-8156-167c69595097"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="c5334e3a-99ca-487f-aafc-ff23f3db079d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date,sampling_type,lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CREATE', '${#TestCase#startDateForDB}', '${#TestCase#bmName}',  'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1})</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="3ed89590-25ca-49a9-b78f-4f4ac2b99abc"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Запись на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Взятие БМ: ${#TestCase#bmName}</p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/active?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Запись на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Взятие БМ: ${#TestCase#bmName}<\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/active?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="8933237f-0acd-4644-84f1-d7454e3bcddb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="c845a95c-970b-4123-a07c-20537becbe83"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="34652a87-e05c-45b8-8f82-943c0652787d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="5af9cbad-ab50-47cd-b8d2-9166f1e4fc4b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>bmName</con:name><con:value>Взятие капиллярной крови</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1133</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766132</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893658974</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>118</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>79e07435-f51a-4708-8302-00b20553ac90</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1003</con:value></con:property><con:property><con:name>oms1</con:name><con:value>779597979700008911</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1661</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2480</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property></con:properties></con:testCase><con:testCase id="25de54da-a44c-4d6f-90ba-21ed9aedf7b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи на БМ в статусе change" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="2210ca99-4950-463f-9726-783059bf7673"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="a4a2382a-29dc-4e2b-9663-c5b470ba350e"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="f8082c81-5951-4d95-b766-9688edf731f2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="683e42b6-1d26-4271-b81a-f5288d928a9a"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="1ff201cc-7da7-4dda-9f7f-52a7ed06b0ac"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="a12fa704-4dfc-4fbe-8985-309bf2e0fb5e"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="5e6827a9-87dc-471d-a5a8-64098a3f75f1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date,sampling_type,lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CHANGE', '${#TestCase#startDateForDB}', '${#TestCase#bmName}',  'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1})</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="de8e6bdf-7305-471f-917c-0ed06c0f12c2"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Изменение записи на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Взятие БМ: ${#TestCase#bmName}</p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/active?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Изменение записи на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Взятие БМ: ${#TestCase#bmName}<\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/active?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="f8c6bd19-b735-4bf4-9641-c72b48800156"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="39db4871-e2dc-4cd5-97a1-c82e04f805dc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="6f21797a-986a-4bd7-b436-560c5d793b82"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="ee5a46f0-41e3-4a7b-939a-c5742c55b397"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>bmName</con:name><con:value>Взятие капиллярной крови</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1133</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766132</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893658974</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>118</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>8dbfb4fb-dfd1-4d41-95a2-d0a3e75f136e</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1003</con:value></con:property><con:property><con:name>oms1</con:name><con:value>779597979700008911</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1661</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2480</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property></con:properties></con:testCase><con:testCase id="13e2a50a-a124-4f9a-97b7-0164fe21cfe1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение деталей по записи на БМ в статусе cancel" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификаторы пациентов и девайсов" id="ac414a4c-4434-4f58-93d8-2d8d4bfa0f6f"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countUsers = testRunner.testCase.getPropertyValue("countUsers").toInteger()
def countDevices = testRunner.testCase.getPropertyValue("countDevices").toInteger()

userId=sql.firstRow("select max(id)+1 as id from f_user").id
log.info userId
for(int i=1; i&lt;=countUsers; i++){
	testRunner.testCase.setPropertyValue("userId"+i, userId.toString())
	userId=userId+1
}

deviceId=sql.firstRow("select max(id)+1 as id from f_device").id
log.info deviceId
for(int i=1; i&lt;=countDevices; i++){
	testRunner.testCase.setPropertyValue("deviceId"+i, deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("uuid"+i, uuid.toString())
	deviceId=deviceId+1
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать мдентификатор пациента и омс" id="6aa58862-e5ee-446b-96e1-cfcd3c33aced"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
patientId=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")
log.info patientId
testRunner.testCase.setPropertyValue("patientId1", patientId.toString())

// найти несуществубщий омс пациента
oms= sql.firstRow("select oms_number as oms from f_user order by oms_number desc").oms
oms=oms+"1"
testRunner.testCase.setPropertyValue("oms1", oms)</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать пациента" id="f0e3d037-b132-49ec-84b5-36f9caf368ca"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, oms_number, birth_date)
VALUES(${#TestCase#userId1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '2023-03-22');

INSERT INTO f_device
(id, user_id, app_version, platform, device_guid, device_cloud_id, authentication)
VALUES(${#TestCase#deviceId1}, ${#TestCase#userId1}, '7.0.0', 'APPLE', '${#TestCase#uuid1}', '8a686f93-7d27-4349-b628-4bc262840f30', NULL);</con:query><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы уведомлений и задач" id="3b49c6ae-3f58-4ae2-af5e-dbc2626dd4b6"><con:settings/><con:config><script>import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def countNotifications = testRunner.testCase.getPropertyValue("countNotifications").toInteger()



notificationTypeId=sql.firstRow("select id from d_notification_type where archived = false and title='appointment'").id
testRunner.testCase.setPropertyValue("notificationTypeId", notificationTypeId.toString())

notificationId=sql.firstRow("select max(id)+1 as id from f_notification").id
for(int i=1; i&lt;=countNotifications; i++){
	testRunner.testCase.setPropertyValue("notificationId"+i, notificationId.toString())
	notificationId=notificationId+1
}

taskId=sql.firstRow("select max(id)+1 as id from f_notification_task").id
for(int i=1; i&lt;=countNotifications; i++){
	day= i&lt;10 ? "0"+i : i
	sendDate="2023-03-"+day+" 16:00:00.000"
	testRunner.testCase.setPropertyValue("taskId"+i, taskId.toString())
	testRunner.testCase.setPropertyValue("sendDate"+i, sendDate.toString())
	taskId=taskId+1
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление и задачу" id="5f23a869-296a-47b9-a048-aa48654eef0f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(${#TestCase#notificationId1}, ${#TestCase#userId1}, ${#TestCase#notificationTypeId}, 'Вы записаны на прием', 'Невролог', '2023-02-16 15:00:00.000', false, false);

INSERT INTO f_notification_task
(id, notification_id, device_id, status, send_date)
VALUES(${#TestCase#taskId1}, ${#TestCase#notificationId1}, ${#TestCase#deviceId1}, 'SEND', ' ${#TestCase#sendDate1}');
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификаторы для notification_appointment" id="2d328bf9-4d83-41f4-93ce-0442f8c71fe3"><con:settings/><con:config><script>import groovy.sql.Sql

//создать соединение с бд
def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbLogin")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbPassword")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")

sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

// найти и записать несуществующий f_notification_appointment.id 
id=sql.firstRow("select max(id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("notAppId1", id.toString())

// найти и записать несуществующий f_notification_appointment.event_id 
eventId=sql.firstRow("select max(event_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("eventId1", eventId.toString())

// найти и записать несуществующий f_notification_appointment.appointmentId 
appointmentId=sql.firstRow("select max(appointment_id)+1 as id from f_notification_appointment").id
testRunner.testCase.setPropertyValue("appointmentId1", appointmentId.toString())


</script></con:config></con:testStep><con:testStep type="jdbc" name="Создать уведомление о записи" id="dee86e87-180b-496c-bd80-6d0c54cfd829"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>INSERT INTO public.f_notification_appointment
(id, notification_id, appointment_id, status, start_date,sampling_type,lpu_short_name, lpu_full_name, lpu_address, cabinet_number, event_id)
VALUES(${#TestCase#notAppId1}, ${#TestCase#notificationId1}, ${#TestCase#appointmentId1}, 'CANCEL', '${#TestCase#startDateForDB}', '${#TestCase#bmName}',  'ГБУЗ ГП 175 ДЗМ', '${#TestCase#lpuFullName}', '${#TestCase#lpuAddress}', '${#TestCase#cabinet}', ${#TestCase#eventId1})</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="Simple Contains" id="d5e413ad-2be8-4cac-a00c-fd4e63bd6563" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="GET details" id="896a5a3c-d256-491b-86a9-81ad3a7ab540"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET details" id="efa66849-c81c-4bea-af91-4b7f654f8d3a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v1/message/details</con:originalUri><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="text соответствует постановке"><con:configuration><path>$.payload.notification.text</path><content><![CDATA[<h1>Отмена записи на прием</h1>
<p>Дата и время приема: ${#TestCase#startDate} по МСК</p>
<p>Взятие БМ: ${#TestCase#bmName}</p>
<p>Медицинское учреждение: ${#TestCase#lpuFullName}</p>
<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}</p>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="type соответствует постановке"><con:configuration><path>$.payload.notification.type</path><content>appointment</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="deeplink соответствует постановке"><con:configuration><path>$.payload.notification.deeplink</path><content>emiasinfo://appointment/archived?id=${#TestCase#appointmentId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7791ce8-081a-41cf-88c5-72d5d9f8feb7" name="notification содержит только нуджные элементы"><con:configuration><path>$.payload.notification</path><content><![CDATA[{"text":"<h1>Отмена записи на прием<\/h1>\n<p>Дата и время приема: ${#TestCase#startDate} по МСК<\/p>\n<p>Взятие БМ: ${#TestCase#bmName}<\/p>\n<p>Медицинское учреждение: ${#TestCase#lpuFullName}<\/p>\n<p>Адрес: ${#TestCase#lpuAddress}, кабинет ${#TestCase#cabinet}<\/p>","type":"appointment","deeplink":"emiasinfo://appointment/archived?id=${#TestCase#appointmentId1}"}]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#uuid1}"/>
  <con:entry key="notificationId" value="${#TestCase#notificationId1}"/>
</con:parameters><con:parameterOrder><con:entry>notificationId</con:entry><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить что уведомление стало прочитанным" id="ebde2c67-cf82-448d-9a6e-15dc0723b72a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>select viewed from  f_notification where id = ${#TestCase#notificationId1}
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="f538a304-412f-47d4-9dae-7cc5723bd518" name="JDBC Status"/><con:assertion type="XPath Match" id="cd69fcc9-a4d9-4e9e-83fb-5f02ca3f5cc4" name="XPath Match"><con:configuration><path>//*:F_NOTIFICATION.VIEWED</path><content>t</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить уведомление по записи" id="2eea9843-5634-47a9-9410-07692ba0ecbc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_appointment where id = ${#TestCase#notAppId1}
</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить задачи и уведомления" id="17a66a66-0a15-48c9-9452-99078098f3bb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_notification_task where id in (${#TestCase#taskId1});
delete from f_notification where id in (${#TestCase#notificationId1})</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:assertion type="Simple Contains" id="d07d4e90-b8e8-44e6-a28c-9d5c1d8b4348" name="Contains"><con:configuration><token>UpdateCount</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента и девайс" id="4afbe35b-de84-4b32-ba86-a78d382c1091"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoFullDbConnection}</con:connectionString><con:query>delete from f_device where id = ${#TestCase#deviceId1};
delete from f_user where patient_id=${#TestCase#patientId1}</con:query><con:assertion type="JDBC Status" id="02179d5b-0262-40fa-8f2f-89ceae2f0521" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>bmName</con:name><con:value>Взятие капиллярной крови</con:value></con:property><con:property><con:name>lpuFullName</con:name><con:value>ГБУЗ ГП №175 ДЗМ</con:value></con:property><con:property><con:name>cabinet</con:name><con:value>102</con:value></con:property><con:property><con:name>startDateForDB</con:name><con:value>2023-03-30 16:00:00.000</con:value></con:property><con:property><con:name>startDate</con:name><con:value>30-03-2023 в 16:00</con:value></con:property><con:property><con:name>notAppId1</con:name><con:value>1133</con:value></con:property><con:property><con:name>eventId1</con:name><con:value>65646766132</con:value></con:property><con:property><con:name>appointmentId1</con:name><con:value>391893658974</con:value></con:property><con:property><con:name>countUsers</con:name><con:value>1</con:value></con:property><con:property><con:name>countDevices</con:name><con:value>1</con:value></con:property><con:property><con:name>countNotifications</con:name><con:value>1</con:value></con:property><con:property><con:name>userId1</con:name><con:value>118</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>122</con:value></con:property><con:property><con:name>uuid1</con:name><con:value>4337c3f4-a6e8-4536-99cd-4d7c79e20143</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>1003</con:value></con:property><con:property><con:name>oms1</con:name><con:value>779597979700008911</con:value></con:property><con:property><con:name>notificationTypeId</con:name><con:value>1</con:value></con:property><con:property><con:name>notificationId1</con:name><con:value>1661</con:value></con:property><con:property><con:name>taskId1</con:name><con:value>2480</con:value></con:property><con:property><con:name>sendDate1</con:name><con:value>2023-03-01 16:00:00.000</con:value></con:property><con:property><con:name>lpuAddress</con:name><con:value>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>emiasInfoEndpoint</con:name><con:value>http://emiasinfo1.emias.solit-clouds.ru</con:value></con:property><con:property><con:name>emiasInfoDbConnection</con:name><con:value>172.17.5.11:29100/emiasinfo</con:value></con:property><con:property><con:name>emiasInfoDbLogin</con:name><con:value>emiasinfo</con:value></con:property><con:property><con:name>emiasInfoDbPassword</con:name><con:value>emiasinfo</con:value></con:property><con:property><con:name>emiasInfoFullDbConnection</con:name><con:value>jdbc:postgresql://172.17.5.11:29100/emiasinfo?user=emiasinfo&amp;password=emiasinfo</con:value></con:property><con:property><con:name>emiasInfoDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>initialPatientId</con:name><con:value>1</con:value></con:property><con:property><con:name>lastPatientId</con:name><con:value>30000000000000</con:value></con:property><con:property><con:name>initialOms</con:name><con:value>10000</con:value></con:property><con:property><con:name>lastOms</con:name><con:value>70000000000000</con:value></con:property><con:property><con:name>limitPatient</con:name><con:value>1000</con:value></con:property><con:property><con:name>limitOms</con:name><con:value>1000</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>