import org.apache.kafka.clients.*
import org.apache.kafka.clients.producer.Callback
import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerRecord
import org.apache.kafka.clients.producer.RecordMetadata
import java.time.*

import groovy.sql.Sql
//if (context.dbConnect != null) {      
//  sql = context.dbConnect;

username =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_user")
password =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_password")
dbconstring =testRunner.testCase.testSuite.project.getPropertyValue("db_rir2_con")
bootstrapServers =testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")

def sendMessageToKafka(String topicName, String textMessage){

  Properties props = new Properties()
  props.put('zk.connect', '10.2.172.24:2181')
  props.put('bootstrap.servers', bootstrapServers)
  props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
  props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
     
  def producer = new KafkaProducer(props)
  
  def messageSender = { String topic, String message ->
      log.info( "messageSender: "+topic+"; "+message )
      def key =  UUID.randomUUID().toString()
      def Date date = new Date(); 
     def  long  timestamp= date.getTime()
     def int partition =0
      String compoundMessage = "$message"
      producer.send(
              new ProducerRecord<String, String>(topic, partition, timestamp,  key, compoundMessage),
              { RecordMetadata metadata, Exception e ->
                  log.info( "The offset of the record we just sent is: ${metadata.offset()}")
              } as Callback
      )
  }

  String msg =textMessage.toString()
  //log.info(topic1+" "+messageCreateMf)
   messageSender(topicName, msg)
   
   producer.close() 
}

def patientId=testRunner.testCase.getPropertyValue("patientId")
def areaId=testRunner.testCase.getPropertyValue("areaId")
def date=testRunner.testCase.getPropertyValue("date")

sendMessageToKafka("DnForm30ToDisp","""{
   "operationType": "new",
   "basisTaskType": "DIGITIZED_DOCUMENT",
   "patientId": \""""+patientId+"""\",
   "groupCode": "DNA0054",
   "groupName": "Нарушения обмена липопротеидов и другие липидемии",
   "groupSpecializationCode": "76",
   "groupSpecializationName": "Терапия",
   "doctorFIO": "Мишеева Вера Анатольевна",
   "employeeId": 10004434,
   "noDoctor": false,
   "specialityCode": "602",
   "specialityName": "Врач-терапевт участковый",
   "specializationCode": "76",
   "specializationName": "Терапия",
   "diagnosisCode": "E78.0",
   "diagnosisName": "Чистая гиперхолестеринемия",
   "diagnosisDate": "2022-08-01T00:00:00.0",
   "repeat": "острое (+), впервые в жизни установленное хроническое (+)",
   "startDate": "2022-08-01",
   "endDate": "2023-08-01",   
   "cancelReasonCode": "2",
   "cancelReasonName": "Выбытие из района обслуживания",   
   "timeCommitted": "2022-08-09T16:18:02.094479",
   "dnDoctorJobExecutionId": "10005163"
}""")