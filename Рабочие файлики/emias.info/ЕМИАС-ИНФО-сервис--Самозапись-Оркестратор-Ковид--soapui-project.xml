<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="de9b8d3d-4bd6-4c70-8024-9823b8c59951" activeEnvironment="Default" name="ЕМИАС.ИНФО сервис &quot;Самозапись.Оркестратор.Ковид&quot;" resourceRoot="" soapui-version="5.7.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="ae335dc6-04f3-46d7-9ab9-bc2f8439ff4c" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://emiasinfo1.emias.solit-clouds.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint></con:endpoints><con:resource name="shiftAppointment" path="/api/v2/saOrchestratorCovid/shiftAppointment" id="6e4d7fb2-b57b-4e52-9200-4aece9dd1e1c"><con:settings/><con:parameters/><con:method name="shiftAppointment" id="5fd31610-0b79-4b45-b18f-48f0b6ff4037" method="POST"><con:settings/><con:parameters/><con:request name="shiftAppointment" id="d745c46b-30d2-4b8a-8ced-f5c029db75a5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "string",
  "omsSeries": "string",
  "birthDate": "2022-11-28",
  "availableResourceId": 0,
  "complexResourceId": 0,
  "startTime": "2008-07-14T10:10:10",
  "endTime": "2008-07-14T10:10:10",
  "referralId": 0,
  "receptionTypeId": 0,
  "appointmentId": 0
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getDoctorsInfo" path="/api/v2/saOrchestratorCovid/getDoctorsInfo" id="a5a48b0e-5a75-43c9-9549-7e08e03a6082"><con:settings/><con:parameters/><con:method name="getDoctorsInfo" id="53f20ddf-41ed-4347-9b8f-ebd1a02704c2" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo">get:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 500 400</con:status><con:params/><con:element xmlns:get="http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo">get:Fault</con:element></con:representation><con:request name="getDoctorsInfo" id="6c7d93cf-9c48-40f6-8642-29bf50ea9f22" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "string",
  "omsSeries": "string",
  "birthDate": "2022-11-28",
  "specialityId": 0,
  "referralId": 0,
  "appointmentId": 0,
  "lpuId": 0,
  "includeArWithoutSlots": true,
  "quotaTypes": {
    "quotaType": [
      0
    ]
  },
  "disableQuotaTypes": {
    "quotaType": [
      0
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getAvailableResourceScheduleInfo" path="/api/v2/saOrchestratorCovid/getAvailableResourceScheduleInfo" id="321a808a-3e5d-4248-bd4e-1acb917504aa"><con:settings/><con:parameters/><con:method name="getAvailableResourceScheduleInfo" id="9a731f16-c637-4fa5-9bc2-200fc23678d0" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:get="http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getDoctorsInfo">get:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="getAvailableResourceScheduleInfo" id="a935a2cc-81a0-430a-8240-76230b4da28f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "availableResourceId": 0,
  "complexResourceId": 0,
  "omsNumber": "string",
  "omsSeries": "string",
  "birthDate": "2022-11-28",
  "referralId": 0,
  "period": {
    "dateFrom": "2022-11-28",
    "dateTo": "2022-11-28"
  },
  "appointmentId": 0,
  "quotaTypes": {
    "quotaType": [
      0
    ]
  },
  "disableQuotaTypes": {
    "quotaType": [
      0
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="createAppointment" path="/api/v2/saOrchestratorCovid/createAppointment" id="293bcf1e-0d82-4db1-ba8a-5814c58fd7b0"><con:settings/><con:parameters/><con:method name="createAppointment" id="a78f8405-caa8-4660-8b26-70c293066758" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 400</con:status><con:params/><con:element xmlns:cre="http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment">cre:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:cre="http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment">cre:Response</con:element></con:representation><con:request name="createAppointment" id="35d5882b-19e4-4f11-958f-1a96dc70d49a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "string",
  "omsSeries": "string",
  "birthDate": "2022-11-28",
  "availableResourceId": 0,
  "complexResourceId": 0,
  "startTime": "2008-07-14T10:10:10",
  "endTime": "2008-07-14T10:10:10",
  "referralId": 0,
  "receptionTypeId": 0,
  "eno": "string"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getLpusForVaccinat" path="/api/v2/saOrchestratorCovid/getLpusForVaccinations" id="7e0fe83f-12d0-4062-aec9-7b727033ab7e"><con:settings/><con:parameters><con:parameter><con:name>omsNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="getLpusForVaccinations" id="3fac4b41-f9e7-43dc-a2a7-6febfbc9213b" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations">get:Response</con:element></con:representation><con:request name="getLpusForVaccinations" id="a55459b2-5da9-4b00-883b-272e656ffb1e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getLpusForVaccinations" path="/api/v2/saOrchestratorCovid/getLpusForVaccinations" id="9826efe3-d6f4-44b9-9055-d7ff9895989c"><con:settings/><con:parameters><con:parameter><con:name>Mock-saOrchestrator</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="7a1d8388-6aed-4d26-bada-42632bd97ef8" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 404 400</con:status><con:params/><con:element xmlns:get="http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations">get:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations">get:Response</con:element></con:representation><con:request name="Request 1" id="38b08a19-7cb6-4b15-b45d-a9be69396f10" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="d39a2254-cf38-4c23-a3f1-cff0fa1c0635" wsaVersion="NONE" name="SelfAppointmentServiceV5Binding" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/v5/}SelfAppointmentServiceV5Binding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SelfAppointmentService" targetNamespace="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:api="http://api.service.soap.emias.lanit.ru/v5/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>version="5.3"</wsdl:documentation>
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/v5/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkgZHOBQbdVtIxLc_PikST6NqqnKMl046oAJY1fDtJAWPiMuWjfg37DOGBMszdpIrBLH001qZQOXvGFrQ1pyJ.PXXNxPfTSSZJt6ZXh2iXR7arXfe5K180ludu6nm_i.dpE3_AtZ08hvE8ffS1atlxV5ivXnuCTlXJJs8yhPOHrX4mg-"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAppointmentReceptionsByPatient">
    <wsdl:part element="api:getAppointmentReceptionsByPatient" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentByIDResponse">
    <wsdl:part element="api:cancelAppointmentByIDResponse" name="cancelAppointmentByIDResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointment">
    <wsdl:part element="api:cancelAppointment" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentToDutyDoctorByPatient">
    <wsdl:part element="api:createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoForGroup">
    <wsdl:part element="api:getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SoapException">
    <wsdl:part element="api:soapException" name="SoapException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferralsInfo">
    <wsdl:part element="api:getReferralsInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointment">
    <wsdl:part element="api:shiftAppointment" name="shiftAppointment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentToDutyDoctorByPatientResponse">
    <wsdl:part element="api:cancelAppointmentToDutyDoctorByPatientResponse" name="cancelAppointmentToDutyDoctorByPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentResponse">
    <wsdl:part element="api:createAppointmentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentBySms">
    <wsdl:part element="api:cancelAppointmentBySms" name="cancelAppointmentBySms"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLI">
    <wsdl:part element="api:getDoctorsInfoForLI" name="getDoctorsInfoForLI"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoForGroupResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoForGroupResponse" name="getAvailableResourceScheduleInfoForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLIResponse">
    <wsdl:part element="api:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointment">
    <wsdl:part element="api:createAppointment" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHealthCareAvailabilityAttributesResponse">
    <wsdl:part element="api:getHealthCareAvailabilityAttributesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatientResponse">
    <wsdl:part element="api:getAppointmentReceptionsByPatientResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoResponse">
    <wsdl:part element="api:getSpecialitiesInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoForGroupResponse">
    <wsdl:part element="api:getSpecialitiesInfoForGroupResponse" name="getSpecialitiesInfoForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForGroupResponse">
    <wsdl:part element="api:getDoctorsInfoForGroupResponse" name="getDoctorsInfoForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentToDutyDoctorByPatientResponse">
    <wsdl:part element="api:createAppointmentToDutyDoctorByPatientResponse" name="createAppointmentToDutyDoctorByPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferralsInfoResponse">
    <wsdl:part element="api:getReferralsInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDutyARScheduleByPatient">
    <wsdl:part element="api:getDutyARScheduleByPatient" name="getDutyARScheduleByPatient"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentForGroupResponse">
    <wsdl:part element="api:shiftAppointmentForGroupResponse" name="shiftAppointmentForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForVaccinationResponse">
    <wsdl:part element="api:getLpusForVaccinationResponse" name="getLpusForVaccinationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentForGroup">
    <wsdl:part element="api:createAppointmentForGroup" name="createAppointmentForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDutyARScheduleByPatientResponse">
    <wsdl:part element="api:getDutyARScheduleByPatientResponse" name="getDutyARScheduleByPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentBySmsResponse">
    <wsdl:part element="api:cancelAppointmentBySmsResponse" name="cancelAppointmentBySmsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentToDutyDoctorByPatient">
    <wsdl:part element="api:cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForGroup">
    <wsdl:part element="api:getDoctorsInfoForGroup" name="getDoctorsInfoForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfo">
    <wsdl:part element="api:getAvailableResourceScheduleInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoForGroup">
    <wsdl:part element="api:getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentResponse">
    <wsdl:part element="api:shiftAppointmentResponse" name="shiftAppointmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoResponse">
    <wsdl:part element="api:getDoctorsInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfo">
    <wsdl:part element="api:getSpecialitiesInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentForGroupResponse">
    <wsdl:part element="api:createAppointmentForGroupResponse" name="createAppointmentForGroupResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentForGroup">
    <wsdl:part element="api:shiftAppointmentForGroup" name="shiftAppointmentForGroup"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHealthCareAvailabilityAttributes">
    <wsdl:part element="api:getHealthCareAvailabilityAttributes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfo">
    <wsdl:part element="api:getDoctorsInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfo">
    <wsdl:part element="api:getAssignmentsInfo" name="getAssignmentsInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForVaccination">
    <wsdl:part element="api:getLpusForVaccination" name="getLpusForVaccination"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentResponse">
    <wsdl:part element="api:cancelAppointmentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentByID">
    <wsdl:part element="api:cancelAppointmentByID" name="cancelAppointmentByID"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfoResponse">
    <wsdl:part element="api:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="SelfAppointmentServiceV5PT">
    <wsdl:operation name="getHealthCareAvailabilityAttributes">
      <wsdl:input message="tns:getHealthCareAvailabilityAttributes" name="getHealthCareAvailabilityAttributes"></wsdl:input>
      <wsdl:output message="tns:getHealthCareAvailabilityAttributesResponse" name="getHealthCareAvailabilityAttributesResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <wsdl:input message="tns:createAppointment" name="createAppointment"></wsdl:input>
      <wsdl:output message="tns:createAppointmentResponse" name="createAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <wsdl:input message="tns:getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo"></wsdl:input>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoResponse" name="getAvailableResourceScheduleInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <wsdl:input message="tns:getDoctorsInfo" name="getDoctorsInfo"></wsdl:input>
      <wsdl:output message="tns:getDoctorsInfoResponse" name="getDoctorsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <wsdl:input message="tns:getSpecialitiesInfo" name="getSpecialitiesInfo"></wsdl:input>
      <wsdl:output message="tns:getSpecialitiesInfoResponse" name="getSpecialitiesInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <wsdl:input message="tns:shiftAppointment" name="shiftAppointment"></wsdl:input>
      <wsdl:output message="tns:shiftAppointmentResponse" name="shiftAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <wsdl:input message="tns:cancelAppointment" name="cancelAppointment"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentResponse" name="cancelAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <wsdl:input message="tns:getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient"></wsdl:input>
      <wsdl:output message="tns:getAppointmentReceptionsByPatientResponse" name="getAppointmentReceptionsByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <wsdl:input message="tns:getReferralsInfo" name="getReferralsInfo"></wsdl:input>
      <wsdl:output message="tns:getReferralsInfoResponse" name="getReferralsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDutyARScheduleByPatient">
      <wsdl:input message="tns:getDutyARScheduleByPatient" name="getDutyARScheduleByPatient"></wsdl:input>
      <wsdl:output message="tns:getDutyARScheduleByPatientResponse" name="getDutyARScheduleByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentToDutyDoctorByPatient">
      <wsdl:input message="tns:createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient"></wsdl:input>
      <wsdl:output message="tns:createAppointmentToDutyDoctorByPatientResponse" name="createAppointmentToDutyDoctorByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentToDutyDoctorByPatient">
      <wsdl:input message="tns:cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentToDutyDoctorByPatientResponse" name="cancelAppointmentToDutyDoctorByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentBySms">
      <wsdl:input message="tns:cancelAppointmentBySms" name="cancelAppointmentBySms"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentBySmsResponse" name="cancelAppointmentBySmsResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentByID">
      <wsdl:input message="tns:cancelAppointmentByID" name="cancelAppointmentByID"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentByIDResponse" name="cancelAppointmentByIDResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <wsdl:input message="tns:getAssignmentsInfo" name="getAssignmentsInfo"></wsdl:input>
      <wsdl:output message="tns:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <wsdl:input message="tns:getDoctorsInfoForLI" name="getDoctorsInfoForLI"></wsdl:input>
      <wsdl:output message="tns:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfoForGroup">
      <wsdl:input message="tns:getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup"></wsdl:input>
      <wsdl:output message="tns:getSpecialitiesInfoForGroupResponse" name="getSpecialitiesInfoForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForGroup">
      <wsdl:input message="tns:getDoctorsInfoForGroup" name="getDoctorsInfoForGroup"></wsdl:input>
      <wsdl:output message="tns:getDoctorsInfoForGroupResponse" name="getDoctorsInfoForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfoForGroup">
      <wsdl:input message="tns:getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup"></wsdl:input>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoForGroupResponse" name="getAvailableResourceScheduleInfoForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentForGroup">
      <wsdl:input message="tns:createAppointmentForGroup" name="createAppointmentForGroup"></wsdl:input>
      <wsdl:output message="tns:createAppointmentForGroupResponse" name="createAppointmentForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointmentForGroup">
      <wsdl:input message="tns:shiftAppointmentForGroup" name="shiftAppointmentForGroup"></wsdl:input>
      <wsdl:output message="tns:shiftAppointmentForGroupResponse" name="shiftAppointmentForGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForVaccination">
      <wsdl:input message="tns:getLpusForVaccination" name="getLpusForVaccination"></wsdl:input>
      <wsdl:output message="tns:getLpusForVaccinationResponse" name="getLpusForVaccinationResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SelfAppointmentServiceV5Binding" type="tns:SelfAppointmentServiceV5PT">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getHealthCareAvailabilityAttributes">
      <soap12:operation soapAction="urn://getHealthCareAvailabilityAttributes"/>
      <wsdl:input name="getHealthCareAvailabilityAttributes">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getHealthCareAvailabilityAttributesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <soap12:operation soapAction="urn://cancelAppointment"/>
      <wsdl:input name="cancelAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <soap12:operation soapAction="urn://getAppointmentReceptionsByPatient"/>
      <wsdl:input name="getAppointmentReceptionsByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAppointmentReceptionsByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <soap12:operation soapAction="urn://getReferralsInfo"/>
      <wsdl:input name="getReferralsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferralsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <soap12:operation soapAction="urn://createAppointment"/>
      <wsdl:input name="createAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfo"/>
      <wsdl:input name="getAvailableResourceScheduleInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <soap12:operation soapAction="urn://getDoctorsInfo"/>
      <wsdl:input name="getDoctorsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <soap12:operation soapAction="urn://getDoctorsInfoForLI"/>
      <wsdl:input name="getDoctorsInfoForLI">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForLIResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <soap12:operation soapAction="urn://getSpecialitiesInfo"/>
      <wsdl:input name="getSpecialitiesInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <soap12:operation soapAction="urn://shiftAppointment"/>
      <wsdl:input name="shiftAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDutyARScheduleByPatient">
      <soap12:operation soapAction="urn://getDutyARScheduleByPatient"/>
      <wsdl:input name="getDutyARScheduleByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDutyARScheduleByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentToDutyDoctorByPatient">
      <soap12:operation soapAction="urn://createAppointmentToDutyDoctorByPatient"/>
      <wsdl:input name="createAppointmentToDutyDoctorByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentToDutyDoctorByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentToDutyDoctorByPatient">
      <soap12:operation soapAction="urn://cancelAppointmentToDutyDoctorByPatient"/>
      <wsdl:input name="cancelAppointmentToDutyDoctorByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentToDutyDoctorByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentBySms">
      <soap12:operation soapAction="urn://cancelAppointmentBySms"/>
      <wsdl:input name="cancelAppointmentBySms">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentBySmsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentByID">
      <soap12:operation soapAction="urn://cancelAppointmentByID"/>
      <wsdl:input name="cancelAppointmentByID">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentByIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <soap12:operation soapAction="urn://getAssignmentsInfo"/>
      <wsdl:input name="getAssignmentsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssignmentsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfoForGroup">
      <soap12:operation soapAction="urn://getSpecialitiesInfoForGroup"/>
      <wsdl:input name="getSpecialitiesInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForGroup">
      <soap12:operation soapAction="urn://getDoctorsInfoForGroup"/>
      <wsdl:input name="getDoctorsInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfoForGroup">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfoForGroup"/>
      <wsdl:input name="getAvailableResourceScheduleInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentForGroup">
      <soap12:operation soapAction="urn://createAppointmentForGroup"/>
      <wsdl:input name="createAppointmentForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointmentForGroup">
      <soap12:operation soapAction="urn://shiftAppointmentForGroup"/>
      <wsdl:input name="shiftAppointmentForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForVaccination">
      <soap12:operation soapAction="urn://getLpusForVaccination"/>
      <wsdl:input name="getLpusForVaccination">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusForVaccinationResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SelfAppointmentServiceV5">
    <wsdl:port binding="tns:SelfAppointmentServiceV5Binding" name="SelfAppointmentServiceV5PTB">
      <soap12:address location="http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkgZHOBQbdVtIxLc_PikST6NqqnKMl046oAJY1fDtJAWPiMuWjfg37DOGBMszdpIrBLH001qZQOXvGFrQ1pyJ.PXXNxPfTSSZJt6ZXh2iXR7arXfe5K180ludu6nm_i.dpE3_AtZ08hvE8ffS1atlxV5ivXnuCTlXJJs8yhPOHrX4mg-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://api.service.soap.emias.lanit.ru/v5/" version="5.2" xmlns:ns1="http://api.service.soap.emias.lanit.ru/v5/" xmlns:tns="http://api.service.soap.emias.lanit.ru/v5/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--======================== Элементы =====================================-->
  <!--Отмена записи на прием-->
  <xs:element name="cancelAppointment" type="tns:cancelAppointment"/>
  <xs:element name="cancelAppointmentResponse" type="tns:cancelAppointmentResponse"/>
  <!--Создание записи на прием2-->
  <xs:element name="createAppointment" type="tns:createAppointment"/>
  <xs:element name="createAppointmentResponse" type="tns:createAppointmentResponse"/>
  <!--Получение списка записей для пациента-->
  <xs:element name="getAppointmentReceptionsByPatient" type="tns:getAppointmentReceptionsByPatient"/>
  <xs:element name="getAppointmentReceptionsByPatientResponse" type="tns:getAppointmentReceptionsByPatientResponse"/>
  <!--Получение расписания врача-->
  <xs:element name="getAvailableResourceScheduleInfo" type="tns:getAvailableResourceScheduleInfo"/>
  <xs:element name="getAvailableResourceScheduleInfoResponse" type="tns:getAvailableResourceScheduleInfoResponse"/>
  <!--Получение списка врачей-->
  <xs:element name="getDoctorsInfo" type="tns:getDoctorsInfo"/>
  <xs:element name="getDoctorsInfoResponse" type="tns:getDoctorsInfoResponse"/>
  <!--Получение направлений для пациента-->
  <xs:element name="getReferralsInfo" type="tns:getReferralsInfo"/>
  <xs:element name="getReferralsInfoResponse" type="tns:getReferralsInfoResponse"/>
  <!--Получение списка специальностей-->
  <xs:element name="getSpecialitiesInfo" type="tns:getSpecialitiesInfo"/>
  <xs:element name="getSpecialitiesInfoResponse" type="tns:getSpecialitiesInfoResponse"/>
  <!--Перенос записи на прием-->
  <xs:element name="shiftAppointment" type="tns:shiftAppointment"/>
  <xs:element name="shiftAppointmentResponse" type="tns:shiftAppointmentResponse"/>
  <!--Предоставление расписания ближайшего доступного ДВ-->
  <xs:element name="getDutyARScheduleByPatient" type="tns:getDutyARScheduleByPatient"/>
  <xs:element name="getDutyARScheduleByPatientResponse" type="tns:getDutyARScheduleByPatientResponse"/>
  <!--Создание записи к ДВ-->
  <xs:element name="createAppointmentToDutyDoctorByPatient" type="tns:createAppointmentToDutyDoctorByPatient"/>
  <xs:element name="createAppointmentToDutyDoctorByPatientResponse" type="tns:createAppointmentToDutyDoctorByPatientResponse"/>
  <!--Отмена записи к ДВ-->
  <xs:element name="cancelAppointmentToDutyDoctorByPatient" type="tns:cancelAppointmentToDutyDoctorByPatient"/>
  <xs:element name="cancelAppointmentToDutyDoctorByPatientResponse" type="tns:cancelAppointmentToDutyDoctorByPatientResponse"/>
  <!--Предоставление ожидания по самозаписи-->
  <xs:element name="getHealthCareAvailabilityAttributes" type="tns:getHealthCareAvailabilityAttributes"/>
  <xs:element name="getHealthCareAvailabilityAttributesResponse" type="tns:getHealthCareAvailabilityAttributesResponse"/>
  <!--Отмена записи к ДВ-->
  <xs:element name="cancelAppointmentBySms" type="tns:cancelAppointmentBySms"/>
  <xs:element name="cancelAppointmentBySmsResponse" type="tns:cancelAppointmentBySmsResponse"/>
  <!--Отмена записи на прием (вариант 2, для ЦТО)-->
  <xs:element name="cancelAppointmentByID" type="tns:cancelAppointmentByID"/>
  <xs:element name="cancelAppointmentByIDResponse" type="tns:cancelAppointmentByIDResponse"/>
  <!--Предоставление перечня активных назначений пациента на ЛИ-->
  <xs:element name="getAssignmentsInfo" type="tns:getAssignmentsInfo"/>
  <xs:element name="getAssignmentsInfoResponse" type="tns:getAssignmentsInfoResponse"/>
  <!--Получение ДР на лабораторные исследования-->
  <xs:element name="getDoctorsInfoForLI" type="tns:getDoctorsInfoForLI"/>
  <xs:element name="getDoctorsInfoForLIResponse" type="tns:getDoctorsInfoForLIResponse"/>
  <!--Предоставление перечня специальностей доступных для самозаписи группой пациентов-->
  <xs:element name="getSpecialitiesInfoForGroup" type="tns:getSpecialitiesInfoForGroup"/>
  <xs:element name="getSpecialitiesInfoForGroupResponse" type="tns:getSpecialitiesInfoForGroupResponse"/>
  <!--Предоставление перечня ДР, к которым разрешена самозапись пациента-->
  <xs:element name="getDoctorsInfoForGroup" type="tns:getDoctorsInfoForGroup"/>
  <xs:element name="getDoctorsInfoForGroupResponse" type="tns:getDoctorsInfoForGroupResponse"/>
  <!--Предоставление расписания доступного ресурса и его слотов, доступных для самозаписи группе пациентов-->
  <xs:element name="getAvailableResourceScheduleInfoForGroup" type="tns:getAvailableResourceScheduleInfoForGroup"/>
  <xs:element name="getAvailableResourceScheduleInfoForGroupResponse" type="tns:getAvailableResourceScheduleInfoForGroupResponse"/>
  <!--Создание несколько записей-->
  <xs:element name="createAppointmentForGroup" type="tns:createAppointmentForGroup"/>
  <xs:element name="createAppointmentForGroupResponse" type="tns:createAppointmentForGroupResponse"/>
  <!--Перенос нескольких записей-->
  <xs:element name="shiftAppointmentForGroup" type="tns:shiftAppointmentForGroup"/>
  <xs:element name="shiftAppointmentForGroupResponse" type="tns:shiftAppointmentForGroupResponse"/>
  <!--Предоставление перечня ЛПУ для вакцинации-->
  <xs:element name="getLpusForVaccination" type="tns:getLpusForVaccination"/>
  <xs:element name="getLpusForVaccinationResponse" type="tns:getLpusForVaccinationResponse"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="soapException" type="tns:soapException"/>
  <xs:element name="appointmentCodeErrorFaultInfo" type="tns:appointmentCodeErrorFaultInfo"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="availableResourceBasis">
    <xs:sequence>
      <xs:element minOccurs="0" name="referralId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор направления, по которому осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="medSpecialityAttachment" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак записи по прикреплению к специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="specialityId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД специализации ДР, по которой осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД вида ЛДП</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Профиль взятия</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="referralType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REF_TO_DOCTOR"/>
      <xs:enumeration value="REF_TO_LDP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="signActiveArchiveType">
    <xs:annotation>
      <xs:documentation>Признак «Архивные и отмененные записи»</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long">
      <xs:enumeration value="0"/>
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="ldpType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="procedure" type="xs:boolean"/>
      <xs:element minOccurs="0" name="investigation" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="ambulatory" type="xs:string"/>
      <xs:element minOccurs="0" name="patientSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referral">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuType" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element name="countActiveAppointment" type="xs:int"/>
      <xs:element name="countAppointmentWithReceptionFact" type="xs:int"/>
      <xs:element minOccurs="0" name="invalid" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referralDesc">
    <xs:sequence>
      <xs:element name="referralId" type="xs:long"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentDesc">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="appointmentNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleOfDay">
    <xs:sequence>
      <xs:element name="date" type="xs:date"/>
      <xs:element maxOccurs="unbounded" name="scheduleBySlot" type="tns:scheduleBySlot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalSpeciality">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="male" type="xs:boolean"/>
      <xs:element minOccurs="0" name="female" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="areaType" type="xs:string"/>
      <xs:element minOccurs="0" name="onlyByRefferal" type="xs:boolean"/>
      <xs:element minOccurs="0" name="therapeutic" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toDoctor">
    <xs:sequence>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="specialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toLdp">
    <xs:sequence>
      <xs:element name="ldpTypeId" type="xs:long"/>
      <xs:element name="ldpTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="countAssignmentProcedures" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReception">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="appointmentNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointment">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="liveQueueTicketId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="liveQueueTicketNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpuId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="typeLpu" type="xs:string"/>
      <xs:element name="nameLpu" type="xs:string"/>
      <xs:element name="lpuAddress" type="xs:string"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="enableCancel" type="xs:boolean"/>
      <xs:element minOccurs="0" name="enableShift" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Разрешен ли перенос</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД КР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="roomId" type="xs:long"/>
      <xs:element minOccurs="0" name="roomNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД Адресной точки кабинета</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element minOccurs="0" name="toBM" type="ns1:SamplingType"/>
      <xs:element name="statusId" type="xs:int"/>
      <xs:element minOccurs="0" name="referral" type="tns:referralDesc">
        <xs:annotation>
          <xs:documentation>Направление</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReceptionToDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorSpecialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element minOccurs="0" name="viewReceptionCode" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element name="arType" type="xs:int"/>
      <xs:element minOccurs="0" name="specialityChangeAbility" type="xs:boolean"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="mainDoctor" type="ns1:mainDoctor"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionType" type="ns1:receptionType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ldpType" type="ns1:ldpTypeForAr"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="samplingType" type="ns1:SamplingType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="complexResource" type="ns1:complexResource"/>
      <xs:element default="false" name="district" type="xs:boolean"/>
      <xs:element default="false" name="replacement" type="xs:boolean"/>
      <xs:element minOccurs="0" name="nondistrict" type="xs:boolean"/>
      <xs:element default="false" name="availableByReferral" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DutyARScheduleInfo">
    <xs:sequence>
      <xs:element name="startTime" type="xs:time"/>
      <xs:element name="endTime" type="xs:time"/>
      <xs:element name="existedLiveQueueTickets" type="xs:int"/>
      <xs:element name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResultCreationAppointmentToDutyDoctor">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="tns:appointmentDesc"/>
      <xs:element name="liveQueueTicketId" type="xs:long"/>
      <xs:element name="liveQueueTicketNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentResponse">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="signActiveArchive" type="tns:signActiveArchiveType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatientResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointment" type="tns:appointment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfo">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="referralId" type="xs:long"/>
      <xs:element minOccurs="0" name="period" type="ns1:DatePeriod"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:choice>
        <xs:element name="appointmentId" type="xs:long"/>
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="includeArWithoutSlots" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>По умолчанию - true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="quotaTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="quotaType" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="referral" type="tns:referral"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDutyARScheduleByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDutyARScheduleByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:DutyARScheduleInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentToDutyDoctorByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:long"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentToDutyDoctorByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:ResultCreationAppointmentToDutyDoctor"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentToDutyDoctorByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="appointmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentToDutyDoctorByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getHealthCareAvailabilityAttributes">
    <xs:sequence>
      <xs:element name="patientId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
        <xs:element name="ldpId" type="xs:long"/>
        <xs:element name="samplingTypeId" type="xs:long"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getHealthCareAvailabilityAttributesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="availabilityInfo" type="tns:availabilityInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availabilityInfo">
    <xs:sequence>
      <xs:element name="nearestAppointmentDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceBasis" type="tns:availableResourceBasis">
        <xs:annotation>
          <xs:documentation>Группирующая сущность: основание для подбора ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД внешней системы, через которую осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="creationDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время создания записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long"/>
      <xs:element minOccurs="0" name="nearestMainDoctorDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона основного врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="nearestReplacementDoctorDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона замещающего врача</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentBySms">
    <xs:sequence>
      <xs:element name="patientPhoneNumber" type="xs:string"/>
      <xs:element name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentBySmsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentByID">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentByIDResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Обозначение внешней системы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="assignment" type="ns1:AssignmentGroup">
        <xs:annotation>
          <xs:documentation>Активные назначения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLI">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="assignment" type="ns1:Assignment">
        <xs:annotation>
          <xs:documentation>Назначение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLIResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry" type="tns:patientGroupEntry"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoForGroup">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoForGroupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element name="appTime" type="tns:TimeInterval"/>
                <xs:element name="complexResourceId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element name="appTime" type="tns:TimeInterval"/>
                <xs:element name="complexResourceId" type="xs:long"/>
                <xs:element name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="appointmentDesc" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentCodeErrorFaultInfo">
    <xs:annotation>
      <xs:documentation>Error</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="messageText" type="xs:string"/>
      <xs:element minOccurs="0" name="userId" type="xs:string"/>
      <xs:element minOccurs="0" name="operation" type="xs:string"/>
      <xs:element minOccurs="0" name="resource" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceScheduleBySlots">
    <xs:sequence>
      <xs:element name="availableResource" type="ns1:availableResource"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="scheduleOfDay" type="ns1:scheduleOfDay"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentLock">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSamplingTypeId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleBySlot">
    <xs:sequence>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="cabinetNumber" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="slot" type="ns1:slot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="slot">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mainDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="firstName" type="xs:string"/>
      <xs:element name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element name="mejiId" type="xs:long"/>
      <xs:element name="employeeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Assignment">
    <xs:sequence>
      <xs:element name="moId" type="xs:long"/>
      <xs:element name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentGroup">
    <xs:sequence>
      <xs:element name="moId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД МО принимающее (головное ЛПУ куста)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="toBM" type="ns1:SamplingType">
        <xs:annotation>
          <xs:documentation>Профиль взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod">
        <xs:annotation>
          <xs:documentation>Период действия назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="active" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак активности назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appointmentAvailable" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак возможности создать запись</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД активной записи по данному назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="registryEntry" type="ns1:registryEntry">
        <xs:annotation>
          <xs:documentation>Реестровые записи</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:sequence>
      <xs:element name="dateFrom" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dateTo" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="registryEntry">
    <xs:sequence>
      <xs:element name="entryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД реестровой записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД лабораторного исследования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛИ (краткое)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hasMemo" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак наличия памятки</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="primary" type="xs:string"/>
      <xs:element minOccurs="0" name="home" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldpTypeForAr">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="complexResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="ns1:room"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="room">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuShortName" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long"/>
      <xs:element minOccurs="0" name="defaultAddress" type="xs:string"/>
      <xs:element name="availabilityDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SamplingType">
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Название профиля</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="self" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак самовзятого БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForVaccination">
    <xs:sequence>
      <xs:element name="omsNumber">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="17"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="6"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="specialityId" type="xs:long"/>
      <xs:element name="externalSystemId">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="30"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForVaccinationResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="ns1:lpu"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpu">
    <xs:sequence>
      <xs:element name="lpuId" type="xs:long"/>
      <xs:element name="shortName" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="addressPoint" type="ns1:addressPoint"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addressPoint">
    <xs:sequence>
      <xs:element name="addressPointId" type="xs:long"/>
      <xs:element name="addressString" type="xs:string"/>
      <xs:element minOccurs="0" name="terCode" type="xs:string"/>
      <xs:element minOccurs="0" name="terName" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="arSpecialityId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="soapException">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="text" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointmentLock" type="tns:appointmentLock"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="patientGroupError" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientShort">
    <xs:sequence>
      <xs:element minOccurs="0" name="patientId" type="xs:long"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientGroupEntry">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TimeInterval">
    <xs:sequence>
      <xs:element name="start" type="xs:dateTime"/>
      <xs:element name="end" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="1db9b08b-dbeb-45bf-85cd-755017516544" isOneWay="false" action="urn://cancelAppointment" name="cancelAppointment" bindingOperationName="cancelAppointment" type="Request-Response" outputName="cancelAppointmentResponse" inputName="cancelAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="043789c7-557e-487c-a023-95a821c77f21" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:cancelAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointment"/></con:call></con:operation><con:operation id="2527fb33-a6bb-43a0-95cf-a6d1083c886a" isOneWay="false" action="urn://cancelAppointmentByID" name="cancelAppointmentByID" bindingOperationName="cancelAppointmentByID" type="Request-Response" outputName="cancelAppointmentByIDResponse" inputName="cancelAppointmentByID" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="54a3327f-e59c-4bf3-be0d-cfbecaee6aad" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentByID>\r
         <appointmentId>?</appointmentId>\r
      </v5:cancelAppointmentByID>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentByID"/></con:call></con:operation><con:operation id="a97d188b-7e2f-4d20-83a2-c669dc1e3f9b" isOneWay="false" action="urn://cancelAppointmentBySms" name="cancelAppointmentBySms" bindingOperationName="cancelAppointmentBySms" type="Request-Response" outputName="cancelAppointmentBySmsResponse" inputName="cancelAppointmentBySms" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="35cd5ff6-608f-454c-8dea-a56212ed9658" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentBySms>\r
         <patientPhoneNumber>?</patientPhoneNumber>\r
         <message>?</message>\r
      </v5:cancelAppointmentBySms>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentBySms"/></con:call></con:operation><con:operation id="c233a161-0f90-4e52-99c5-159ef58d1d93" isOneWay="false" action="urn://cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient" bindingOperationName="cancelAppointmentToDutyDoctorByPatient" type="Request-Response" outputName="cancelAppointmentToDutyDoctorByPatientResponse" inputName="cancelAppointmentToDutyDoctorByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="aa3fe94d-07bb-4445-be39-a2e7858c977f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentToDutyDoctorByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <appointmentId>?</appointmentId>\r
      </v5:cancelAppointmentToDutyDoctorByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentToDutyDoctorByPatient"/></con:call></con:operation><con:operation id="41d6d942-6d11-4967-be22-6b3a8987988c" isOneWay="false" action="urn://createAppointment" name="createAppointment" bindingOperationName="createAppointment" type="Request-Response" outputName="createAppointmentResponse" inputName="createAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a4826468-6a7b-4c7d-875c-2bf617e4ad58" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <eno>?</eno>\r
      </v5:createAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointment"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="a0ddb12f-a89b-46ba-b023-3884190a3d9c" isOneWay="false" action="urn://createAppointmentForGroup" name="createAppointmentForGroup" bindingOperationName="createAppointmentForGroup" type="Request-Response" outputName="createAppointmentForGroupResponse" inputName="createAppointmentForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bed780fd-8984-4fd8-89a8-a89a478025e9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointmentForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
         </patientGroupEntry>\r
         <availableResourceId>?</availableResourceId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:createAppointmentForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointmentForGroup"/></con:call></con:operation><con:operation id="a943e565-0710-484c-b0b1-4823fb788d16" isOneWay="false" action="urn://createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient" bindingOperationName="createAppointmentToDutyDoctorByPatient" type="Request-Response" outputName="createAppointmentToDutyDoctorByPatientResponse" inputName="createAppointmentToDutyDoctorByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f496dfd5-10e7-40e3-8bf9-535a92ce5d00" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointmentToDutyDoctorByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <lpuId>?</lpuId>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
      </v5:createAppointmentToDutyDoctorByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointmentToDutyDoctorByPatient"/></con:call></con:operation><con:operation id="5de0c5f5-9088-4a3d-8c1b-9857b5c79938" isOneWay="false" action="urn://getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient" bindingOperationName="getAppointmentReceptionsByPatient" type="Request-Response" outputName="getAppointmentReceptionsByPatientResponse" inputName="getAppointmentReceptionsByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0c0721f9-9452-428a-9756-cda473608afd" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAppointmentReceptionsByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <signActiveArchive>?</signActiveArchive>\r
      </v5:getAppointmentReceptionsByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAppointmentReceptionsByPatient"/></con:call></con:operation><con:operation id="c7762d2c-0631-485d-b641-76cf6be8aab7" isOneWay="false" action="urn://getAssignmentsInfo" name="getAssignmentsInfo" bindingOperationName="getAssignmentsInfo" type="Request-Response" outputName="getAssignmentsInfoResponse" inputName="getAssignmentsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="92fdd887-cc9c-42cc-9061-aa29868dd505" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAssignmentsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAssignmentsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAssignmentsInfo"/></con:call></con:operation><con:operation id="2d29fbd7-9542-44bd-b639-240a552de03c" isOneWay="false" action="urn://getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo" bindingOperationName="getAvailableResourceScheduleInfo" type="Request-Response" outputName="getAvailableResourceScheduleInfoResponse" inputName="getAvailableResourceScheduleInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9c24acd7-3c00-457e-ad51-466db28cead5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <period>\r
            <dateFrom>?</dateFrom>\r
            <dateTo>?</dateTo>\r
         </period>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfo"/></con:call></con:operation><con:operation id="d8b3c91d-5d14-4009-9478-282da3145ded" isOneWay="false" action="urn://getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup" bindingOperationName="getAvailableResourceScheduleInfoForGroup" type="Request-Response" outputName="getAvailableResourceScheduleInfoForGroupResponse" inputName="getAvailableResourceScheduleInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fce2ea75-9c3a-4665-8f5f-33daf2134fc5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfoForGroup>\r
         <availableResourceId>?</availableResourceId>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfoForGroup"/></con:call></con:operation><con:operation id="33f692f4-af3d-4552-876a-967d6c025e42" isOneWay="false" action="urn://getDoctorsInfo" name="getDoctorsInfo" bindingOperationName="getDoctorsInfo" type="Request-Response" outputName="getDoctorsInfoResponse" inputName="getDoctorsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f59f0d83-ee70-4ab7-bae6-5e505f979048" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--You have a CHOICE of the next 3 items at this level-->\r
         <appointmentId>?</appointmentId>\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <includeArWithoutSlots>?</includeArWithoutSlots>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfo"/></con:call></con:operation><con:operation id="732bcc2c-c832-4320-a2aa-d690b9c0dfff" isOneWay="false" action="urn://getDoctorsInfoForGroup" name="getDoctorsInfoForGroup" bindingOperationName="getDoctorsInfoForGroup" type="Request-Response" outputName="getDoctorsInfoForGroupResponse" inputName="getDoctorsInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cb36976b-db08-4f0f-a119-47192f177e62" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <specialityId>?</specialityId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForGroup"/></con:call></con:operation><con:operation id="6227e17a-61b1-4f00-994d-8e6030bf324a" isOneWay="false" action="urn://getDoctorsInfoForLI" name="getDoctorsInfoForLI" bindingOperationName="getDoctorsInfoForLI" type="Request-Response" outputName="getDoctorsInfoForLIResponse" inputName="getDoctorsInfoForLI" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1685067f-bd76-41a9-b333-7f767fa3fbb3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForLI>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <assignment>\r
            <moId>?</moId>\r
            <samplingTypeId>?</samplingTypeId>\r
            <period>\r
               <dateFrom>?</dateFrom>\r
               <dateTo>?</dateTo>\r
            </period>\r
         </assignment>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForLI>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForLI"/></con:call></con:operation><con:operation id="22ef9ada-e2ea-4cf5-999a-d4071bcdc6e3" isOneWay="false" action="urn://getDutyARScheduleByPatient" name="getDutyARScheduleByPatient" bindingOperationName="getDutyARScheduleByPatient" type="Request-Response" outputName="getDutyARScheduleByPatientResponse" inputName="getDutyARScheduleByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f830dc62-0108-410c-baaa-3e7ff8c8e916" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDutyARScheduleByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <lpuId>?</lpuId>\r
      </v5:getDutyARScheduleByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDutyARScheduleByPatient"/></con:call></con:operation><con:operation id="c2e7d234-3a29-4372-9a28-d754dd5a6eec" isOneWay="false" action="urn://getHealthCareAvailabilityAttributes" name="getHealthCareAvailabilityAttributes" bindingOperationName="getHealthCareAvailabilityAttributes" type="Request-Response" outputName="getHealthCareAvailabilityAttributesResponse" inputName="getHealthCareAvailabilityAttributes" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b2a77729-6800-4374-8e1a-1101fdbff368" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getHealthCareAvailabilityAttributes>\r
         <patientId>?</patientId>\r
         <!--You have a CHOICE of the next 4 items at this level-->\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <ldpId>?</ldpId>\r
         <samplingTypeId>?</samplingTypeId>\r
      </v5:getHealthCareAvailabilityAttributes>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getHealthCareAvailabilityAttributes"/></con:call></con:operation><con:operation id="9116b310-1b50-4fa9-8362-7f9951eba274" isOneWay="false" action="urn://getLpusForVaccination" name="getLpusForVaccination" bindingOperationName="getLpusForVaccination" type="Request-Response" outputName="getLpusForVaccinationResponse" inputName="getLpusForVaccination" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9e00e81e-b87f-4a7f-89e3-e88a6c300263" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getLpusForVaccination>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <specialityId>?</specialityId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getLpusForVaccination>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getLpusForVaccination"/></con:call></con:operation><con:operation id="94591cdd-b891-4809-a4c3-e763be5337f2" isOneWay="false" action="urn://getReferralsInfo" name="getReferralsInfo" bindingOperationName="getReferralsInfo" type="Request-Response" outputName="getReferralsInfoResponse" inputName="getReferralsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a376284c-0834-43e1-8c1c-6f605096f5b2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/></con:call></con:operation><con:operation id="310824db-9499-4157-8556-e99245afe814" isOneWay="false" action="urn://getSpecialitiesInfo" name="getSpecialitiesInfo" bindingOperationName="getSpecialitiesInfo" type="Request-Response" outputName="getSpecialitiesInfoResponse" inputName="getSpecialitiesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a048fbf1-004d-4fb8-8721-79bcc1ee26ab" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfo"/></con:call></con:operation><con:operation id="72e2a52e-6279-40c5-b4e6-65a0f2747320" isOneWay="false" action="urn://getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup" bindingOperationName="getSpecialitiesInfoForGroup" type="Request-Response" outputName="getSpecialitiesInfoForGroupResponse" inputName="getSpecialitiesInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="020ba3d0-8c2b-427d-99e0-dd07235b5bdc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfoForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfoForGroup"/></con:call></con:operation><con:operation id="88fcb5ad-f578-4abf-84cf-18a818d0b6ec" isOneWay="false" action="urn://shiftAppointment" name="shiftAppointment" bindingOperationName="shiftAppointment" type="Request-Response" outputName="shiftAppointmentResponse" inputName="shiftAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="54703adc-edee-4752-8f79-ef9fdc9ad84d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointment"/></con:call></con:operation><con:operation id="0db16d27-abb1-4232-99e2-badb16504b1f" isOneWay="false" action="urn://shiftAppointmentForGroup" name="shiftAppointmentForGroup" bindingOperationName="shiftAppointmentForGroup" type="Request-Response" outputName="shiftAppointmentForGroupResponse" inputName="shiftAppointmentForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="59bbdcd2-8089-4b12-b301-c2b9fd8ece0d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointmentForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <availableResourceId>?</availableResourceId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointmentForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointmentForGroup"/></con:call></con:operation></con:interface><con:testSuite id="d54ad363-6c2d-4bb6-a77a-1970bd659543" name="getDoctorInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="d5ec33f1-46b2-4cc6-9a8e-5a96a9b4701a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверка маппинга" searchProperties="true"><con:settings/><con:testStep type="request" id="81b13959-1290-4421-bd58-ad428d1d422d" name="getDoctorInfo sarOrchestratorCovid"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getDoctorsInfo</con:operation><con:request name="getDoctorInfo sarOrchestratorCovid" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a1c3f969-b620-4570-b19b-8dd53d6043ef"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header/>
   <soap:Body>
      <v5:getDoctorsInfo>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <!--You have a CHOICE of the next 3 items at this level-->
         <specialityId> ${#TestCase#specId}</specialityId>
         <lpuId>${#TestCase#lpuId}</lpuId>
         <!--Optional:-->
         <includeArWithoutSlots>true</includeArWithoutSlots>
         <externalSystemId>EIM</externalSystemId>
      </v5:getDoctorsInfo>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dd0bacf9-a887-46cc-bc5b-1ad7a076eb91" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="8cd780b3-f28e-4d5e-ba2f-2681edc74849" name="В ответе нет ошибок"/><con:assertion type="Simple Contains" id="24cfca93-24ed-465e-9e6b-6d9e32e1ac60" name="Ответ содержит availableResource"><con:configuration><token>availableResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfo"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getDoctorInfo INFO" id="6c2e8e72-4f46-4d30-87c2-90f77038d3d0"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getDoctorsInfo" methodName="getDoctorsInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorInfo INFO" id="c3da989d-fb9a-463f-827c-d18636cc4b93" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "${#TestCase#oms}",
  "birthDate": "${#TestCase#bd}",
  "specialityId": ${#TestCase#specId},
  "includeArWithoutSlots": true,
  "lpuId":${#TestCase#lpuId}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5bef2faf-b6cc-45f3-aa59-d42d3f08a646" name="статус ответа =200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="46b57eb4-30b4-4c53-8381-32e56634dfd5" name="в ответе есть lpuId"><con:configuration><token>lpuId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить соответствие lpuId, lpuShortName и defaultAddress" id="b29ec130-e6bc-46af-a201-79786f8201bc"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo sarOrchestratorCovid#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()
//log.info numberSACArs

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}
assert numberSACArs== mySet.size()
assert goctorInfoINFO.payload[0].lpuId ==SACArs[0].complexResource.room.lpuId.toLong()
assert goctorInfoINFO.payload[0].lpuShortName ==SACArs[0].complexResource.room.lpuShortName.toString()
assert goctorInfoINFO.payload[0].defaultAddress ==SACArs[0].complexResource.room.defaultAddress.toString()</script></con:config></con:testStep><con:testStep type="groovy" name="Сравнить количество ресурсов" id="c6509df3-6aa8-4c2b-ad61-021a37d1776a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo sarOrchestratorCovid#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}

SACArsWithComplexRes=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.text() !=""){
		SACArsWithComplexRes &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" нет комплексного ресурса"
	}
}

INFOArs=goctorInfoINFO.payload[0].availableResources
numberArs=INFOArs.size()

assert  SACArsWithComplexRes.size()==numberArs

log.info numberArs
</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить основные параметры ресурсов" id="296154c0-f8c1-4eb9-a369-04da9f184b07"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo sarOrchestratorCovid#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
numberSACArs=SACArs.size()
INFOArs=goctorInfoINFO.payload[0].availableResources
numberArs=INFOArs.size()
//log.info numberSACArs

SACArsWithComplexRes=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.text() !=""){
		SACArsWithComplexRes &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" нет комплексного ресурса"
	}
}

for(int i=0; i&lt;numberArs; i++){
	assert	INFOArs[i].id == SACArsWithComplexRes[i].id.toLong()
	assert	INFOArs[i].lpuId == SACArsWithComplexRes[i].lpuId.toLong() 
	assert	INFOArs[i].name == SACArsWithComplexRes[i].name.toString()
	assert	INFOArs[i].arType == SACArsWithComplexRes[i].arType.toInteger() 
	assert	INFOArs[i].specialityChangeAbility == SACArsWithComplexRes[i].specialityChangeAbility.toBoolean()
	assert	INFOArs[i].arSpecialityId == SACArsWithComplexRes[i].arSpecialityId.toLong()
	assert	INFOArs[i].arSpecialityName == SACArsWithComplexRes[i].arSpecialityName.toString() 
	assert	INFOArs[i].district == SACArsWithComplexRes[i].district.toBoolean() 
	assert	INFOArs[i].replacement == SACArsWithComplexRes[i].replacement.toBoolean() 
	nondistrictSAC= SACArsWithComplexRes[i].nondistrict ? SACArsWithComplexRes[i].nondistrict.toBoolean() :false
	nondistrictINFO = INFOArs[i].nondistrict ? INFOArs[i].nondistrict : false
	assert	nondistrictINFO == nondistrictSAC
	assert	INFOArs[i].availableByReferral == SACArsWithComplexRes[i].availableByReferral.toBoolean() 
}
log.info "end"

</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить mainDoctor ресурсов" id="00232f52-5eb0-4d14-a482-c4ccb21369bd"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo sarOrchestratorCovid#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
INFOArs=goctorInfoINFO.payload[0].availableResources
numberArs=INFOArs.size()
numberSACArs=SACArs.size()

SACArsWithComplexRes=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.text() !=""){
		SACArsWithComplexRes &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" нет комплексного ресурса"
	}
}


for(int i=0; i&lt;numberArs; i++){
	if(INFOArs[i].mainDoctor==null){
		assert  SACArsWithComplexRes[i].mainDoctor==null 
	}
	else{
		log.info INFOArs[i].mainDoctor
		infoDoc=INFOArs[i].mainDoctor
		sacDoc= SACArsWithComplexRes[i].mainDoctor
		assert  infoDoc.specialityName ==  sacDoc.specialityName.toString()
		 assert infoDoc.specialityId == sacDoc.specialityId.toLong()
		 assert infoDoc.firstName == sacDoc.firstName.toString()
		assert  infoDoc.secondName == sacDoc.secondName.toString() 
		assert  infoDoc.lastName == sacDoc.lastName.toString() 
		assert  infoDoc.mejiId == sacDoc.mejiId.toLong()
		assert  infoDoc.employeeId == sacDoc.employeeId.toLong() 
	}
}
log.info "end"

</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить receptionType ресурсов" id="1abb7274-58e6-4612-9fae-f44b86e94c61"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo sarOrchestratorCovid#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
INFOArs=goctorInfoINFO.payload[0].availableResources
numberArs=INFOArs.size()
numberSACArs=SACArs.size()

SACArsWithComplexRes=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.text() !=""){
		SACArsWithComplexRes &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" нет комплексного ресурса"
	}
}


for(int i=0; i&lt;numberArs; i++){
	if(INFOArs[i].receptionType==null){
		assert  SACArsWithComplexRes[i].receptionType==null 
	}
	else{
		log.info INFOArs[i].receptionType
		infoRt=INFOArs[i].receptionType
		sacRt= SACArsWithComplexRes[i].receptionType
		assert infoRt.size() == sacRt.size()
		for(int j=0; j&lt; infoRt.size();j++){
			assert infoRt[j].code.toString() == sacRt[j].code.toString()
			assert infoRt[j].name == sacRt[j].name.toString()
			assert infoRt[j].primary == sacRt[j].primary.toString()
			assert infoRt[j].home == sacRt[j].home.toString()								
		}
	}
}
log.info "end"

</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить ldpType ресурсов" id="0753ad2b-1e95-435c-8a77-76a5e691bd40"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo sarOrchestratorCovid#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
INFOArs=goctorInfoINFO.payload[0].availableResources
numberArs=INFOArs.size()
numberSACArs=SACArs.size()

SACArsWithComplexRes=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.text() !=""){
		SACArsWithComplexRes &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" нет комплексного ресурса"
	}
}


for(int i=0; i&lt;numberArs; i++){
	if(INFOArs[i].ldpType==null){
		assert  SACArsWithComplexRes[i].ldpType==null 
	}
	else{
		log.info INFOArs[i].ldpType
		infoLt=INFOArs[i].ldpType
		sacLt= SACArsWithComplexRes[i].ldpType
		assert infoLt.size() == sacLt.size()
		for(int j=0; j&lt; infoLt.size();j++){
			assert infoLt[j].code == sacLt[j].code.toString()
			assert infoLt[j].name == sacLt[j].name.toString()							
		}
	}
}
log.info "end"

</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить SamplingType ресурсов" id="86a3118a-a8fe-4835-8ca4-913f300a846e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo sarOrchestratorCovid#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
INFOArs=goctorInfoINFO.payload[0].availableResources
numberArs=INFOArs.size()
numberSACArs=SACArs.size()

SACArsWithComplexRes=[]
for(int i=0; i&lt;numberSACArs; i++){
	if(SACArs[i].complexResource.text() !=""){
		SACArsWithComplexRes &lt;&lt; SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" нет комплексного ресурса"
	}
}


for(int i=0; i&lt;numberArs; i++){
	if(INFOArs[i].samplingType==null){
		assert  SACArsWithComplexRes[i].samplingType==null 
	}
	else{
		log.info INFOArs[i].samplingType
		infoST=INFOArs[i].samplingType
		sacST= SACArsWithComplexRes[i].samplingType
		assert infoST.size() == sacST.size()
		for(int j=0; j&lt; infoST.size();j++){
			assert infoST[j].id == sacST[j].id
			assert infoST[j].name == sacST[j].name					
			assert infoST[j].self == sacST[j].self				
		}
	}
}
log.info "end"

</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить complexResource ресурсов" id="10499e25-7de4-40c7-89fb-148e2fbb61d7"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDoctorInfoResponse = context.expand('${getDoctorInfo INFO#Response}')
def slurperJson = new JsonSlurper()
def goctorInfoINFO = slurperJson.parseText(getDoctorInfoResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def getDoctorInfoSACResponse = context.expand('${getDoctorInfo sarOrchestratorCovid#Response}')
getDoctorInfoSAC = new XmlSlurper().parseText(getDoctorInfoSACResponse)

SACArs=getDoctorInfoSAC.Body.getDoctorsInfoResponse.availableResource
INFOArs=goctorInfoINFO.payload[0].availableResources
numberArs=INFOArs.size()
numberSACArs=SACArs.size()

SACArsWithComplexRes=[]
for(int i=0; i<numberSACArs; i++){
	if(SACArs[i].complexResource.text() !=""){
		SACArsWithComplexRes << SACArs[i]
	}
	else{
		log.info"у ресурса "+SACArs[i].id +" нет комплексного ресурса"
	}
}


for(int i=0; i<numberArs; i++){
	if(INFOArs[i].complexResource==null){
		assert  SACArsWithComplexRes[i].complexResource==null 
	}
	else{
		log.info INFOArs[i].complexResource
		infoCR=INFOArs[i].complexResource
		sacCR= SACArsWithComplexRes[i].complexResource
		assert infoCR.size() == sacCR.size()
		for(int j=0; j< infoCR.size();j++){
			infoCR[j].id == sacCR[j].id
			infoCR[j].name == sacCR[j].name		
			log.info 	(INFOArs[i].id+" количество рум инфо "+infoCR[j].room.size()+" количество рум инфо "+sacCR[j].room.size())		
			assert infoCR[j].room.size() == sacCR[j].room.size()
			for(int k=0;k< infoCR[j].room.size();k++){
				roomInfo=infoCR[j].room[k]
				roomSAC=sacCR[j].room[k]
				assert roomInfo.id == roomSAC.id.toLong()
				assert roomInfo.number == roomSAC.number.toString()
				assert roomInfo.lpuId == roomSAC.lpuId.toLong()
				assert roomInfo.addressPointId == roomSAC.addressPointId.toLong()
				assert roomInfo.lpuShortName == roomSAC.lpuShortName.toString()
				assert roomInfo.defaultAddress == roomSAC.defaultAddress.toString()
				assert roomInfo.availabilityDate == roomSAC.availabilityDate.toString()				
			}
		}
	}
}
log.info "end"

]]></script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>5052110885001399</con:value></con:property><con:property><con:name>bd</con:name><con:value>1988-07-14</con:value></con:property><con:property><con:name>specId</con:name><con:value>2011</con:value></con:property><con:property><con:name>lpuId</con:name><con:value>204</con:value></con:property></con:properties></con:testCase><con:testCase id="747864f0-1ffc-4d7f-ae2c-1dc0fb35c8ae" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС2 SA_PATIENT_NOT_FOUND" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getDoctorInfo INFO" id="f9110764-d410-4d10-9a3f-bd1e87a84b44"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getDoctorsInfo" methodName="getDoctorsInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorInfo INFO" id="c3da989d-fb9a-463f-827c-d18636cc4b93" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "${#TestCase#oms}",
  "birthDate": "${#TestCase#bd}",
  "specialityId": ${#TestCase#specId},
  "includeArWithoutSlots": true,
  "lpuId":${#TestCase#lpuId}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo</con:originalUri><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Код ошибки =SA_PATIENT_NOT_FOUND"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Описание ошибки = Пациент с указанным ОМС не найден"><con:configuration><path>$.error.description</path><content>Пациент с указанным ОМС не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Тип ошибки = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>1</con:value></con:property><con:property><con:name>bd</con:name><con:value>1988-07-14</con:value></con:property><con:property><con:name>specId</con:name><con:value>2011</con:value></con:property><con:property><con:name>lpuId</con:name><con:value>204</con:value></con:property></con:properties></con:testCase><con:testCase id="65d831fc-9533-4230-a139-2d5be783e3a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС3 SA_PATIENT_HAS_NO_VALID_OMS" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getDoctorInfo INFO" id="3a33d9ad-e768-42de-9d7f-3217955425f8"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getDoctorsInfo" methodName="getDoctorsInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorInfo INFO" id="c3da989d-fb9a-463f-827c-d18636cc4b93" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "1222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222221",
  "birthDate": "${#TestCase#bd}",
  "specialityId": ${#TestCase#specId},
  "includeArWithoutSlots": true,
  "lpuId":${#TestCase#lpuId}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getDoctorsInfo</con:originalUri><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Код ошибки =SA_PATIENT_NOT_FOUND"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Описание ошибки = Пациент с указанным ОМС не найден"><con:configuration><path>$.error.description</path><content>Пациент с указанным ОМС не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6104815e-b7ef-4df8-8aba-e9b6f755e9d8" name="Тип ошибки = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700502255961476</con:value></con:property><con:property><con:name>bd</con:name><con:value>1988-07-14</con:value></con:property><con:property><con:name>specId</con:name><con:value>2011</con:value></con:property><con:property><con:name>lpuId</con:name><con:value>204</con:value></con:property></con:properties></con:testCase><con:testCase id="fcbcb18b-4133-4016-b0cc-89538a72893c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="392163_АС4. SA_APPOINTMENT_CANNOT_BE_CANCELED (APPOINTMENT_IS_CANCELED)" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getDoctorsInfo" id="797b92ac-5661-4572-b0f4-c57de04b8529"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getDoctorsInfo" methodName="getDoctorsInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorsInfo" id="363ade28-3ba6-4ffd-a3bd-668b80e9b7ac" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-saOrchestrator" value="${#TestCase#Mock-saOrchestrator}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "123456",
  "birthDate": "2020-06-06",
  "specialityId": 1,
  "includeArWithoutSlots": true,
  "lpuId": 200
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getDoctorsInfo</con:originalUri><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.code = SA_APPOINTMENT_CANNOT_BE_CANCELED"><con:configuration><path>$.error.code</path><content>SA_APPOINTMENT_CANNOT_BE_CANCELED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.description = Невозможно отменить запись, запись уже отменена или время приема началось"><con:configuration><path>$.error.description</path><content>Невозможно отменить запись, запись уже отменена или время приема началось</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.origin = APPOINTMENT_IS_CANCELED"><con:configuration><path>$.error.origin</path><content>APPOINTMENT_IS_CANCELED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>availableResourceId</con:name><con:value>15989288</con:value></con:property><con:property><con:name>complexResourceId</con:name><con:value>18914813</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>77010050175807845</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1984-07-08</con:value></con:property><con:property><con:name>Mock-saOrchestrator</con:name><con:value>${#Project#Mock}/392163</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>123456</con:value></con:property></con:properties></con:testCase><con:testCase id="46e25ded-94ba-4e8d-a702-7ae5aeb79d83" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="392164 _АС4. SA_APPOINTMENT_CANNOT_BE_CANCELED (APPOINTMENT_IS_CANCELED)" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getDoctorsInfo" id="17c76197-106e-4d6e-9954-09aac0ef2be1"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getDoctorsInfo" methodName="getDoctorsInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorsInfo" id="363ade28-3ba6-4ffd-a3bd-668b80e9b7ac" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-saOrchestrator" value="${#TestCase#Mock-saOrchestrator}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "123456",
  "birthDate": "2020-06-06",
  "specialityId": 1,
  "includeArWithoutSlots": true,
  "lpuId": 200
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getDoctorsInfo</con:originalUri><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.code = SA_APPOINTMENT_CANNOT_BE_CANCELED"><con:configuration><path>$.error.code</path><content>SA_APPOINTMENT_CANNOT_BE_CANCELED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.description = Невозможно отменить запись, запись уже отменена или время приема началось"><con:configuration><path>$.error.description</path><content>Невозможно отменить запись, запись уже отменена или время приема началось</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.origin = APPOINTMENT_PASSED"><con:configuration><path>$.error.origin</path><content>APPOINTMENT_PASSED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>availableResourceId</con:name><con:value>15989288</con:value></con:property><con:property><con:name>complexResourceId</con:name><con:value>18914813</con:value></con:property><con:property><con:name>omsNumber</con:name><con:value>77010050175807845</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1984-07-08</con:value></con:property><con:property><con:name>Mock-saOrchestrator</con:name><con:value>${#Project#Mock}/392164</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>123456</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="e47ff561-df3d-453b-9095-d2a683f9c9c3" name="Create/shiftAppointment"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="26e2f6df-547a-4342-941a-7f3e184e63cb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Создание и перенос записи ковид" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="0049f08f-f37b-443e-98cb-bb196f644e62"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="31911eba-c942-465b-a279-925b85942b47"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="eff6304e-df6f-4c05-b75c-dd9d61d33d97"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить доступный ресурс (getAvailableResourceScheduleInfo)" id="00261fbb-a74b-46ed-a72e-3f7739d31966"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить доступный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="0bf747ba-13fd-4141-b6bc-6361325cb2cb"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить доступный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment" id="154c69cc-fa72-4e02-bf9a-ed9641bd4240"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="1517c516-c73f-4e44-af23-626a7bdef9be" name="Contains"><con:configuration><token>appointmentId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="request" name="Получить записи пациента (getAppointmentReceptionsByPatient)" id="ad49df9a-496d-45b5-ba03-79677a04a3e0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAppointmentReceptionsByPatient</con:operation><con:request name="Получить записи пациента (getAppointmentReceptionsByPatient)" id="58e3779e-e749-4d07-bfcc-57f23f4e9433"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>\r
   <soap:Body>\r
      <v5:getAppointmentReceptionsByPatient>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAppointmentReceptionsByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7dd15dc4-5f7a-4431-a023-b66ed96efca1"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties id записи и проверить создание" id="2dc9f891-c4c7-4497-9eff-a90bec5e1410"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper
def LIStatus = context.expand('${createAppointment#Response}').toString()
def SL = new JsonSlurper()
def AI = SL.parseText LIStatus
AI = AI.payload.appointmentId.toString()
log.info AI
testRunner.testCase.setPropertyValue("AppointmentID",AI)
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def InIs = groovyUtils.getXmlHolder('Получить записи пациента (getAppointmentReceptionsByPatient)#Response')
def LabIss = InIs.getNodeValue('//id[1]/text()[1]')
log.info LabIss
assert LabIss==testRunner.testCase.getPropertyValue('AppointmentID')

</script></con:config></con:testStep><con:testStep type="groovy" name="Установить время записи" id="9c306672-738f-4279-b9d6-6b390885a160"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить доступный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[3]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[3]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime

testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="shiftAppointment" id="a52bedb1-afdb-4a90-9834-31148f55d782"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/shiftAppointment" methodName="shiftAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="shiftAppointment" id="80c655c1-5ef6-4e9f-a887-9afb43d1c844" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID},
    "appointmentId": ${#TestCase#AppointmentID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/shiftAppointment</con:originalUri><con:assertion type="Simple Contains" id="868c2b3f-882a-4690-bcfc-07ae9ebbb78e" name="Contains"><con:configuration><token>appointmentId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="ed5006e7-9c72-4aa6-a466-4c759c9e2594" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fe5f3fe5-aa88-4d07-9dd5-c904aa6f6407" name="JsonPath Match"><con:configuration><path>$..payload.appointmentId</path><content>[${#TestCase#AppointmentID}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="request" name="cancelAppointment" id="7f26e597-e31e-4e91-9cb6-e921d2808623"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>cancelAppointment</con:operation><con:request name="cancelAppointment" id="8b76c968-1328-4b06-9ec6-95a382714c66"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:cancelAppointment>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <appointmentId>${#TestCase#AppointmentID}</appointmentId>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:cancelAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ec77537d-43fc-45e8-be61-b54658b2edae"/><con:assertion type="Simple Contains" id="c6a4ae2f-74f7-45ca-9870-36a7da61311a" name="Contains"><con:configuration><token>SUCCESS</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-13</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-21</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19914836142</con:value></con:property><con:property><con:name>CR</con:name><con:value>236817513</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880487723</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>1861</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2022-12-12T12:30:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-12T13:00:00</con:value></con:property></con:properties></con:testCase><con:testCase id="e695ba82-7f2a-4734-ac4e-fd88fceba51e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createAppointment АС2 - SA_SLOT_IS_BUSY" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="1003b14b-d77b-4667-b3c4-7e30866e9af5"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="ed9197ed-26c8-41b9-8672-ed33009908aa"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="9ad20ff3-a40c-421f-9f61-9a60ae6b1e99"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="6890e7fc-ca74-4808-b4ba-bd66cc357b34"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="63335ef8-eb85-4818-af17-4aba7e1f15a5"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить комплексный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment c нерелевантным eno" id="5788c088-4e9f-4b5e-a6f9-9fa5c3d447b6"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment c нерелевантным eno" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID},
    "eno": "183430229121834302291218343022912183430229121834302"
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Valid HTTP Status Codes"><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment SA_SLOT_IS_BUSY" id="23654fdb-381e-4dd3-a195-35d0bfae4a27"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment SA_SLOT_IS_BUSY" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2f67556e-0053-42ae-b05f-c5a745fe78f4" name="Значение code - SA_SLOT_IS_BUSY"><con:configuration><path>$.error.code</path><content>SA_SLOT_IS_BUSY</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="397960f6-56bb-4843-b8d5-ee357d53a424" name="Значение description - Временной слот уже занят"><con:configuration><path>$.error.description</path><content>Временной слот уже занят</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2b958f87-02f3-498d-af2e-c4d5634be881" name="Значение type - BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a2404296-2df9-4c0a-996a-d3bcf160fd6c" name="Значение origin - SLOT_IS_BUSY"><con:configuration><path>$.error.origin</path><content>SLOT_IS_BUSY</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-14</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-22</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19991382126</con:value></con:property><con:property><con:name>CR</con:name><con:value>237766663</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880487723</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>2057</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2023-12-13T11:30:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-13T12:00:00</con:value></con:property></con:properties></con:testCase><con:testCase id="462a9f67-c40e-4b10-91fa-5d64713aaca7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createAppointment АС3 - SA_PATIENT_TIME_BUSY" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="5c77eb6d-80c4-4f5e-8454-0286534a94cd"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="bde69e77-1d41-4b5c-8cc7-e39ca934ed78"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="0b5c82bc-d4f1-4d7e-ab0a-d5110f82f003"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="859c41d1-e032-48ed-a6f2-f3f59bf1b301"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="e65a5be4-e584-4773-8aa2-ab6238675dee"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить комплексный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment" id="60685fbf-76cf-4acb-a06a-63771a17bcc9"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Status Code 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Записать в properties id записи" id="f3cdb60e-68e4-4d24-9be5-83c7dd8d5b7e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createAppointment</con:sourceStep><con:sourcePath>$.payload.appointmentId</con:sourcePath><con:targetType>AppointmentID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment SA_PATIENT_TIME_BUSY" id="f15168f5-a33f-45d4-a75a-468b1ec000cf"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment SA_PATIENT_TIME_BUSY" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Status Code 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2f67556e-0053-42ae-b05f-c5a745fe78f4" name="Значение code - SA_PATIENT_TIME_BUSY"><con:configuration><path>$.error.code</path><content>SA_PATIENT_TIME_BUSY</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="397960f6-56bb-4843-b8d5-ee357d53a424" name="Значение description - Вы уже записаны на выбранное время"><con:configuration><path>$.error.description</path><content>Вы уже записаны на выбранное время.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2b958f87-02f3-498d-af2e-c4d5634be881" name="Значение type - BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a2404296-2df9-4c0a-996a-d3bcf160fd6c" name="Значение origin - TIME_BUSY_FOR_SAME_PATIENT"><con:configuration><path>$.error.origin</path><content>TIME_BUSY_FOR_SAME_PATIENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="request" name="cancelAppointment" id="e8d082d1-c5c5-4e04-a752-2d194010acc3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>cancelAppointment</con:operation><con:request name="cancelAppointment" id="3f5e0e85-e3a9-4991-aa3d-4f70faa26af4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:cancelAppointment>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <appointmentId>${#TestCase#AppointmentID}</appointmentId>
         <externalSystemId>EIM</externalSystemId>
      </v5:cancelAppointment>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4a2065-d57d-4cbf-bb38-7fba39e54085"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-14</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-22</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19914836142</con:value></con:property><con:property><con:name>CR</con:name><con:value>236817513</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880697848</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>1861</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2022-12-13T11:30:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-13T12:00:00</con:value></con:property></con:properties></con:testCase><con:testCase id="55f0c553-d549-4827-905f-3f78c17f1512" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createAppointment АС4 - SA_PAST_TIME_START" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="71f893d7-b82c-446c-a42f-4b72f985b035"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="2193bb32-ed0b-445b-aff8-272ddde938d6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="5fe3e50a-934f-4722-b431-a2edf72cc45a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="5a5068b3-0276-46fa-96db-84940f3660f8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="87644623-cb20-40e3-be4f-4e5281a45760"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'HH:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить комплексный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTimeValue = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
def startTimeParse = Date.parse(dTF, startTimeValue).previous()
def sdf = new SimpleDateFormat(dTF)
def startTime = sdf.format(startTimeParse)
log.info startTime

def endTimeValue = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
def endTimeParse = Date.parse(dTF, endTimeValue).previous()
def endTime = sdf.format(endTimeParse)
log.info endTime
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)
</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment SA_PAST_TIME_START" id="a5a95140-ca75-4437-9f1c-68ea3497002e"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment SA_PAST_TIME_START" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2f67556e-0053-42ae-b05f-c5a745fe78f4" name="Значение code - SA_PAST_TIME_START"><con:configuration><path>$.error.code</path><content>SA_PAST_TIME_START</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="397960f6-56bb-4843-b8d5-ee357d53a424" name="Значение description - Время начала приема уже прошло."><con:configuration><path>$.error.description</path><content>Время начала приема уже прошло.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2b958f87-02f3-498d-af2e-c4d5634be881" name="Значение type - BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a2404296-2df9-4c0a-996a-d3bcf160fd6c" name="Значение origin - PAST_TIME_APPOINTMENT"><con:configuration><path>$.error.origin</path><content>PAST_TIME_APPOINTMENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-14</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-22</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19914836142</con:value></con:property><con:property><con:name>CR</con:name><con:value>236817513</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880487723</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>1861</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2022-12-12T11:30:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-12T12:00:00</con:value></con:property></con:properties></con:testCase><con:testCase id="f394d008-de8d-4c64-8fe9-8379ff57386b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createAppointment АС5 - SA_CHOOSEN_TIME_IS_NOT_AVAILABLE" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="63dac0f0-c713-455e-8af9-8a5862b18e38"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="3cd8339d-142e-4223-aa59-174b482c7f1f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="b2bf017d-3305-4a10-921c-ce77a23c6aec"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="f1229915-a091-4313-8d7d-2020d514e3a5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="c0af6204-7dd1-4e4a-a156-c48cf59eb9e3"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat

def date = new Date()
String dateTimeFormat ="yyyy-MM-dd" //устанавливаем формат даты
def sdf= new SimpleDateFormat(dateTimeFormat)
def currentDate = sdf.format(date)
def startTime = currentDate + 'T' + '22:00:00'
log.info startTime
def endTime = currentDate + 'T' + '22:30:00'
log.info endTime

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить комплексный ресурс (getAvailableResourceScheduleInfo)#Response')
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)
</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment SA_CHOOSEN_TIME_IS_NOT_AVAILABLE" id="948d2f02-a5ba-4f1a-be17-2def163bfcea"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment SA_CHOOSEN_TIME_IS_NOT_AVAILABLE" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Valid HTTP Status Codes"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2f67556e-0053-42ae-b05f-c5a745fe78f4" name="Значение code - SA_CHOOSEN_TIME_IS_NOT_AVAILABLE"><con:configuration><path>$.error.code</path><content>SA_CHOOSEN_TIME_IS_NOT_AVAILABLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="397960f6-56bb-4843-b8d5-ee357d53a424" name="Значение description - На выбранное время самостоятельная запись через Интернет невозможна."><con:configuration><path>$.error.description</path><content>На выбранное время самостоятельная запись через Интернет невозможна.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2b958f87-02f3-498d-af2e-c4d5634be881" name="Значение type - BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a2404296-2df9-4c0a-996a-d3bcf160fd6c" name="Значение origin - CHOOSEN_TIME_IS_NOT_AVAILABLE"><con:configuration><path>$.error.origin</path><content>CHOOSEN_TIME_IS_NOT_AVAILABLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-14</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-22</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19914836142</con:value></con:property><con:property><con:name>CR</con:name><con:value>236817513</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880487723</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>1861</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2022-12-13T22:00:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-13T22:30:00</con:value></con:property></con:properties></con:testCase><con:testCase id="4b7edd22-1e59-477f-aa7d-b5bf9bf712be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="shiftAppointment АС3 - SA_PATIENT_TIME_BUSY" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="2a7aaa2f-fa26-458b-be51-0748477bc80e"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="a336d0de-c7ce-4f0a-9b85-96ad440274d0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="0ed5bf29-f03f-47f2-9237-bd23756c9b97"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="b20c45de-76d0-4ad2-8dfb-1debe5b11c8a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="2038965d-605a-461b-aecf-b8340eaad1ed"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить комплексный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment" id="dd93de0d-9b12-4b6a-8171-df6f901f7706"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Status Code 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Записать в properties id записи" id="7332761b-24e9-4956-a709-8ed2298d21c6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createAppointment</con:sourceStep><con:sourcePath>$.payload.appointmentId</con:sourcePath><con:targetType>AppointmentID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="shiftAppointment" id="c76d1415-e726-4af3-a496-e60a0ea70c0a"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/shiftAppointment" methodName="shiftAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="shiftAppointment" id="80c655c1-5ef6-4e9f-a887-9afb43d1c844" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID},
    "appointmentId": ${#TestCase#AppointmentID}
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/shiftAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="bd0ae098-885c-4990-bc37-1e749e49a884" name="Status Code - 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c4991f23-24a6-45e9-854f-c721530cc906" name="Значение code - SA_PATIENT_TIME_BUSY"><con:configuration><path>$.error.code</path><content>SA_PATIENT_TIME_BUSY</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e6429cf6-d5bf-4bcf-97f1-02119d057d67" name="Значение description - Вы уже записаны на выбранное время."><con:configuration><path>$.error.description</path><content>Вы уже записаны на выбранное время.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="254ed3a7-ec67-4f7b-8c1f-bc061a02fb96" name="Значение type - BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="990302dc-b3b1-46fd-b471-6cc2e172c773" name="Значение origin - TIME_BUSY_FOR_SAME_PATIENT"><con:configuration><path>$.error.origin</path><content>TIME_BUSY_FOR_SAME_PATIENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="request" name="cancelAppointment" id="01c3c264-4f74-4b88-a56a-b2549140ef6d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>cancelAppointment</con:operation><con:request name="cancelAppointment" id="3f5e0e85-e3a9-4991-aa3d-4f70faa26af4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:cancelAppointment>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <appointmentId>${#TestCase#AppointmentID}</appointmentId>
         <externalSystemId>EIM</externalSystemId>
      </v5:cancelAppointment>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4a2065-d57d-4cbf-bb38-7fba39e54085"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-14</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-22</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19914836142</con:value></con:property><con:property><con:name>CR</con:name><con:value>236817513</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880698873</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>1861</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2022-12-13T11:30:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-13T12:00:00</con:value></con:property></con:properties></con:testCase><con:testCase id="a7e797f3-3271-488e-a5b8-a4bdd8f3bbdb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="shiftAppointment АС4 - SA_PAST_TIME_START" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="8f20fa51-2665-4d4b-a604-50e221c7b4ba"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="82519993-c19e-4e64-9dba-285147a40e31"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="da50c5ef-2e0b-4e61-abf3-d816f6b79d4c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="cd3863df-5749-4f4e-84e2-1101c12906ef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="77b17800-9e12-441e-b21d-1e7ab0e4d7d7"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить комплексный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment" id="d5338db1-03ee-4481-9c3a-23d6677fa3ab"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Записать в properties id записи" id="37656d1e-98d4-432a-a1f5-0e71f802d5ab"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createAppointment</con:sourceStep><con:sourcePath>$.payload.appointmentId</con:sourcePath><con:targetType>AppointmentID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Установить время для переноса записи" id="e1ff1f6a-d103-449f-91e0-2875de45a8d0"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'HH:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить комплексный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTimeValue = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
def startTimeParse = Date.parse(dTF, startTimeValue).previous()
def sdf = new SimpleDateFormat(dTF)
def startTime = sdf.format(startTimeParse)
log.info startTime

def endTimeValue = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
def endTimeParse = Date.parse(dTF, endTimeValue).previous()
def endTime = sdf.format(endTimeParse)
log.info endTime
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="shiftAppointment SA_PAST_TIME_START" id="2e554028-a640-4ca3-9bfa-331201baca45"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/shiftAppointment" methodName="shiftAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="shiftAppointment SA_PAST_TIME_START" id="80c655c1-5ef6-4e9f-a887-9afb43d1c844" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID},
    "appointmentId": ${#TestCase#AppointmentID}
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/shiftAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="be4db488-0441-46b7-9569-b7d17614d7b4" name="Status Code - 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="05caec84-b7ef-4d7f-976c-d31fb3186d73" name="Значение code - SA_PAST_TIME_START"><con:configuration><path>$.error.code</path><content>SA_PAST_TIME_START</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d00070d3-5582-4c28-a8c4-087cc18b4fff" name="Значение description - Время начала приема уже прошло."><con:configuration><path>$.error.description</path><content>Время начала приема уже прошло.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b42077c-de67-49ac-9e60-01ebd9ce3ff3" name="Значение type - BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="23da8f4d-9b88-401b-8626-dd1a982315f5" name="Значение origin - PAST_TIME_APPOINTMENT"><con:configuration><path>$.error.origin</path><content>PAST_TIME_APPOINTMENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="request" name="cancelAppointment" id="3bb577e0-1142-4a6c-ac33-1d2603b20124"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>cancelAppointment</con:operation><con:request name="cancelAppointment" id="108c666b-2045-481a-96c2-893e03144d2f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:cancelAppointment>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <appointmentId>${#TestCase#AppointmentID}</appointmentId>
         <externalSystemId>EIM</externalSystemId>
      </v5:cancelAppointment>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="96ee1f7a-32e1-470b-a403-3c17747cfa27"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-14</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-22</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19914836142</con:value></con:property><con:property><con:name>CR</con:name><con:value>236817513</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880699898</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>1861</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2022-12-12T11:30:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-12T12:00:00</con:value></con:property></con:properties></con:testCase><con:testCase id="e432a121-e9ea-4c95-b650-19860b61cdbe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="shiftAppointment АС5 - SA_CHOOSEN_TIME_IS_NOT_AVAILABLE" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="a24ecba3-ff6f-4cda-9e44-3e0719b54fe6"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="4e576d8c-d902-49e9-87c5-5587f2bac005"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="dc0e04d7-dd08-49a6-ac0c-6828e21d0f95"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="f74d8024-bf09-488d-b1fe-1a65635eab45"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить комплексный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="86770500-5096-4677-bd0e-8a1104c9796b"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить комплексный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment" id="e341e232-eba4-49d8-a490-c1d20518dbcd"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Записать в properties id записи" id="95518be1-f59a-4ff3-aced-ce2a4d9938cf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createAppointment</con:sourceStep><con:sourcePath>$.payload.appointmentId</con:sourcePath><con:targetType>AppointmentID</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Установить время для переноса записи" id="0c3b5a17-2915-46aa-a466-0123f07143f0"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat

def date = new Date()
String dateTimeFormat ="yyyy-MM-dd" //устанавливаем формат даты
def sdf= new SimpleDateFormat(dateTimeFormat)
def currentDate = sdf.format(date)
def startTime = currentDate + 'T' + '22:00:00'
log.info startTime
def endTime = currentDate + 'T' + '22:30:00'
log.info endTime

testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)
</script></con:config></con:testStep><con:testStep type="restrequest" name="shiftAppointment" id="5770e199-d6a5-4198-a550-d9175e59b13d"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/shiftAppointment" methodName="shiftAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="shiftAppointment" id="80c655c1-5ef6-4e9f-a887-9afb43d1c844" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID},
    "appointmentId": ${#TestCase#AppointmentID}
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/shiftAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a22b3e43-13d6-497a-97e9-b0177c473aa4" name="Status Code - 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a7e02ebc-4189-4cd5-b52b-049249515153" name="Значение code - SA_CHOOSEN_TIME_IS_NOT_AVAILABLE"><con:configuration><path>$.error.code</path><content>SA_CHOOSEN_TIME_IS_NOT_AVAILABLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="277c8d61-7802-494a-9c99-d110cbbd2e42" name="Значение description - На выбранное время самостоятельная запись через Интернет невозможна."><con:configuration><path>$.error.description</path><content>На выбранное время самостоятельная запись через Интернет невозможна.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1eabded2-0c84-4ac4-bc1f-902bc1704f61" name="Значение type - BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8b6a94b1-f273-427e-be8b-a2c59987b434" name="Значение origin - CHOOSEN_TIME_IS_NOT_AVAILABLE"><con:configuration><path>$.error.origin</path><content>CHOOSEN_TIME_IS_NOT_AVAILABLE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="request" name="cancelAppointment" id="41dd10e8-3429-4298-b061-d05ee681b7e4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>cancelAppointment</con:operation><con:request name="cancelAppointment" id="87c195c0-a320-4d7c-b956-cf8709806720"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:cancelAppointment>
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <appointmentId>${#TestCase#AppointmentID}</appointmentId>
         <externalSystemId>EIM</externalSystemId>
      </v5:cancelAppointment>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="549c8517-6818-4159-88ab-2890712c75cd"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-14</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-22</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19914836142</con:value></con:property><con:property><con:name>CR</con:name><con:value>236817513</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880700923</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>1861</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2022-12-13T22:00:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-13T22:30:00</con:value></con:property></con:properties></con:testCase><con:testCase id="17b4a93c-27b8-4726-92ec-d9ab20ebef32" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="shiftAppointment АС8 - SA_APPOINTMENT_CANNOT_BE_CANCELLED" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Записать в properties время" id="d5b406e0-f48e-426b-b1df-55c5ef63406d"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
import java.text.SimpleDateFormat

def date = new Date().plus(1)
String dateTimeFormat ="yyyy-MM-dd" //устанавливаем формат даты
def sdf= new SimpleDateFormat(dateTimeFormat)
def currentDate = sdf.format(date)
def startTime = currentDate + 'T' + '09:00:00'
log.info startTime
def endTime = currentDate + 'T' + '09:30:00'
log.info endTime

testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="shiftAppointment" id="b0ae2d31-478f-4840-b5b7-3f2f7056a015"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/shiftAppointment" methodName="shiftAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="shiftAppointment" id="80c655c1-5ef6-4e9f-a887-9afb43d1c844" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": 19924273341,
    "complexResourceId": 237062488,
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": 2063,
    "appointmentId": 391873809848
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/shiftAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a22b3e43-13d6-497a-97e9-b0177c473aa4" name="Status Code - 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a7e02ebc-4189-4cd5-b52b-049249515153" name="Значение code - SA_APPOINTMENT_CANNOT_BE_CANCELED"><con:configuration><path>$.error.code</path><content>SA_APPOINTMENT_CANNOT_BE_CANCELED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="277c8d61-7802-494a-9c99-d110cbbd2e42" name="Значение description - Невозможно отменить запись, запись уже отменена или время приема началось"><con:configuration><path>$.error.description</path><content>Невозможно отменить запись, запись уже отменена или время приема началось</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1eabded2-0c84-4ac4-bc1f-902bc1704f61" name="Значение type - BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8b6a94b1-f273-427e-be8b-a2c59987b434" name="Значение origin - APPOINTMENT_IS_CANCELED"><con:configuration><path>$.error.origin</path><content>APPOINTMENT_IS_CANCELED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-14</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-22</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700008084130662</con:value></con:property><con:property><con:name>bd</con:name><con:value>1962-06-13</con:value></con:property><con:property><con:name>AR</con:name><con:value>19991382126</con:value></con:property><con:property><con:name>CR</con:name><con:value>237766663</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880675298</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>2057</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2022-12-14T09:00:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2022-12-14T09:30:00</con:value></con:property></con:properties></con:testCase><con:testCase id="4533f769-2992-4b2e-99af-b67b509538a4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Для мануального тестирования" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Установить дату" id="3f8e7cab-22f5-4162-abe1-dbb5af662e9f"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter

Calendar startPeriod = Calendar.getInstance();
 startPeriod.add(Calendar.DATE, +1);
 def dateStart = startPeriod.getTime().format('yyyy-MM-dd');
 log.info  dateStart
  startPeriod.add(Calendar.DATE, +8);
  def dateEnd = startPeriod.getTime().format('yyyy-MM-dd');
  log.info  dateEnd
 testRunner.testCase.setPropertyValue("dateFrom",dateStart)
 testRunner.testCase.setPropertyValue("dateTo",dateEnd)</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить доступный ресурc" id="bed2ca01-c88d-479a-bcf6-2f0b8226e093"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT DISTINCT ar.AVAILABLE_RESOURCE_ID,
ar.AVAIL_RESOURCE_SPECIALITY_ID, ls.LPU_ID FROM AVAIL_RESOURCE_SCHEDULE ars 
JOIN AVAILABLE_RESOURCE ar ON ar.AVAILABLE_RESOURCE_ID =ars.AVAIALBLE_RESOURCE_ID 
JOIN LPU_SCHEDULE ls ON ls.LPU_SCHEDULE_ID =ars.LPU_SCHEDULE_ID 
WHERE ls.END_DATE>CURRENT_TIMESTAMP AND ar.AVAIL_RESOURCE_SPECIALITY_ID IN ('2009','2011') 
AND ar.IS_APPOINTMENT_TO_SELF =1</con:query><con:assertion type="Simple Contains" id="7059439a-c5aa-4fb1-b899-9b36756f5aad" name="Contains - AVAILABLE_RESOURCE_ID"><con:configuration><token>AVAILABLE_RESOURCE_ID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать в проперти доступный ресурс" id="793857f4-6e98-4ae1-816c-22d1aba280a0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AR</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить доступный ресурc</con:sourceStep><con:sourcePath>//Row[1]/AVAILABLE_RESOURCE_ID[1]/text()[1]</con:sourcePath><con:targetType>AR</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Получить доступный ресурс (getAvailableResourceScheduleInfo)" id="60f8fae8-c7a6-4605-abd6-17f81ad26173"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAvailableResourceScheduleInfo</con:operation><con:request name="Получить доступный ресурс (getAvailableResourceScheduleInfo)" id="0bb05116-c7e3-41aa-b655-b7097a6fd198"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
    <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <period>
            <dateFrom>${#TestCase#dateFrom}</dateFrom>
            <dateTo>${#TestCase#dateTo}</dateTo>
         </period>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="33c545a3-89e6-46de-bb50-4be6414eaa49"/><con:assertion type="Simple Contains" id="6f8e2b9c-1af5-41fb-b969-a1bebde1e3ed" name="startTime"><con:configuration><token>startTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cb36b9da-b530-4518-a3d9-8a6366538227" name="endTime"><con:configuration><token>endTime</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c78c83ea-414e-4da3-bfcf-87438cfc99a1" name="RTI"><con:configuration><token>receptionType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff4decaf-e787-42ae-8c02-18e4f8862499" name="CR"><con:configuration><token>complexResource</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties комплексный ресурс и время" id="50d9bcb0-0a00-462c-9de8-aeb8cbcfc8d8"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить доступный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[2]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime
def CR = dateLI.getNodeValue("//complexResource[1]/id[1]/text()[1]")
log.info CR
def RTI = dateLI.getNodeValue("//code[1]/text()[1]")
log.info RTI
testRunner.testCase.setPropertyValue("CR",CR)
testRunner.testCase.setPropertyValue("receptionTypeID",RTI)
testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment" id="a5e0f9a0-452d-4176-9dff-99eeb10e5d0c"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/createAppointment" methodName="createAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment" id="e842ea3b-0b14-4c63-bd73-be31be94f52a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/createAppointment</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="605b5cba-9d40-4976-a01f-0c89061239c1" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="1517c516-c73f-4e44-af23-626a7bdef9be" name="Contains"><con:configuration><token>appointmentId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="request" name="Получить записи пациента (getAppointmentReceptionsByPatient)" id="e2eeb915-cea5-425e-941a-5d17bef850d3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAppointmentReceptionsByPatient</con:operation><con:request name="Получить записи пациента (getAppointmentReceptionsByPatient)" id="58e3779e-e749-4d07-bfcc-57f23f4e9433"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>\r
   <soap:Body>\r
      <v5:getAppointmentReceptionsByPatient>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:getAppointmentReceptionsByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7dd15dc4-5f7a-4431-a023-b66ed96efca1"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Записать в properties id записи и проверить создание" id="a9b852cd-7428-467a-aae8-403de1dd2aae"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper
def LIStatus = context.expand('${createAppointment#Response}').toString()
def SL = new JsonSlurper()
def AI = SL.parseText LIStatus
AI = AI.payload.appointmentId.toString()
log.info AI
testRunner.testCase.setPropertyValue("AppointmentID",AI)
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def InIs = groovyUtils.getXmlHolder('Получить записи пациента (getAppointmentReceptionsByPatient)#Response')
def LabIss = InIs.getNodeValue('//id[1]/text()[1]')
log.info LabIss
assert LabIss==testRunner.testCase.getPropertyValue('AppointmentID')

</script></con:config></con:testStep><con:testStep type="groovy" name="Установить время записи" id="5ee27e58-c0f7-49f1-ab6d-a45e121c0053"><con:settings/><con:config><script>import java.time.format.DateTimeFormatter
import groovy.xml.XmlSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def dateLI = groovyUtils.getXmlHolder('Получить доступный ресурс (getAvailableResourceScheduleInfo)#Response')
def startTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[3]/startTime[1]/text()[1]")
startTime = startTime.split("\\+")[0]
log.info startTime
def endTime = dateLI.getNodeValue("//scheduleOfDay[1]/scheduleBySlot[1]/slot[3]/endTime[1]/text()[1]")
endTime = endTime.split("\\+")[0]
log.info endTime

testRunner.testCase.setPropertyValue("startTime",startTime)
testRunner.testCase.setPropertyValue("endTime",endTime)</script></con:config></con:testStep><con:testStep type="restrequest" name="shiftAppointment" id="495e334f-414a-4af9-8e78-a4e4ffa7dc3f"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/shiftAppointment" methodName="shiftAppointment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="shiftAppointment" id="80c655c1-5ef6-4e9f-a887-9afb43d1c844" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber": "${#TestCase#oms}",
    "birthDate": "${#TestCase#bd}",
    "availableResourceId": ${#TestCase#AR},
    "complexResourceId": ${#TestCase#CR},
    "startTime": "${#TestCase#startTime}",
    "endTime": "${#TestCase#endTime}",
    "receptionTypeId": ${#TestCase#receptionTypeID},
    "appointmentId": ${#TestCase#AppointmentID}
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/shiftAppointment</con:originalUri><con:assertion type="Simple Contains" id="868c2b3f-882a-4690-bcfc-07ae9ebbb78e" name="Contains"><con:configuration><token>appointmentId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="ed5006e7-9c72-4aa6-a466-4c759c9e2594" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fe5f3fe5-aa88-4d07-9dd5-c904aa6f6407" name="JsonPath Match"><con:configuration><path>$..payload.appointmentId</path><content>[${#TestCase#AppointmentID}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="request" name="cancelAppointment" id="3f69aa2f-b706-4df8-8938-256382c3c477"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>cancelAppointment</con:operation><con:request name="cancelAppointment" id="8b76c968-1328-4b06-9ec6-95a382714c66"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:cancelAppointment>\r
         <omsNumber>${#TestCase#oms}</omsNumber>\r
         <birthDate>${#TestCase#bd}</birthDate>\r
         <appointmentId>${#TestCase#AppointmentID}</appointmentId>\r
         <externalSystemId>EIM</externalSystemId>\r
      </v5:cancelAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ec77537d-43fc-45e8-be61-b54658b2edae"/><con:assertion type="Simple Contains" id="c6a4ae2f-74f7-45ca-9870-36a7da61311a" name="Contains"><con:configuration><token>SUCCESS</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="createAppointmentSAO" id="cb0d32ad-2c04-4837-9391-c778ec884557"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>createAppointment</con:operation><con:request name="createAppointmentSAO" id="53c43121-9319-45ad-a7f7-236f8c085497"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointment>\r
         <omsNumber>${#TestCase#oms}</omsNumber>
         <birthDate>${#TestCase#bd}</birthDate>
         <availableResourceId>${#TestCase#AR}</availableResourceId>\r
         <complexResourceId>${#TestCase#CR}</complexResourceId>\r
         <startTime>${#TestCase#startTime}</startTime>\r
         <endTime>${#TestCase#endTime}</endTime>\r
          <receptionTypeId>${#TestCase#receptionTypeID}</receptionTypeId>
         <externalSystemId>EIM</externalSystemId>\r
      </v5:createAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5b706438-39dd-46f3-894a-1d7738cc8c4f"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>dateFrom</con:name><con:value>2022-12-13</con:value></con:property><con:property><con:name>dateTo</con:name><con:value>2022-12-21</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700007178231039</con:value></con:property><con:property><con:name>bd</con:name><con:value>1939-10-23</con:value></con:property><con:property><con:name>AR</con:name><con:value>19942099089</con:value></con:property><con:property><con:name>CR</con:name><con:value>237377163</con:value></con:property><con:property><con:name>AppointmentID</con:name><con:value>391880487723</con:value></con:property><con:property><con:name>receptionTypeID</con:name><con:value>1863</con:value></con:property><con:property><con:name>startTime</con:name><con:value>2024-04-18T18:00:00</con:value></con:property><con:property><con:name>endTime</con:name><con:value>2024-04-18T18:30:00</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="b51fe75b-1bd9-4f6c-a6a9-f0b01cfe0745" name="getAvailableResourceScheduleInfo"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="33ca8c99-af97-4f52-9904-3e2329d92a4b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="392180_АС5. SA_APPOINTMENT_CANNOT_BE_CANCELED (APPOINTMENT_IS_CANCELED)" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getAvailableResourceScheduleInfo" id="fdf35729-71f2-44af-92f4-f0de442d4dd5"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getAvailableResourceScheduleInfo" methodName="getAvailableResourceScheduleInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getAvailableResourceScheduleInfo" id="363ade28-3ba6-4ffd-a3bd-668b80e9b7ac" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-saOrchestrator" value="${#TestCase#Mock-saOrchestrator}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
	"availableResourceId": 123456,
	"complexResourceId": 1234567,
  "omsNumber": "123456",
  "birthDate": "2020-06-06"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getDoctorsInfo</con:originalUri><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.code = SA_APPOINTMENT_CANNOT_BE_CANCELED"><con:configuration><path>$.error.code</path><content>SA_APPOINTMENT_CANNOT_BE_CANCELED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.description = Невозможно отменить запись, запись уже отменена или время приема началось"><con:configuration><path>$.error.description</path><content>Невозможно отменить запись, запись уже отменена или время приема началось</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.origin = APPOINTMENT_IS_CANCELED"><con:configuration><path>$.error.origin</path><content>APPOINTMENT_IS_CANCELED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Mock-saOrchestrator</con:name><con:value>${#Project#Mock}/392180</con:value></con:property></con:properties></con:testCase><con:testCase id="eae92de5-437a-448c-98c8-d584f19d9c35" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="392181_АС5. SA_APPOINTMENT_CANNOT_BE_CANCELED (APPOINTMENT_PASSED)" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getAvailableResourceScheduleInfo" id="b9f85792-2377-4b89-b0df-e34876e1db10"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getAvailableResourceScheduleInfo" methodName="getAvailableResourceScheduleInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getAvailableResourceScheduleInfo" id="363ade28-3ba6-4ffd-a3bd-668b80e9b7ac" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-saOrchestrator" value="${#TestCase#Mock-saOrchestrator}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
	"availableResourceId": 123456,
	"complexResourceId": 1234567,
  "omsNumber": "123456",
  "birthDate": "2020-06-06"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestrator/getDoctorsInfo</con:originalUri><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.code = SA_APPOINTMENT_CANNOT_BE_CANCELED"><con:configuration><path>$.error.code</path><content>SA_APPOINTMENT_CANNOT_BE_CANCELED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.description = Невозможно отменить запись, запись уже отменена или время приема началось"><con:configuration><path>$.error.description</path><content>Невозможно отменить запись, запись уже отменена или время приема началось</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8169e8b-40d1-4355-90f0-ef093d59bd3b" name="error.origin = APPOINTMENT_PASSED"><con:configuration><path>$.error.origin</path><content>APPOINTMENT_PASSED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Mock-saOrchestrator</con:name><con:value>${#Project#Mock}/392181</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="c2ac1b88-a7d1-4eba-883c-dbc15bf70738" name="GET getLpusForVaccinations"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b6d3e3d9-7294-46bd-8961-2d941ac751d4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Получение списка ЛПУ доступных для записи" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Получение omsNumber и birthDate из БД" id="08e21a26-8552-4aff-855c-d81109f135c0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT OMS_NEW_ASSURANCE_NUMBER AS oms, TO_CHAR(BIRTH_DATE, 'YYYY-MM-DD') AS bd
FROM PATIENT p
WHERE p.OMS_NEW_ASSURANCE_NUMBER IS NOT NULL
AND MONTHS_BETWEEN(CURRENT_TIMESTAMP, p.BIRTH_DATE) >= 216
AND rownum &lt;= 1</con:query><con:assertion type="XPath Match" id="cc97ef2c-f135-428e-a079-f9caabdbe6e8" name="XPath Match"><con:configuration><path>/Results/ResultSet/Row/@rowNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Получение данных из запроса в TestCase property" id="7cdd67aa-8f40-4adb-b77f-b9d570568630"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>omsNumber</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получение omsNumber и birthDate из БД</con:sourceStep><con:sourcePath>/Results/ResultSet/Row/OMS</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получение omsNumber и birthDate из БД</con:sourceStep><con:sourcePath>/Results/ResultSet/Row/BD</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getLpusForVaccinations" id="b26b11c6-9246-4034-9ed5-3926d10ea643"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="getLpusForVaccinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations" id="523bb9da-26c6-4cea-acf2-eed3a5f5fbc1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="962a34cf-f443-4fb7-9a2f-58ee2b578982" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="${#TestCase#omsNumber}"/>
  <con:entry key="birthDate" value="${#TestCase#birthDate}"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" name="getLpusFirVaccinations SACovid" id="b86da633-2e48-4952-9d81-67b1dfa5409f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getLpusForVaccination</con:operation><con:request name="getLpusFirVaccinations SACovid" id="37beb905-f94b-4ca8-8b9a-a7c1fa032930"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getLpusForVaccination>\r
         <omsNumber>${#TestCase#omsNumber}</omsNumber>\r
         <birthDate>${#TestCase#birthDate}</birthDate>\r
         <externalSystemId>${#TestCase#externalSystemId}</externalSystemId>\r
      </v5:getLpusForVaccination>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="721579d3-e8bb-49fc-b7fe-26a497559217"/><con:assertion type="SOAP Fault Assertion" id="6b9b9033-40e8-4e62-834e-3010e1c3777e"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверка маппинга" id="2a1894e7-2410-45da-b23e-1ab3326bb52d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

ResponseJson = context.expand('${getLpusForVaccinations#Response}')
ResponseJsonParsed = new JsonSlurper().parseText(ResponseJson)

ResponseXML = context.expand('${getLpusFirVaccinations SACovid#Response}')
ResponseXMLParsed = new XmlSlurper().parseText(ResponseXML)

lpusList = ResponseJsonParsed.payload.lpu
lpusListXml = ResponseXMLParsed.Body.getLpusForVaccinationResponse.lpu

//Сравнение количества полученных объектов 
//в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
assert lpusList.size() == lpusListXml.size()

//Сравнение параметров каждого объекта
//в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
for(int i=0; i &lt; lpusList.size(); i++){
	assert lpusList[i].lpuId == lpusListXml[i].lpuId.toInteger()
	assert lpusList[i].shortName.trim() == lpusListXml[i].shortName.toString()

	assert lpusList[i].addressPoint.size() == lpusListXml[i].addressPoint.size()
	
	//Сравнение параметров каждого объекта addressPoint
	//полученного в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
	for (int j=0; j &lt; lpusList[i].addressPoint.size(); j++){
			assert lpusList[i].addressPoint[j].addressPointId== 
			lpusListXml[i].addressPoint[j].addressPointId.toInteger()
			
			assert lpusList[i].addressPoint[j].addressString== 
			lpusListXml[i].addressPoint[j].addressString.toString()

			//Проверка существования параметра terCode
			if(lpusList[i].addressPoint[j].terCode == null)
			assert lpusListXml[i].addressPoint[j].terCode.toString() == ""
			else assert lpusList[i].addressPoint[j].terCode== 
			lpusListXml[i].addressPoint[j].terCode.toString()

			//Проверка существования параметра terName
			if(lpusList[i].addressPoint[j].terName == null)
			assert lpusListXml[i].addressPoint[j].terName.toString() == ""
			else assert lpusList[i].addressPoint[j].terName== 
			lpusListXml[i].addressPoint[j].terName.toString()
	
			assert lpusList[i].addressPoint[j].arSpecialityId.size()== 
			lpusListXml[i].addressPoint[j].arSpecialityId.size()

			//Сравнение значений в массиве arSpecialityId
			//полученного в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
			for (int k=0; k &lt; lpusList[i].addressPoint[j].arSpecialityId.size(); k++)
				assert lpusList[i].addressPoint[j].arSpecialityId[k] == 
				lpusListXml[i].addressPoint[j].arSpecialityId[k].toInteger()
		}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7794799719000657</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2002-05-30</con:value></con:property><con:property><con:name>externalSystemId</con:name><con:value>EIM</con:value></con:property></con:properties></con:testCase><con:testCase id="6299d03a-576e-4bdc-819c-e14595bdcddf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС1. Метод вернул ответ с ошибкой PATIENT_NOT_FOUND" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations" id="10ad117a-7911-4d5b-8c3a-3d58e8353aae"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="getLpusForVaccinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations" id="523bb9da-26c6-4cea-acf2-eed3a5f5fbc1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#EMIASINFOendpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="962a34cf-f443-4fb7-9a2f-58ee2b578982" name="HTTP статус = 404"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c7100ff2-3b76-4358-b65a-dee0a83c7800" name="Параметр code равен SA_PATIENT_NOT_FOUND"><con:configuration><path>error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="937575e8-44ee-493b-9679-1fcf7732d6c3" name="Проверка параметра description"><con:configuration><path>error.description</path><content>Пациент с указанным ОМС не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fbebb367-9071-491b-8262-5478d37f4b88" name="Параметр type равен BUSINESS"><con:configuration><path>error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a348359-6afe-4990-9af0-a5076db00880" name="Параметр origin равен PATIENT_NOT_FOUND"><con:configuration><path>error.origin</path><content>PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="${#TestCase#omsNumber}"/>
  <con:entry key="birthDate" value="${#TestCase#birthDate}"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>779479971900065</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2002-05-30</con:value></con:property><con:property><con:name>externalSystemId</con:name><con:value>EIM</con:value></con:property></con:properties></con:testCase><con:testCase id="43669ab3-735e-48cd-b138-3aba1076d98c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС2. Метод вернул ответ с ошибкой PATIENT_HAS_NO_VALID_OMS" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Получение omsNumber и birthDate из БД" id="01e95f46-ff3e-4a3e-b0a7-ff35f614868d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#suppDBDriver}</con:driver><con:connectionString>${#Project#suppFullDbConnection}</con:connectionString><con:query>SELECT OMS_NEW_ASSURANCE_NUMBER AS oms, TO_CHAR(BIRTH_DATE, 'YYYY-MM-DD') AS bd
FROM PATIENT p
WHERE p.OMS_NEW_ASSURANCE_NUMBER IS NOT NULL
AND p.IS_POLICY_VALID = 0
AND rownum &lt;= 1</con:query><con:assertion type="XPath Match" id="cc97ef2c-f135-428e-a079-f9caabdbe6e8" name="XPath Match"><con:configuration><path>/Results/ResultSet/Row/@rowNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Получение данных из запроса в TestCase property" id="249ceaa0-c820-4c8e-aed5-baf6d965c8aa"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>omsNumber</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получение omsNumber и birthDate из БД</con:sourceStep><con:sourcePath>/Results/ResultSet/Row/OMS</con:sourcePath><con:targetType>omsNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получение omsNumber и birthDate из БД</con:sourceStep><con:sourcePath>/Results/ResultSet/Row/BD</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getLpusForVaccinations" id="ae821a66-9566-4de0-93fc-d4aec8af8f00"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="getLpusForVaccinations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations" id="523bb9da-26c6-4cea-acf2-eed3a5f5fbc1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#EMIASINFOendpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="962a34cf-f443-4fb7-9a2f-58ee2b578982" name="HTTP статус равен 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c7100ff2-3b76-4358-b65a-dee0a83c7800" name="Параметр code равен SA_PATIENT_HAS_NO_VALID_OMS"><con:configuration><path>error.code</path><content>SA_PATIENT_HAS_NO_VALID_OMS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="937575e8-44ee-493b-9679-1fcf7732d6c3" name="Проверка параметра description"><con:configuration><path>error.description</path><content>Пациент не имеет действительного полиса ОМС</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fbebb367-9071-491b-8262-5478d37f4b88" name="Параметр type равен BUSINESS"><con:configuration><path>error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a348359-6afe-4990-9af0-a5076db00880" name="Параметр origin равен PATIENT_HAS_NO_VALID_OMS"><con:configuration><path>error.origin</path><content>PATIENT_HAS_NO_VALID_OMS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="${#TestCase#omsNumber}"/>
  <con:entry key="birthDate" value="${#TestCase#birthDate}"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7773550825000098</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1944-06-24</con:value></con:property><con:property><con:name>externalSystemId</con:name><con:value>EIM</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="09c24d87-f323-41e8-a088-518ca9e507de" name="POST getLpusForVaccinations"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b557398f-14b4-4d55-bc2b-e92d8056b316" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Отсутствуют ЛПУ в ответе. 418681" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="f221b6c3-efcd-4b49-97ae-10f823195772"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Mock-saOrchestrator" value="${#Project#mockUrl}/mock/418681" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="d38d1982-85f0-4678-bda1-a29b47f8f0e5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

ResponseJson = context.expand('${getLpusForVaccinations POST#Response}')
ResponseJsonParsed = new JsonSlurper().parseText(ResponseJson)

lpusList = ResponseJsonParsed.payload.lpu
if (lpusList.join() != ""){
	testRunner.fail("В ответе вернулся не пустой lpu со значением" + " " + lpusList)
}
else {
	log.info "Ответ корректный"
}
</script></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7793899793001224</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2001-06-06</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394392/getLpusForVaccination</con:value></con:property></con:properties></con:testCase><con:testCase id="41fb47a8-1b46-4d5b-99a9-5d4364a1291e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Получить список ЛПУ с передачей одного specialityId. 418716" searchProperties="true"><con:settings/><con:testStep type="request" name="getLpusForVaccinations SOAP" id="96549832-fb2e-4650-b046-9e5977fe3c1a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getLpusForVaccination</con:operation><con:request name="getLpusForVaccinations SOAP" id="173c61f8-3ca1-41cf-939c-3a3003fb146b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:getLpusForVaccination>
         <omsNumber>${#TestCase#omsNumber}</omsNumber>
         <birthDate>${#TestCase#birthDate}</birthDate>
         <specialityId>${#TestCase#specId}</specialityId>
         <externalSystemId>EIM</externalSystemId>
      </v5:getLpusForVaccination>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="dcb6d219-1055-4cd6-b22f-780722534ae2" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="85db675b-4904-410e-a88f-e315e7361d9a"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}",
    "specialityId": [
    ${#TestCase#specId}
    ]
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="776b767d-8bc4-43f5-85f0-0cc7eebd1b57"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import groovy.sql.Sql

path = testRunner.testCase.getPropertyValue("path")

ResponseJson = context.expand('${getLpusForVaccinations POST#Response}')
ResponseJsonParsed = new JsonSlurper().parseText(ResponseJson)

ResponseXML = context.expand('${getLpusForVaccinations SOAP#Response}')
ResponseXMLParsed = new XmlSlurper().parseText(ResponseXML)

lpusList = ResponseJsonParsed.payload.lpu
lpusListXml = ResponseXMLParsed.Body.getLpusForVaccinationResponse.lpu

//Сравнение количества полученных объектов 
//в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
assert lpusList.size() == lpusListXml.size()

//Сравнение параметров каждого объекта
//в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
for(int i=0; i &lt; lpusList.size(); i++){
	assert lpusList[i].lpuId== lpusListXml[i].lpuId.toLong()
	assert lpusList[i].shortName.trim() == lpusListXml[i].shortName.toString()
	assert lpusList[i].addressPoint.size() == lpusListXml[i].addressPoint.size()
	//Сравнение параметров каждого объекта addressPoint
	//полученного в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
	for (int j=0; j &lt; lpusList[i].addressPoint.size(); j++){
		assert lpusList[i].addressPoint[j].addressPointId == lpusListXml[i].addressPoint[j].addressPointId.toInteger()
		assert lpusList[i].addressPoint[j].addressString == lpusListXml[i].addressPoint[j].addressString.toString()
		//Проверка существования параметра terCode
		if(lpusList[i].addressPoint[j].terCode == null){
			testRunner.fail("В ответе отсутствует параметр terCode")
		}
		else{
			assert lpusList[i].addressPoint[j].terCode == lpusListXml[i].addressPoint[j].terCode.toString()
		}
			//Проверка существования параметра terName
		if(lpusList[i].addressPoint[j].terName == null){
			testRunner.fail("В ответе отсутствует параметр terName")
		}
		else {
			assert lpusList[i].addressPoint[j].terName == lpusListXml[i].addressPoint[j].terName.toString()
		}
		if(lpusList[i].addressPoint[j].arSpecialityId.size() > 1){
			testRunner.fail("В ответе вернулось больше одной специальности")
		}
		else{
			//Сравнение значений в массиве arSpecialityId
			//полученного в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
			for (int k=0; k &lt; lpusList[i].addressPoint[j].arSpecialityId.size(); k++){
				assert lpusList[i].addressPoint[j].arSpecialityId[k] == 	lpusListXml[i].addressPoint[j].arSpecialityId[k].toInteger()
			}
		}	
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7793899793001224</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2001-06-06</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394395/getLpusForVaccination</con:value></con:property><con:property><con:name>specId</con:name><con:value>2011</con:value></con:property></con:properties></con:testCase><con:testCase id="418fa7d7-cbf5-44a9-8c2e-60f66930d4a5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Получить список ЛПУ только с обязательными параметрами и одним arSpecialityId. 394395" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="678763f8-0bf5-4bc0-838b-b7bd1c114d37"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Mock-saOrchestrator" value="${#Project#mockUrl}/mock/394392" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="48245267-2717-4c38-ba59-808281286d99"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import groovy.sql.Sql

path = testRunner.testCase.getPropertyValue("path")
//подключиться к бд 
connection =testRunner.testCase.testSuite.project.getPropertyValue("mockDbFullConnection")
sql = Sql.newInstance(connection)

ResponseJson = context.expand('${getLpusForVaccinations POST#Response}')
ResponseJsonParsed = new JsonSlurper().parseText(ResponseJson)

query="select response from template_response where \"path\"= '"+path+"'"
def response = sql.firstRow(query).response

lpusList = ResponseJsonParsed.payload.lpu
lpusListXml = new XmlSlurper().parseText(response)
//Сравнение параметров getLpusForVaccinations и мока
assert lpusList.lpuId.join() == lpusListXml.Body.getLpusForVaccinationResponse.lpu.lpuId.toString()
assert lpusList.shortName.join() == lpusListXml.Body.getLpusForVaccinationResponse.lpu.shortName.toString()
//Проверка существования параметра terCode
if(lpusList[0].addressPoint[0].terCode != null){
	testRunner.fail("В ответе вернулся параметр terCode")
}
//Проверка существования параметра terName
if(lpusList[0].addressPoint[0].terName != null){
	testRunner.fail("В ответе вернулся параметр terName")
}
if(lpusList[0].addressPoint[0].arSpecialityId.size() &lt; 1){
	testRunner.fail("В ответе вернулось меньше одной специальности")
}
else{
	//Сравнение значений в массиве arSpecialityId
	//полученного в ответах getLpusForVaccinations и моке
	for (i=0; i&lt;lpusList[0].addressPoint[0].arSpecialityId.size(); i++){
		assert lpusList[0].addressPoint[0].arSpecialityId[i].toString() == lpusListXml.Body.getLpusForVaccinationResponse.lpu.addressPoint.arSpecialityId[i].toString()
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7793899793001224</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2001-06-06</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394392/getLpusForVaccination</con:value></con:property></con:properties></con:testCase><con:testCase id="228748f9-e8b5-4d29-a283-420c62cf14d4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Получить список ЛПУ без передачи specialityId со всеми необязательными параметрами и несколькими arSpecialityId. 394392" searchProperties="true"><con:settings/><con:testStep type="request" name="getLpusForVaccinations SOAP" id="6471666f-5f78-4e39-be78-4bd28126e6b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getLpusForVaccination</con:operation><con:request name="getLpusForVaccinations SOAP" id="173c61f8-3ca1-41cf-939c-3a3003fb146b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#saOrchestratorCovidEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
   <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:getLpusForVaccination>
         <omsNumber>${#TestCase#omsNumber}</omsNumber>
         <birthDate>${#TestCase#birthDate}</birthDate>
         <externalSystemId>EIM</externalSystemId>
      </v5:getLpusForVaccination>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="Valid HTTP Status Codes" id="dcb6d219-1055-4cd6-b22f-780722534ae2" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="8336cc35-8fe1-485b-adb7-0e274a40a709"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Сравнить ответ" id="386cbfd7-1efd-456e-963b-4a8d01f2e4e7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import groovy.sql.Sql

path = testRunner.testCase.getPropertyValue("path")
//подключиться к бд 
connection =testRunner.testCase.testSuite.project.getPropertyValue("mockDbFullConnection")
//sql = Sql.newInstance(connection)

ResponseJson = context.expand('${getLpusForVaccinations POST#Response}')
ResponseJsonParsed = new JsonSlurper().parseText(ResponseJson)

ResponseXML = context.expand('${getLpusForVaccinations SOAP#Response}')
ResponseXMLParsed = new XmlSlurper().parseText(ResponseXML)

lpusList = ResponseJsonParsed.payload.lpu
lpusListXml = ResponseXMLParsed.Body.getLpusForVaccinationResponse.lpu

//Сравнение количества полученных объектов 
//в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
assert lpusList.size() == lpusListXml.size()

//Сравнение параметров каждого объекта
//в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
for(int i=0; i &lt; lpusList.size(); i++){
	assert lpusList[i].lpuId== lpusListXml[i].lpuId.toLong()
	assert lpusList[i].shortName.trim() == lpusListXml[i].shortName.toString()
	assert lpusList[i].addressPoint.size() == lpusListXml[i].addressPoint.size()
	//Сравнение параметров каждого объекта addressPoint
	//полученного в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
	for (int j=0; j &lt; lpusList[i].addressPoint.size(); j++){
		assert lpusList[i].addressPoint[j].addressPointId == lpusListXml[i].addressPoint[j].addressPointId.toInteger()
		assert lpusList[i].addressPoint[j].addressString == lpusListXml[i].addressPoint[j].addressString.toString()
		//Проверка существования параметра terCode
		if(lpusList[i].addressPoint[j].terCode == null){
			testRunner.fail("В ответе отсутствует параметр terCode")
		}
		else{
			assert lpusList[i].addressPoint[j].terCode == lpusListXml[i].addressPoint[j].terCode.toString()
		}
			//Проверка существования параметра terName
		if(lpusList[i].addressPoint[j].terName == null){
			testRunner.fail("В ответе отсутствует параметр terName")
		}
		else {
			assert lpusList[i].addressPoint[j].terName == lpusListXml[i].addressPoint[j].terName.toString()
		}
		if(lpusList[i].addressPoint[j].arSpecialityId.size() &lt; 1){
			testRunner.fail("В ответе вернулось больше одной специальности")
		}
		else{
			//Сравнение значений в массиве arSpecialityId
			//полученного в ответах getLpusForVaccinations и getLpusFirVaccinations SACovid
			for (int k=0; k &lt; lpusList[i].addressPoint[j].arSpecialityId.size(); k++){
				assert lpusList[i].addressPoint[j].arSpecialityId[k] == 	lpusListXml[i].addressPoint[j].arSpecialityId[k].toInteger()
			}
		}	
	}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7793899793001224</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2001-06-06</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394395/getLpusForVaccination</con:value></con:property></con:properties></con:testCase><con:testCase id="445ca304-4b0b-4906-b58f-f11e56511364" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС1. Ошибка SA_PATIENT_NOT_FOUND. 394387" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="40c743f5-f4aa-4e0b-b0e6-529a9e62bdb1"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 404"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="code=SA_PATIENT_NOT_FOUND"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="description=Пациент с указанным ОМС не найден"><con:configuration><path>$.error.description</path><content>Пациент с указанным ОМС не найден</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="type=BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>779389979300122</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>2001-06-06</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394395/getLpusForVaccination</con:value></con:property></con:properties></con:testCase><con:testCase id="f7f8fa5d-4649-42b0-a3b6-a86b546faebc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС2. Ошибка SA_PATIENT_HAS_NO_VALID_OMS. 394386" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations POST" id="79288fab-84aa-4857-85c0-1933b648bd03"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations POST" id="461d56ab-c615-456a-bf05-f0e95d26c367" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
    "omsNumber" : "${#TestCase#omsNumber}",
    "birthDate": "${#TestCase#birthDate}"
}</con:request><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26308a7b-97ac-418d-8f61-d468d5808f36" name="Код ответа 400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="code=SA_PATIENT_HAS_NO_VALID_OMS"><con:configuration><path>$.error.code</path><content>SA_PATIENT_HAS_NO_VALID_OMS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="description=Пациент не имеет действительного полиса ОМС"><con:configuration><path>$.error.description</path><content>Пациент не имеет действительного полиса ОМС</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5f43451-51c6-4da4-9c3f-060e6550a091" name="type=BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value>7751100890001278</con:value></con:property><con:property><con:name>birthDate</con:name><con:value>1998-08-02</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/394395/getLpusForVaccination</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>saOrchestratorCovidEndpoint</con:name><con:value>http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService</con:value></con:property><con:property><con:name>saOrchestratorCovidDbConnection</con:name><con:value/></con:property><con:property><con:name>saOrchestratorCovidDbLogin</con:name><con:value/></con:property><con:property><con:name>saOrchestratorCovidDbPassword</con:name><con:value/></con:property><con:property><con:name>saOrchestratorCovidFullDbConnection</con:name><con:value/></con:property><con:property><con:name>emiasInfoEndpoint</con:name><con:value>http://application-emiasinfo2.emias.solit-clouds.ru</con:value></con:property><con:property><con:name>emiasInfoDbConnection</con:name><con:value>172.17.5.11:29103/emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDbLogin</con:name><con:value>emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDbPassword</con:name><con:value>emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoFullDbConnection</con:name><con:value>jdbc:postgresql://172.17.5.11:29103/emiasinfoapp?user=emiasinfoapp&amp;password=emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>suppDbConnection</con:name><con:value>@//10.2.172.242:1521/emiasdb</con:value></con:property><con:property><con:name>suppDbLogin</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>suppDbPassword</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>suppFullDbConnection</con:name><con:value> jdbc:oracle:thin:EMIAS_CLUSTER/EMIAS_CLUSTER@//10.2.172.242:1521/emiasdb</con:value></con:property><con:property><con:name>suppDBDriver</con:name><con:value>oracle.jdbc.driver.OracleDriver</con:value></con:property><con:property><con:name>Mock</con:name><con:value>http://application-mock.emias.solit-clouds.ru/mock</con:value></con:property><con:property><con:name>mockUrl</con:name><con:value>http://application-mock.emias.solit-clouds.ru</con:value></con:property><con:property><con:name>mockDbFullConnection</con:name><con:value>jdbc:postgresql://172.17.5.19:29107/emias_info_mock?user=emias_info&amp;password=emias_info</con:value></con:property><con:property><con:name>env</con:name><con:value>solit2</con:value></con:property><con:property><con:name>emiasInfoNotificationsEndpoint</con:name><con:value>http://notification-emiasinfo2.emias.solit-clouds.ru</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbConnection</con:name><con:value>172.17.5.11:29216/notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbLogin</con:name><con:value>notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbPassword</con:name><con:value>notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsFullDbConnection</con:name><con:value>jdbc:postgresql://172.17.5.11:29216/notification?user=notification&amp;password=notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>topicAppointment2Bm</con:name><con:value>Appointment2Bm.EMIASINFO_SOLIT_TEST_2</con:value></con:property><con:property><con:name>topicAppointment2Doctor</con:name><con:value>Appointment2Doctor.EMIASINFO_SOLIT_TEST_2</con:value></con:property><con:property><con:name>topicAppointment2Ldp</con:name><con:value>Appointment2Ldp.EMIASINFO_SOLIT_TEST_2</con:value></con:property><con:property><con:name>topicBookingRecipeInfoMessage</con:name><con:value>BookingRecipeInfoMessage.EMIASINFO_SOLIT_TEST_2</con:value></con:property><con:property><con:name>topicMedicationAssignmentChangesPerDay</con:name><con:value>MedicationAssignmentChangesPerDay.EMIASINFO_SOLIT_TEST_2</con:value></con:property><con:property><con:name>topicKisNazToEmiasPublication</con:name><con:value>kisNazToEmiasPublication.EMIASINFO_SOLIT_TEST_2</con:value></con:property><con:property><con:name>topicTmkNotify</con:name><con:value>tmkNotify.EMIASINFO_SOLIT_TEST_2</con:value></con:property><con:property><con:name>bootstrapServers</con:name><con:value>10.2.172.24:9092</con:value></con:property><con:property><con:name>topicKIS_appointment_reminder</con:name><con:value>KIS_appointment_reminder.EMIASINFO_SOLIT_TEST_2</con:value></con:property><con:property><con:name>topicKIS_appointment_changer</con:name><con:value>KIS_appointment_changer.EMIASINFO_SOLIT_TEST_2</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>