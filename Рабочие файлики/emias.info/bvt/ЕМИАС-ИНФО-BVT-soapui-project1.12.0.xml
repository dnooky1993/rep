<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="5385851b-ef3d-4b3d-877e-5177f5821181" activeEnvironment="Default" name="ЕМИАС.ИНФО BVT 1.12.0" resourceRoot="${projectDir}" soapui-version="5.7.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="1f880b98-d383-4a9a-b275-28c324b0d56c" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://emiasinfo-application.test.emias.mos.ru" type="rest" basePath="" definitionUrl="C:\Users\ekomarova\Desktop\Проекты\емиас инфо\_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ekomarova/Desktop/Проекты/емиас%20инфо/_1.wadl"><con:part><con:url>file:/C:/Users/ekomarova/Desktop/Проекты/емиас%20инфо/_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="http://emiasinfo-application.test.emias.mos.ru"/>
  <resources base="http://emiasinfo-application.test.emias.mos.ru">
    <resource path="api/v2/config" id="config">
      <doc xml:lang="en" title="config"/>
      <method name="GET" id="getConfig">
        <doc xml:lang="en" title="getConfig"/>
        <request/>
        <response status="204">
          <representation mediaType=""/>
        </response>
        <response status="200">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint></con:endpoints><con:resource name="config" path="/v2/config" id="a45fcc67-1691-474e-bff0-8ed3a807d1a0"><con:settings/><con:parameters/><con:method name="getConfig" id="c1294e9c-20e4-4823-924b-e5fdfd557812" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="7a3e5655-a957-4b45-96d6-03458f2a7f18" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://emias.info/api-ng/</con:endpoint><con:request/><con:originalUri>https://emias.info/api-ng//v2/config</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getAssignmentsInfo" path="/v2/saOrchestrator/getAssignmentsInfo" id="d0c180f7-eb93-48b0-8b10-674925858534"><con:settings/><con:parameters/><con:method name="Method 1" id="23e81357-0cfd-487b-99b6-110a3315fec6" method="POST"><con:settings/><con:parameters/><con:request name="getAssignmentsInfo" id="f35597c1-c723-40e2-9cc2-c810b08bc854" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getLpusForVaccinations" path="/v2/saOrchestratorCovid/getLpusForVaccinations" id="21718f40-c18d-4469-8214-b4cf13b881ab"><con:settings/><con:parameters><con:parameter><con:name>omsNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="457be6bc-480a-41af-ad5a-ae24023eebcd" method="GET"><con:settings/><con:parameters/><con:request name="getLpusForVaccinations" id="d6c8f511-214f-4305-afd5-77fdfef20d25" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="121212"/>
  <con:entry key="birthDate" value="2040-01-02"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="aggregators" path="/v2/prescription/aggregators" id="2b8abab4-b143-44aa-92d7-a5c2a8d16c44"><con:settings/><con:parameters/><con:method name="Method 1" id="483dd022-fb11-4310-9ac2-384115147d72" method="GET"><con:settings/><con:parameters/><con:request name="getAggregators" id="e92e6197-8505-4fbf-95ca-0427f18b82b6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="lpuScheduleInfo" path="/v2/policy/lpuScheduleInfo" id="4fef3d96-6b2c-4732-811a-8fa5252fa6e8"><con:settings/><con:parameters><con:parameter><con:name>lpuId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="67d4c698-be92-4f20-a64a-be669e64b3f2" method="GET"><con:settings/><con:parameters/><con:request name="lpuScheduleInfo" id="c77f3b9f-8011-46a7-979e-a1e959523de8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/policy/lpuScheduleInfo</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="lpuId" value="204" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>lpuId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="policy" path="/v2/policy" id="16238475-c6b6-412b-b0ea-c9897976cf08"><con:settings/><con:parameters/><con:method name="Method 1" id="1b42ef76-31ac-4558-bc24-90dbdbb20410" method="POST"><con:settings/><con:parameters/><con:request name="POST policy" id="da038c25-91a8-44d8-8c1e-c74cf69547c0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{\r
   "omsNumber" : "string",\r
   "birthDate" : "2023-05-29",\r
   "typeAttach" : [\r
      0\r
   ],\r
   "onlyMoscowPolicy" : true\r
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/policy</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getInquiryPurpose" path="/v2/inquiryPurpose/getInquiryPurpose" id="26d298be-7344-46e2-a7ae-007ad8efe4ae"><con:settings/><con:parameters><con:parameter><con:name>omsNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="e2be3de5-af44-42c9-b23d-da21f9a59b03" method="GET"><con:settings/><con:parameters/><con:request name="getInquiryPurpose" id="b0a10734-eb7a-4330-bfb5-cc4b23dfc190" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="1"/>
  <con:entry key="birthDate" value="2040-01-01"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getLink" path="/v2/inquiryPurpose/getLink" id="e02f08c3-5815-476a-adfe-d57d0974257d"><con:settings/><con:parameters><con:parameter><con:name>appointmentId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>positionNomCode </con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="ede92f7f-40c8-4927-802e-fd5a2520692f" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="387bbba2-e7b9-43b0-a1a8-5b92f29d8209" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/inquiryPurpose/getLink</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="positionNomCode " value="1"/>
  <con:entry key="patientId" value="1"/>
  <con:entry key="appointmentId" value="1"/>
</con:parameters><con:parameterOrder><con:entry>appointmentId</con:entry><con:entry>patientId</con:entry><con:entry>positionNomCode </con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="saCount" path="/v3/mainPage/saCount" id="42da56ca-e7dd-4130-a128-d38efe8b43eb"><con:settings/><con:parameters><con:parameter><con:name>omsNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="0e9e3f07-a102-417d-bfe3-21f95e768b9a" method="GET"><con:settings/><con:parameters/><con:request name="saCount" id="b484868b-eb1a-40e0-b5ed-2f3b91502448" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v3/mainPage/saCount</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="1"/>
  <con:entry key="birthDate" value="2040-01-01"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="save" path="/v2/covidTest/save" id="f2d82bec-d9c8-47c5-9c68-7fa4feb0f21b"><con:settings/><con:parameters/><con:method name="Method 1" id="be5f780d-fcb5-452a-835b-99494a3c06fc" method="POST"><con:settings/><con:parameters/><con:request name="save" id="de2eafab-d63f-4102-8866-9176b202d067" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "patient": {
    "policyNumber": "string",
    "snils": "string",
    "document": {
      "documentTypeId": "1",
      "series": "string",
      "num": "string",
      "issueDate": "2023-05-29",
      "issuedBy": "string"
    },
    "secondName": "string",
    "firstName": "string",
    "middleName": "string",
    "brithDate": "2023-05-29",
    "gender": "string",
    "phone": "string",
    "address": {
      "flat": "string",
      "text": "string",
      "fiasId": "string"
    }
  }
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/covidTest/save</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="createRequest" path="/v2/support/createRequest" id="8526db21-cad6-4f36-971f-680382164d9f"><con:settings/><con:parameters><con:parameter><con:name>omsNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>email</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>fio</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>description</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>productVersion</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>deviceName</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>osName</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>requestCategory</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="84a1448b-2c71-4893-ad14-7cf145c3dda6" method="POST"><con:settings/><con:parameters/><con:request name="createRequest" id="6e104b05-4629-4b9b-b726-c922b67087ca" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/support/createRequest</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="productVersion" value="2"/>
  <con:entry key="omsNumber" value="2"/>
  <con:entry key="description" value="w"/>
  <con:entry key="requestCategory" value="1"/>
  <con:entry key="osName" value="w"/>
  <con:entry key="fio" value="2"/>
  <con:entry key="deviceName" value="1"/>
  <con:entry key="birthDate" value="2040-01-01"/>
  <con:entry key="email" value="2"/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>email</con:entry><con:entry>fio</con:entry><con:entry>description</con:entry><con:entry>productVersion</con:entry><con:entry>deviceName</con:entry><con:entry>osName</con:entry><con:entry>requestCategory</con:entry><con:entry>accept</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getCalendar" path="/v4/calendar/getCalendar" id="5ba57f32-e57a-4c35-89ab-bb4fa09d9e88"><con:settings/><con:parameters><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="32a53424-4187-4d1b-92f7-721b82d99461" method="GET"><con:settings/><con:parameters/><con:request name="getCalendar" id="d25d94e5-fb59-4b0e-a008-9eae43a8a43b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v4/calendar/getCalendar</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="1"/>
  <con:entry key="EI-Token" value="1"/>
  <con:entry key="ehrId" value="1"/>
  <con:entry key="birthDate" value="2040-01-01"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>EI-Token</con:entry><con:entry>ehrId</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="env" path="/actuator/env" id="7bcbd3d3-320c-40a4-8e63-e6445726363c"><con:settings/><con:parameters/><con:method name="Method 1" id="5232412c-afa5-47c5-bdba-18dee21277d8" method="GET"><con:settings/><con:parameters/><con:request name="get env" id="9763043e-4ece-4343-b6e3-88d0ec972d17" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEnvEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/actuator/env</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="get env солит1" id="9763043e-4ece-4343-b6e3-88d0ec972d17" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru/</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/actuator/env</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="get env тест" id="9763043e-4ece-4343-b6e3-88d0ec972d17" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://application.emiasinfo-services.test.emias.mos.ru/</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/actuator/env</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="shortProgram" path="/v3/pdn/shortProgram" id="5294692d-afc5-4291-8ebe-555be99183f3"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="b1832b73-42ba-45f6-b333-96139e2f79b1" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="dfa3ba72-1ff9-4df7-b567-2de3240cdf63" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://srv-prpkubep1-emiasinfo-app.mosgorzdrav.local/api/v3/pdn/shortProgram</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="1"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getInquiryPurpose" path="/v2/inquiryPurpose/getInquiryPurpose" id="37901505-757d-4885-aef6-6b70e8a29c80"><con:settings/><con:parameters><con:parameter><con:name>omsNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>isChatBotEnabled</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="3495c0ee-2f43-411c-b1ec-5084d12f7816" method="GET"><con:settings/><con:parameters/><con:request name="getInquiryPurpose" id="31c13985-d8bf-466d-b81d-3b906f3aed89" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="1"/>
  <con:entry key="isChatBotEnabled" value="1"/>
  <con:entry key="birthDate" value="1"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry><con:entry>isChatBotEnabled</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getLink" path="/v2/inquiryPurpose/getLink" id="530b6242-0652-4872-9e0e-7fe5d46428d6"><con:settings/><con:parameters><con:parameter><con:name>appointmentId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>positionNomCode</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="0e4d0e76-f80f-46e0-856b-e53ffea51207" method="GET"><con:settings/><con:parameters/><con:request name="getLink" id="e1a36978-027a-4dd9-99fa-bbe8be01a557" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appointmentId</con:entry><con:entry>patientId</con:entry><con:entry>positionNomCode</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="list" path="/v4/archiveAppointment/list" id="3ae5fc2f-87b4-4952-8200-f1ac6c94debe"><con:settings/><con:parameters/><con:method name="Method 1" id="a8f81968-12b3-4721-baaa-1ee8f1685a5c" method="POST"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:request name="archiveAppointment" id="98c553d6-4029-4b0a-9a5e-28dda04a9d01" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "2023-05-30",
  "omsNumber": "7700002085624106",
  "pagingOptions": {
    "pageNumber": 0,
    "pageTotal": 0,
    "pageSize": 0,
    "morePagesAvailable": true,
    "totalItemsCount": 0
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="lifeAnamnesisKind" path="/v3/anamnesis/lifeAnamnesisKind" id="9c4a87c6-2f86-4f67-968f-a5d1b8abe7bf"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="7f96d67b-6d46-4b10-a9ea-c8aa5c10cd68" method="GET"><con:settings/><con:parameters/><con:request name="lifeAnamnesisKind" id="d36e0e21-ac71-46f0-8f75-5886d8256bfb" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>ehrId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="diaries" path="/v3/lkPatient/diaries" id="e419f9cd-6d16-44fa-9003-6751b94494f7"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="7b9b7704-e871-4fc9-a888-b034cc7a6d3e" method="GET"><con:settings/><con:parameters/><con:request name="diaries" id="03dc2704-3b3e-44b5-a0f0-76e6bb7ddf50" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>ehrId</con:entry><con:entry>X-Access-JWT</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="info" path="/v3/certificates/info" id="1e0a117a-8521-4369-9382-2440f49ecb21"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>conclusionId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="fd776691-ff28-43a5-8fc8-47456740276f" method="GET"><con:settings/><con:parameters/><con:request name="getCertificateInfo" id="7b56de27-89e0-4a3c-bfa7-9b6f9413cf2b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry><con:entry>conclusionId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="acquireRemoteId" path="/v3/bzhd/acquireRemoteId" id="b2fcda5d-df8b-451f-aa29-22ba7d8aec3b"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>oms</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="22c6b20d-0618-492d-b7b5-659540bd4ea7" method="GET"><con:settings/><con:parameters/><con:request name="GET acquireRemoteId" id="506aa9d0-2bc6-451d-973e-a23c2c4d3e7b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>oms</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:request><con:request name="Copy of GET acquireRemoteId" id="506aa9d0-2bc6-451d-973e-a23c2c4d3e7b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://emias.info/api-ng</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>oms</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="empty" path="/v2/selfControl/selfControl/empty" id="3fc336af-c52f-4e68-9083-9587aad62409"><con:settings/><con:parameters><con:parameter><con:name>EI-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>diagnosisCode</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="d9349d85-b8bf-4358-9dc4-8290e4cce725" method="GET"><con:settings/><con:parameters/><con:request name="GET selfControl/empty" id="ffb149a6-6cc3-471c-9fdc-159d2e735950" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-token</con:entry><con:entry>ehrId</con:entry><con:entry>diagnosisCode</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="additionalSections" path="/v2/medicalCard/additionalSections" id="df2cccd7-9f61-4f9d-a33d-baa1194f350b"><con:settings/><con:parameters><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EI-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="72825ef5-d63f-469e-a7f0-f41df70c5d0f" method="GET"><con:settings/><con:parameters/><con:request name="GET additionalSections" id="0772259b-d305-492b-8ee2-0c4ea46049e2" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>EI-token</con:entry><con:entry>ehrId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="lifeAnamnesis" path="/v3/anamnesis/lifeAnamnesis" id="6572e177-8b60-4339-93a7-7d101a4cb64d"><con:settings/><con:parameters><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EI-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="70a77257-8e7d-4666-97d5-f0a21da93703" method="GET"><con:settings/><con:parameters/><con:request name="getlifeAnamnesis" id="a4a45978-e5db-4e3e-b28b-413a85160e1b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>ehrId</con:entry><con:entry>EI-token</con:entry><con:entry>X-Access-JWT</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="checkSelfControl" path="/v2/selfControl/checkSelfControl" id="db6db08a-c79a-4d97-89ab-b9da12b99e61"><con:settings/><con:parameters><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="9971d1c8-28f2-414b-9811-87d71e3fb289" method="GET"><con:settings/><con:parameters/><con:request name="checkSelfControl" id="cf07f7c0-03de-4a46-99f7-c8cf0f1c5dcd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="save" path="/v2/covidTest/save" id="703285ef-2d09-4f14-aa54-be19c6590130"><con:settings/><con:parameters/><con:method name="Method 1" id="6a4cbb7d-04c2-4433-a7e3-78c539dbaa5d" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="9544dc56-2e1e-4894-af07-32f799266803" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://emias.info/api-ng</con:endpoint><con:request>{
  "patient": {
    "policyNumber": "12",
    "secondName": "string",
    "firstName": "string",
    "middleName": "string",
    "brithDate": "2023-05-29",
    "gender": "Ж",
    "phone": "string",
    "address": {
      "flat": "string",
      "text": "string",
      "fiasId": "string"
    }
  }
}</con:request><con:originalUri>https://emias.info/api-ng/v2/covidTest/save</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getDialog" path="/v2/chatBot/getDialog" id="9693c282-3e8a-4393-924d-6c5d6a8e8f99"><con:settings/><con:parameters/><con:method name="Method 1" id="cc9f0f04-6300-4e18-96cc-ca25b57557be" method="POST"><con:settings/><con:parameters/><con:request name="getDialog" id="5b5c87c4-a6a7-496f-b20e-67062d6429d2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request>{
  "complaints": "Больно в душе",
  "hash": "1234"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="hospitalizations" path="/v2/hospitalization/hospitalizations" id="33f3eab0-78e2-4c83-863e-aff1feec3c48"><con:settings/><con:parameters><con:parameter><con:name>EI-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="4cd54e89-58e6-4e2f-a8e3-a8e540913e6c" method="POST"><con:settings/><con:parameters/><con:request name="hospitalizations" id="a894dbb7-6331-420e-84bc-13c94e846ba0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://application.emiasinfo-services.test.emias.mos.ru/api</con:endpoint><con:request>{
  "patientId": 16978778,
  "pagingOptions": {
    "pageNumber": 0,
    "pageSize": 30
  }
}</con:request><con:originalUri>http://application.emiasinfo-services.test.emias.mos.ru/api/v2/hospitalization/hospitalizations</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="10766700" path="/v2/medication/regime/{patientId}" id="072813fb-e78f-488e-b094-633c22826f6a"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EI-token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="bdb9e2ff-fbba-4d3a-805c-5ec7123b7d6d" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="62a7284b-4e0b-46bc-8620-88a35381688d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application.emiasinfo-services.test.emias.mos.ru/api/v2/medication/regime/10766700</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="10766700"/>
  <con:entry key="EI-token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getLpuList" path="/v2/pin/getLpuList" id="8b13a352-e29e-4dc4-a9c8-49f9f55e267c"><con:settings/><con:parameters/><con:method name="Method 1" id="f872de1c-95c1-4c1a-a1e7-126214b1d5c4" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="c12b955a-330a-4403-bdc7-fdd30d56b8fa" mediaType="application/json"><con:settings/><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="sendAnswer" path="/v2/chatBot/sendAnswer" id="a97a776a-5c2f-4a37-a75a-d8428ca26ab9"><con:settings/><con:parameters/><con:method name="Method 1" id="0f406651-e9d0-4701-be51-26e6ac8ffee8" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="97afd512-7b26-4fe0-8b88-7e52116f433f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="ticketNumber" path="/v2/queue/ticketNumber" id="e782d077-1e2f-4247-a22c-7fb8e6724a57"><con:settings/><con:parameters><con:parameter><con:name>appointmentId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>lpuId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="351212d5-c270-4a90-a522-175c93bead55" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="b34af4e2-1121-49ed-b12e-bd82cede588f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo4.emias.solit-clouds.ru</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/queue/ticketNumber</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="appointmentId" value="1234"/>
  <con:entry key="lpuId" value="204"/>
  <con:entry key="lpuId " value="204"/>
</con:parameters><con:parameterOrder><con:entry>appointmentId</con:entry><con:entry>lpuId</con:entry><con:entry/></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getMemo" path="/v3/saOrchestrator/getMemo" id="490bf681-9684-486d-a69a-7c449b078805"><con:settings/><con:parameters/><con:method name="Method 1" id="d9c265d7-affe-43ea-8c76-8cc3def68f4e" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="28085547-0f77-49b9-b343-301cf6be9399" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "request": [
    {
      "laboratoryId": 1
    }
  ]
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getLink" path="/v3/inquiryPurpose/getLink" id="fd978828-88b5-42c3-97a6-c341b48ffaca"><con:settings/><con:parameters><con:parameter><con:name>appointmentId</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter><con:parameter><con:name>patientId</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter><con:parameter><con:name>positionNomCode</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="4e59fc45-b84c-45bc-aa6a-25528250c420" method="GET"><con:settings/><con:parameters/><con:request name="getLink" id="eba518b8-19c8-46da-90bc-69e2ff5253f7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru/api/</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/v2/inquiryPurpose/getLink</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>appointmentId</con:entry><con:entry>patientId</con:entry><con:entry>positionNomCode</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="receiveConsent" path="/v2/tmk/receiveConsent" id="48dfc12b-7164-4dbf-81d0-b7bf48990e44"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="234cdea1-15a1-4037-9190-7cae30ec24b1" method="GET"><con:settings/><con:parameters/><con:request name="reciveConsent" id="c496fc2f-47b5-4c01-904a-5217a7f7d0ce" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>patientId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="foodGetDetails" path="/v1/freefood/foodGetDetails" id="edf1aa93-d643-4385-af1f-214358685b16"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="419e1235-8793-4d95-98f7-1973ca212c0d" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="7d3b7f46-d61e-4e35-a48e-6feecf5979c6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "prescriptionNumber": "231",
  "omsNumber": "4564"
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/v1/freefood/foodGetDetails</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="TbPs-tOE928Ja2iShf1bTzle8eovdY9940iJ8ASe5Pg" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="foodGetList" path="/v1/freefood/foodGetList" id="56e295b2-7c59-4c25-aa26-b03ae4d449f4"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="3a9bee89-bd8f-4a81-98c8-04098ee322aa" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="ba2ff2c1-e170-4e1e-be9f-e4ca3b18a86f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "mode": "active",
  "omsNumber": "6839988278036"
}</con:request><con:originalUri>https://emias.info/api-ng//v1/freefood/foodGetList</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="b5d7d583-292e-4822-83cf-8d3473ce2c24" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://lk-prp.mosmedzdrav.ru" type="rest" basePath="" definitionUrl="C:\Users\ekomarova\Documents\_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ekomarova/Documents/_1.wadl"><con:part><con:url>file:/C:/Users/ekomarova/Documents/_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="https://login-tech.mos.ru"/>
  <resources base="https://login-tech.mos.ru">
    <resource path="sps/oauth/register" id="register">
      <doc xml:lang="en" title="register"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
          <representation mediaType="application/json"/>
          <representation mediaType="application/json"/>
          <representation mediaType="application/json"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="201">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="sps/oauth/te" id="te">
      <doc xml:lang="en" title="te"/>
      <param name="code" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="redirect_uri" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="grant_type" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="refresh_token" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/x-www-form-urlencoded"/>
        </request>
        <response status="">
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
        </response>
        <response status="400">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json"/>
        </response>
      </method>
      <method name="POST" id="Обновить токен">
        <doc xml:lang="en" title="Обновить токен"/>
        <request/>
      </method>
      <method name="GET" id="Обновить токен-1">
        <doc xml:lang="en" title="Обновить токен-1"/>
        <request/>
      </method>
    </resource>
    <resource path="sps/oauth/me" id="me">
      <doc xml:lang="en" title="me"/>
      <param name="Cache-control" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <param name="Authorization" type="xs:string" required="false" default="" style="header" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
        </request>
        <response status="200">
          <representation mediaType="application/json"/>
        </response>
        <response status="401">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint></con:endpoints><con:resource name="life-anamnesis" path="/3/forms/life-anamnesis" id="4dacfbc9-70dd-4531-a004-7dae765a5283"><con:settings/><con:parameters><con:parameter><con:name>ehrId</con:name><con:value>8d075820-b3cb-4fbe-9666-3106776652d2</con:value><con:style>QUERY</con:style><con:default>8d075820-b3cb-4fbe-9666-3106776652d2</con:default></con:parameter><con:parameter><con:name>X-Access-JWT</con:name><con:value>eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJ1c2VyX2F1dGgiLCJleHAiOjQ3NTkwMjY4NDIsImF1ZCI6IlBBVElFTlQiLCJzdWIiOiJiYjVlYjg1OC1lZjc2LTQyOTUtOTg1OS1jOWQ2YTI1MWIzNTAiLCJzaWQiOiJmMzI3NTUyNy1jZTkyLTQ4MGMtODljYy1kMjQ4M2RmMWM4MjEiLCJwaG9uZSI6Ijc5MTU5Njc5MjMwIiwic3NvX2lkIjoiSFlrbGU2WFc3aWZybFQ3d0N1dUswaVo5Um9lUFhtMk5HOTJiVGFMb3dmTUE4UC95dzg1TWkvV3JWSG84OVdEaFdGZ1J0NjZFVTNNQnRRM1NFaGhrcndPT0xqTkZpamNSZVZGMnhlZ1I0RSt3eGdCUzJKUnQzQ1NQNG1RZnc0WUVFSkNQcHJVVUMyS1BCVytja2tIeXQ5d09hUnE0VFFqWjIvd1R0ZEhERXlSczJzWUlNMVdVWlBnYzM5dlJScGZLR012NGtlYWMvZWlycTlQbFRmUFFhdVFkeG5HSjlaRHpRYkFzVU1VTFZiRlcwbTc4S0tSNUp6QUZwbDdZRkV4MW85ZVVUNzBYZEJaRGhmZFZsbGpBK1QreVJJT3BXMlNPWk9FcFZoWUFaOHFUVk90S2NKazA2MGJEbmRZZFVkMWdRMHg2Y2tUMStDZ094UUViZWZpL1l3PT0iLCJlbWFpbCI6Inlhci5wcm9tby56YXBvdi5hQGdtYWlsLmNvbSIsImZpcnN0X25hbWUiOiJcdTA0MjFcdTA0MzVcdTA0NDBcdTA0MzNcdTA0MzVcdTA0MzkiLCJzZWNvbmRfbmFtZSI6Ilx1MDQxMi4iLCJtaWRkbGVfbmFtZSI6Ilx1MDQxMlx1MDQ0Zlx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYlx1MDQzMFx1MDQzMlx1MDQzZVx1MDQzMlx1MDQzOFx1MDQ0NyIsImJpcnRoX2RhdGUiOiIxOTc4LTAzLTIxIn0.dErz7ETQCxAJUOECLgysHVZZPZDQDJvvTQOi8_glDkqiWNaU1QTPKao0eueTw5_ydAE1KuGcGmI1yqeUhYDfp9ZMj97xKv4SYyE3lhdpgaiSALyoiuYcdxUEYj7cJiwZ0Bzjce8GOF__wI76cYKn-mVbZkuxPzRtn1SIvStR-zkiok3kW_Qg6HJFTP7mF1T_Z4p7OILvPYtErbJJHWJ-pVOLMjQYfk2RCjWJesIEuWs2sLr953xhQeodp-bBIYZCjCvxUSEgsHXNMkCvoRkujm9kpJFVHMgKYuwqmiHbZ6B7_3DuOiRsRRWrPJwn2dXZUwhlhzsutwCfIBE13SbfJqO9w14ud_GWrPsofO8T4j7UiGwTvzxXVycJZMMU6XElz35aQRGRVNV53NUQWCc2DqBlmsWHjW8Lg__A5NEjkgDPiRYKWp_Gdz9_I4YQY3x0ZFPIToUNFx2Lt8ei5zcLGL5hzvSdelUzmz0QirECbejcDJdXS8HxEe-XsCDLSh51hwweEpJILfdG4AlWhHFh9_NuKI-zoFx_48wB4d0-miMaxtiscQR1_0IwQFO0kujoMyIn432fPU2waJOjj41_SgX3AQsMPn3FQk4gV8MrHU9vfAoROXrBSbMS7ty5rwWczYdaijFYrNpsUprBRtL7EFSWgRnvFOU7ekNoy_AzpfA</con:value><con:style>HEADER</con:style><con:default>eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJ1c2VyX2F1dGgiLCJleHAiOjQ3NTkwMjY4NDIsImF1ZCI6IlBBVElFTlQiLCJzdWIiOiJiYjVlYjg1OC1lZjc2LTQyOTUtOTg1OS1jOWQ2YTI1MWIzNTAiLCJzaWQiOiJmMzI3NTUyNy1jZTkyLTQ4MGMtODljYy1kMjQ4M2RmMWM4MjEiLCJwaG9uZSI6Ijc5MTU5Njc5MjMwIiwic3NvX2lkIjoiSFlrbGU2WFc3aWZybFQ3d0N1dUswaVo5Um9lUFhtMk5HOTJiVGFMb3dmTUE4UC95dzg1TWkvV3JWSG84OVdEaFdGZ1J0NjZFVTNNQnRRM1NFaGhrcndPT0xqTkZpamNSZVZGMnhlZ1I0RSt3eGdCUzJKUnQzQ1NQNG1RZnc0WUVFSkNQcHJVVUMyS1BCVytja2tIeXQ5d09hUnE0VFFqWjIvd1R0ZEhERXlSczJzWUlNMVdVWlBnYzM5dlJScGZLR012NGtlYWMvZWlycTlQbFRmUFFhdVFkeG5HSjlaRHpRYkFzVU1VTFZiRlcwbTc4S0tSNUp6QUZwbDdZRkV4MW85ZVVUNzBYZEJaRGhmZFZsbGpBK1QreVJJT3BXMlNPWk9FcFZoWUFaOHFUVk90S2NKazA2MGJEbmRZZFVkMWdRMHg2Y2tUMStDZ094UUViZWZpL1l3PT0iLCJlbWFpbCI6Inlhci5wcm9tby56YXBvdi5hQGdtYWlsLmNvbSIsImZpcnN0X25hbWUiOiJcdTA0MjFcdTA0MzVcdTA0NDBcdTA0MzNcdTA0MzVcdTA0MzkiLCJzZWNvbmRfbmFtZSI6Ilx1MDQxMi4iLCJtaWRkbGVfbmFtZSI6Ilx1MDQxMlx1MDQ0Zlx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYlx1MDQzMFx1MDQzMlx1MDQzZVx1MDQzMlx1MDQzOFx1MDQ0NyIsImJpcnRoX2RhdGUiOiIxOTc4LTAzLTIxIn0.dErz7ETQCxAJUOECLgysHVZZPZDQDJvvTQOi8_glDkqiWNaU1QTPKao0eueTw5_ydAE1KuGcGmI1yqeUhYDfp9ZMj97xKv4SYyE3lhdpgaiSALyoiuYcdxUEYj7cJiwZ0Bzjce8GOF__wI76cYKn-mVbZkuxPzRtn1SIvStR-zkiok3kW_Qg6HJFTP7mF1T_Z4p7OILvPYtErbJJHWJ-pVOLMjQYfk2RCjWJesIEuWs2sLr953xhQeodp-bBIYZCjCvxUSEgsHXNMkCvoRkujm9kpJFVHMgKYuwqmiHbZ6B7_3DuOiRsRRWrPJwn2dXZUwhlhzsutwCfIBE13SbfJqO9w14ud_GWrPsofO8T4j7UiGwTvzxXVycJZMMU6XElz35aQRGRVNV53NUQWCc2DqBlmsWHjW8Lg__A5NEjkgDPiRYKWp_Gdz9_I4YQY3x0ZFPIToUNFx2Lt8ei5zcLGL5hzvSdelUzmz0QirECbejcDJdXS8HxEe-XsCDLSh51hwweEpJILfdG4AlWhHFh9_NuKI-zoFx_48wB4d0-miMaxtiscQR1_0IwQFO0kujoMyIn432fPU2waJOjj41_SgX3AQsMPn3FQk4gV8MrHU9vfAoROXrBSbMS7ty5rwWczYdaijFYrNpsUprBRtL7EFSWgRnvFOU7ekNoy_AzpfA</con:default></con:parameter></con:parameters><con:method name="getLifeAnamnesisLK" id="421d30a9-89e6-464e-9415-4d8783c550fb" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="eeed883e-58c5-4c1d-a4a8-5c88d20df841" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="postLifeAnamnesisLK" id="287d106b-b993-408a-960d-3cce026bd41b" method="POST"><con:settings/><con:parameters><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="a05bdceb-d73d-4eeb-901a-23d11584e1ef" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="child-allergy-history" path="/2/forms/history/version/child-allergy-history" id="cb6083d7-1912-4d3d-bb0f-b066fc33afe9"><con:settings/><con:parameters><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>documentId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" id="d4bc0d16-1f30-4db5-babf-320083907bd6" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="b9751c15-3087-4de2-aed7-a34ead848885" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="life-anamnesis" path="/4/forms/life-anamnesis" id="78ebbcc5-572d-4776-8c98-76ed27a1c89b"><con:settings/><con:parameters><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="getLifeAnamnesis" id="ce648741-b932-4199-970d-bdba85a2a4b9" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="dfd9340c-fadd-462b-af96-ad52306c25d3" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="postLifeAnamnesis" id="145518db-df67-4243-87e3-1ff018745333" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="02d2e94b-8fa7-4de5-8345-e7ec76f86177" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="child-allergy-history" path="/1/forms/child-allergy-history" id="917578c8-9041-4b8e-afad-73f617f4c203"><con:settings/><con:parameters><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" id="111184af-5c73-435d-a5b8-beaecd9c16a4" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 401 404 406</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="45180792-cc90-4e74-bd24-d082ca1e4494" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="login" path="/auth/1/login" id="baed5b29-23da-45de-b331-16b781901a92"><con:settings/><con:parameters/><con:method name="Method 1" id="51d41a03-83d9-4f34-aa6d-8e040e47d73d" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="ce904f6e-05bd-4a48-9422-ecdc5319bfae" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Method 1-1" id="fb25e660-8dad-41fd-827f-ceb981845044" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="e6ac0127-f4b1-497d-98b3-fbfbb27ab028" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="confirm" path="/auth/1/confirm" id="fb695f98-1abd-4c59-ae8e-6544ab5f71cc"><con:settings/><con:parameters/><con:method name="Method 1" id="a930d8e5-63ea-4fed-ab04-e76c4f9ffccf" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="595df3c5-b2a0-48fb-aa0a-655f63acb1a5" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="instance" path="/api/2/mobile/auth/instance" id="0c7826f7-fa99-42f5-8b25-3e37e13760f5"><con:settings/><con:parameters/><con:method name="Method 1" id="6675e08a-5f04-4c2a-8b6f-af3f4e1280de" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>520</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="64395630-5f7c-4585-b773-6598132d37ff" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="confirm-instance" path="/api/2/mobile/auth/confirm-instance" id="08bef73a-4638-44bf-8245-ef2ef2124475"><con:settings/><con:parameters/><con:method name="Method 1" id="be2c8c23-3517-42dd-a0a6-2136d8fa6f97" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>520</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="d7c6c302-3f81-4006-9bae-a446423861b4" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="profile" path="/2/profile" id="889c7a79-12a3-4fab-a346-19e76ef05a50"><con:settings/><con:parameters><con:parameter><con:name>ehrId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" id="b5b17473-9d6b-4b4b-a3e3-6848a1e503cb" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="3c6d194b-1112-4f36-9425-e1b99f739b70" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="emc-permissions" path="/api/internal/3/emc-permissions" id="b0ec7980-e222-4221-aa3d-01e2447b73f8"><con:settings/><con:parameters><con:parameter><con:name>ssoId</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" id="6dc7b604-5436-4f46-9ec5-9b868a60f29f" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="38b13575-cbb3-4f37-b485-bc8a957fb4af" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://lk.emias.mos.ru</con:endpoint><con:request/><con:originalUri>https://lk-prp.mosmedzdrav.ru/api/internal/3/emc-permissions</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="9eff3b53-4f98-4aa8-8cd4-f0561518f8a3" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request><con:request name="Copy of Request 1" id="38b13575-cbb3-4f37-b485-bc8a957fb4af" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://lk.emias.mos.ru</con:endpoint><con:request/><con:originalUri>https://lk-prp.mosmedzdrav.ru/api/internal/3/emc-permissions</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="726d32ee-b2de-4ddf-993f-57ca2276ffdf" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="grant-permission" path="/internal/1/user/grant-permission" id="0a4e6f7e-c198-4408-85c8-83bb4c6ad8d8"><con:settings/><con:parameters/><con:method name="Method 1" id="341ecfdd-fc80-4297-ad33-d42c0609c55b" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="719a16b6-e52d-4776-9034-33e3ad84c867" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="refresh" path="/2/mobile/auth/refresh" id="aff75d17-c29c-448b-9cc9-0dcb5412f077"><con:settings/><con:parameters><con:parameter><con:name>refreshToken</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="d2ce38bb-daee-42d2-9ea6-1dbb65597421" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="95b944ab-7387-4be0-98f1-1d2a5f1f7979" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="refreshToken" value="${#Project#refresh-X-Access-JWT}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>refreshToken</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="refresh" path="/api/2/mobile/auth/refresh" id="f48442eb-1d81-4c9d-8cef-91ae52545102"><con:settings/><con:parameters><con:parameter><con:name>refreshToken</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="2a847961-bfb6-4770-849a-31f485b1552d" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="94b29862-8a49-40a0-b00b-951491fa8628" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>refreshToken</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="emc-permissions" path="" id="798def71-a21d-4486-b7a5-bac4400fcf3d"><con:settings/><con:parameters><con:parameter><con:name>ssoId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="e998df53-0dd6-41c4-baae-5ce0fe7bb68c" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="1ae64705-2225-41b6-a086-c5c6e82bd4d4" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="emc-permissions" path="/api/internal/3/emc-permissions" id="bc0c2272-f206-4bfd-a4eb-91d0f53381ee"><con:settings/><con:parameters><con:parameter><con:name>ssoId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="7c0e763a-4ce9-44d0-a90e-19f1a7355f2b" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="82b5e599-4c1c-4370-aaba-456ec7258760" mediaType="application/json"><con:settings/><con:endpoint>https://lk-prp.mosmedzdrav.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="8ed4cce8-f99b-43b8-945d-7c181cef10a9" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://login-tech.mos.ru" type="rest" basePath="" definitionUrl="C:\Users\ekomarova\Documents\_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ekomarova/Documents/_1.wadl"><con:part><con:url>file:/C:/Users/ekomarova/Documents/_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="https://login-tech.mos.ru"/>
  <resources base="https://login-tech.mos.ru">
    <resource path="sps/oauth/register" id="register">
      <doc xml:lang="en" title="register"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/json"/>
        </request>
        <response status="">
          <representation mediaType="application/json"/>
          <representation mediaType="application/json"/>
          <representation mediaType="application/json"/>
          <representation mediaType="application/json"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="201">
          <representation mediaType="application/json"/>
        </response>
      </method>
    </resource>
    <resource path="sps/oauth/te" id="te">
      <doc xml:lang="en" title="te"/>
      <param name="code" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="redirect_uri" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="grant_type" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="refresh_token" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/x-www-form-urlencoded"/>
        </request>
        <response status="">
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
        </response>
        <response status="400">
          <representation mediaType="application/json"/>
        </response>
        <response status="200">
          <representation mediaType="application/json"/>
        </response>
      </method>
      <method name="POST" id="Обновить токен">
        <doc xml:lang="en" title="Обновить токен"/>
        <request/>
      </method>
      <method name="GET" id="Обновить токен-1">
        <doc xml:lang="en" title="Обновить токен-1"/>
        <request/>
      </method>
    </resource>
    <resource path="sps/oauth/me" id="me">
      <doc xml:lang="en" title="me"/>
      <param name="Cache-control" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <param name="Authorization" type="xs:string" required="false" default="" style="header" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
        </request>
        <response status="200">
          <representation mediaType="application/json"/>
        </response>
        <response status="401">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://login-tech.mos.ru</con:endpoint></con:endpoints><con:resource name="register" path="/sps/oauth/register" id="1fa2a98b-14cc-46e2-9315-1470e92fea89"><con:settings/><con:parameters/><con:method name="Method 1" id="5ff7146f-8016-460b-ae57-b8de4402db40" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="f5bffccd-652e-4791-b418-2cf7a295e4a9" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://login-tech.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="te" path="/sps/oauth/te" id="2f3b1b65-9971-452b-97d2-8a0b6f773dd0"><con:settings/><con:parameters><con:parameter><con:name>code</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>grant_type</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>refresh_token</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="1affd6ae-e136-4c19-b914-5ab14b94b466" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="832f0446-0e62-489d-b7e3-67a69d7c82a0" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://login-tech.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>code</con:entry><con:entry>redirect_uri</con:entry><con:entry>grant_type</con:entry><con:entry>refresh_token</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:request></con:method><con:method name="Обновить токен" id="c15e6b5f-a1a2-4117-b72d-e13880211f9b" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="a7191d3c-2b36-4945-a764-7245ac411bbf" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://login-tech.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>code</con:entry><con:entry>redirect_uri</con:entry><con:entry>grant_type</con:entry><con:entry>refresh_token</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:request></con:method><con:method name="Обновить токен-1" id="b93a1606-39af-4e78-ba4f-153c50d733a5" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="0912a880-ce39-4e77-aa0a-416e29e3521b" mediaType="application/json"><con:settings/><con:endpoint>https://login-tech.mos.ru</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>code</con:entry><con:entry>redirect_uri</con:entry><con:entry>grant_type</con:entry><con:entry>refresh_token</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="me" path="/sps/oauth/me" id="cb84f334-3a51-4c58-8c01-58dfff426d4e"><con:settings/><con:parameters><con:parameter><con:name>Cache-control</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" id="0b5fccf0-dcee-4582-9b0f-ef5c212da701" method="GET"><con:settings/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="9a8ba486-db86-4d9a-a55a-3fa76ad8c3ed" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#loginEndpoint}</con:endpoint><con:request/><con:originalUri>https://login-tech.mos.ru/sps/oauth/me</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="Bearer ${#Project#sudirToken}"/>
  <con:entry key="Cache-control" value="no-cache"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="9ca56aa3-d9d2-4ae3-b591-f9333b118147" wsaVersion="NONE" name="SelfAppointmentServiceV5Binding" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/v5/}SelfAppointmentServiceV5Binding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="SelfAppointmentService" targetNamespace="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:api="http://api.service.soap.emias.lanit.ru/v5/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--WSDL контракта 5 (доработки по записи 2-х детей, для Инфомата и поддержки ЦЛС)-->
  <wsdl:documentation>version="5.2"</wsdl:documentation>
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/v5/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELvH8olfvFUzUOzR9Es_rBviwyrRrnxXTOMZf1KYWzL6hlqv_eyPYq5HlejT1ROkMeQ--"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="SoapException">
    <wsdl:part element="api:soapException" name="SoapException"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointment">
    <wsdl:part element="api:cancelAppointment" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentResponse">
    <wsdl:part element="api:cancelAppointmentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatient">
    <wsdl:part element="api:getAppointmentReceptionsByPatient" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatientResponse">
    <wsdl:part element="api:getAppointmentReceptionsByPatientResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getReferralsInfo">
    <wsdl:part element="api:getReferralsInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getReferralsInfoResponse">
    <wsdl:part element="api:getReferralsInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAppointment">
    <wsdl:part element="api:createAppointment" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentResponse">
    <wsdl:part element="api:createAppointmentResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfo">
    <wsdl:part element="api:getAvailableResourceScheduleInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfo">
    <wsdl:part element="api:getDoctorsInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoResponse">
    <wsdl:part element="api:getDoctorsInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfo">
    <wsdl:part element="api:getSpecialitiesInfo" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoResponse">
    <wsdl:part element="api:getSpecialitiesInfoResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointment">
    <wsdl:part element="api:shiftAppointment" name="shiftAppointment"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentResponse">
    <wsdl:part element="api:shiftAppointmentResponse" name="shiftAppointmentResponse"/>
  </wsdl:message>
  <wsdl:message name="getDutyARScheduleByPatient">
    <wsdl:part element="api:getDutyARScheduleByPatient" name="getDutyARScheduleByPatient"/>
  </wsdl:message>
  <wsdl:message name="getDutyARScheduleByPatientResponse">
    <wsdl:part element="api:getDutyARScheduleByPatientResponse" name="getDutyARScheduleByPatientResponse"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentToDutyDoctorByPatient">
    <wsdl:part element="api:createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentToDutyDoctorByPatientResponse">
    <wsdl:part element="api:createAppointmentToDutyDoctorByPatientResponse" name="createAppointmentToDutyDoctorByPatientResponse"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentToDutyDoctorByPatient">
    <wsdl:part element="api:cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentToDutyDoctorByPatientResponse">
    <wsdl:part element="api:cancelAppointmentToDutyDoctorByPatientResponse" name="cancelAppointmentToDutyDoctorByPatientResponse"/>
  </wsdl:message>
  <wsdl:message name="getHealthCareAvailabilityAttributes">
    <wsdl:part element="api:getHealthCareAvailabilityAttributes" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getHealthCareAvailabilityAttributesResponse">
    <wsdl:part element="api:getHealthCareAvailabilityAttributesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentBySms">
    <wsdl:part element="api:cancelAppointmentBySms" name="cancelAppointmentBySms"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentBySmsResponse">
    <wsdl:part element="api:cancelAppointmentBySmsResponse" name="cancelAppointmentBySmsResponse"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentByID">
    <wsdl:part element="api:cancelAppointmentByID" name="cancelAppointmentByID"/>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentByIDResponse">
    <wsdl:part element="api:cancelAppointmentByIDResponse" name="cancelAppointmentByIDResponse"/>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfo">
    <wsdl:part element="api:getAssignmentsInfo" name="getAssignmentsInfo"/>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfoResponse">
    <wsdl:part element="api:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLI">
    <wsdl:part element="api:getDoctorsInfoForLI" name="getDoctorsInfoForLI"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLIResponse">
    <wsdl:part element="api:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoForGroup">
    <wsdl:part element="api:getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup"/>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoForGroupResponse">
    <wsdl:part element="api:getSpecialitiesInfoForGroupResponse" name="getSpecialitiesInfoForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForGroup">
    <wsdl:part element="api:getDoctorsInfoForGroup" name="getDoctorsInfoForGroup"/>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForGroupResponse">
    <wsdl:part element="api:getDoctorsInfoForGroupResponse" name="getDoctorsInfoForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoForGroup">
    <wsdl:part element="api:getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup"/>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoForGroupResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoForGroupResponse" name="getAvailableResourceScheduleInfoForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentForGroup">
    <wsdl:part element="api:createAppointmentForGroup" name="createAppointmentForGroup"/>
  </wsdl:message>
  <wsdl:message name="createAppointmentForGroupResponse">
    <wsdl:part element="api:createAppointmentForGroupResponse" name="createAppointmentForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentForGroup">
    <wsdl:part element="api:shiftAppointmentForGroup" name="shiftAppointmentForGroup"/>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentForGroupResponse">
    <wsdl:part element="api:shiftAppointmentForGroupResponse" name="shiftAppointmentForGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="getArchivedAppointments">
    <wsdl:part element="api:getArchivedAppointments" name="getArchivedAppointments"/>
  </wsdl:message>
  <wsdl:message name="getArchivedAppointmentsResponse">
    <wsdl:part element="api:getArchivedAppointmentsResponse" name="getArchivedAppointmentsResponse"/>
  </wsdl:message>
  <wsdl:portType name="SelfAppointmentServiceV5PT">
    <wsdl:operation name="getHealthCareAvailabilityAttributes">
      <wsdl:input message="tns:getHealthCareAvailabilityAttributes" name="getHealthCareAvailabilityAttributes"/>
      <wsdl:output message="tns:getHealthCareAvailabilityAttributesResponse" name="getHealthCareAvailabilityAttributesResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <wsdl:input message="tns:createAppointment" name="createAppointment"/>
      <wsdl:output message="tns:createAppointmentResponse" name="createAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <wsdl:input message="tns:getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo"/>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoResponse" name="getAvailableResourceScheduleInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <wsdl:input message="tns:getDoctorsInfo" name="getDoctorsInfo"/>
      <wsdl:output message="tns:getDoctorsInfoResponse" name="getDoctorsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <wsdl:input message="tns:getSpecialitiesInfo" name="getSpecialitiesInfo"/>
      <wsdl:output message="tns:getSpecialitiesInfoResponse" name="getSpecialitiesInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <wsdl:input message="tns:shiftAppointment" name="shiftAppointment"/>
      <wsdl:output message="tns:shiftAppointmentResponse" name="shiftAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <wsdl:input message="tns:cancelAppointment" name="cancelAppointment"/>
      <wsdl:output message="tns:cancelAppointmentResponse" name="cancelAppointmentResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <wsdl:input message="tns:getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient"/>
      <wsdl:output message="tns:getAppointmentReceptionsByPatientResponse" name="getAppointmentReceptionsByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <wsdl:input message="tns:getReferralsInfo" name="getReferralsInfo"/>
      <wsdl:output message="tns:getReferralsInfoResponse" name="getReferralsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDutyARScheduleByPatient">
      <wsdl:input message="tns:getDutyARScheduleByPatient" name="getDutyARScheduleByPatient"/>
      <wsdl:output message="tns:getDutyARScheduleByPatientResponse" name="getDutyARScheduleByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentToDutyDoctorByPatient">
      <wsdl:input message="tns:createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient"/>
      <wsdl:output message="tns:createAppointmentToDutyDoctorByPatientResponse" name="createAppointmentToDutyDoctorByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentToDutyDoctorByPatient">
      <wsdl:input message="tns:cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient"/>
      <wsdl:output message="tns:cancelAppointmentToDutyDoctorByPatientResponse" name="cancelAppointmentToDutyDoctorByPatientResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentBySms">
      <wsdl:input message="tns:cancelAppointmentBySms" name="cancelAppointmentBySms"/>
      <wsdl:output message="tns:cancelAppointmentBySmsResponse" name="cancelAppointmentBySmsResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentByID">
      <wsdl:input message="tns:cancelAppointmentByID" name="cancelAppointmentByID"/>
      <wsdl:output message="tns:cancelAppointmentByIDResponse" name="cancelAppointmentByIDResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <wsdl:input message="tns:getAssignmentsInfo" name="getAssignmentsInfo"/>
      <wsdl:output message="tns:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <wsdl:input message="tns:getDoctorsInfoForLI" name="getDoctorsInfoForLI"/>
      <wsdl:output message="tns:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfoForGroup">
      <wsdl:input message="tns:getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup"/>
      <wsdl:output message="tns:getSpecialitiesInfoForGroupResponse" name="getSpecialitiesInfoForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForGroup">
      <wsdl:input message="tns:getDoctorsInfoForGroup" name="getDoctorsInfoForGroup"/>
      <wsdl:output message="tns:getDoctorsInfoForGroupResponse" name="getDoctorsInfoForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfoForGroup">
      <wsdl:input message="tns:getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup"/>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoForGroupResponse" name="getAvailableResourceScheduleInfoForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentForGroup">
      <wsdl:input message="tns:createAppointmentForGroup" name="createAppointmentForGroup"/>
      <wsdl:output message="tns:createAppointmentForGroupResponse" name="createAppointmentForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointmentForGroup">
      <wsdl:input message="tns:shiftAppointmentForGroup" name="shiftAppointmentForGroup"/>
      <wsdl:output message="tns:shiftAppointmentForGroupResponse" name="shiftAppointmentForGroupResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
    <wsdl:operation name="getArchivedAppointments">
      <wsdl:input message="tns:getArchivedAppointments" name="getArchivedAppointments"/>
      <wsdl:output message="tns:getArchivedAppointmentsResponse" name="getArchivedAppointmentsResponse"/>
      <wsdl:fault message="tns:SoapException" name="SoapException"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SelfAppointmentServiceV5Binding" type="tns:SelfAppointmentServiceV5PT">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getHealthCareAvailabilityAttributes">
      <soap12:operation soapAction="urn://getHealthCareAvailabilityAttributes"/>
      <wsdl:input name="getHealthCareAvailabilityAttributes">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getHealthCareAvailabilityAttributesResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointment">
      <soap12:operation soapAction="urn://cancelAppointment"/>
      <wsdl:input name="cancelAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <soap12:operation soapAction="urn://getAppointmentReceptionsByPatient"/>
      <wsdl:input name="getAppointmentReceptionsByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAppointmentReceptionsByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <soap12:operation soapAction="urn://getReferralsInfo"/>
      <wsdl:input name="getReferralsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferralsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <soap12:operation soapAction="urn://createAppointment"/>
      <wsdl:input name="createAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfo"/>
      <wsdl:input name="getAvailableResourceScheduleInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <soap12:operation soapAction="urn://getDoctorsInfo"/>
      <wsdl:input name="getDoctorsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <soap12:operation soapAction="urn://getDoctorsInfoForLI"/>
      <wsdl:input name="getDoctorsInfoForLI">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForLIResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <soap12:operation soapAction="urn://getSpecialitiesInfo"/>
      <wsdl:input name="getSpecialitiesInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <soap12:operation soapAction="urn://shiftAppointment"/>
      <wsdl:input name="shiftAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDutyARScheduleByPatient">
      <soap12:operation soapAction="urn://getDutyARScheduleByPatient"/>
      <wsdl:input name="getDutyARScheduleByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDutyARScheduleByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentToDutyDoctorByPatient">
      <soap12:operation soapAction="urn://createAppointmentToDutyDoctorByPatient"/>
      <wsdl:input name="createAppointmentToDutyDoctorByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentToDutyDoctorByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentToDutyDoctorByPatient">
      <soap12:operation soapAction="urn://cancelAppointmentToDutyDoctorByPatient"/>
      <wsdl:input name="cancelAppointmentToDutyDoctorByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentToDutyDoctorByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentBySms">
      <soap12:operation soapAction="urn://cancelAppointmentBySms"/>
      <wsdl:input name="cancelAppointmentBySms">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentBySmsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAppointmentByID">
      <soap12:operation soapAction="urn://cancelAppointmentByID"/>
      <wsdl:input name="cancelAppointmentByID">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentByIDResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <soap12:operation soapAction="urn://getAssignmentsInfo"/>
      <wsdl:input name="getAssignmentsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssignmentsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfoForGroup">
      <soap12:operation soapAction="urn://getSpecialitiesInfoForGroup"/>
      <wsdl:input name="getSpecialitiesInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForGroup">
      <soap12:operation soapAction="urn://getDoctorsInfoForGroup"/>
      <wsdl:input name="getDoctorsInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfoForGroup">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfoForGroup"/>
      <wsdl:input name="getAvailableResourceScheduleInfoForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointmentForGroup">
      <soap12:operation soapAction="urn://createAppointmentForGroup"/>
      <wsdl:input name="createAppointmentForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointmentForGroup">
      <soap12:operation soapAction="urn://shiftAppointmentForGroup"/>
      <wsdl:input name="shiftAppointmentForGroup">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentForGroupResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getArchivedAppointments">
      <soap12:operation soapAction="urn://getArchivedAppointments"/>
      <wsdl:input name="getArchivedAppointments">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getArchivedAppointmentsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SelfAppointmentServiceV5">
    <wsdl:port binding="tns:SelfAppointmentServiceV5Binding" name="SelfAppointmentServiceV5PTB">
      <soap12:address location="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELvH8olfvFUzUOzR9Es_rBviwyrRrnxXTOMZf1KYWzL6hlqv_eyPYq5HlejT1ROkMeQ--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://api.service.soap.emias.lanit.ru/v5/" version="5.2" xmlns:core="http://api.service.soap.emias.lanit.ru/core/v5/" xmlns:ns1="http://api.service.soap.emias.lanit.ru/v5/" xmlns:tns="http://api.service.soap.emias.lanit.ru/v5/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://api.service.soap.emias.lanit.ru/core/v5/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELs3rrVnLFkjJMy5mDfngAN2826cviAmOKcwB0rpK0eO9luhxWIPHWt9l0e4P44rDtQmP"/>
  <!--======================== Элементы =====================================-->
  <!--Отмена записи на прием-->
  <xs:element name="cancelAppointment" type="tns:cancelAppointment"/>
  <xs:element name="cancelAppointmentResponse" type="tns:cancelAppointmentResponse"/>
  <!--Создание записи на прием2-->
  <xs:element name="createAppointment" type="tns:createAppointment"/>
  <xs:element name="createAppointmentResponse" type="tns:createAppointmentResponse"/>
  <!--Получение списка записей для пациента-->
  <xs:element name="getAppointmentReceptionsByPatient" type="tns:getAppointmentReceptionsByPatient"/>
  <xs:element name="getAppointmentReceptionsByPatientResponse" type="tns:getAppointmentReceptionsByPatientResponse"/>
  <!--Получение расписания врача-->
  <xs:element name="getAvailableResourceScheduleInfo" type="tns:getAvailableResourceScheduleInfo"/>
  <xs:element name="getAvailableResourceScheduleInfoResponse" type="tns:getAvailableResourceScheduleInfoResponse"/>
  <!--Получение списка врачей-->
  <xs:element name="getDoctorsInfo" type="tns:getDoctorsInfo"/>
  <xs:element name="getDoctorsInfoResponse" type="tns:getDoctorsInfoResponse"/>
  <!--Получение направлений для пациента-->
  <xs:element name="getReferralsInfo" type="tns:getReferralsInfo"/>
  <xs:element name="getReferralsInfoResponse" type="tns:getReferralsInfoResponse"/>
  <!--Получение списка специальностей-->
  <xs:element name="getSpecialitiesInfo" type="tns:getSpecialitiesInfo"/>
  <xs:element name="getSpecialitiesInfoResponse" type="tns:getSpecialitiesInfoResponse"/>
  <!--Перенос записи на прием-->
  <xs:element name="shiftAppointment" type="tns:shiftAppointment"/>
  <xs:element name="shiftAppointmentResponse" type="tns:shiftAppointmentResponse"/>
  <!--Предоставление расписания ближайшего доступного ДВ-->
  <xs:element name="getDutyARScheduleByPatient" type="tns:getDutyARScheduleByPatient"/>
  <xs:element name="getDutyARScheduleByPatientResponse" type="tns:getDutyARScheduleByPatientResponse"/>
  <!--Создание записи к ДВ-->
  <xs:element name="createAppointmentToDutyDoctorByPatient" type="tns:createAppointmentToDutyDoctorByPatient"/>
  <xs:element name="createAppointmentToDutyDoctorByPatientResponse" type="tns:createAppointmentToDutyDoctorByPatientResponse"/>
  <!--Отмена записи к ДВ-->
  <xs:element name="cancelAppointmentToDutyDoctorByPatient" type="tns:cancelAppointmentToDutyDoctorByPatient"/>
  <xs:element name="cancelAppointmentToDutyDoctorByPatientResponse" type="tns:cancelAppointmentToDutyDoctorByPatientResponse"/>
  <!--Предоставление ожидания по самозаписи-->
  <xs:element name="getHealthCareAvailabilityAttributes" type="tns:getHealthCareAvailabilityAttributes"/>
  <xs:element name="getHealthCareAvailabilityAttributesResponse" type="tns:getHealthCareAvailabilityAttributesResponse"/>
  <!--Отмена записи к ДВ-->
  <xs:element name="cancelAppointmentBySms" type="tns:cancelAppointmentBySms"/>
  <xs:element name="cancelAppointmentBySmsResponse" type="tns:cancelAppointmentBySmsResponse"/>
  <!--Отмена записи на прием (вариант 2, для ЦТО)-->
  <xs:element name="cancelAppointmentByID" type="tns:cancelAppointmentByID"/>
  <xs:element name="cancelAppointmentByIDResponse" type="tns:cancelAppointmentByIDResponse"/>
  <!--Предоставление перечня активных назначений пациента на ЛИ-->
  <xs:element name="getAssignmentsInfo" type="tns:getAssignmentsInfo"/>
  <xs:element name="getAssignmentsInfoResponse" type="tns:getAssignmentsInfoResponse"/>
  <!--Получение ДР на лабораторные исследования-->
  <xs:element name="getDoctorsInfoForLI" type="tns:getDoctorsInfoForLI"/>
  <xs:element name="getDoctorsInfoForLIResponse" type="tns:getDoctorsInfoForLIResponse"/>
  <!--Предоставление перечня специальностей доступных для самозаписи группой пациентов-->
  <xs:element name="getSpecialitiesInfoForGroup" type="tns:getSpecialitiesInfoForGroup"/>
  <xs:element name="getSpecialitiesInfoForGroupResponse" type="tns:getSpecialitiesInfoForGroupResponse"/>
  <!--Предоставление перечня ДР, к которым разрешена самозапись пациента-->
  <xs:element name="getDoctorsInfoForGroup" type="tns:getDoctorsInfoForGroup"/>
  <xs:element name="getDoctorsInfoForGroupResponse" type="tns:getDoctorsInfoForGroupResponse"/>
  <!--Предоставление расписания доступного ресурса и его слотов, доступных для самозаписи группе пациентов-->
  <xs:element name="getAvailableResourceScheduleInfoForGroup" type="tns:getAvailableResourceScheduleInfoForGroup"/>
  <xs:element name="getAvailableResourceScheduleInfoForGroupResponse" type="tns:getAvailableResourceScheduleInfoForGroupResponse"/>
  <!--Создание несколько записей-->
  <xs:element name="createAppointmentForGroup" type="tns:createAppointmentForGroup"/>
  <xs:element name="createAppointmentForGroupResponse" type="tns:createAppointmentForGroupResponse"/>
  <!--Перенос нескольких записей-->
  <xs:element name="shiftAppointmentForGroup" type="tns:shiftAppointmentForGroup"/>
  <xs:element name="shiftAppointmentForGroupResponse" type="tns:shiftAppointmentForGroupResponse"/>
  <!--Получение отмененных и архивных записей пациента-->
  <xs:element name="getArchivedAppointments" type="tns:getArchivedAppointments"/>
  <xs:element name="getArchivedAppointmentsResponse" type="tns:getArchivedAppointmentsResponse"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="soapException" nillable="false" type="tns:soapException"/>
  <xs:element name="appointmentCodeErrorFaultInfo" type="tns:appointmentCodeErrorFaultInfo"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="availableResourceBasis">
    <xs:sequence>
      <xs:element minOccurs="0" name="referralId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор направления, по которому осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="medSpecialityAttachment" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак записи по прикреплению к специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="specialityId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД специализации ДР, по которой осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД вида ЛДП</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Профиль взятия</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="referralType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REF_TO_DOCTOR"/>
      <xs:enumeration value="REF_TO_LDP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="signActiveArchiveType">
    <xs:annotation>
      <xs:documentation>Признак «Архивные и отмененные записи»</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long">
      <xs:enumeration value="0"/>
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="ldpType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="procedure" type="xs:boolean"/>
      <xs:element minOccurs="0" name="investigation" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="ambulatory" type="xs:string"/>
      <xs:element minOccurs="0" name="patientSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referral">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuType" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element minOccurs="0" name="diagnosis" type="tns:diagnosis">
        <xs:annotation>
          <xs:documentation>Информация о диагнозе</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedDoctor" type="tns:jobInfo">
        <xs:annotation>
          <xs:documentation>Информация о враче, выдавшем направление/назначение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentOpenDate" type="xs:date"/>
      <xs:element name="countActiveAppointment" type="xs:int"/>
      <xs:element name="countAppointmentWithReceptionFact" type="xs:int"/>
      <xs:element minOccurs="0" name="invalid" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referralDesc">
    <xs:sequence>
      <xs:element name="referralId" type="xs:long"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentDesc">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="appointmentNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleOfDay">
    <xs:sequence>
      <xs:element name="date" type="xs:date"/>
      <xs:element maxOccurs="unbounded" name="scheduleBySlot" type="tns:scheduleBySlot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalSpeciality">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="male" type="xs:boolean"/>
      <xs:element minOccurs="0" name="female" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="areaType" type="xs:string"/>
      <xs:element minOccurs="0" name="onlyByRefferal" type="xs:boolean"/>
      <xs:element minOccurs="0" name="therapeutic" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toDoctor">
    <xs:sequence>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="specialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toLdp">
    <xs:sequence>
      <xs:element name="ldpTypeId" type="xs:long"/>
      <xs:element name="ldpTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="countAssignmentProcedures" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="diagnosis">
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код по МКБ-10</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование диагноза</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="jobInfo">
    <xs:sequence>
      <xs:element name="jobExecutionId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД_Исполнение должности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fio" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия Имя Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="snils" type="xs:string">
        <xs:annotation>
          <xs:documentation>СНИЛС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="specialityId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД_Специальность</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="specialityName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReception">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="appointmentNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointment">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="liveQueueTicketId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="liveQueueTicketNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpuId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="typeLpu" type="xs:string"/>
      <xs:element name="nameLpu" type="xs:string"/>
      <xs:element name="lpuAddress" type="xs:string"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="enableCancel" type="xs:boolean"/>
      <xs:element minOccurs="0" name="enableShift" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Разрешен ли перенос</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД КР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="roomId" type="xs:long"/>
      <xs:element minOccurs="0" name="roomNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД Адресной точки кабинета</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element minOccurs="0" name="toBM" type="ns1:SamplingType"/>
      <xs:element name="statusId" type="xs:int"/>
      <xs:element minOccurs="0" name="cancelInfo" type="ns1:cancelInfo"/>
      <xs:element minOccurs="0" name="receptionFactId" type="xs:long"/>
      <xs:element minOccurs="0" name="referral" type="tns:referralDesc">
        <xs:annotation>
          <xs:documentation>Направление</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelInfo">
    <xs:annotation>
      <xs:documentation>Информация об отмене записи</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cancelReasonId" type="xs:long"/>
      <xs:element name="cancelReasonDesc" type="xs:string"/>
      <xs:element minOccurs="0" name="cancelTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentReceptionToDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="doctorSpecialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element minOccurs="0" name="viewReceptionCode" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element name="arType" type="xs:int"/>
      <xs:element minOccurs="0" name="specialityChangeAbility" type="xs:boolean"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="mainDoctor" type="ns1:mainDoctor"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionType" type="ns1:receptionType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ldpType" type="ns1:ldpTypeForAr"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="samplingType" type="ns1:SamplingType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="complexResource" type="ns1:complexResource"/>
      <xs:element default="false" name="district" type="xs:boolean"/>
      <xs:element default="false" name="replacement" type="xs:boolean"/>
      <xs:element minOccurs="0" name="nondistrict" type="xs:boolean"/>
      <xs:element default="false" name="availableByReferral" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DutyARScheduleInfo">
    <xs:sequence>
      <xs:element name="startTime" type="xs:time"/>
      <xs:element name="endTime" type="xs:time"/>
      <xs:element name="existedLiveQueueTickets" type="xs:int"/>
      <xs:element name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResultCreationAppointmentToDutyDoctor">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="tns:appointmentDesc"/>
      <xs:element name="liveQueueTicketId" type="xs:long"/>
      <xs:element name="liveQueueTicketNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="complaintId" type="xs:long"/>
      <xs:element minOccurs="0" name="inquiryPurposeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentResponse">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="signActiveArchive" type="tns:signActiveArchiveType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatientResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointment" type="tns:appointment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfo">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="referralId" type="xs:long"/>
      <xs:element minOccurs="0" name="period" type="ns1:DatePeriod"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:choice>
        <xs:element name="appointmentId" type="xs:long"/>
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="includeArWithoutSlots" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>По умолчанию - true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="quotaTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="quotaType" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element default="false" minOccurs="0" name="returnCompleted" type="xs:boolean"/>
      <xs:element minOccurs="0" name="returnExtended" type="xs:boolean"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="referral" type="tns:referral"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDutyARScheduleByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDutyARScheduleByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:DutyARScheduleInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentToDutyDoctorByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="lpuId" type="xs:long"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentToDutyDoctorByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:ResultCreationAppointmentToDutyDoctor"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentToDutyDoctorByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element name="appointmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentToDutyDoctorByPatientResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getHealthCareAvailabilityAttributes">
    <xs:sequence>
      <xs:element name="patientId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
        <xs:element name="ldpId" type="xs:long"/>
        <xs:element name="samplingTypeId" type="xs:long"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getHealthCareAvailabilityAttributesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="availabilityInfo" type="tns:availabilityInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availabilityInfo">
    <xs:sequence>
      <xs:element name="nearestAppointmentDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceBasis" type="tns:availableResourceBasis">
        <xs:annotation>
          <xs:documentation>Группирующая сущность: основание для подбора ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>ИД внешней системы, через которую осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="creationDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время создания записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long"/>
      <xs:element minOccurs="0" name="nearestMainDoctorDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона основного врача</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="nearestReplacementDoctorDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время ближайшего свободного талона замещающего врача</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentBySms">
    <xs:sequence>
      <xs:element name="patientPhoneNumber" type="xs:string"/>
      <xs:element name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentBySmsResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentByID">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentByIDResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element default="false" minOccurs="0" name="returnExtended" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Вернуть расширенную версию направления</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Обозначение внешней системы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="assignment" type="ns1:AssignmentGroup">
        <xs:annotation>
          <xs:documentation>Активные назначения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLI">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="assignment" type="ns1:Assignment">
        <xs:annotation>
          <xs:documentation>Назначение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLIResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry" type="tns:patientGroupEntry"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoForGroup">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoForGroupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element name="appTime" type="tns:TimeInterval"/>
                <xs:element name="complexResourceId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentForGroup">
    <xs:sequence>
      <xs:element maxOccurs="10" minOccurs="2" name="patientGroupEntry">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:patientGroupEntry">
              <xs:sequence>
                <xs:element name="appTime" type="tns:TimeInterval"/>
                <xs:element name="complexResourceId" type="xs:long"/>
                <xs:element name="appointmentId" type="xs:long"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="appointmentDesc" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getArchivedAppointments">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="period" type="ns1:DatePeriodOptional"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="pagingOptions" type="core:PagingOptions"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getArchivedAppointmentsResponse">
    <xs:sequence>
      <xs:element name="result" type="tns:AppointmentListPage"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AppointmentListPage">
    <xs:annotation>
      <xs:documentation>Страница Списка записей</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="appointment" type="tns:appointment">
            <xs:annotation>
              <xs:documentation>Сведения о Записи</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="appointmentCodeErrorFaultInfo">
    <xs:annotation>
      <xs:documentation>Error</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="messageText" type="xs:string"/>
      <xs:element minOccurs="0" name="userId" type="xs:string"/>
      <xs:element minOccurs="0" name="operation" type="xs:string"/>
      <xs:element minOccurs="0" name="resource" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceScheduleBySlots">
    <xs:sequence>
      <xs:element name="availableResource" type="ns1:availableResource"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="scheduleOfDay" type="ns1:scheduleOfDay"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentLock">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSamplingTypeId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleBySlot">
    <xs:sequence>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="cabinetNumber" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="slot" type="ns1:slot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="slot">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mainDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="firstName" type="xs:string"/>
      <xs:element name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element name="mejiId" type="xs:long"/>
      <xs:element name="employeeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Assignment">
    <xs:sequence>
      <xs:element name="moId" type="xs:long"/>
      <xs:element name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentGroup">
    <xs:sequence>
      <xs:element name="moId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД МО принимающее (головное ЛПУ куста)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="toBM" type="ns1:SamplingType">
        <xs:annotation>
          <xs:documentation>Профиль взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod">
        <xs:annotation>
          <xs:documentation>Период действия назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="active" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак активности назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appointmentAvailable" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак возможности создать запись</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentOpenDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата открытия записи по направлению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД активной записи по данному назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="registryEntry" type="ns1:registryEntry">
        <xs:annotation>
          <xs:documentation>Реестровые записи</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:sequence>
      <xs:element name="dateFrom" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dateTo" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="registryEntry">
    <xs:sequence>
      <xs:element name="entryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД реестровой записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД лабораторного исследования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛИ (краткое)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hasMemo" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак наличия памятки</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="diagnosis" type="ns1:diagnosis">
        <xs:annotation>
          <xs:documentation>Информация о диагнозе</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedDoctor" type="ns1:jobInfo">
        <xs:annotation>
          <xs:documentation>Информация о назначившем враче</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="primary" type="xs:string"/>
      <xs:element minOccurs="0" name="home" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldpTypeForAr">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="complexResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="ns1:room"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="room">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuShortName" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long"/>
      <xs:element minOccurs="0" name="defaultAddress" type="xs:string"/>
      <xs:element name="availabilityDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SamplingType">
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Название профиля</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="self" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак самовзятого БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="soapException">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="text" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointmentLock" type="tns:appointmentLock"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="patientGroupError" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientShort">
    <xs:sequence>
      <xs:element minOccurs="0" name="patientId" type="xs:long"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientGroupEntry">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TimeInterval">
    <xs:sequence>
      <xs:element name="start" type="xs:dateTime"/>
      <xs:element name="end" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriodOptional">
    <xs:annotation>
      <xs:documentation>Описывает календарный период</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="dateFrom" type="xs:date"/>
      <xs:element minOccurs="0" name="dateTo" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELs3rrVnLFkjJMy5mDfngAN2826cviAmOKcwB0rpK0eO9luhxWIPHWt9l0e4P44rDtQmP</con:url><con:content>&lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://api.service.soap.emias.lanit.ru/core/v5/" version="1.0" xmlns="http://api.service.soap.emias.lanit.ru/core/v5/" xmlns:xs="http://www.w3.org/2001/XMLSchema">&#13;
  &lt;xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsf0p1DdS1_UID8nCZurCtixl_TVFNCF.Zm2IERIorUG3w--"/>&#13;
&lt;/xs:schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsf0p1DdS1_UID8nCZurCtixl_TVFNCF.Zm2IERIorUG3w--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsf0p1DdS0_CIS5sEoTzQ4Wty6YHlLYutqNN7wO_MFN0JMBt"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор Композиции Think!EHR ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор Документа СИМИ ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания компонентов сущностей, владельцеми которых является текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор сущности/записи на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания сущностей, владельцем которых является текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания компонентов сущностей, владельцами которых являются другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания сущностей, владельцами которых являются другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания типов, реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания типов, реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип, используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки (используются в соответствии с переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности, непосредственно принадлежащей текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности ЕМИАС, внешней по отношнению к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELsf0p1DdS0_CIS5sEoTzQ4Wty6YHlLYutqNN7wO_MFN0JMBt</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="2d473037-a512-4c7c-9e34-c6278930facc" isOneWay="false" action="urn://cancelAppointment" name="cancelAppointment" bindingOperationName="cancelAppointment" type="Request-Response" outputName="cancelAppointmentResponse" inputName="cancelAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="929e30cd-d394-4b64-b0a2-5ca008b0ee56" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:cancelAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointment"/></con:call></con:operation><con:operation id="eda72710-03a6-4802-92a0-381f0f1977d0" isOneWay="false" action="urn://cancelAppointmentByID" name="cancelAppointmentByID" bindingOperationName="cancelAppointmentByID" type="Request-Response" outputName="cancelAppointmentByIDResponse" inputName="cancelAppointmentByID" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b4e21abb-c07c-4264-aa54-e35b9e29c018" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentByID>\r
         <appointmentId>?</appointmentId>\r
      </v5:cancelAppointmentByID>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentByID"/></con:call></con:operation><con:operation id="5c5daa4d-e477-40aa-b806-d7d2a710384b" isOneWay="false" action="urn://cancelAppointmentBySms" name="cancelAppointmentBySms" bindingOperationName="cancelAppointmentBySms" type="Request-Response" outputName="cancelAppointmentBySmsResponse" inputName="cancelAppointmentBySms" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7a353600-e367-442e-a1ed-5d0d433e8cff" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentBySms>\r
         <patientPhoneNumber>?</patientPhoneNumber>\r
         <message>?</message>\r
      </v5:cancelAppointmentBySms>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentBySms"/></con:call></con:operation><con:operation id="e85deeda-8134-4696-a68a-3e7c3b57f90d" isOneWay="false" action="urn://cancelAppointmentToDutyDoctorByPatient" name="cancelAppointmentToDutyDoctorByPatient" bindingOperationName="cancelAppointmentToDutyDoctorByPatient" type="Request-Response" outputName="cancelAppointmentToDutyDoctorByPatientResponse" inputName="cancelAppointmentToDutyDoctorByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cf1e9207-cf38-41a9-a883-354aa11b72c5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointmentToDutyDoctorByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <appointmentId>?</appointmentId>\r
      </v5:cancelAppointmentToDutyDoctorByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/cancelAppointmentToDutyDoctorByPatient"/></con:call></con:operation><con:operation id="05a37170-7210-4dfe-aaac-da47cfbe7053" isOneWay="false" action="urn://createAppointment" name="createAppointment" bindingOperationName="createAppointment" type="Request-Response" outputName="createAppointmentResponse" inputName="createAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="77fa767f-2bcd-44c9-8276-b5f4fe6a61cc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <!--Optional:-->\r
         <complaintId>?</complaintId>\r
         <!--Optional:-->\r
         <inquiryPurposeId>?</inquiryPurposeId>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <eno>?</eno>\r
      </v5:createAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointment"/></con:call></con:operation><con:operation id="de67a3d3-7aa6-4b27-9eb1-2806357cc8fd" isOneWay="false" action="urn://createAppointmentForGroup" name="createAppointmentForGroup" bindingOperationName="createAppointmentForGroup" type="Request-Response" outputName="createAppointmentForGroupResponse" inputName="createAppointmentForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9fd00835-ecdc-446c-a341-c1e2bcf532bb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointmentForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
         </patientGroupEntry>\r
         <availableResourceId>?</availableResourceId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:createAppointmentForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointmentForGroup"/></con:call></con:operation><con:operation id="bf787aac-3122-489e-a1b2-3d0381bcbf78" isOneWay="false" action="urn://createAppointmentToDutyDoctorByPatient" name="createAppointmentToDutyDoctorByPatient" bindingOperationName="createAppointmentToDutyDoctorByPatient" type="Request-Response" outputName="createAppointmentToDutyDoctorByPatientResponse" inputName="createAppointmentToDutyDoctorByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a0ef01bb-75a8-448c-8a71-b9b1d39e32d1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointmentToDutyDoctorByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <lpuId>?</lpuId>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
      </v5:createAppointmentToDutyDoctorByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/createAppointmentToDutyDoctorByPatient"/></con:call></con:operation><con:operation id="ecd9a187-a8a7-4fa5-956d-0e0712d2ced9" isOneWay="false" action="urn://getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient" bindingOperationName="getAppointmentReceptionsByPatient" type="Request-Response" outputName="getAppointmentReceptionsByPatientResponse" inputName="getAppointmentReceptionsByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="47584f78-8c73-436c-a48f-a2d811ceac59" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAppointmentReceptionsByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <signActiveArchive>?</signActiveArchive>\r
      </v5:getAppointmentReceptionsByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAppointmentReceptionsByPatient"/></con:call></con:operation><con:operation id="9a4846ce-9c52-4af1-a4c3-eea6bc4c2436" isOneWay="false" action="urn://getArchivedAppointments" name="getArchivedAppointments" bindingOperationName="getArchivedAppointments" type="Request-Response" outputName="getArchivedAppointmentsResponse" inputName="getArchivedAppointments" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="170fe8d2-25e8-42fe-9fff-403ce932091b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/" xmlns:v51="http://api.service.soap.emias.lanit.ru/core/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getArchivedAppointments>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <period>\r
            <!--Optional:-->\r
            <dateFrom>?</dateFrom>\r
            <!--Optional:-->\r
            <dateTo>?</dateTo>\r
         </period>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v51:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v51:sortOrder attributeName="?" desceding="false"/>\r
            </v51:sortingOptions>\r
         </pagingOptions>\r
      </v5:getArchivedAppointments>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getArchivedAppointments"/></con:call></con:operation><con:operation id="03d18d35-4862-45ff-b17b-29be2d330ba9" isOneWay="false" action="urn://getAssignmentsInfo" name="getAssignmentsInfo" bindingOperationName="getAssignmentsInfo" type="Request-Response" outputName="getAssignmentsInfoResponse" inputName="getAssignmentsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1787e6d9-32a9-4ed1-8443-349cb5d4e108" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAssignmentsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <returnExtended>false</returnExtended>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAssignmentsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAssignmentsInfo"/></con:call></con:operation><con:operation id="2cb6abf7-f500-49d1-b46b-96ffc4fcdfb9" isOneWay="false" action="urn://getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo" bindingOperationName="getAvailableResourceScheduleInfo" type="Request-Response" outputName="getAvailableResourceScheduleInfoResponse" inputName="getAvailableResourceScheduleInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="43383270-344f-4311-b845-ef2a76d802f4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <period>\r
            <dateFrom>?</dateFrom>\r
            <dateTo>?</dateTo>\r
         </period>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfo"/></con:call></con:operation><con:operation id="b61de93e-4493-4a73-b587-e947f03540e0" isOneWay="false" action="urn://getAvailableResourceScheduleInfoForGroup" name="getAvailableResourceScheduleInfoForGroup" bindingOperationName="getAvailableResourceScheduleInfoForGroup" type="Request-Response" outputName="getAvailableResourceScheduleInfoForGroupResponse" inputName="getAvailableResourceScheduleInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b1e26af3-06fe-4fe7-a58a-03522f0381b7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfoForGroup>\r
         <availableResourceId>?</availableResourceId>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAvailableResourceScheduleInfoForGroup"/></con:call></con:operation><con:operation id="6679d30f-4bcc-4af1-9009-82e0c4216384" isOneWay="false" action="urn://getDoctorsInfo" name="getDoctorsInfo" bindingOperationName="getDoctorsInfo" type="Request-Response" outputName="getDoctorsInfoResponse" inputName="getDoctorsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5d1b0acb-8988-419b-8784-4c9011da3e0e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--You have a CHOICE of the next 3 items at this level-->\r
         <appointmentId>?</appointmentId>\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <!--Optional:-->\r
         <includeArWithoutSlots>?</includeArWithoutSlots>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfo"/></con:call></con:operation><con:operation id="ec33ba8a-8cf1-47a6-b357-3667522c288a" isOneWay="false" action="urn://getDoctorsInfoForGroup" name="getDoctorsInfoForGroup" bindingOperationName="getDoctorsInfoForGroup" type="Request-Response" outputName="getDoctorsInfoForGroupResponse" inputName="getDoctorsInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="61d5f524-3508-44e3-8b3b-e77315e732ad" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <!--Optional:-->\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <specialityId>?</specialityId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForGroup"/></con:call></con:operation><con:operation id="1298c992-b7a3-46d3-b229-dd922c4cbc4b" isOneWay="false" action="urn://getDoctorsInfoForLI" name="getDoctorsInfoForLI" bindingOperationName="getDoctorsInfoForLI" type="Request-Response" outputName="getDoctorsInfoForLIResponse" inputName="getDoctorsInfoForLI" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="68e9463e-7e46-49f4-a015-7d081f11d523" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForLI>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <assignment>\r
            <moId>?</moId>\r
            <samplingTypeId>?</samplingTypeId>\r
            <period>\r
               <dateFrom>?</dateFrom>\r
               <dateTo>?</dateTo>\r
            </period>\r
         </assignment>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForLI>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDoctorsInfoForLI"/></con:call></con:operation><con:operation id="02ee4567-79a9-48c9-a29d-e0d6a09d86a3" isOneWay="false" action="urn://getDutyARScheduleByPatient" name="getDutyARScheduleByPatient" bindingOperationName="getDutyARScheduleByPatient" type="Request-Response" outputName="getDutyARScheduleByPatientResponse" inputName="getDutyARScheduleByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="63770c21-a40f-4000-ad96-2fde4c2ce183" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDutyARScheduleByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <lpuId>?</lpuId>\r
      </v5:getDutyARScheduleByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getDutyARScheduleByPatient"/></con:call></con:operation><con:operation id="2984651c-809e-4b3b-9e96-ceedbcf8dee4" isOneWay="false" action="urn://getHealthCareAvailabilityAttributes" name="getHealthCareAvailabilityAttributes" bindingOperationName="getHealthCareAvailabilityAttributes" type="Request-Response" outputName="getHealthCareAvailabilityAttributesResponse" inputName="getHealthCareAvailabilityAttributes" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fd7a0559-ee54-4fa1-9383-18d2d1ae9f82" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getHealthCareAvailabilityAttributes>\r
         <patientId>?</patientId>\r
         <!--You have a CHOICE of the next 4 items at this level-->\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <ldpId>?</ldpId>\r
         <samplingTypeId>?</samplingTypeId>\r
      </v5:getHealthCareAvailabilityAttributes>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getHealthCareAvailabilityAttributes"/></con:call></con:operation><con:operation id="48404692-b9c5-4112-bae0-b08fc4271397" isOneWay="false" action="urn://getReferralsInfo" name="getReferralsInfo" bindingOperationName="getReferralsInfo" type="Request-Response" outputName="getReferralsInfoResponse" inputName="getReferralsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e66d26da-e418-4bab-8bfa-27a0b4e0e855" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <returnCompleted>false</returnCompleted>\r
         <!--Optional:-->\r
         <returnExtended>?</returnExtended>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getReferralsInfo"/></con:call></con:operation><con:operation id="dfa39acf-b0e2-4dbf-9117-6d9e9c54759e" isOneWay="false" action="urn://getSpecialitiesInfo" name="getSpecialitiesInfo" bindingOperationName="getSpecialitiesInfo" type="Request-Response" outputName="getSpecialitiesInfoResponse" inputName="getSpecialitiesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f0122d36-b089-41bb-af53-71016ed71d66" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfo"/></con:call></con:operation><con:operation id="add8239e-72c1-4ca2-8571-e105b1d6a262" isOneWay="false" action="urn://getSpecialitiesInfoForGroup" name="getSpecialitiesInfoForGroup" bindingOperationName="getSpecialitiesInfoForGroup" type="Request-Response" outputName="getSpecialitiesInfoForGroupResponse" inputName="getSpecialitiesInfoForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="75552ef4-a6f4-4c2c-8109-ea4b26173af1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfoForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
         </patientGroupEntry>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfoForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getSpecialitiesInfoForGroup"/></con:call></con:operation><con:operation id="6a3ad82f-d1e2-4b09-908b-4283d7dca8a3" isOneWay="false" action="urn://shiftAppointment" name="shiftAppointment" bindingOperationName="shiftAppointment" type="Request-Response" outputName="shiftAppointmentResponse" inputName="shiftAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="32d799c5-c43d-42c3-918f-b054c58f2cf1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointment"/></con:call></con:operation><con:operation id="e14506c0-5cc7-4eae-b852-5c455a1c8e4c" isOneWay="false" action="urn://shiftAppointmentForGroup" name="shiftAppointmentForGroup" bindingOperationName="shiftAppointmentForGroup" type="Request-Response" outputName="shiftAppointmentForGroupResponse" inputName="shiftAppointmentForGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8a0f3b22-9d3d-4ab4-8aa8-910f38d22d67" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointmentForGroup>\r
         <!--2 to 10 repetitions:-->\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <patientGroupEntry>\r
            <omsNumber>?</omsNumber>\r
            <!--Optional:-->\r
            <omsSeries>?</omsSeries>\r
            <birthDate>?</birthDate>\r
            <appTime>\r
               <start>?</start>\r
               <end>?</end>\r
            </appTime>\r
            <complexResourceId>?</complexResourceId>\r
            <appointmentId>?</appointmentId>\r
         </patientGroupEntry>\r
         <availableResourceId>?</availableResourceId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointmentForGroup>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/shiftAppointmentForGroup"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="8a7aecd9-afec-4f52-a140-d16ba799eee8" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://notifications.emiasinfo-application.test.emias.mos.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint></con:endpoints><con:resource name="add" path="/v1/user/add" id="b83dbce7-9f00-499c-8c1c-ad2aa66a215e"><con:settings/><con:parameters/><con:method name="userAdd" id="5656a6b7-9ece-43b7-a903-33bcfb7e1182" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:add="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/user/add">add:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="userAdd" id="0ef60847-9f57-4d23-8ec1-c3a8f1ac9185" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
	"patientId": ${#TestSuite#emiasInfoNotificationsEndpoint},
	"omsNumber": "${#TestSuite#emiasInfoNotificationsEndpoint}",
	"birthDate": "2012-06-07",
	"platform": "APPLE",
	"appVersion": "1.3.2",
	"deviceCloudId": "${#TestSuite#emiasInfoNotificationsEndpoint}",
	"deviceGuid": "${#TestSuite#emiasInfoNotificationsEndpoint}",
	"authentication": "true"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="check" path="/v1/user/authentication/check" id="0c9ec022-ab89-43d2-8cbb-6a43852194ca"><con:settings/><con:parameters/><con:method name="check" id="6306dd48-f0a6-4bee-b04b-694581117bc1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:chec="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/user/authentication/check">chec:Response</con:element></con:representation><con:request name="check" id="7e9ba560-f422-4663-ab97-a1d2de152b81" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request>{
  "userInformation": [
    {
      "patientId": 0,
      "omsNumber": "string",
      "birthDate": "2023-07-24",
      "authentication": true
    }
  ],
  "deviceGuid": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "deviceCloudId": "string",
  "platform": "APPLE",
  "appVersion": "string"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="list" path="/v1/settings/list" id="23e83d6d-9eee-47df-9f99-cf551337f849"><con:settings/><con:parameters><con:parameter><con:name>deviceGuid</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="getSettingsList" id="cbbdd521-af66-4299-af01-4468e1ffd72c" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:list="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/settings/list">list:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:list="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/settings/list">list:Response</con:element></con:representation><con:request name="getSettingsList" id="fd50c73e-374b-495d-b8ee-f917b8003ad1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="delete" path="/v1/user/delete" id="a4ba52a4-eeeb-4316-9f3d-0800e726f92c"><con:settings/><con:parameters/><con:method name="deleteUser" id="841ccc34-bd93-4659-918c-45eda5f0a83e" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="deleteUser" id="4e97b4fe-0da1-43e2-b801-4e3976ea8b7d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="list" path="/v1/message/list" id="14a52d12-e9c0-473a-81fe-548269cc28e3"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter><con:parameter><con:name>deviceGuid</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="getMessageList" id="51a021fc-fefe-42ff-9afe-124f160ffada" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 404</con:status><con:params/><con:element xmlns:list="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/message/list">list:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:list="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/message/list">list:Response</con:element></con:representation><con:request name="getMessageList" id="55bba891-d3ec-4c36-af58-cc67a2b8ef29" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>https://emias.info/api-notifications//v1/message/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="6840594493036"/>
  <con:entry key="deviceGuid" value="DB7A56FD-DCE7-41F6-9943-077362EC24F9"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="details" path="/v1/message/details" id="1424c885-b3c6-47d5-bd8f-46911effb65f"><con:settings/><con:parameters><con:parameter><con:name>notificationId</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter><con:parameter><con:name>patientId</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter><con:parameter><con:name>deviceGuid</con:name><con:value>75fe7144-cf27-4596-a9dd-b6494fa29965</con:value><con:style>QUERY</con:style><con:default>75fe7144-cf27-4596-a9dd-b6494fa29965</con:default></con:parameter></con:parameters><con:method name="Method 1" id="74c69f96-9391-4734-94c6-ff2661ab4317" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:det="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/message/details">det:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:det="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/message/details">det:Response</con:element></con:representation><con:request name="messageDetails" id="78aeab8b-e5fa-4d6f-9fd4-3d1da90b3ab9" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>https://emias.info/api-notifications//v1/message/details</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="10004"/>
  <con:entry key="deviceGuid" value="150f70c2-e61c-463f-bf97-b1cf96b54f2a"/>
  <con:entry key="notificationId" value="21"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="vaccinations" path="/v1/prPush/vaccinations" id="dc747b3a-dac7-4471-88a6-3fad1faeee2d"><con:settings/><con:parameters/><con:method name="Method 1" id="0968b234-aeb2-4cf7-8943-4bd75847ce93" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:vac="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/prPush/vaccinations">vac:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="post pr vaccinations" id="d82f9261-e827-4e6b-b958-d1f8bb84bad2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "campaignId": "КомпанияВакцинация4",
  "patientInfo": [
    {
      "patientId": 6840594493036,
      "pushTitle": "тест пиар вакцинация4",
      "pushBody": "сделай рививку",
      "html": "&lt;h1>тест вакцинации&lt;/h1>"
    }
  ]
}</con:request><con:originalUri>https://emias.info/api-notifications//v1/prPush/vaccinations</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="status" path="/v1/prPush/upload/status" id="5e280bbd-3d0a-4be7-8c31-42d01cbeb0ec"><con:settings/><con:parameters><con:parameter><con:name>campaignId</con:name><con:value>q</con:value><con:style>QUERY</con:style><con:default>q</con:default></con:parameter></con:parameters><con:method name="Method 1" id="1ce079c6-f281-4d4c-be73-84418118dd5f" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:stat="http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/prPush/upload/status">stat:Fault</con:element></con:representation><con:request name="get status" id="1556628e-09bd-4f6a-8b92-2a51aa34e850" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="save" path="/v1/settings/save" id="8596f551-418a-463e-9aad-5b1394c6a836"><con:settings/><con:parameters/><con:method name="Method 1" id="5426d82e-c8a7-4728-8b6d-5612c6478f7c" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="86fd6789-ad4a-4a4d-a491-4ac49a3c220b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="send" path="/v1/message/send" id="056d3651-1226-47cd-9e64-a1b1eed97f60"><con:settings/><con:parameters><con:parameter><con:name>accessToken</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="192c5f8d-d435-40be-8c7f-3fd4f6cf813c" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="c21cf8fc-9e54-4cb8-9659-efbd24e54724" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>accessToken</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="vaccinations" path="/v1/prPush/vaccinations" id="1eed8713-4bef-4d76-b626-79045904fcab"><con:settings/><con:parameters/><con:method name="Method 1" id="c67eb3eb-89e0-4e75-a1a3-fa90d8da82b1" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="96b92b74-5be1-403d-ba93-d00ace0756aa" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="send" path="/v1/message/send" id="d0b7bcbb-e8f2-4a63-93f4-1d5a65dc2938"><con:settings/><con:parameters><con:parameter><con:name>accessToken</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="ca0cce61-9eaf-42f8-ab7f-42e3e36158f5" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="234a06a7-612c-4ca1-a040-3e735a08bdfa" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "eventId": "string",
  "eventCode": "EIM",
  "dateTime": 1691664161,
  "to ": {
    "deviceGuid": "db7a56fd-dce7-41f6-9943-077362ec24f9"
  },
  "data": {
    "title": "Тест пушей Инфо19",
    "body": "Запрос на ИЗМЕНЕНИЕ  записи19",
    "type": "appointment",
    "notificationId": 19,
    "payload": "{\"type\":\"CHANGE\",\"id\":10000000019,\"appointmentList\":\"Active\",\"oms\":\"0000000000001073\"}"
  }
}</con:request><con:originalUri>https://emias.info/api-notifications//v1/message/send</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="accessToken" value="${#Project#accessToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>accessToken</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="checkUnreadMessages" path="/v1/message/checkUnreadMessages" id="c6395254-5468-4057-afb3-7dc62157e42c"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value>12300</con:value><con:style>QUERY</con:style><con:default>12300</con:default></con:parameter><con:parameter><con:name>deviceGuid</con:name><con:value>1cbbd7a4-84d0-45ab-8446-6e5a36b4681e</con:value><con:style>QUERY</con:style><con:default>1cbbd7a4-84d0-45ab-8446-6e5a36b4681e</con:default></con:parameter></con:parameters><con:method name="Method 1" id="fde90574-9150-47e5-83cb-8fc6103a522d" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:chec="http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/message/checkUnreadMessages">chec:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:chec="http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/message/checkUnreadMessages">chec:Response</con:element></con:representation><con:request name="checkUnreadMessages" id="62202491-6ba4-481f-94b4-54837d679367" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="view" path="/v1/message/view" id="1d039e97-9202-44e0-8da9-0cc4596ffc29"><con:settings/><con:parameters><con:parameter><con:name>notificationId</con:name><con:value>17341</con:value><con:style>QUERY</con:style><con:default>17341</con:default></con:parameter></con:parameters><con:method name="Method 1" id="ddb11071-f096-4ab2-a1e9-b7475d9d6a02" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="view" id="0deaa0ab-97fb-4908-8e0e-3532b3a2f01b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="tmk" path="/v1/status/tmk" id="f38d235d-4a38-45f1-8a61-ccfa22a1bd4c"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>deviceGuid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="0f51096f-8177-4121-b3c2-37b2cb8284d1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tmk="http://notifications.emiasinfo-application.test.emias.mos.ru/v1/status/tmk">tmk:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tmk="http://notifications.emiasinfo-application.test.emias.mos.ru/v1/status/tmk">tmk:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getTmk" id="a84c78d7-71f3-4f1d-a333-2d43a4e7852c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/v1/status/tmk</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestSuite#patientId}"/>
  <con:entry key="deviceGuid" value="${#TestSuite#deviceGuid}"/>
  <con:entry key="appointmentId" value="${#TestSuite#appointmentId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry><con:entry>appointmentId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="start" path="/v1/tokens/start" id="28d064fe-1ada-44ea-ab34-e7cdd329b93c"><con:settings/><con:parameters/><con:method name="Method 1" id="b12d5759-cbd5-46d9-b33d-393a5ecf3442" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="1b1591f7-4a5b-4026-b816-67b43dd3c7b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getToken" path="/v1/tokens/getToken" id="65fc6441-1eb8-48f1-bcdb-2364915e3de4"><con:settings/><con:parameters/><con:method name="Method 1" id="8d127d8e-2748-4ec0-b259-82bb9c2f039e" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="d826f2f1-501e-417c-853e-2c0d98a0f57c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getStatus" path="/v1/tokens/getStatus" id="2b98a9dc-6878-40b2-ba4f-af1462cd8c10"><con:settings/><con:parameters/><con:method name="Method 1" id="8487fc28-5213-4b06-80e5-ccbba09697fc" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:get="http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/tokens/getStatus">get:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:get="http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/tokens/getStatus">get:Response</con:element></con:representation><con:request name="Request 1" id="94479f4e-d094-4b4e-9c23-6179e86d36be" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="stop" path="/v1/tokens/stop" id="28dbe357-c3cf-49c1-af91-b64dbdc3e0bb"><con:settings/><con:parameters/><con:method name="Method 1" id="d8c1ca38-a7ca-42ac-ae01-54aa2644e5e8" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="59e7a7d9-5777-4bb1-9ac6-48e2eb3a8819" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notifications.emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="3abb5c53-7829-4020-9a5d-56d63d917cbe" wsaVersion="NONE" name="InterviewServiceBinding" type="wsdl" bindingName="{https://simptom.emias.ru/api/v1/soap/wsdl/types}InterviewServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="InterviewWsdl" targetNamespace="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:schema>
      <xsd:import namespace="https://simptom.emias.ru/api/v1/soap/wsdl/types" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkVgle.K.grUZc6G5ZwMa4J.6UR2sce7Qp.7oYoqk81D_mgLkpUzu9a5z2Cq"/>
      <xsd:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOckl.U52l4ajB9S7psD2jNoPlElCV.BBsNBdpKVRyzje"/>
      <xsd:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOck2615ooJrjC8Knr1lkcocbqC5izqTCxhHheQ--"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"/>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"/>
  </wsdl:message>
  <!--getDialog-->
  <wsdl:message name="getDialogRequestMessage">
    <wsdl:part element="tns:getDialogRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getDialogResponseMessage">
    <wsdl:part element="tns:getDialogResponse" name="body"/>
  </wsdl:message>
  <!--sendAnswer-->
  <wsdl:message name="sendAnswerRequestMessage">
    <wsdl:part element="tns:sendAnswerRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="sendAnswerResponseMessage">
    <wsdl:part element="tns:sendAnswerResponse" name="body"/>
  </wsdl:message>
  <!--checkCode-->
  <wsdl:message name="checkCodeRequestMessage">
    <wsdl:part element="tns:checkCodeRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="checkCodeResponseMessage">
    <wsdl:part element="tns:checkCodeResponse" name="body"/>
  </wsdl:message>
  <!--addEvent-->
  <wsdl:message name="addEventRequestMessage">
    <wsdl:part element="tns:addEventRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="addEventResponseMessage">
    <wsdl:part element="tns:addEventResponse" name="body"/>
  </wsdl:message>
  <!--sendResult-->
  <wsdl:message name="sendResultRequestMessage">
    <wsdl:part element="tns:sendResultRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="sendResultResponseMessage">
    <wsdl:part element="tns:sendResultResponse" name="body"/>
  </wsdl:message>
  <!--sendAnamnesisResult-->
  <wsdl:message name="sendAnamnesisResultRequestMessage">
    <wsdl:part element="tns:sendAnamnesisResultRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="sendAnamnesisResultResponseMessage">
    <wsdl:part element="tns:sendAnamnesisResultResponse" name="body"/>
  </wsdl:message>
  <!--getReferral-->
  <wsdl:message name="getReferralRequestMessage">
    <wsdl:part element="tns:getReferralRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="getReferralResponseMessage">
    <wsdl:part element="tns:getReferralResponse" name="body"/>
  </wsdl:message>
  <!--tempCheckSymptoms-->
  <wsdl:message name="tempCheckSymptomsRequestMessage">
    <wsdl:part element="tns:tempCheckSymptomsRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="tempCheckSymptomsResponseMessage">
    <wsdl:part element="tns:tempCheckSymptomsResponse" name="body"/>
  </wsdl:message>
  <!--tempGetDialog-->
  <wsdl:message name="tempGetDialogRequestMessage">
    <wsdl:part element="tns:tempGetDialogRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="tempGetDialogResponseMessage">
    <wsdl:part element="tns:tempGetDialogResponse" name="body"/>
  </wsdl:message>
  <!--tempSendResult-->
  <wsdl:message name="tempSendResultRequestMessage">
    <wsdl:part element="tns:tempSendResultRequest" name="body"/>
  </wsdl:message>
  <wsdl:message name="tempSendResultResponseMessage">
    <wsdl:part element="tns:tempSendResultResponse" name="body"/>
  </wsdl:message>
  <wsdl:portType name="InterviewServicePortType">
    <wsdl:operation name="getDialog">
      <wsdl:input message="tns:getDialogRequestMessage"/>
      <wsdl:output message="tns:getDialogResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="sendAnswer">
      <wsdl:input message="tns:sendAnswerRequestMessage"/>
      <wsdl:output message="tns:sendAnswerResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="checkCode">
      <wsdl:input message="tns:checkCodeRequestMessage"/>
      <wsdl:output message="tns:checkCodeResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="addEvent">
      <wsdl:input message="tns:addEventRequestMessage"/>
      <wsdl:output message="tns:addEventResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="sendResult">
      <wsdl:input message="tns:sendResultRequestMessage"/>
      <wsdl:output message="tns:sendResultResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="sendAnamnesisResult">
      <wsdl:input message="tns:sendAnamnesisResultRequestMessage"/>
      <wsdl:output message="tns:sendAnamnesisResultResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="getReferral">
      <wsdl:input message="tns:getReferralRequestMessage"/>
      <wsdl:output message="tns:getReferralResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="tempGetDialog">
      <wsdl:input message="tns:tempGetDialogRequestMessage"/>
      <wsdl:output message="tns:tempGetDialogResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="tempCheckSymptoms">
      <wsdl:input message="tns:tempCheckSymptomsRequestMessage"/>
      <wsdl:output message="tns:tempCheckSymptomsResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
    <wsdl:operation name="tempSendResult">
      <wsdl:input message="tns:tempSendResultRequestMessage"/>
      <wsdl:output message="tns:tempSendResultResponseMessage"/>
      <wsdl:fault message="tns:fault" name="fault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="InterviewServiceBinding" type="tns:InterviewServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getDialog">
      <soap12:operation soapAction="getDialog" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendAnswer">
      <soap12:operation soapAction="sendAnswer" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkCode">
      <soap12:operation soapAction="checkCode" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEvent">
      <soap12:operation soapAction="addEvent" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendResult">
      <soap12:operation soapAction="sendResult" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendAnamnesisResult">
      <soap12:operation soapAction="sendAnamnesisResult" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferral">
      <soap12:operation soapAction="getReferral" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="tempCheckSymptoms">
      <soap12:operation soapAction="tempCheckSymptoms" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="tempGetDialog">
      <soap12:operation soapAction="tempGetDialog" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="tempSendResult">
      <soap12:operation soapAction="tempSendResult" style="document"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"/>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="InterviewService">
    <wsp:PolicyReference URI="#authPolicy" xmlns:wsp="http://www.w3.org/ns/ws-policy"/>
    <wsdl:port binding="tns:InterviewServiceBinding" name="InterviewServicePort">
      <soap12:address location="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkVgle.K.grUZc6G5ZwMa4J.6UR2sce7Qp.7oYoqk81D_mgLkpUzu9a5z2Cq</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" targetNamespace="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:tns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLogDeYPjN4dtLcJQ0glQaUebWHqBQrvlkPvFWuQ--"/>
  <xs:element name="getDialogRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element minOccurs="0" name="complaints" type="xs:string"/>
        <xs:element minOccurs="0" name="source" type="xs:string"/>
        <xs:element minOccurs="0" name="code" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getDialogResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element maxOccurs="1" name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element name="age" type="xs:integer"/>
              <xs:element name="currentStage" type="xs:string"/>
              <xs:element name="emergency">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="status" type="xs:boolean"/>
                    <xs:element name="comment" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="finished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsFinished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsSent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="anamnesisIsExist" type="xs:boolean"/>
              <xs:element name="gender" type="xs:string"/>
              <xs:element minOccurs="0" name="genderQuestion" type="xs:boolean"/>
              <xs:element name="positionNomCode" type="xs:string"/>
              <xs:element name="question">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="answerConditions">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answerCondition">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="answers">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="block">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="answerPlaceholder" type="xs:string"/>
                    <xs:element name="answerVariants">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="attribute" type="xs:string"/>
                    <xs:element name="entity" type="xs:string"/>
                    <xs:element name="format">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="delimiter" type="xs:string"/>
                          <xs:element minOccurs="0" name="delimiter2" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePrefix" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePostfix" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="questionId" type="xs:string"/>
                    <xs:element name="text" type="xs:string"/>
                    <xs:element name="type" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="referrals">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="referral">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="name" type="xs:string"/>
                          <xs:element name="score" type="xs:integer"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="source" type="xs:string"/>
              <xs:element name="summaryText" type="xs:string"/>
              <xs:element minOccurs="0" name="timestamp" type="xs:string"/>
              <xs:element name="userUuid" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendAnswerRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element maxOccurs="unbounded" name="answer" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendAnswerResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element name="age" type="xs:integer"/>
              <xs:element name="currentStage" type="xs:string"/>
              <xs:element name="emergency">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="status" type="xs:boolean"/>
                    <xs:element name="comment" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="finished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsFinished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsSent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="anamnesisIsExist" type="xs:boolean"/>
              <xs:element name="gender" type="xs:string"/>
              <xs:element minOccurs="0" name="genderQuestion" type="xs:boolean"/>
              <xs:element name="positionNomCode" type="xs:string"/>
              <xs:element name="question">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="answerConditions">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answerCondition">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="answers">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="block">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="answerPlaceholder" type="xs:string"/>
                    <xs:element name="answerVariants">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="attribute" type="xs:string"/>
                    <xs:element name="entity" type="xs:string"/>
                    <xs:element name="format">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="delimiter" type="xs:string"/>
                          <xs:element minOccurs="0" name="delimiter2" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePrefix" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePostfix" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="questionId" type="xs:string"/>
                    <xs:element name="text" type="xs:string"/>
                    <xs:element name="type" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="referrals">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="referral">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="name" type="xs:string"/>
                          <xs:element name="score" type="xs:integer"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="source" type="xs:string"/>
              <xs:element name="summaryText" type="xs:string"/>
              <xs:element minOccurs="0" name="timestamp" type="xs:string"/>
              <xs:element name="userUuid" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="checkCodeRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="code" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="checkCodeResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="codeIsCorrect" type="xs:boolean"/>
              <xs:element name="positionNomCode" type="xs:string"/>
              <xs:element name="tags">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="tag" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="addEventRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="code" type="xs:string"/>
        <xs:element name="event" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="addEventResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendResultRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendResultResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element minOccurs="0" name="anamnesisViewType" type="xs:string"/>
              <xs:element minOccurs="0" name="anamnesisStart" type="xs:boolean"/>
              <xs:element name="result" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendAnamnesisResultRequest">
    <xs:annotation>
      <xs:documentation>Отправка ААЖ в ЕСУ</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="sendAnamnesisResultResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element name="documentId" type="xs:integer"/>
              <xs:element name="result" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getReferralRequest">
    <xs:annotation>
      <xs:documentation>Возвращает список рекомендуемых специальностей</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="1" name="dialogUuid" type="xs:string"/>
        <xs:element minOccurs="0" name="version" type="xs:string"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="possiblePositionNomCode" type="xs:string"/>
        <xs:element minOccurs="0" name="topN" type="xs:integer"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getReferralResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="speciality">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="referralSpeciality" type="xs:string"/>
                    <xs:element name="positionNomCode" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="appointmentType" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--tempCheckSymptoms-->
  <xs:element name="tempCheckSymptomsRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="patientId" type="xs:integer"/>
        <xs:element minOccurs="0" name="positionNomCode" type="xs:string"/>
        <xs:element minOccurs="0" name="complaintsFinished" type="xs:boolean"/>
        <xs:element minOccurs="0" name="complaintsSent" type="xs:boolean"/>
        <xs:element minOccurs="0" name="createdAtAfter" type="xs:dateTime"/>
        <xs:element minOccurs="0" name="createdAtBefore" type="xs:dateTime"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempCheckSymptomsResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element name="dialogs">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="dialog">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="dialogUuid" type="xs:string"/>
                    <xs:element name="codeTemp" type="xs:string"/>
                    <xs:element name="code" type="xs:string"/>
                    <xs:element name="positionNomCode" type="xs:string"/>
                    <xs:element name="complaintsFinished" type="xs:boolean"/>
                    <xs:element name="complaintsSent" type="xs:boolean"/>
                    <xs:element name="createdAt" type="xs:dateTime"/>
                    <xs:element name="updatedAt" type="xs:dateTime"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--tempGetDialog-->
  <xs:element name="tempGetDialogRequest">
    <xs:annotation>
      <xs:documentation>Метод создания диалога в рамках эксперимента</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element name="complaints" type="xs:string"/>
        <xs:element name="codeTemp" type="xs:string"/>
        <xs:element name="flowNumber" type="xs:string"/>
        <xs:element name="source" type="xs:string"/>
        <xs:element name="patientId" type="xs:integer"/>
        <xs:element name="age" type="xs:integer"/>
        <xs:element name="gender" type="xs:string"/>
        <xs:element name="positionNomCode" type="xs:string"/>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="possiblePositionNomCode" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempGetDialogResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element maxOccurs="1" name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dialogUuid" type="xs:string"/>
              <xs:element name="age" type="xs:integer"/>
              <xs:element name="currentStage" type="xs:string"/>
              <xs:element name="emergency">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="status" type="xs:boolean"/>
                    <xs:element name="comment" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="finished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsFinished" type="xs:boolean"/>
              <xs:element minOccurs="0" name="complaintsSent" type="xs:boolean"/>
              <xs:element minOccurs="0" name="anamnesisIsExist" type="xs:boolean"/>
              <xs:element name="gender" type="xs:string"/>
              <xs:element minOccurs="0" name="genderQuestion" type="xs:boolean"/>
              <xs:element name="positionNomCode" type="xs:string"/>
              <xs:element name="question">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="answerConditions">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answerCondition">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="answers">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="block">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="answerPlaceholder" type="xs:string"/>
                    <xs:element name="answerVariants">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="attribute" type="xs:string"/>
                    <xs:element name="entity" type="xs:string"/>
                    <xs:element name="format">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="delimiter" type="xs:string"/>
                          <xs:element minOccurs="0" name="delimiter2" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePrefix" type="xs:string"/>
                          <xs:element minOccurs="0" name="valuePostfix" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="questionId" type="xs:string"/>
                    <xs:element name="text" type="xs:string"/>
                    <xs:element name="type" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="referrals">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="referral">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="name" type="xs:string"/>
                          <xs:element name="score" type="xs:integer"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="source" type="xs:string"/>
              <xs:element name="summaryText" type="xs:string"/>
              <xs:element minOccurs="0" name="timestamp" type="xs:string"/>
              <xs:element name="userUuid" type="xs:string"/>
              <xs:element name="userUuidTemp" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--tempSendResult-->
  <xs:element name="tempSendResultRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="dialogUuid" type="xs:string"/>
        <xs:element name="code" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="tns:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="tempSendResultResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="success" type="xs:boolean"/>
        <xs:element maxOccurs="1" name="data">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="result" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLogDeYPjN4dtLcJQ0glQaUebWHqBQrvlkPvFWuQ--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOcko.U_.ZX2V3HXLpj9bE_zBivmR"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOcko.U_.ZX2V3HXLpj9bE_zBivmR</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOckl.U52l4ajB9S7psD2jNoPlElCV.BBsNBdpKVRyzje</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLogDeYPjN4dtLcJQ0glQaUebWHqBQrvlkPvFWuQ--"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOck2615ooJrjC8Knr1lkcocbqC5izqTCxhHheQ--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOcko.U_.ZX2V3HXLpj9bE_zBivmR"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkljiOuLohDIYemG.sQTOckl.U52l4ajB9S7psD2jNoPlElCV.BBsNBdpKVRyzje"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="da9f5dd7-3558-4c9c-acce-4f3580bad94e" isOneWay="false" action="addEvent" name="addEvent" bindingOperationName="addEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="679eaa81-597c-48a9-81b1-f0682d9d3762" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:addEventRequest>\r
         <typ:code>?</typ:code>\r
         <typ:event>?</typ:event>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:addEventRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/addEventRequest"/></con:call></con:operation><con:operation id="f7f0be97-28d0-4858-806b-02dd1ddda6e0" isOneWay="false" action="checkCode" name="checkCode" bindingOperationName="checkCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6c736b7b-17d1-467b-8840-25273ac53ac6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:checkCodeRequest>\r
         <typ:code>?</typ:code>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:checkCodeRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/checkCodeRequest"/></con:call></con:operation><con:operation id="df73db99-2cc3-4b92-a725-4f2572d4672a" isOneWay="false" action="getDialog" name="getDialog" bindingOperationName="getDialog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="85a997e1-4094-459e-a7b4-1e8cbb0592e6" name="!Оригинальный запрос на шину"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
	<soap:Header>
		<wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
			<wsse:UsernameToken xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" wsu:Id="UsernameToken-54afce6d-ef0e-4862-8015-6e3af52bd952">
				<wsse:Username>EIM/EIM</wsse:Username>
			</wsse:UsernameToken>
		</wsse:Security>
		<ns2:userContext xmlns:ns3="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">
			<ns2:systemName>EIM</ns2:systemName>
			<ns2:userName>EIM</ns2:userName>
			<ns2:userRoleId>7187</ns2:userRoleId>
			<ns2:userRights>
				<ns2:userRightId>37070001</ns2:userRightId>
			</ns2:userRights>
			<ns2:jobExecutionId>0</ns2:jobExecutionId>
		</ns2:userContext>
	</soap:Header>
	<soap:Body>
		<getDialogRequest xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">
			<complaints>Температура</complaints>
			<source>EIM</source>
			<code>2glj6</code>
		</getDialogRequest>
	</soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e1bb970d-a51e-4100-89a9-fa759e133461" name="!Отредактированный запрос на шину"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
   <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
			<wsse:UsernameToken xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" wsu:Id="UsernameToken-54afce6d-ef0e-4862-8015-6e3af52bd952">
				<wsse:Username>EIM/EIM</wsse:Username>
			</wsse:UsernameToken>
		</wsse:Security>
      <user:userContext>\r
         <user:systemName>EIM</user:systemName>\r
         <user:userName>EIM</user:userName>\r
         <user:userRoleId>7187</user:userRoleId>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>37070001</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>0</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getDialogRequest>\r
         <typ:complaints>Температура</typ:complaints>\r
         <!--Optional:-->\r
         <typ:source>EIM</typ:source>\r
         <!--Optional:-->\r
         <typ:code>2glj6</typ:code>\r
      </typ:getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2ca001a5-54fb-4ddb-9113-b09c738bf124" name="!Оригинальный запрос напрямую"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-chatboatbackkubep1-bal01.mosgorzdrav.local/CHATBOTBACK/interviewService/v1S</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
	<soap:Header>
		<wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
			<wsse:UsernameToken xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" wsu:Id="UsernameToken-54afce6d-ef0e-4862-8015-6e3af52bd952">
				<wsse:Username>EIM/EIM</wsse:Username>
			</wsse:UsernameToken>
		</wsse:Security>
		<ns2:userContext xmlns:ns3="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">
			<ns2:systemName>EIM</ns2:systemName>
			<ns2:userName>EIM</ns2:userName>
			<ns2:userRoleId>7187</ns2:userRoleId>
			<ns2:userRights>
				<ns2:userRightId>37070001</ns2:userRightId>
			</ns2:userRights>
			<ns2:jobExecutionId>0</ns2:jobExecutionId>
		</ns2:userContext>
	</soap:Header>
	<soap:Body>
		<getDialogRequest xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">
			<complaints>Температура</complaints>
			<source>EIM</source>
			<code>2glj6</code>
		</getDialogRequest>
	</soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="de38f753-e415-45a6-8e78-8e191e2a4610" name="Предоставленный запрос"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
	<soap:Header>
		<wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
			<wsse:UsernameToken xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" wsu:Id="UsernameToken-54afce6d-ef0e-4862-8015-6e3af52bd952">
				<wsse:Username>EIM/EIM</wsse:Username>
			</wsse:UsernameToken>
		</wsse:Security>
		<ns2:userContext xmlns:ns3="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">
			<ns2:systemName>EIM</ns2:systemName>
			<ns2:userName>EIM</ns2:userName>
			<ns2:userRoleId>7187</ns2:userRoleId>
			<ns2:userRights>
				<ns2:userRightId>37070001</ns2:userRightId>
			</ns2:userRights>
			<ns2:jobExecutionId>0</ns2:jobExecutionId>
		</ns2:userContext>
	</soap:Header>
	<soap:Body>
		<typ:getDialogRequest
      xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types"
      xmlns:ns2="http://emias.mos.ru/system/v1/userContext/"
      xmlns:ns3="http://emias.mos.ru/system/v1/faults/">
      <complaints>Температура</complaints>
      <source>EIM</source>
      <code>2glj6</code>
    </typ:getDialogRequest>
	</soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="23126975-75de-4e63-9144-eb87679608e9" name="Запрос из старого приложения"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">\r
   <soap-env:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext xmlns:user="http://emias.mos.ru/system/v1/userContext/">\r
         <user:systemName>EIM</user:systemName>\r
         <user:userName>0</user:userName>\r
         <user:userRoleId>7086</user:userRoleId>\r
         <user:isUserRoleSystemWide>1</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <user:userRightId>37070001</user:userRightId>\r
            <user:userRightId>37070002</user:userRightId>\r
            <user:userRightId>37070003</user:userRightId>\r
            <user:userRightId>37070004</user:userRightId>\r
            <user:userRightId>37070005</user:userRightId>\r
            <user:userRightId>37070006</user:userRightId>\r
            <user:userRightId>37070007</user:userRightId>\r
            <user:userRightId>37070008</user:userRightId>\r
            <user:userRightId>37070009</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>0</user:jobExecutionId>\r
      </user:userContext>\r
   </soap-env:Header>\r
   <soap-env:Body>\r
      <ns0:getDialogRequest xmlns:ns0="https://simptom.emias.ru/api/v1/soap/wsdl/types">\r
         <ns0:dialogUuid/>\r
         <ns0:complaints>.......... ..........</ns0:complaints>\r
         <ns0:source>web</ns0:source>\r
         <ns0:code>1234</ns0:code>\r
      </ns0:getDialogRequest>\r
   </soap-env:Body>\r
</soap-env:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f754b06e-5b17-4596-8d82-d1263a5d3a28" name="Составленный из шины теста"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" 
xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-54afce6d-ef0e-4862-8015-6e3af52bd952" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <user:userContext>\r
         <user:systemName>EIM</user:systemName>\r
         <user:userName>EIM</user:userName>\r
         <user:userRoleId>7187</user:userRoleId>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>37070001</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>0</user:jobExecutionId>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getDialogRequest>\r
         <typ:complaints>Температура</typ:complaints>\r
         <!--Optional:-->\r
         <typ:source>EIM</typ:source>\r
         <!--Optional:-->\r
         <typ:code>2glj6</typ:code>\r
      </typ:getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b83cd4a6-d5f3-455e-94eb-8bdfdf0f1b4b" name="тестовый запрос создания диалога на шину"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-dd4c43a7-4643-4a31-935e-4ae98c994461" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>7187</ns2:userRoleId>\r
         <ns2:userRights>\r
            <ns2:userRightId>37070001</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getDialogRequest xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <complaints>Больно в душе</complaints>\r
         <source>EIM</source>\r
         <code>1234</code>\r
      </getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="afba8739-750a-412b-ba87-31d664290093" name="Copy of тестовый запрос создания диалога на прямую"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/CHATBOTBACK/interviewService/v1S</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-dd4c43a7-4643-4a31-935e-4ae98c994461" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>7187</ns2:userRoleId>\r
         <ns2:userRights>\r
            <ns2:userRightId>37070001</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getDialogRequest xmlns="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <complaints>Больно в душе</complaints>\r
         <source>EIM</source>\r
         <code>1234</code>\r
      </getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="2862f11f-34d2-4554-b6ef-f7f9516236f8" name="Request 9"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getDialogRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--Optional:-->\r
         <typ:complaints>?</typ:complaints>\r
         <!--Optional:-->\r
         <typ:source>?</typ:source>\r
         <!--Optional:-->\r
         <typ:code>?</typ:code>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="e6845bf7-e34a-4c46-baff-68c125eb61a7" name="Request 10"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getDialogRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--Optional:-->\r
         <typ:complaints>?</typ:complaints>\r
         <!--Optional:-->\r
         <typ:source>?</typ:source>\r
         <!--Optional:-->\r
         <typ:code>?</typ:code>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d77b8832-37c4-47e6-b100-33c76612f43a" name="Request 11"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="https://simptom.emias.ru/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getDialogRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--Optional:-->\r
         <typ:complaints>?</typ:complaints>\r
         <!--Optional:-->\r
         <typ:source>?</typ:source>\r
         <!--Optional:-->\r
         <typ:code>?</typ:code>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://simptom.emias.ru/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="19c93337-d207-43d0-a991-1bb0fc9b55fc" isOneWay="false" action="getReferral" name="getReferral" bindingOperationName="getReferral" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d7821053-0a2c-495d-a94a-8bd54da69841" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getReferralRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--Optional:-->\r
         <typ:version>?</typ:version>\r
         <!--Zero or more repetitions:-->\r
         <typ:possiblePositionNomCode>?</typ:possiblePositionNomCode>\r
         <!--Optional:-->\r
         <typ:topN>?</typ:topN>\r
      </typ:getReferralRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getReferralRequest"/></con:call></con:operation><con:operation id="2882e2d8-631e-4c35-9a76-66d084d3aa8b" isOneWay="false" action="sendAnamnesisResult" name="sendAnamnesisResult" bindingOperationName="sendAnamnesisResult" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="081f6ab1-57b6-48c3-b2e7-241e18c20e6d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:sendAnamnesisResultRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
      </typ:sendAnamnesisResultRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendAnamnesisResultRequest"/></con:call></con:operation><con:operation id="13cf39c3-0dae-4c2f-aa09-c4cac3d1c7a9" isOneWay="false" action="sendAnswer" name="sendAnswer" bindingOperationName="sendAnswer" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3f6bd47d-24b5-4dd3-9aa2-68e747b3159b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:sendAnswerRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--1 or more repetitions:-->\r
         <typ:answer>?</typ:answer>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:sendAnswerRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendAnswerRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ceea0521-9cd2-4d9e-b54b-7285b9d7f257" isOneWay="false" action="sendResult" name="sendResult" bindingOperationName="sendResult" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6270a805-6383-47ad-afa7-c9a3eb49d26d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:sendResultRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:sendResultRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendResultRequest"/></con:call></con:operation><con:operation id="3a83a1f7-d1cc-4f16-a71a-2f1c7c532688" isOneWay="false" action="tempCheckSymptoms" name="tempCheckSymptoms" bindingOperationName="tempCheckSymptoms" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="79a69166-1c56-4dc8-af87-33dbf5e06a87" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:tempCheckSymptomsRequest>\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:positionNomCode>?</typ:positionNomCode>\r
         <!--Optional:-->\r
         <typ:complaintsFinished>?</typ:complaintsFinished>\r
         <!--Optional:-->\r
         <typ:complaintsSent>?</typ:complaintsSent>\r
         <!--Optional:-->\r
         <typ:createdAtAfter>?</typ:createdAtAfter>\r
         <!--Optional:-->\r
         <typ:createdAtBefore>?</typ:createdAtBefore>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:tempCheckSymptomsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/tempCheckSymptomsRequest"/></con:call></con:operation><con:operation id="3d2aa2ae-59fb-4a80-b1fe-a82dc00f8b0c" isOneWay="false" action="tempGetDialog" name="tempGetDialog" bindingOperationName="tempGetDialog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0ced490a-997d-4b3a-b25a-a757ff12f19f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:tempGetDialogRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <typ:complaints>?</typ:complaints>\r
         <typ:codeTemp>?</typ:codeTemp>\r
         <typ:flowNumber>?</typ:flowNumber>\r
         <typ:source>?</typ:source>\r
         <typ:patientId>?</typ:patientId>\r
         <typ:age>?</typ:age>\r
         <typ:gender>?</typ:gender>\r
         <typ:positionNomCode>?</typ:positionNomCode>\r
         <!--Zero or more repetitions:-->\r
         <typ:possiblePositionNomCode>?</typ:possiblePositionNomCode>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:tempGetDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/tempGetDialogRequest"/></con:call></con:operation><con:operation id="f090f4d5-9dd7-40f6-9eaa-b84b50e0edc7" isOneWay="false" action="tempSendResult" name="tempSendResult" bindingOperationName="tempSendResult" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e569f6eb-dbf0-4d9a-afba-caade34ada86" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:tempSendResultRequest>\r
         <typ:dialogUuid>?</typ:dialogUuid>\r
         <typ:code>?</typ:code>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:tempSendResultRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/tempSendResultRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="70559ea5-74a6-4204-ab04-b2ea0a9ec763" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://10.2.173.132:14380" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://10.2.173.132:14380</con:endpoint></con:endpoints><con:resource name="Add" path="/api/v2.0/communication/mobile/cloud/token/add" id="4524d0af-f78f-48bf-a465-421de28641a1"><con:settings/><con:parameters><con:parameter><con:name>X-Ext-Emp-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add 1" id="2e64f02c-a956-4dd2-8070-4712b3889a18" method="POST"><con:settings/><con:parameters/><con:request name="Запрос в емп по урлу" id="1ccc716b-b86a-42cd-b90c-3aa7afcf39a3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://emp.mos.ru</con:endpoint><con:request>{
   "citizen_ident_type" : "device_guid",
   "citizen_ident_value" : "c12aafd6-b2cf-4537-ab6f-0bfd02217100",
   "platform" : "ios",
   "cloud__name" : "FCM",
   "app_version" : "EmiasTest-b5bcda89-develop",
   "device_guid" : "c12aafd6-b2cf-4537-ab6f-0bfd02217100",
   "device_cloud_id" : "fsCIOOIJOIOjiuhubETGfXbpC7Oo1-ycyQUS6iFuMU-k2xwUbgnwpzG8pdVD0OMVwb3ingUn67Csw1HWzl9n2MXazMFD1303mQ51LiAQmBBA4cq1pDb6WBukpvhjBHe1XVgy0EsfIpKQ8MmbwGZRg_J"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Ext-Emp-Token" value="${#Project#empToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>X-Ext-Emp-Token</con:entry></con:parameterOrder></con:request><con:request name="Запрос в емп по IP" id="1ccc716b-b86a-42cd-b90c-3aa7afcf39a3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.0.20.107:14380</con:endpoint><con:request>{
   "citizen_ident_type" : "device_guid",
   "citizen_ident_value" : "c12aafd6-b2cf-4537-ab6f-0bfd02217101",
   "platform" : "ios",
   "cloud__name" : "FCM",
   "app_version" : "EmiasTest-b5bcda89-develop",
   "device_guid" : "c12aafd6-b2cf-4537-ab6f-0bfd02217101",
   "device_cloud_id" : "huoTmnkddycyQUS6iFuMU-k2xwUbgnwpzG8pdVD0OMVwb3ingUn67Csw1HWzl9n2MXazMFD1303mQ51LiAQmBBA4cq1pDb6WBukpvhjBHe1XVgy0EsfIpKQ8MmbwGZRg_J"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Ext-Emp-Token" value="${#Project#empToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>X-Ext-Emp-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="delete" path="/api/v2.0/communication/mobile/cloud/token/delete" id="2a7c244e-026a-43ea-94a1-d5c0bd288836"><con:settings/><con:parameters><con:parameter><con:name>X-Ext-Emp-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="776d9f58-8149-438b-8a56-3c2dae60a748" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="bc16f11b-7eb8-4cdb-a725-daafab07f426" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.2.173.132:14380</con:endpoint><con:request>{\r
   "device_cloud_id" : "xANWTMGECDvfuqlQpFmRVZgUYIrjdOtsJbheBHSi"\r
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Ext-Emp-Token" value="${#Project#empToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>X-Ext-Emp-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="ecab2dd0-7c02-4e32-a082-8c5f390261c9" wsaVersion="NONE" name="hospitalServiceBinding" type="wsdl" bindingName="{http://emias.mos.ru/hospitalization/hospitalService/v2/}hospitalServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="hospitalServiceV2" targetNamespace="http://emias.mos.ru/hospitalization/hospitalService/v2/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns1="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/hospitalization/hospitalService/v2/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>Версия 1.4.0.99</wsdl:documentation>
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQugAOTDB3XtiTgBkXUbvh0Ip781WlYcmvrJdZp8GzrY-"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQvsSKS72wTtuWByg9TI1WJQ1OHSqO66HMx71"/>
      <xs:import namespace="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfVD2kF6sZXjcQJJ1ICudKQvUcLzLrxnR6eB1iBVf_hs9m.ZCDetDRV4DIesEDk_xQES6ZlxUAymHvEA4X"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getHospitalPatientOutput">
    <wsdl:part element="ns1:getHospitalizationInfoByPatientResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getHospitalPatientInput">
    <wsdl:part element="ns1:getHospitalizationInfoByPatientRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="hospitalServicePortType">
    <wsdl:operation name="getHospitalizationInfoByPatient">
      <wsdl:input message="tns:getHospitalPatientInput"></wsdl:input>
      <wsdl:output message="tns:getHospitalPatientOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="hospitalServiceBinding" type="tns:hospitalServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getHospitalizationInfoByPatient">
      <soap:operation soapAction="getHospitalizationInfoByPatient"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="hospitalServiceV2">
    <wsdl:port binding="tns:hospitalServiceBinding" name="hospitalServicePort">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQugAOTDB3XtiTgBkXUbvh0Ip781WlYcmvrJdZp8GzrY-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQuUAOMlNthnEiDjF8Ke3UJvOzdI-"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Роли пользователя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль пользователя"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>ИД Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQuUAOMlNthnEiDjF8Ke3UJvOzdI-</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQvsSKS72wTtuWByg9TI1WJQ1OHSqO66HMx71</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQuUAOMlNthnEiDjF8Ke3UJvOzdI-"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQugAOTDB3XtiTgBkXUbvh0Ip781WlYcmvrJdZp8GzrY-"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10 записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfVD2kF6sZXjcQJJ1ICudKQvUcLzLrxnR6eB1iBVf_hs9m.ZCDetDRV4DIesEDk_xQES6ZlxUAymHvEA4X</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" version="Версия 1.4.0.99" xmlns:core="http://emias.mos.ru/hospitalization/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/hospitalization/core/v2/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfVD2kF6sZXjcQJJ1ICudKQv4cLiesxCc4Uwt0O.EIWYW92Xo6qRmYgGvsQQ--"/>
  <xs:element name="getHospitalizationInfoByPatientRequest">
    <xs:annotation>
      <xs:documentation>Входные параметры метода getHospitalizationInfoByPatient</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="patientId" type="xs:long"/>
        <xs:element name="options" type="core:Options"/>
        <xs:element maxOccurs="1" minOccurs="0" name="datePeriod" type="core:DatePeriod"/>
        <xs:element maxOccurs="1" minOccurs="0" name="pagingOptions" type="core:PagingSortingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getHospitalizationInfoByPatientResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="pagingResults" type="core:PagingResultsImpl">
          <xs:annotation>
            <xs:documentation>Параметры пагинации</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="1" minOccurs="0" name="patientId" type="xs:long">
          <xs:annotation>
            <xs:documentation>Идентификатор Пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="1" minOccurs="0" name="hospitalizationSign" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак госпитализации пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="1" minOccurs="0" name="deathSign" type="xs:boolean">
          <xs:annotation>
            <xs:documentation>Признак смерти пациента</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="unbounded" minOccurs="0" name="hospitalizations" type="core:Hospitalization">
          <xs:annotation>
            <xs:documentation>Госпитализации</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfVD2kF6sZXjcQJJ1ICudKQv4cLiesxCc4Uwt0O.EIWYW92Xo6qRmYgGvsQQ--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/hospitalization/core/v2/" xmlns="http://emias.mos.ru/hospitalization/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXPZNOBqZcH_lbwVjIfo.5RvA5BOhllxkY"/>
  <xs:complexType name="Hospitalization">
    <xs:annotation>
      <xs:documentation>Сущность Госпитализации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="docId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hospitalDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время госпитализации</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="admissionsDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата и время поступления в стационар</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MOName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование стационарной МО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MOId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Идентификатор МО (МО, в которой осуществлялось лечение)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="departmentName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование стационарного отделения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="diagnosis" type="Diagnosis">
        <xs:annotation>
          <xs:documentation>Диагноз при поступлении (развернутый клинический диагноз)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hospitalizationStatus" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Статус случая госпитализации</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="epicrisis" nillable="true" type="HospitalizationEpicris">
        <xs:annotation>
          <xs:documentation>Выписные эпикризы</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="deathFact" nillable="true" type="HospitalizationDeathFact">
        <xs:annotation>
          <xs:documentation>Выписные эпикризы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HospitalizationDeathFact">
    <xs:sequence>
      <xs:element name="docId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="deathDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата смерти пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HospitalizationEpicris">
    <xs:sequence>
      <xs:element name="docId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hospitalAdmissionsDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="extractDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="isConfidential" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Идентификатор документа</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Diagnosis">
    <xs:sequence>
      <xs:element name="diagnosisTypeCode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код типа диагноза</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MKB10Code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код диагноза по МКБ-10</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="MKB10Name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование диагноза по МКБ-10</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="detailedDiagnosis" type="xs:string">
        <xs:annotation>
          <xs:documentation>Развернутый клинический диагноз</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PagingSortingOptions">
    <xs:complexContent>
      <xs:extension base="PagingOptions">
        <xs:sequence>
          <xs:element minOccurs="0" name="sortingOptions" type="SortingOptions">
            <xs:annotation>
              <xs:documentation>Параметры сортировки</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" minOccurs="1" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки (используются в соответствии с переданной
                        последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Условия сортировки
                (используются в соответствии с переданной последовательностью)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="1" minOccurs="1" name="attributeName" type="SortVariant">
        <xs:annotation>
          <xs:documentation>Наименование поля, по которому должна быть произведена сортировка.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="descending" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Направление сортировки.
                        Возможные значения:
                        true - сортировка по убыванию;
                        false - сортировка по возрастанию
                        По умолчанию устанавливается значение true.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="SortVariant">
    <xs:restriction base="xs:string">
      <xs:enumeration value="hospitalizationMOName"/>
      <xs:enumeration value="hospitalizationsdiagnosisTypeCode"/>
      <xs:enumeration value="hospitalizationhospitalDate"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXPZNOBqZcH_lbwVjIfo.5RvA5BOhllxkY</con:url><con:content><![CDATA[<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkK9jOJsv5giiOUhb0eXelLZ_MVcjWuwlyDKagWTUZFb5IrTJjaIkVwX6_lRYMzStnQS4B57K5YfEnz4Aq8EXihXLYVPF.1JQuUAOMlNthnEiDjF8Ke3UJvOzdI-"/>
  <!--references-->
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true -
                    если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов в выборке</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingResultsImpl">
    <xs:complexContent>
      <xs:extension base="PagingResults"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService</con:endpoint></con:endpoints><con:operation id="de2314df-ca38-4c84-b2cb-bfbee714f822" isOneWay="false" action="getHospitalizationInfoByPatient" name="getHospitalizationInfoByPatient" bindingOperationName="getHospitalizationInfoByPatient" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c754944e-5b82-4463-b16b-33998d2b12c4" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-36bdd969-8981-478e-8642-7aebb0bc09f2" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns3:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/hospitalization/core/v2/" xmlns="http://emias.mos.ru/hospitalization/hospitalService/v2/types/">\r
         <ns3:systemName>EIM</ns3:systemName>\r
         <ns3:userName>2149c2d2-e0b3-4fe9-a810-4435708242ce</ns3:userName>\r
         <ns3:userRoleId>7064</ns3:userRoleId>\r
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>\r
         <ns3:userRights>\r
            <ns3:userRightId>570001</ns3:userRightId>\r
         </ns3:userRights>\r
         <ns3:jobExecutionId>0</ns3:jobExecutionId>\r
      </ns3:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getHospitalizationInfoByPatientRequest xmlns="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" xmlns:ns2="http://emias.mos.ru/hospitalization/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">\r
         <patientId>30000011308116</patientId>\r
         <options>\r
            <ns2:entry key="hospitalizationForLK">true</ns2:entry>\r
            <ns2:entry key="restrictionsHemodialysis">true</ns2:entry>\r
         </options>\r
         <pagingOptions pageNumber="0" pageSize="30">\r
            <ns2:sortingOptions>\r
               <ns2:sortOrder>\r
                  <ns2:attributeName>hospitalizationhospitalDate</ns2:attributeName>\r
                  <ns2:descending>true</ns2:descending>\r
               </ns2:sortOrder>\r
            </ns2:sortingOptions>\r
         </pagingOptions>\r
      </getHospitalizationInfoByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/hospitalization/hospitalService/v2/hospitalServicePortType/getHospitalizationInfoByPatientRequest"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f8d3add7-ea9e-4f3e-82d3-154dfdcfa2f4" name="запрос на ппак через шину вв"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/hospitalization/hospitalService/v2/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-36bdd969-8981-478e-8642-7aebb0bc09f2" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns3:userContext xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/hospitalization/core/v2/" xmlns="http://emias.mos.ru/hospitalization/hospitalService/v2/types/">\r
         <ns3:systemName>EIM</ns3:systemName>\r
         <ns3:userName>2149c2d2-e0b3-4fe9-a810-4435708242ce</ns3:userName>\r
         <ns3:userRoleId>7064</ns3:userRoleId>\r
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>\r
         <ns3:userRights>\r
            <ns3:userRightId>570001</ns3:userRightId>\r
         </ns3:userRights>\r
         <ns3:jobExecutionId>0</ns3:jobExecutionId>\r
      </ns3:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getHospitalizationInfoByPatientRequest xmlns="http://emias.mos.ru/hospitalization/hospitalService/v2/types/" xmlns:ns2="http://emias.mos.ru/hospitalization/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">\r
         <patientId>30000011308116</patientId>\r
         <options>\r
            <ns2:entry key="hospitalizationForLK">true</ns2:entry>\r
            <ns2:entry key="restrictionsHemodialysis">true</ns2:entry>\r
         </options>\r
         <pagingOptions pageNumber="0" pageSize="30">\r
            <ns2:sortingOptions>\r
               <ns2:sortOrder>\r
                  <ns2:attributeName>hospitalizationhospitalDate</ns2:attributeName>\r
                  <ns2:descending>true</ns2:descending>\r
               </ns2:sortOrder>\r
            </ns2:sortingOptions>\r
         </pagingOptions>\r
      </getHospitalizationInfoByPatientRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/hospitalization/hospitalService/v2/hospitalServicePortType/getHospitalizationInfoByPatientRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="9b17f756-bc54-4b57-a3ce-3a0e91a9c8f7" wsaVersion="NONE" name="PrescriptionInfoServiceV4SoapBinding" type="wsdl" bindingName="{http://emias2.gov.ru/business/llo/v4}PrescriptionInfoServiceV4SoapBinding" soapVersion="1_1" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="PrescriptionInfoServiceV4" targetNamespace="http://emias2.gov.ru/business/llo/v4" xmlns:ns1="http://emias2.gov.ru/business/llo/v4/types" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://emias2.gov.ru/business/llo/v4" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias2.gov.ru/business/llo/v4/types" version="1.0" xmlns:tns="http://emias2.gov.ru/business/llo/v4/types" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="fpiChangeMilkShopRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="milkShopId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiChangeMilkShopResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extendedResponse">
        <xs:complexContent>
          <xs:extension base="tns:detailedResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="resultUserInfo" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="detailedResponse">
        <xs:complexContent>
          <xs:extension base="tns:generalResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="resultDetails" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="generalResponse">
        <xs:sequence>
          <xs:element name="resultCode" type="xs:int"/>
          <xs:element minOccurs="0" name="resultDescription" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCompleteOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCompleteOrderResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugAnnotationRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getFullText" type="xs:boolean"/>
          <xs:element minOccurs="0" name="getINNonly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="getStructureLevel" type="xs:int"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugAnnotationResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="annotation" nillable="true" type="tns:annotationDrugs"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="annotationDrugs">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="chapter" nillable="true" type="tns:chapter"/>
          <xs:element minOccurs="0" name="fullText" type="xs:string"/>
          <xs:element minOccurs="0" name="isActual" type="xs:boolean"/>
          <xs:element minOccurs="0" name="latTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="nameType" type="tns:annotationFeature"/>
          <xs:element minOccurs="0" name="rusTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="chapter">
        <xs:sequence>
          <xs:element minOccurs="0" name="bodyStyle" type="xs:string"/>
          <xs:element minOccurs="0" name="chapterText" type="xs:string"/>
          <xs:element minOccurs="0" name="fullTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="headerLevel" type="xs:int"/>
          <xs:element minOccurs="0" name="idx" type="xs:int"/>
          <xs:element minOccurs="0" name="shortTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiCheckPatientRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiCheckPatientResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="hasFoodPrescriptions" type="xs:boolean"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCheckOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Options">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" nillable="true" type="tns:KeyValuePair"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="KeyValuePair">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="key" type="xs:string" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="piCheckOrderResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="drug" nillable="true" type="tns:orderDrugInfo"/>
          <xs:element minOccurs="0" name="externalID" type="xs:string"/>
          <xs:element minOccurs="0" name="orderID" type="xs:long"/>
          <xs:element minOccurs="0" name="patientName" type="tns:patientName"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orderDrugInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:long"/>
          <xs:element minOccurs="0" name="drugID" type="xs:string"/>
          <xs:element minOccurs="0" name="numero" type="xs:int"/>
          <xs:element name="qtySec" type="xs:int"/>
          <xs:element minOccurs="0" name="storageCondition" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="patientName">
        <xs:sequence>
          <xs:element name="firstName" type="xs:string"/>
          <xs:element name="lastName" type="xs:string"/>
          <xs:element minOccurs="0" name="middleName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetDrugOrdersRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetDrugOrdersResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="order" type="tns:orderDrugOrder"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orderDrugOrder">
        <xs:sequence>
          <xs:element name="agregatorID" type="xs:long"/>
          <xs:element name="agregatorName" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="createDate" type="xs:dateTime"/>
          <xs:element name="delivering" type="xs:boolean"/>
          <xs:element name="externalID" type="xs:string"/>
          <xs:element minOccurs="0" name="link" type="xs:string"/>
          <xs:element name="orderID" type="xs:long"/>
          <xs:element minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="prescription" type="tns:prescriptionDrugOrder"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element name="statusCode" type="xs:string"/>
          <xs:element minOccurs="0" name="statusDescription" type="xs:string"/>
          <xs:element minOccurs="0" name="statusDetail" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionDrugOrder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="drug" type="tns:drugOrder"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="drugOrder">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:long"/>
          <xs:element minOccurs="0" name="drugID" type="xs:string"/>
          <xs:element name="qty" type="xs:int"/>
          <xs:element minOccurs="0" name="storageCondition" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piRatePharmacyRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="mark" type="xs:string"/>
          <xs:element name="markedObject" type="tns:markedObject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="markedObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="orderID" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piRatePharmacyResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiSetScheduleRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="servicingDay" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiSetScheduleResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetScheduleRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetScheduleResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionPeriod" type="xs:string"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="schedule" nillable="true" type="tns:fpiScheduleItem"/>
          <xs:element minOccurs="0" name="serviceMode" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="milkShop">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiScheduleItem">
        <xs:sequence>
          <xs:element name="day" type="xs:int"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element name="scheduled" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="timeSlot" nillable="true" type="tns:timeSlotItem"/>
          <xs:element name="workLoad" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="timeSlotItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="service" nillable="true" type="xs:string"/>
          <xs:element name="slotEnd" type="xs:string"/>
          <xs:element name="slotStart" type="xs:string"/>
          <xs:element name="slotType" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDetailsRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getQR" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="signature" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDetailsResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="benefit" type="tns:benefitInfo"/>
          <xs:element minOccurs="0" name="controlType" type="xs:string"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="issuedBy" type="tns:registrationData"/>
          <xs:element minOccurs="0" name="medicine" type="tns:medicineInfo"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" type="tns:pharmacyInfo"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionState" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionTerm" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionType" type="tns:prescriptionType"/>
          <xs:element minOccurs="0" name="QRstring" type="xs:string"/>
          <xs:element minOccurs="0" name="recipeService" type="tns:recipeServiceType"/>
          <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="benefitInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="budget" type="tns:benefitBudget"/>
          <xs:element minOccurs="0" name="code" type="xs:string"/>
          <xs:element minOccurs="0" name="discount" type="tns:discountValue"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registrationData">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctorName" type="xs:string"/>
          <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
          <xs:element minOccurs="0" name="organizationCode" type="xs:string"/>
          <xs:element minOccurs="0" name="organizationStamp" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="medicineInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="dosage" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="usage" type="xs:string"/>
          <xs:element minOccurs="0" name="usageDetails" type="tns:signaDetails"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="signaDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="couponDose" type="xs:double"/>
          <xs:element minOccurs="0" name="couponLength" type="xs:int"/>
          <xs:element minOccurs="0" name="couponMethod" type="xs:string"/>
          <xs:element minOccurs="0" name="couponPer_day" type="xs:int"/>
          <xs:element minOccurs="0" name="couponUnit" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="schedule" nillable="true" type="tns:scheduleItem"/>
          <xs:element minOccurs="0" name="scheduleBase" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="sheduleLenght" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="scheduleItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dayDirections" type="xs:string"/>
          <xs:element minOccurs="0" name="dayZ" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="remainder" nillable="true" type="xs:dateTime"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyIdent" type="xs:string"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="saleInfo" type="tns:saleInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="saleInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element name="saleDate" type="xs:date"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="recipeServiceType">
        <xs:sequence>
          <xs:element name="periodsQty" type="xs:int"/>
          <xs:element name="periodDrugAmount" type="xs:int"/>
          <xs:element minOccurs="0" name="periodicity" type="xs:int"/>
          <xs:element minOccurs="0" name="periodicityUnit" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="servicePeriod" type="tns:ServicePeriod"/>
          <xs:element minOccurs="0" name="booking" type="tns:pharmacyShort"/>
          <xs:element minOccurs="0" name="serviceMessage" type="tns:infoMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServicePeriod">
        <xs:sequence>
          <xs:element name="periodNumber" type="xs:int"/>
          <xs:element name="periodTerm" type="tns:DatePeriod"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="periodMode" nillable="true" type="tns:KeyValuePair"/>
          <xs:element minOccurs="0" name="isAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="isCompleted" type="xs:boolean"/>
          <xs:element name="drugAmount" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceCase" nillable="true" type="tns:ServiceCase"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DatePeriod">
        <xs:sequence>
          <xs:element minOccurs="0" name="start" type="xs:date"/>
          <xs:element minOccurs="0" name="end" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceCase">
        <xs:sequence>
          <xs:element name="saleDate" type="xs:date"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="saleMode" nillable="true" type="tns:KeyValuePair"/>
          <xs:element minOccurs="0" name="pharmacy" type="tns:pharmacyShort"/>
          <xs:element maxOccurs="unbounded" name="drugSold" type="tns:DrugSold"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyShort">
        <xs:sequence>
          <xs:element name="title" type="xs:string"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="phone" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DrugSold">
        <xs:sequence>
          <xs:element minOccurs="0" name="fullTradeName" type="xs:string"/>
          <xs:element minOccurs="0" name="fullTradeNameID" type="xs:int"/>
          <xs:element minOccurs="0" name="packQty" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="infoMessageType">
        <xs:sequence>
          <xs:element minOccurs="0" name="colorMark" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="details" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetMarkPharmacyRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="markedObject" type="tns:markedObject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetMarkPharmacyResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="mark" type="xs:string"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetMilkShopListRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="searchString" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetMilkShopListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="milkShop" nillable="true" type="tns:fullMilkShop"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fullMilkShop">
        <xs:complexContent>
          <xs:extension base="tns:milkShop">
            <xs:sequence>
              <xs:element minOccurs="0" name="area" type="tns:area"/>
              <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
              <xs:element minOccurs="0" name="loadLevel" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:metro"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="area">
        <xs:sequence>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="metro">
        <xs:sequence>
          <xs:element minOccurs="0" name="lineID" type="xs:long"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCancelOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCancelOrderResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPatientPrescriptionsRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPatientPrescriptionsResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="prescription" nillable="true" type="tns:prescriptionItem"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="expirationDate" type="xs:date"/>
          <xs:element name="medicine" type="tns:prescriptionMedicine"/>
          <xs:element name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="prescriptionState" type="xs:string"/>
          <xs:element minOccurs="0" name="registrationDate" type="xs:date"/>
          <xs:element name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionMedicine">
        <xs:sequence>
          <xs:element minOccurs="0" name="dosage" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="usage" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryNewRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryNewResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="agregator" nillable="true" type="tns:agregator"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agregator">
        <xs:sequence>
          <xs:element name="bookingLink" type="xs:string"/>
          <xs:element minOccurs="0" name="bookingOfferUrl" type="xs:string"/>
          <xs:element minOccurs="0" name="isBooking" type="tns:bookingType"/>
          <xs:element minOccurs="0" name="logo" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="agregator" nillable="true" type="tns:agregator"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiListRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="mode" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="foodPrescription" nillable="true" type="tns:foodPrescriptionItem"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="foodPrescriptionItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="issueDate" type="xs:date"/>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="prescriptionPeriod" type="xs:string"/>
          <xs:element name="prescriptionTitle" type="xs:string"/>
          <xs:element name="state" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyGeoRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:pharmacyGeoFilters"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="options" nillable="true" type="tns:Options"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyGeoFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchRadius">
        <xs:sequence>
          <xs:element name="distance" type="xs:int"/>
          <xs:element name="geoTag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyGeoResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" nillable="true" type="tns:pharmacyGeo"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyGeo">
        <xs:sequence>
          <xs:element name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="isCommercial" type="xs:boolean"/>
          <xs:element name="geoTag" type="xs:string"/>
          <xs:element name="ID" type="xs:long"/>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:nearestMetro"/>
          <xs:element name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="nearestMetro">
        <xs:sequence>
          <xs:element minOccurs="0" name="metroTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyListRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:getPharmacyFilter"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="pagingOptions" type="tns:pagingOptions"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPharmacyFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyIdent" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyType" nillable="true" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="searchString" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pagingOptions">
        <xs:sequence>
          <xs:element name="pageNumber" type="xs:int"/>
          <xs:element name="pageSize" type="xs:int"/>
          <xs:element minOccurs="0" name="sortingOptions" type="tns:sortingOptions"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sortingOptions">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sortOrder" nillable="true" type="tns:sortOrder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sortOrder">
        <xs:sequence>
          <xs:element name="attributeName" type="xs:string"/>
          <xs:element name="descending" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyListResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="pagingResults" type="tns:pagingResults"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" nillable="true" type="tns:pharmacyERItem"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pagingResults">
        <xs:sequence>
          <xs:element name="morePagesAvailable" type="xs:boolean"/>
          <xs:element name="pageNumber" type="xs:int"/>
          <xs:element name="pageSize" type="xs:int"/>
          <xs:element name="pageTotal" type="xs:int"/>
          <xs:element name="totalItemsCount" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyERItem">
        <xs:sequence>
          <xs:element name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="area" type="tns:area"/>
          <xs:element name="benefitPrescription" type="xs:boolean"/>
          <xs:element name="booking" type="xs:boolean"/>
          <xs:element name="commercialPrescription" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contacts" type="tns:pharmacyContact"/>
          <xs:element minOccurs="0" name="FIAS" type="xs:string"/>
          <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element name="is24Hours" type="xs:boolean"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:nearestMetro"/>
          <xs:element minOccurs="0" name="pharmacyType" type="tns:pharmacyType"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
          <xs:element minOccurs="0" name="schedule" type="xs:string"/>
          <xs:element name="shortName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyContact">
        <xs:sequence>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyType">
        <xs:sequence>
          <xs:element minOccurs="0" name="pharmacyTypeID" type="xs:long"/>
          <xs:element minOccurs="0" name="pharmacyTypeName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piListRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getForm" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="patientId" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="prescriptionList" nillable="true" type="tns:prescriptionInfo"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookingAvailable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="controlType" type="xs:string"/>
          <xs:element minOccurs="0" name="couponLength" type="xs:int"/>
          <xs:element minOccurs="0" name="ctime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="diseaseCode" type="xs:string"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="form" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="mnnId" type="xs:long"/>
          <xs:element minOccurs="0" name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="periodical" type="tns:recipePeriodicalType"/>
          <xs:element minOccurs="0" name="prescriptionGUID" type="xs:string"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="saleDate" type="xs:date"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
          <xs:element minOccurs="0" name="term" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="recipePeriodicalType">
        <xs:sequence>
          <xs:element name="periodsQty" type="xs:int"/>
          <xs:element minOccurs="0" name="periodNumber" type="xs:int"/>
          <xs:element minOccurs="0" name="drugAmount" type="xs:int"/>
          <xs:element minOccurs="0" name="keyDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugsAvailabilityRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugsAvailabilityResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmaciesList" nillable="true" type="tns:pharmacyItem"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="pharmacyAddress" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyIdent" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyName" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyPhone" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacySchedule" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tradeRemains" nillable="true" type="tns:pharmacyRemainInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyRemainInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="remainsDescription" type="xs:string"/>
          <xs:element minOccurs="0" name="remainsMedicine" type="xs:string"/>
          <xs:element minOccurs="0" name="remainsState" type="tns:remainsState"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piMultiplyDrugsAvailabilityRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:multiplyDrugsAvailabilityFilters"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="multiplyDrugsAvailabilityFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piMultiplyDrugsAvailabilityResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" type="tns:pharmacyMultiply"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyMultiply">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="isCommercial" type="xs:boolean"/>
          <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" type="tns:nearestMetro"/>
          <xs:element name="pharmacyID" type="xs:long"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="prescription" type="tns:prescriptionMultiply"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
          <xs:element minOccurs="0" name="schedule" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionMultiply">
        <xs:sequence>
          <xs:element name="amount" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="available" type="tns:available"/>
          <xs:element minOccurs="0" name="INNName" type="xs:string"/>
          <xs:element name="medicineTitle" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="qty" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="available">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="expiration" type="xs:date"/>
          <xs:element minOccurs="0" name="manufacturer" type="xs:string"/>
          <xs:element name="medicineTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="origin" type="xs:string"/>
          <xs:element name="price" type="xs:long"/>
          <xs:element name="qty" type="xs:int"/>
          <xs:element name="surcharge" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiDetailsRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiDetailsResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctor" type="tns:doctorInfo"/>
          <xs:element minOccurs="0" name="issueDate" type="xs:date"/>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="MO" type="tns:moInfo"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionPeriod" type="tns:prescriptionPeriod"/>
          <xs:element minOccurs="0" name="prescriptionTitle" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="productLine" nillable="true" type="tns:productLineItem"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="doctorInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctorID" type="xs:string"/>
          <xs:element minOccurs="0" name="fullName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="MOID" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionPeriod">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateBegin" type="xs:date"/>
          <xs:element minOccurs="0" name="dateEnd" type="xs:date"/>
          <xs:element minOccurs="0" name="periodTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="productLineItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="periodicity" type="xs:string"/>
          <xs:element name="productName" type="xs:string"/>
          <xs:element name="productOutput" type="xs:long"/>
          <xs:element minOccurs="0" name="unit" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="annotationFeature">
        <xs:restriction base="xs:string">
          <xs:enumeration value="inn"/>
          <xs:enumeration value="ftn"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="benefitBudget">
        <xs:restriction base="xs:string">
          <xs:enumeration value="federal"/>
          <xs:enumeration value="regional"/>
          <xs:enumeration value="municipal"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="discountValue">
        <xs:restriction base="xs:string">
          <xs:enumeration value="_50"/>
          <xs:enumeration value="_100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="prescriptionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="benefit"/>
          <xs:enumeration value="commercial"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="bookingType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="commercial"/>
          <xs:enumeration value="benefit"/>
          <xs:enumeration value="any"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="remainsState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="available"/>
          <xs:enumeration value="soldout"/>
          <xs:enumeration value="shortage"/>
          <xs:enumeration value="unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="fpiChangeMilkShopRequest" nillable="true" type="tns:fpiChangeMilkShopRequestType"/>
      <xs:element name="fpiChangeMilkShopResponse" nillable="true" type="tns:fpiChangeMilkShopResponseType"/>
      <xs:element name="piCompleteOrderRequest" nillable="true" type="tns:piCompleteOrderRequestType"/>
      <xs:element name="piCompleteOrderResponse" nillable="true" type="tns:piCompleteOrderResponseType"/>
      <xs:element name="piDrugAnnotationRequest" nillable="true" type="tns:piDrugAnnotationRequestType"/>
      <xs:element name="piDrugAnnotationResponse" nillable="true" type="tns:piDrugAnnotationResponseType"/>
      <xs:element name="fpiCheckPatientRequest" nillable="true" type="tns:fpiCheckPatientRequestType"/>
      <xs:element name="fpiCheckPatientResponse" nillable="true" type="tns:fpiCheckPatientResponseType"/>
      <xs:element name="piCheckOrderRequest" nillable="true" type="tns:piCheckOrderRequestType"/>
      <xs:element name="piCheckOrderResponse" nillable="true" type="tns:piCheckOrderResponseType"/>
      <xs:element name="piGetDrugOrdersRequest" nillable="true" type="tns:piGetDrugOrdersRequestType"/>
      <xs:element name="piGetDrugOrdersResponse" nillable="true" type="tns:piGetDrugOrdersResponseType"/>
      <xs:element name="piRatePharmacyRequest" nillable="true" type="tns:piRatePharmacyRequestType"/>
      <xs:element name="piRatePharmacyResponse" nillable="true" type="tns:piRatePharmacyResponseType"/>
      <xs:element name="fpiSetScheduleRequest" nillable="true" type="tns:fpiSetScheduleRequestType"/>
      <xs:element name="fpiSetScheduleResponse" nillable="true" type="tns:fpiSetScheduleResponseType"/>
      <xs:element name="fpiGetScheduleRequest" nillable="true" type="tns:fpiGetScheduleRequestType"/>
      <xs:element name="fpiGetScheduleResponse" nillable="true" type="tns:fpiGetScheduleResponseType"/>
      <xs:element name="piDetailsRequest" nillable="true" type="tns:piDetailsRequestType"/>
      <xs:element name="piDetailsResponse" nillable="true" type="tns:piDetailsResponseType"/>
      <xs:element name="piGetMarkPharmacyRequest" nillable="true" type="tns:piGetMarkPharmacyRequestType"/>
      <xs:element name="piGetMarkPharmacyResponse" nillable="true" type="tns:piGetMarkPharmacyResponseType"/>
      <xs:element name="fpiGetMilkShopListRequest" nillable="true" type="tns:fpiGetMilkShopListRequestType"/>
      <xs:element name="fpiGetMilkShopListResponse" nillable="true" type="tns:fpiGetMilkShopListResponseType"/>
      <xs:element name="piCancelOrderRequest" nillable="true" type="tns:piCancelOrderRequestType"/>
      <xs:element name="piCancelOrderResponse" nillable="true" type="tns:piCancelOrderResponseType"/>
      <xs:element name="piPatientPrescriptionsRequest" nillable="true" type="tns:piPatientPrescriptionsRequestType"/>
      <xs:element name="piPatientPrescriptionsResponse" nillable="true" type="tns:piPatientPrescriptionsResponseType"/>
      <xs:element name="piPharmacyAuxiliaryNewRequest" nillable="true" type="tns:piPharmacyAuxiliaryNewRequestType"/>
      <xs:element name="piPharmacyAuxiliaryNewResponse" nillable="true" type="tns:piPharmacyAuxiliaryNewResponseType"/>
      <xs:element name="piPharmacyAuxiliaryRequest" nillable="true" type="tns:piPharmacyAuxiliaryRequestType"/>
      <xs:element name="piPharmacyAuxiliaryResponse" nillable="true" type="tns:piPharmacyAuxiliaryResponseType"/>
      <xs:element name="fpiGetListRequest" nillable="true" type="tns:fpiListRequestType"/>
      <xs:element name="fpiGetListResponse" nillable="true" type="tns:fpiListResponseType"/>
      <xs:element name="piGetPharmacyGeoRequest" nillable="true" type="tns:piGetPharmacyGeoRequestType"/>
      <xs:element name="piGetPharmacyGeoResponse" nillable="true" type="tns:piGetPharmacyGeoResponseType"/>
      <xs:element name="piGetPharmacyListRequest" nillable="true" type="tns:piGetPharmacyListRequestType"/>
      <xs:element name="piGetPharmacyListResponse" nillable="true" type="tns:piGetPharmacyListResponseType"/>
      <xs:element name="piListRequest" nillable="true" type="tns:piListRequestType"/>
      <xs:element name="piListResponse" nillable="true" type="tns:piListResponseType"/>
      <xs:element name="piDrugsAvailabilityRequest" nillable="true" type="tns:piDrugsAvailabilityRequestType"/>
      <xs:element name="piDrugsAvailabilityResponse" nillable="true" type="tns:piDrugsAvailabilityResponseType"/>
      <xs:element name="piMultiplyDrugsAvailabilityRequest" nillable="true" type="tns:piMultiplyDrugsAvailabilityRequestType"/>
      <xs:element name="piMultiplyDrugsAvailabilityResponse" nillable="true" type="tns:piMultiplyDrugsAvailabilityResponseType"/>
      <xs:element name="fpiGetDetailsRequest" nillable="true" type="tns:fpiDetailsRequestType"/>
      <xs:element name="fpiGetDetailsResponse" nillable="true" type="tns:fpiDetailsResponseType"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="piPharmacyAuxiliaryResponse">
    <wsdl:part element="ns1:piPharmacyAuxiliaryResponse" name="piPharmacyAuxiliaryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiCheckPatientResponse">
    <wsdl:part element="ns1:fpiCheckPatientResponse" name="fpiCheckPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piRatePharmacy">
    <wsdl:part element="ns1:piRatePharmacyRequest" name="piRatePharmacyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetListResponse">
    <wsdl:part element="ns1:fpiGetListResponse" name="fpiGetListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiSetSchedule">
    <wsdl:part element="ns1:fpiSetScheduleRequest" name="fpiSetScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetScheduleResponse">
    <wsdl:part element="ns1:fpiGetScheduleResponse" name="fpiGetScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCancelOrderResponse">
    <wsdl:part element="ns1:piCancelOrderResponse" name="piCancelOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetDrugOrdersResponse">
    <wsdl:part element="ns1:piGetDrugOrdersResponse" name="piGetDrugOrdersResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetSchedule">
    <wsdl:part element="ns1:fpiGetScheduleRequest" name="fpiGetScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiChangeMilkShopResponse">
    <wsdl:part element="ns1:fpiChangeMilkShopResponse" name="fpiChangeMilkShopResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piRatePharmacyResponse">
    <wsdl:part element="ns1:piRatePharmacyResponse" name="piRatePharmacyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDetails">
    <wsdl:part element="ns1:piDetailsRequest" name="piDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetMilkShopList">
    <wsdl:part element="ns1:fpiGetMilkShopListRequest" name="fpiGetMilkShopListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPharmacyAuxiliaryNewResponse">
    <wsdl:part element="ns1:piPharmacyAuxiliaryNewResponse" name="piPharmacyAuxiliaryNewResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyListResponse">
    <wsdl:part element="ns1:piGetPharmacyListResponse" name="piGetPharmacyListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugsAvailabilityResponse">
    <wsdl:part element="ns1:piDrugsAvailabilityResponse" name="piDrugsAvailabilityResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPharmacyAuxiliaryNew">
    <wsdl:part element="ns1:piPharmacyAuxiliaryNewRequest" name="piPharmacyAuxiliaryNewRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDetailsResponse">
    <wsdl:part element="ns1:piDetailsResponse" name="piDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piMultiplyDrugsAvailabilityResponse">
    <wsdl:part element="ns1:piMultiplyDrugsAvailabilityResponse" name="piMultiplyDrugsAvailabilityResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyList">
    <wsdl:part element="ns1:piGetPharmacyListRequest" name="piGetPharmacyListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCompleteOrderResponse">
    <wsdl:part element="ns1:piCompleteOrderResponse" name="piCompleteOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piMultiplyDrugsAvailability">
    <wsdl:part element="ns1:piMultiplyDrugsAvailabilityRequest" name="piMultiplyDrugsAvailabilityRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiSetScheduleResponse">
    <wsdl:part element="ns1:fpiSetScheduleResponse" name="fpiSetScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiChangeMilkShop">
    <wsdl:part element="ns1:fpiChangeMilkShopRequest" name="fpiChangeMilkShopRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCompleteOrder">
    <wsdl:part element="ns1:piCompleteOrderRequest" name="piCompleteOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugAnnotation">
    <wsdl:part element="ns1:piDrugAnnotationRequest" name="piDrugAnnotationRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugAnnotationResponse">
    <wsdl:part element="ns1:piDrugAnnotationResponse" name="piDrugAnnotationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiCheckPatient">
    <wsdl:part element="ns1:fpiCheckPatientRequest" name="fpiCheckPatientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCheckOrder">
    <wsdl:part element="ns1:piCheckOrderRequest" name="piCheckOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetDrugOrders">
    <wsdl:part element="ns1:piGetDrugOrdersRequest" name="piGetDrugOrdersRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetDetailsResponse">
    <wsdl:part element="ns1:fpiGetDetailsResponse" name="fpiGetDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetMilkShopListResponse">
    <wsdl:part element="ns1:fpiGetMilkShopListResponse" name="fpiGetMilkShopListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetMarkPharmacy">
    <wsdl:part element="ns1:piGetMarkPharmacyRequest" name="piGetMarkPharmacyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCancelOrder">
    <wsdl:part element="ns1:piCancelOrderRequest" name="piCancelOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPatientPrescriptions">
    <wsdl:part element="ns1:piPatientPrescriptionsRequest" name="piPatientPrescriptionsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyGeoResponse">
    <wsdl:part element="ns1:piGetPharmacyGeoResponse" name="piGetPharmacyGeoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCheckOrderResponse">
    <wsdl:part element="ns1:piCheckOrderResponse" name="piCheckOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPharmacyAuxiliary">
    <wsdl:part element="ns1:piPharmacyAuxiliaryRequest" name="piPharmacyAuxiliaryRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetMarkPharmacyResponse">
    <wsdl:part element="ns1:piGetMarkPharmacyResponse" name="piGetMarkPharmacyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetList">
    <wsdl:part element="ns1:fpiGetListRequest" name="fpiGetListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyGeo">
    <wsdl:part element="ns1:piGetPharmacyGeoRequest" name="piGetPharmacyGeoRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piList">
    <wsdl:part element="ns1:piListRequest" name="piListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugsAvailability">
    <wsdl:part element="ns1:piDrugsAvailabilityRequest" name="piDrugsAvailabilityRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPatientPrescriptionsResponse">
    <wsdl:part element="ns1:piPatientPrescriptionsResponse" name="piPatientPrescriptionsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piListResponse">
    <wsdl:part element="ns1:piListResponse" name="piListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetDetails">
    <wsdl:part element="ns1:fpiGetDetailsRequest" name="fpiGetDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="PrescriptionInfoSrvV4">
    <wsdl:operation name="fpiChangeMilkShop">
      <wsdl:input message="tns:fpiChangeMilkShop" name="fpiChangeMilkShop"></wsdl:input>
      <wsdl:output message="tns:fpiChangeMilkShopResponse" name="fpiChangeMilkShopResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCompleteOrder">
      <wsdl:input message="tns:piCompleteOrder" name="piCompleteOrder"></wsdl:input>
      <wsdl:output message="tns:piCompleteOrderResponse" name="piCompleteOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugAnnotation">
      <wsdl:input message="tns:piDrugAnnotation" name="piDrugAnnotation"></wsdl:input>
      <wsdl:output message="tns:piDrugAnnotationResponse" name="piDrugAnnotationResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiCheckPatient">
      <wsdl:input message="tns:fpiCheckPatient" name="fpiCheckPatient"></wsdl:input>
      <wsdl:output message="tns:fpiCheckPatientResponse" name="fpiCheckPatientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCheckOrder">
      <wsdl:input message="tns:piCheckOrder" name="piCheckOrder"></wsdl:input>
      <wsdl:output message="tns:piCheckOrderResponse" name="piCheckOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetDrugOrders">
      <wsdl:input message="tns:piGetDrugOrders" name="piGetDrugOrders"></wsdl:input>
      <wsdl:output message="tns:piGetDrugOrdersResponse" name="piGetDrugOrdersResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piRatePharmacy">
      <wsdl:input message="tns:piRatePharmacy" name="piRatePharmacy"></wsdl:input>
      <wsdl:output message="tns:piRatePharmacyResponse" name="piRatePharmacyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiSetSchedule">
      <wsdl:input message="tns:fpiSetSchedule" name="fpiSetSchedule"></wsdl:input>
      <wsdl:output message="tns:fpiSetScheduleResponse" name="fpiSetScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetSchedule">
      <wsdl:input message="tns:fpiGetSchedule" name="fpiGetSchedule"></wsdl:input>
      <wsdl:output message="tns:fpiGetScheduleResponse" name="fpiGetScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDetails">
      <wsdl:input message="tns:piDetails" name="piDetails"></wsdl:input>
      <wsdl:output message="tns:piDetailsResponse" name="piDetailsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetMarkPharmacy">
      <wsdl:input message="tns:piGetMarkPharmacy" name="piGetMarkPharmacy"></wsdl:input>
      <wsdl:output message="tns:piGetMarkPharmacyResponse" name="piGetMarkPharmacyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetMilkShopList">
      <wsdl:input message="tns:fpiGetMilkShopList" name="fpiGetMilkShopList"></wsdl:input>
      <wsdl:output message="tns:fpiGetMilkShopListResponse" name="fpiGetMilkShopListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCancelOrder">
      <wsdl:input message="tns:piCancelOrder" name="piCancelOrder"></wsdl:input>
      <wsdl:output message="tns:piCancelOrderResponse" name="piCancelOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPatientPrescriptions">
      <wsdl:input message="tns:piPatientPrescriptions" name="piPatientPrescriptions"></wsdl:input>
      <wsdl:output message="tns:piPatientPrescriptionsResponse" name="piPatientPrescriptionsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliaryNew">
      <wsdl:input message="tns:piPharmacyAuxiliaryNew" name="piPharmacyAuxiliaryNew"></wsdl:input>
      <wsdl:output message="tns:piPharmacyAuxiliaryNewResponse" name="piPharmacyAuxiliaryNewResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliary">
      <wsdl:input message="tns:piPharmacyAuxiliary" name="piPharmacyAuxiliary"></wsdl:input>
      <wsdl:output message="tns:piPharmacyAuxiliaryResponse" name="piPharmacyAuxiliaryResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetList">
      <wsdl:input message="tns:fpiGetList" name="fpiGetList"></wsdl:input>
      <wsdl:output message="tns:fpiGetListResponse" name="fpiGetListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyGeo">
      <wsdl:input message="tns:piGetPharmacyGeo" name="piGetPharmacyGeo"></wsdl:input>
      <wsdl:output message="tns:piGetPharmacyGeoResponse" name="piGetPharmacyGeoResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyList">
      <wsdl:input message="tns:piGetPharmacyList" name="piGetPharmacyList"></wsdl:input>
      <wsdl:output message="tns:piGetPharmacyListResponse" name="piGetPharmacyListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piList">
      <wsdl:input message="tns:piList" name="piList"></wsdl:input>
      <wsdl:output message="tns:piListResponse" name="piListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugsAvailability">
      <wsdl:input message="tns:piDrugsAvailability" name="piDrugsAvailability"></wsdl:input>
      <wsdl:output message="tns:piDrugsAvailabilityResponse" name="piDrugsAvailabilityResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piMultiplyDrugsAvailability">
      <wsdl:input message="tns:piMultiplyDrugsAvailability" name="piMultiplyDrugsAvailability"></wsdl:input>
      <wsdl:output message="tns:piMultiplyDrugsAvailabilityResponse" name="piMultiplyDrugsAvailabilityResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetDetails">
      <wsdl:input message="tns:fpiGetDetails" name="fpiGetDetails"></wsdl:input>
      <wsdl:output message="tns:fpiGetDetailsResponse" name="fpiGetDetailsResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PrescriptionInfoServiceV4SoapBinding" type="tns:PrescriptionInfoSrvV4">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="fpiChangeMilkShop">
      <soap:operation soapAction="fpiChangeMilkShop" style="document"/>
      <wsdl:input name="fpiChangeMilkShop">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiChangeMilkShopResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCompleteOrder">
      <soap:operation soapAction="piCompleteOrder" style="document"/>
      <wsdl:input name="piCompleteOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCompleteOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugAnnotation">
      <soap:operation soapAction="piDrugAnnotation" style="document"/>
      <wsdl:input name="piDrugAnnotation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDrugAnnotationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiCheckPatient">
      <soap:operation soapAction="fpiCheckPatient" style="document"/>
      <wsdl:input name="fpiCheckPatient">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiCheckPatientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCheckOrder">
      <soap:operation soapAction="piCheckOrder" style="document"/>
      <wsdl:input name="piCheckOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCheckOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetDrugOrders">
      <soap:operation soapAction="piGetDrugOrders" style="document"/>
      <wsdl:input name="piGetDrugOrders">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetDrugOrdersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piRatePharmacy">
      <soap:operation soapAction="piRatePharmacy" style="document"/>
      <wsdl:input name="piRatePharmacy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piRatePharmacyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiSetSchedule">
      <soap:operation soapAction="fpiSetSchedule" style="document"/>
      <wsdl:input name="fpiSetSchedule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiSetScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetSchedule">
      <soap:operation soapAction="fpiGetSchedule" style="document"/>
      <wsdl:input name="fpiGetSchedule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDetails">
      <soap:operation soapAction="piDetails" style="document"/>
      <wsdl:input name="piDetails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetMarkPharmacy">
      <soap:operation soapAction="piGetMarkPharmacy" style="document"/>
      <wsdl:input name="piGetMarkPharmacy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetMarkPharmacyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetMilkShopList">
      <soap:operation soapAction="fpiGetMilkShopList" style="document"/>
      <wsdl:input name="fpiGetMilkShopList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetMilkShopListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCancelOrder">
      <soap:operation soapAction="piCancelOrder" style="document"/>
      <wsdl:input name="piCancelOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCancelOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPatientPrescriptions">
      <soap:operation soapAction="piPatientPrescriptions" style="document"/>
      <wsdl:input name="piPatientPrescriptions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piPatientPrescriptionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliaryNew">
      <soap:operation soapAction="piPharmacyAuxiliaryNew" style="document"/>
      <wsdl:input name="piPharmacyAuxiliaryNew">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piPharmacyAuxiliaryNewResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliary">
      <soap:operation soapAction="piPharmacyAuxiliary" style="document"/>
      <wsdl:input name="piPharmacyAuxiliary">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piPharmacyAuxiliaryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetList">
      <soap:operation soapAction="fpiGetList" style="document"/>
      <wsdl:input name="fpiGetList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyGeo">
      <soap:operation soapAction="piGetPharmacyGeo" style="document"/>
      <wsdl:input name="piGetPharmacyGeo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetPharmacyGeoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyList">
      <soap:operation soapAction="piGetPharmacyList" style="document"/>
      <wsdl:input name="piGetPharmacyList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetPharmacyListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piList">
      <soap:operation soapAction="piList" style="document"/>
      <wsdl:input name="piList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugsAvailability">
      <soap:operation soapAction="piDrugsAvailability" style="document"/>
      <wsdl:input name="piDrugsAvailability">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDrugsAvailabilityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piMultiplyDrugsAvailability">
      <soap:operation soapAction="piMultiplyDrugsAvailability" style="document"/>
      <wsdl:input name="piMultiplyDrugsAvailability">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piMultiplyDrugsAvailabilityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetDetails">
      <soap:operation soapAction="fpiGetDetails" style="document"/>
      <wsdl:input name="fpiGetDetails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PrescriptionInfoServiceV4">
    <wsdl:port binding="tns:PrescriptionInfoServiceV4SoapBinding" name="PrescriptionInfoSrvPortV4">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint></con:endpoints><con:operation id="3d4e2200-6055-4a0d-900c-a895571468a3" isOneWay="false" action="fpiChangeMilkShop" name="fpiChangeMilkShop" bindingOperationName="fpiChangeMilkShop" type="Request-Response" outputName="fpiChangeMilkShopResponse" inputName="fpiChangeMilkShop" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6896461d-e96e-47e0-b4d0-9496e28ae1a2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiChangeMilkShopRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:milkShopId>?</typ:milkShopId>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiChangeMilkShopRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiChangeMilkShop"/></con:call></con:operation><con:operation id="3e73b3e1-ef36-4e14-92a4-0ee59eadeae5" isOneWay="false" action="fpiCheckPatient" name="fpiCheckPatient" bindingOperationName="fpiCheckPatient" type="Request-Response" outputName="fpiCheckPatientResponse" inputName="fpiCheckPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="62d6c5c1-737f-40bc-812f-e966d7ef95b4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiCheckPatientRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:fpiCheckPatientRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiCheckPatient"/></con:call></con:operation><con:operation id="c546779b-8734-4eb2-a80e-8463473820e7" isOneWay="false" action="fpiGetDetails" name="fpiGetDetails" bindingOperationName="fpiGetDetails" type="Request-Response" outputName="fpiGetDetailsResponse" inputName="fpiGetDetails" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5967109c-4ab0-4c82-9410-80a773a18372" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetDetailsRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiGetDetailsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetDetails"/></con:call></con:operation><con:operation id="0f1ac169-31ae-433f-8d07-5f1d4d5ba3fd" isOneWay="false" action="fpiGetList" name="fpiGetList" bindingOperationName="fpiGetList" type="Request-Response" outputName="fpiGetListResponse" inputName="fpiGetList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="63795d7e-a6ba-4521-b117-fc63ab05ec0b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetListRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:mode>?</typ:mode>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:fpiGetListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetList"/></con:call></con:operation><con:operation id="e9ff10f5-fa26-43f8-a2ee-290ff8b959ec" isOneWay="false" action="fpiGetMilkShopList" name="fpiGetMilkShopList" bindingOperationName="fpiGetMilkShopList" type="Request-Response" outputName="fpiGetMilkShopListResponse" inputName="fpiGetMilkShopList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fb222794-242e-4789-adff-60e48dec3894" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetMilkShopListRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:OMKTE>?</typ:OMKTE>\r
         <!--Optional:-->\r
         <typ:searchString>?</typ:searchString>\r
         <!--Optional:-->\r
         <typ:stationID>?</typ:stationID>\r
      </typ:fpiGetMilkShopListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetMilkShopList"/></con:call></con:operation><con:operation id="6df41dff-7643-48b5-a9b8-e3270592f3dc" isOneWay="false" action="fpiGetSchedule" name="fpiGetSchedule" bindingOperationName="fpiGetSchedule" type="Request-Response" outputName="fpiGetScheduleResponse" inputName="fpiGetSchedule" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b4121ecf-4fd0-4943-bc19-14a27f81ae8a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetScheduleRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiGetScheduleRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetSchedule"/></con:call></con:operation><con:operation id="a3e49014-f802-4f66-9bfa-4adffcb7f8dc" isOneWay="false" action="fpiSetSchedule" name="fpiSetSchedule" bindingOperationName="fpiSetSchedule" type="Request-Response" outputName="fpiSetScheduleResponse" inputName="fpiSetSchedule" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a0c800f9-8eea-4575-9c19-1b896c40889a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiSetScheduleRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         <!--1 or more repetitions:-->\r
         <typ:servicingDay>?</typ:servicingDay>\r
      </typ:fpiSetScheduleRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiSetSchedule"/></con:call></con:operation><con:operation id="5a09f79e-e0ab-4028-8c19-feb07fd82791" isOneWay="false" action="piCancelOrder" name="piCancelOrder" bindingOperationName="piCancelOrder" type="Request-Response" outputName="piCancelOrderResponse" inputName="piCancelOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9f77b174-1ca4-4812-867b-7aa5a1f33502" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCancelOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCancelOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCancelOrder"/></con:call></con:operation><con:operation id="2f69af9d-616b-4b4d-b0cf-034cf1e9b00a" isOneWay="false" action="piCheckOrder" name="piCheckOrder" bindingOperationName="piCheckOrder" type="Request-Response" outputName="piCheckOrderResponse" inputName="piCheckOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9d0ea0a7-fc57-434c-aa0c-3f8c38c3fd94" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCheckOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCheckOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCheckOrder"/></con:call></con:operation><con:operation id="107221c8-450d-4de4-8dda-a0a798686331" isOneWay="false" action="piCompleteOrder" name="piCompleteOrder" bindingOperationName="piCompleteOrder" type="Request-Response" outputName="piCompleteOrderResponse" inputName="piCompleteOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="37522117-f098-4d55-82cb-bfb545637d77" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCompleteOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCompleteOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCompleteOrder"/></con:call></con:operation><con:operation id="b0c5c975-9f6d-46c0-a606-10f34b7562e2" isOneWay="false" action="piDetails" name="piDetails" bindingOperationName="piDetails" type="Request-Response" outputName="piDetailsResponse" inputName="piDetails" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="33c9b4b4-19ba-4be6-9b23-ac76552eede3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDetailsRequest>\r
         <!--Optional:-->\r
         <typ:getQR>?</typ:getQR>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         <!--Optional:-->\r
         <typ:signature>?</typ:signature>\r
      </typ:piDetailsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDetails"/></con:call></con:operation><con:operation id="c51b580e-c037-47da-a968-a972f2e47911" isOneWay="false" action="piDrugAnnotation" name="piDrugAnnotation" bindingOperationName="piDrugAnnotation" type="Request-Response" outputName="piDrugAnnotationResponse" inputName="piDrugAnnotation" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b92c9015-52d2-4f54-96ef-34430799b17b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDrugAnnotationRequest>\r
         <!--Optional:-->\r
         <typ:getFullText>?</typ:getFullText>\r
         <!--Optional:-->\r
         <typ:getINNonly>?</typ:getINNonly>\r
         <!--Optional:-->\r
         <typ:getStructureLevel>?</typ:getStructureLevel>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piDrugAnnotationRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDrugAnnotation"/></con:call></con:operation><con:operation id="ed6392fb-feac-4ae3-8325-d883d1c73e47" isOneWay="false" action="piDrugsAvailability" name="piDrugsAvailability" bindingOperationName="piDrugsAvailability" type="Request-Response" outputName="piDrugsAvailabilityResponse" inputName="piDrugsAvailability" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8136c931-0e39-4690-8b1a-7bdce06b3476" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDrugsAvailabilityRequest>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piDrugsAvailabilityRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDrugsAvailability"/></con:call></con:operation><con:operation id="d2242030-1eb1-4d90-bc3e-20ff4f692734" isOneWay="false" action="piGetDrugOrders" name="piGetDrugOrders" bindingOperationName="piGetDrugOrders" type="Request-Response" outputName="piGetDrugOrdersResponse" inputName="piGetDrugOrders" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e328a09b-c937-47f9-adbc-81a7fc2c7062" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetDrugOrdersRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:piGetDrugOrdersRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetDrugOrders"/></con:call></con:operation><con:operation id="7d0e3798-1655-4f92-8fe0-ce69916fedfb" isOneWay="false" action="piGetMarkPharmacy" name="piGetMarkPharmacy" bindingOperationName="piGetMarkPharmacy" type="Request-Response" outputName="piGetMarkPharmacyResponse" inputName="piGetMarkPharmacy" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0c52d30d-f320-422f-8f63-87e5303a7f39" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetMarkPharmacyRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:markedObject>\r
            <!--Optional:-->\r
            <typ:orderID>?</typ:orderID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         </typ:markedObject>\r
      </typ:piGetMarkPharmacyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetMarkPharmacy"/></con:call></con:operation><con:operation id="870d6637-50ee-418b-98f3-4cd2bbb3fabd" isOneWay="false" action="piGetPharmacyGeo" name="piGetPharmacyGeo" bindingOperationName="piGetPharmacyGeo" type="Request-Response" outputName="piGetPharmacyGeoResponse" inputName="piGetPharmacyGeo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="215be95a-b10f-43a2-a6f1-cc33b4bc1331" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetPharmacyGeoRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyID>?</typ:pharmacyID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Zero or more repetitions:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:piGetPharmacyGeoRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetPharmacyGeo"/></con:call></con:operation><con:operation id="b62fb935-3fda-45bc-ae35-e0882d40ca5c" isOneWay="false" action="piGetPharmacyList" name="piGetPharmacyList" bindingOperationName="piGetPharmacyList" type="Request-Response" outputName="piGetPharmacyListResponse" inputName="piGetPharmacyList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9f39594b-5f90-4713-bb03-7b8d682a892a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetPharmacyListRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyID>?</typ:pharmacyID>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyIdent>?</typ:pharmacyIdent>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyType>?</typ:pharmacyType>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:searchString>?</typ:searchString>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:pagingOptions>\r
            <typ:pageNumber>?</typ:pageNumber>\r
            <typ:pageSize>?</typ:pageSize>\r
            <!--Optional:-->\r
            <typ:sortingOptions>\r
               <!--Zero or more repetitions:-->\r
               <typ:sortOrder>\r
                  <typ:attributeName>?</typ:attributeName>\r
                  <typ:descending>?</typ:descending>\r
               </typ:sortOrder>\r
            </typ:sortingOptions>\r
         </typ:pagingOptions>\r
      </typ:piGetPharmacyListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetPharmacyList"/></con:call></con:operation><con:operation id="5fd13eec-dcb4-4302-bb1e-6840fb9185d1" isOneWay="false" action="piList" name="piList" bindingOperationName="piList" type="Request-Response" outputName="piListResponse" inputName="piList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="479041bd-dad7-4e74-86e7-c1cdee901bde" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piListRequest>\r
         <!--Optional:-->\r
         <typ:getForm>?</typ:getForm>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:piListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piList"/></con:call></con:operation><con:operation id="57c78d0b-aa44-4f5f-9dc5-73ddb2025c09" isOneWay="false" action="piMultiplyDrugsAvailability" name="piMultiplyDrugsAvailability" bindingOperationName="piMultiplyDrugsAvailability" type="Request-Response" outputName="piMultiplyDrugsAvailabilityResponse" inputName="piMultiplyDrugsAvailability" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="23d15e07-0780-488b-b4d6-ba2632d80155" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piMultiplyDrugsAvailabilityRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Zero or more repetitions:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piMultiplyDrugsAvailabilityRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piMultiplyDrugsAvailability"/></con:call></con:operation><con:operation id="fbe6ecdf-6203-46fc-b89c-7c442efb232c" isOneWay="false" action="piPatientPrescriptions" name="piPatientPrescriptions" bindingOperationName="piPatientPrescriptions" type="Request-Response" outputName="piPatientPrescriptionsResponse" inputName="piPatientPrescriptions" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="927bc394-25b7-4973-8dbd-10de5e055742" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/></con:call></con:operation><con:operation id="3e36ef5b-5dae-4036-b20b-fba4b7657942" isOneWay="false" action="piPharmacyAuxiliary" name="piPharmacyAuxiliary" bindingOperationName="piPharmacyAuxiliary" type="Request-Response" outputName="piPharmacyAuxiliaryResponse" inputName="piPharmacyAuxiliary" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="420733d8-5b49-427c-bfad-d9624486e515" name="piPharmacyAuxiliary"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">
   <soapenv:Header>
  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
      <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>
      <typ:piPharmacyAuxiliaryRequest>
         <typ:ident>EMIASINFO</typ:ident>
      </typ:piPharmacyAuxiliaryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPharmacyAuxiliary"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c5995891-6c79-485e-a1d1-4dfe52fb4925" isOneWay="false" action="piPharmacyAuxiliaryNew" name="piPharmacyAuxiliaryNew" bindingOperationName="piPharmacyAuxiliaryNew" type="Request-Response" outputName="piPharmacyAuxiliaryNewResponse" inputName="piPharmacyAuxiliaryNew" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bd95ff24-1237-4360-aec8-0b957def2672" name="piPharmacyAuxiliaryNew"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">
   <soapenv:Header>
  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
      <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>
      <typ:piPharmacyAuxiliaryNewRequest>
         <typ:ident>EMIASINFO</typ:ident>
      </typ:piPharmacyAuxiliaryNewRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPharmacyAuxiliaryNew"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="32b3cf7d-e2b2-4a87-bd34-08cfe2c1dbe1" isOneWay="false" action="piRatePharmacy" name="piRatePharmacy" bindingOperationName="piRatePharmacy" type="Request-Response" outputName="piRatePharmacyResponse" inputName="piRatePharmacy" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2b65bd15-102a-4a0b-8562-5cc89ff2498c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piRatePharmacyRequest>\r
         <!--Optional:-->\r
         <typ:comment>?</typ:comment>\r
         <typ:ident>?</typ:ident>\r
         <typ:mark>?</typ:mark>\r
         <typ:markedObject>\r
            <!--Optional:-->\r
            <typ:orderID>?</typ:orderID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         </typ:markedObject>\r
      </typ:piRatePharmacyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piRatePharmacy"/></con:call></con:operation></con:interface><con:testSuite id="03a7d29a-9435-46a9-978e-9b39a514ab00" name="Обновить токены" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a4e3c5a0-a951-42a2-9d29-b5135c4b63f1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Сохранить" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Сохранить" id="a97d461b-cce6-44af-99ed-9c794d4af180"><con:settings/><con:config><script>def guid =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "guid" )
def base64 =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "base64" )
def sudirToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "sudirToken" )
def accessToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "X-Access-JWT" )
def refreshToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "refreshToken" )
def refreshXAccessJWT =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "refresh-X-Access-JWT" )
log.info sudirToken
log.info accessToken
testRunner.testCase.testSuite.project.setPropertyValue("sudirToken", sudirToken)
testRunner.testCase.testSuite.project.setPropertyValue("X-Access-JWT", accessToken)
testRunner.testCase.testSuite.project.setPropertyValue("refreshToken", refreshToken)
testRunner.testCase.testSuite.project.setPropertyValue("refresh-X-Access-JWT", refreshXAccessJWT)
testRunner.testCase.testSuite.project.setPropertyValue("guid", guid)
testRunner.testCase.testSuite.setPropertyValue("base64", base64)
log.info "w"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fe316dfe-2d23-4b3e-b1d2-094a6577b41e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Обновить токен СУДИР и ЛК" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Обновить токен СУДИР" id="5dd6542c-58b6-435c-ac1b-f969d7cd8445"><con:settings/><con:config service="https://login-tech.mos.ru" methodName="Обновить токен" resourcePath="/sps/oauth/te" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Обновить токен СУДИР" id="793942aa-3f63-4200-ad97-16a44c94594a" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#loginEndpoint}</con:endpoint><con:request/><con:originalUri>https://login-tech.mos.ru/sps/oauth/te</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="52acf20e-2ec9-4679-a8e0-1ffccfee1891" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="Basic ${#TestSuite#base64}"/>
  <con:entry key="refresh_token" value="${#Project#refreshToken}"/>
  <con:entry key="grant_type" value="refresh_token"/>
</con:parameters><con:parameterOrder><con:entry>code</con:entry><con:entry>redirect_uri</con:entry><con:entry>grant_type</con:entry><con:entry>refresh_token</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Обновить X-Access-JWT" id="6e8a464d-010b-429d-b53e-3e7b63b530be"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/2/mobile/auth/refresh" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Обновить X-Access-JWT" id="95b944ab-7387-4be0-98f1-1d2a5f1f7979" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lk-prp.mosmedzdrav.ru/api/2/mobile/auth/refresh</con:originalUri><con:assertion type="Simple Contains" id="2e02844c-747c-48d9-8a3a-b8e090b71e45" name="Contains"><con:configuration><token>accessToken</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="refreshToken" value="${#Project#refresh-X-Access-JWT}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>refreshToken</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Обновить в проперти СУДИР и refresh" id="72ddefe7-b691-4423-b8b1-0917b236ec24"><con:settings/><con:config><script>import groovy.json.JsonSlurper

ResponseJson = context.expand('${Обновить токен СУДИР#Response}')
sudir_token = new JsonSlurper().parseText(ResponseJson)

testRunner.testCase.testSuite.setPropertyValue("sudirToken", sudir_token.access_token)
testRunner.testCase.testSuite.project.setPropertyValue("sudirToken", sudir_token.access_token)
testRunner.testCase.testSuite.project.setPropertyValue("refreshToken", sudir_token.refresh_token)

com.eviware.soapui.SoapUI.globalProperties.setPropertyValue("sudirToken", sudir_token.access_token)
com.eviware.soapui.SoapUI.globalProperties.setPropertyValue("refreshToken", sudir_token.refresh_token)</script></con:config></con:testStep><con:testStep type="groovy" name="Обновить в проперти токены ЛК" id="7e41e54f-9b40-4e23-9dd8-fa3b47fa3501"><con:settings/><con:config><script>import groovy.json.JsonSlurper

ResponseJson = context.expand('${Обновить X-Access-JWT#Response}')
access_token = new JsonSlurper().parseText(ResponseJson)

testRunner.testCase.testSuite.project.setPropertyValue("X-Access-JWT", access_token.accessToken)
testRunner.testCase.testSuite.project.setPropertyValue("refresh-X-Access-JWT", access_token.refreshToken)
testRunner.testCase.testSuite.setPropertyValue("X-Access-JWT", access_token.accessToken)
com.eviware.soapui.SoapUI.globalProperties.setPropertyValue("X-Access-JWT", access_token.accessToken)
com.eviware.soapui.SoapUI.globalProperties.setPropertyValue("refresh-X-Access-JWT", access_token.refreshToken)</script></con:config></con:testStep><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="daa8b42e-95f3-434f-969f-5cb98029df8d" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>base64</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ZHlufmVtaWFzLmluZm9+OWFhODJjNjEtZWI4ZS00Zjk3LWJhN2MtNTkyZGYzYWMyN2NlOnhocmkySmxZaWJRYmdpWg==</con:value></con:property><con:property><con:name>sudirToken</con:name><con:value>j15x1kq7SStS_Ca3vP__8s4OH5OOZBponfa_jbjIQ14</con:value></con:property><con:property><con:name>X-Access-JWT</con:name><con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ1c2VyX2F1dGgiLCJleHAiOjE2OTQ1Mzc5MjcsImF1ZCI6IlBBVElFTlQiLCJzdWIiOiI3NTgzNWNiNy05ZTI3LTRhY2ItYTk1ZC1hOWRiMzRlOTY0MWUiLCJzaWQiOiI5N2JjMTAwMS0zYTBkLTQ2ODctYmMxZC00MzdhMzg4NzYzZDYiLCJwaG9uZSI6Ijc5MTUwMDQ5NzY2Iiwic3NvX2lkIjoiUHJPVHN0M255bHhrYm11dXBpMHlnMHpkK0lIdjNoOVpIMC9JZGdrOGU0czh1dmNWQXUvV1F5OGNnMG5KYmttOUgrQjVXcUxaT3VRdjUzbzU0R3ZQeTdpQTVkSGIxeW9qeURYVCtwSk41UGFSWnFUemFVVXgvZHczT2ttZGlxSEl1c1MyWWlwTnVvTjFUQWUyL2tlTU8vRkR4REVxWjN1K0FxSVdjd2hmOG8wYlMwbEtwY2YxMEtsMDdOamhvU28vZkJtTmRBQ21xM2YzV3REa0thM2lFSTN4Zy9rc1FPd0k0b0JUaGxQQnZ5QVVkcXh4QUdrY2p1dkxXTituTE92VXhQZy9nRjhpcE8wQS8zS1BldkphNlBVWG05Wmk2NWdlVCt4b25LU1FoSGo4dmcwRnR4VjBUbkZSYXlCY29JalVzMExHYk5VSjBFbVo4UStNYlV6WFpBPT0iLCJlbWFpbCI6IiIsImZpcnN0X25hbWUiOiJcdTA0MjVcdTA0MzBcdTA0M2RcdTA0NDNcdTA0M2MiLCJzZWNvbmRfbmFtZSI6Ilx1MDQxMC4iLCJtaWRkbGVfbmFtZSI6Ilx1MDQxN1x1MDQzOFx1MDQ0MFx1MDQzMFx1MDQzY1x1MDQ0M1x1MDQ0Mlx1MDQzNFx1MDQzOFx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzZFx1MDQzMCIsImJpcnRoX2RhdGUiOiIyMDAxLTA2LTA2In0.myS9NliD1bXY8MMW_e5Y0WM_4Z8KSWisH_KUpkkR2H9nyynABFojK0VeFy6cJZI_DuL3vth5OqFz4wIboIIr2Y_IWItutYrstRtw1nlPgb5uPq1ku7D5E5fjEYNCMXRZQzpnrea4ID8i7bru3dqi6TO80G_RwsQOU0yCrhkrTVdkhvW2FlAmELQDm4R7QMjUkxz7DJ6TUyp1SNj_lmGqgdyzCOgMtnKWSZmNZaBpMLH6-xFRwd2vTCJPpzl7muCnWlR01Kp0V8cnVjDNwz_dYGsaJMyY50fvg_FJdtExD9nNgHOoaARQ3n_NYIrldRHdSuKGW594gBYWWw60FJHs7AwrCUtdC9QXlENNefdcvl1x3Z-mbK-2wmV1FtJPzDJTb6wX5nT3Un2p-O0aITgV8ZDe6CV0wG4msmXS5buB7oMFPwIkB7E6xhZYT_JwTnMYjjzpGIItqI_TMZ1SNM92a3ZjMaFkH4o9FpoGr7M4hXbY4zEld5EMIUyiR6JfhwCvi-DfRbOv_laqoFhI4CoDq-ICJA_JLVlllQ8EOz-_KtFEt-VY7621H7Fp3Oy0MIrTb5nfkT6RM_hT4r2QmNPxk9jAFkDQfokdYvVObZFwWpi_-SZoEMGohypeJyQwdS9rGQhX__nRGTBlTMxZCmUmVu2DUdCePcHR77NqHJ73u9Q</con:value></con:property></con:properties></con:testSuite><con:testSuite id="65143837-346c-45df-bab2-7c84cfdd702a" name="BVT Application"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="2a797e21-4ef4-4375-ae7b-55565a2f74f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Обновить токен СУДИР и ЛК" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="Обновить токен СУДИР" id="98226bab-c661-4f86-9963-9e87209bc381"><con:settings/><con:config service="https://login-tech.mos.ru" methodName="Обновить токен" resourcePath="/sps/oauth/te" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Обновить токен СУДИР" id="793942aa-3f63-4200-ad97-16a44c94594a" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Basic ${#Project#base64}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#loginEndpoint}</con:endpoint><con:request/><con:originalUri>https://login-tech.mos.ru/sps/oauth/te</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b51f69a7-90e6-49db-8507-86ba49b69d5f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="Basic ${#Project#base64}"/>
  <con:entry key="refresh_token" value="${#Project#refreshToken}"/>
  <con:entry key="grant_type" value="refresh_token"/>
</con:parameters><con:parameterOrder><con:entry>code</con:entry><con:entry>redirect_uri</con:entry><con:entry>grant_type</con:entry><con:entry>refresh_token</con:entry><con:entry>Authorization</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Обновить X-Access-JWT" id="b17e8a81-b853-4c49-86ed-2eff4287e1a6"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/2/mobile/auth/refresh" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Обновить X-Access-JWT" id="95b944ab-7387-4be0-98f1-1d2a5f1f7979" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lk-prp.mosmedzdrav.ru/api/2/mobile/auth/refresh</con:originalUri><con:assertion type="Simple Contains" id="2e02844c-747c-48d9-8a3a-b8e090b71e45" name="Contains"><con:configuration><token>accessToken</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="refreshToken" value="${#Project#refresh-X-Access-JWT}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>refreshToken</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Обновить в проперти СУДИР и refresh" id="c7e53903-aad2-419e-8b0e-64cc4e33c3e6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

ResponseJson = context.expand('${Обновить токен СУДИР#Response}')
sudir_token = new JsonSlurper().parseText(ResponseJson)

testRunner.testCase.testSuite.project.setPropertyValue("sudirToken", sudir_token.access_token)
testRunner.testCase.testSuite.project.setPropertyValue("refreshToken", sudir_token.refresh_token)
</script></con:config></con:testStep><con:testStep type="groovy" name="Обновить в проперти токены ЛК" id="719e845b-c8ab-4963-b338-6127db23e278"><con:settings/><con:config><script>import groovy.json.JsonSlurper


ResponseJson2 = context.expand('${Обновить X-Access-JWT#Response}')
access_token = new JsonSlurper().parseText(ResponseJson2)

testRunner.testCase.testSuite.project.setPropertyValue("X-Access-JWT", access_token.accessToken)
testRunner.testCase.testSuite.project.setPropertyValue("refresh-X-Access-JWT", access_token.refreshToken)</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a3f564d5-b0fc-4ec5-b6c2-60d6705e6f50" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getConfig" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getConfig" id="2221dd23-efac-4a63-a74a-fc0d18ab0c85"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/config" methodName="getConfig" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getConfig" id="7a3e5655-a957-4b45-96d6-03458f2a7f18" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/config</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="2da848fc-43df-4fbf-abbc-869ccd01f0dc" name="HTTP Status Code = 200" disabled="true"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d2befbba-8512-41b6-91f9-04d2de726669" name="В ответе есть элемент config" disabled="true"><con:configuration><path>$.payload.config</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="eed08612-429c-43fb-9a8e-9e349482452b" name="В ответе нет ошибок" disabled="true"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="bf364550-3a6c-4d49-a787-dac7d09a721a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getConfig#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getConfig").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]
log.info("getConfig HTTP status code: " + httpStatusCode)
log.info "getConfig Ответ метода :" +response

isCheckUpParkEnable=parsedResponse.payload.config.togglers.isCheckUpParkEnable
isExpressTestCovidEnable=parsedResponse.payload.config.togglers.isExpressTestCovidEnable
lastVersion=parsedResponse.payload.config.lastVersion
informationSecurityPolicy=parsedResponse.payload.config.about.informationSecurityPolicy
userAgreementLink=parsedResponse.payload.config.about.userAgreementLink
isAIMeasurementInputEnabled=parsedResponse.payload.config.togglers.isAIMeasurementInputEnabled
isNeedTmkEsiaAuthentication=parsedResponse.payload.config.togglers.isNeedTmkEsiaAuthentication
isAIPhotoMeasurementEnabled = parsedResponse.payload.config.togglers.isAIPhotoMeasurementEnabled
isAIVoiceMeasurementEnabled = parsedResponse.payload.config.togglers.isAIVoiceMeasurementEnabled
isShiftCancelAppointmentAlertEnabled = parsedResponse.payload.config.togglers.isShiftCancelAppointmentAlertEnabled
isShareAccessToMedicalRecordEnabled = parsedResponse.payload.config.togglers.isShareAccessToMedicalRecordEnabled
isDairyKitchenEnabled = parsedResponse.payload.config.togglers.isDairyKitchenEnabled
dairyKitchenLink = parsedResponse.payload.config.links.dairyKitchenLink

log.info "userAgreementLink Ответ метода :" +userAgreementLink

if( !response.contains("payload") || httpStatusCode!="200"){ 
	testRunner.fail()
	log.info("ERROR: В ответе getConfig возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getConfig Ответ  соответствует ожидаемому"

//if( isCheckUpParkEnable != true ) testRunner.fail("isCheckUpParkEnable не true ")
//if( isExpressTestCovidEnable != false) testRunner.fail("isExpressTestCovidEnable не false ")
//if( lastVersion != "7.0.0") testRunner.fail("lastVersion не 7.0.0 ")
//if( informationSecurityPolicy != "https://app.emias.info/privacy-policy.html") testRunner.fail("informationSecurityPolicy не https://app.emias.info/privacy-policy.html ")
//if( userAgreementLink != "https://app.emias.info/terms.html") testRunner.fail("userAgreementLink не https://app.emias.info/terms.html ")

if( isAIMeasurementInputEnabled != true) testRunner.fail("isAIMeasurementInputEnabled не true. его значение "+isAIMeasurementInputEnabled)
//добавлено в 1.10.0 в EINFOSRV-1843
if( isNeedTmkEsiaAuthentication != false) testRunner.fail("isNeedTmkEsiaAuthentication не false. его значение "+isNeedTmkEsiaAuthentication)

//добавлено в 1.11.0 в EINFOSRV-2241
if( isAIPhotoMeasurementEnabled != true) testRunner.fail("isAIPhotoMeasurementEnabled не true. его значение "+isAIPhotoMeasurementEnabled)
if( isAIVoiceMeasurementEnabled != true) testRunner.fail("isAIVoiceMeasurementEnabled не true. его значение "+isAIVoiceMeasurementEnabled)
//добавлено в 1.11.0 в EINFOSRV-2122
if( isShiftCancelAppointmentAlertEnabled != true) testRunner.fail("isShiftCancelAppointmentAlertEnabled не false. его значение "+isShiftCancelAppointmentAlertEnabled)
//добавлено в 1.11.0 в EINFOSRV-2302
if(isShareAccessToMedicalRecordEnabled != true) testRunner.fail("isShareAccessToMedicalRecordEnabled не true. его значение "+isShiftCancelAppointmentAlertEnabled)
//добавлено в 1.11.0 в EINFOSRV-2245
if(isDairyKitchenEnabled != true) testRunner.fail("isDairyKitchenEnabled не true. его значение "+isDairyKitchenEnabled)
if(dairyKitchenLink != "https://www.mos.ru/pgu/ru/services/link/5000/") testRunner.fail("dairyKitchenLink не соответствует ожидаемому. его значение "+dairyKitchenLink)</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить содержимое настроек" id="f0bd784c-e254-4a77-9ac8-67aba25aab43" disabled="true"><con:settings/><con:config><script>version = testRunner.testCase.testSuite.project.getPropertyValue("version")
expextedResponse = testRunner.testCase.getPropertyValue("response"+version)

def response = context.expand('${getConfig#Response}')

assert response == expextedResponse
</script></con:config></con:testStep><con:properties><con:property><con:name>response1.1.0</con:name><con:value><![CDATA[{"payload":{"config":{"lastVersion":"8.01","about":{"userAgreementLink":"https://www.mos.ru/legal/rules/","text":"ЕМИАС — Единая медицинская информационно-аналитическая система города Москвы. Приложение ЕМИАС.ИНФО позволяет населению записываться к врачам в городские поликлиники Москвы и просматривать документы из своей электронной медкарты.","informationSecurityPolicy":"https://iac.mos.ru/legislation/documents/%D0%9F%D0%BE%D0%BB%D0%B8%D1%82%D0%B8%D0%BA%D0%B0%20%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%BE%D0%B9%20%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D1%81%D1%82%D0%B8%20%D0%98%D0%A1%D0%9F%D0%94%D0%BD%20%D0%95%D0%9C%D0%98%D0%90%D0%A1.docx"},"togglers":{"isSelfControlForm":true,"isDispensaryObservationEnabled":true,"isAppointmentPurposesEnabled":true,"isPillbox":false,"isExpressTestCovidEnable":true,"isCheckUpParkEnable":true,"isChatBotEnabled":false,"isChatBotExperimentEnabled":true,"isQRcodeCovidEnable":false},"banners":[{"expressTestNewRequestBanner":{"content":[{"text":"После оформления заявки в приложении отобразится QR-код. Затем в течении 2 дней вы можете пройти экспресс-тест на COVID-19 в ТЦ ГУМ по адресу {{express-test-new-redsquare3}} (третий этаж)","variableDict":{"express-test-new-redsquare3":{"type":"in-app-link","value":"Красная площадь, дом 3","url":"https://yandex.ru/maps/213/moscow/?ll=37.623391%2C55.754302&mode=poi&poi%5Bpoint%5D=37.621182%2C55.754572&poi%5Buri%5D=ymapsbm1%3A%2F%2Forg%3Foid%3D1331623198&pt=37.621408%2C55.754740&z=14.41"}}}]}},{"dispensaryPark02":{"title":"Начните обследование в одном из парков","content":[{"text":"Спасибо, что заполнили анкету!"},{"text":"Начните обследование своего здоровья, посетив любой из 46 павильонов «Здоровая Москва» в городских парках."},{"text":"Время работы: ежедневно с 08:00 до 20:00 в период с мая по октябрь."},{"text":"{{link_to_park}}","variableDict":{"link_to_park":{"type":"in-app-link","value":"Адреса павильонов","url":"https://mosgorzdrav.ru/zm"}}},{"text":"Теперь вы можете ознакомиться с перечнем исследований в рамках диспансеризации"}]}},{"dispensaryPark03":{"title":"Продолжите обследование в павильоне здоровья","content":[{"text":"Для завершения диспансеризации ждем вас в Павильоне «Здоровая Москва», где вы начали обследование."}]}},{"dispensaryPark04":{"title":"Продолжите обследование в поликлинике","content":[{"text":"Для завершения диспансеризации ждем вас в поликлинике для прохождения оставшихся исследований."}]}},{"dispensaryPark05":{"title":"Диспансеризация завершена","content":[{"text":"Вы можете просмотреть результаты всех пройденных обследований. Ждем вас в следующем году!"}]}},{"dispensaryParkSuccess":{"content":[{"text":"Пройдите обследование в одном из {{link_to_park}}. Они работают ежедневно с 08:00 до 20:00 с мая по октябрь. Возьмите с собой паспорт и убедитесь, что у вас действующий полис ОМС.","variableDict":{"link_to_park":{"type":"in-app-link","value":"46 павильонов «Здоровая Москва»","url":"https://mosgorzdrav.ru/zm"}}}]}},{"dispensaryPark01":{"title":"Заполните анкету и пройдите диспансеризацию в парке","content":[{"text":"Заполните анкету для выявления хронических неинфекционных заболеваний."},{"text":"После этого посетите любой из 46 павильонов «Здоровая Москва» в парках г.Москвы."},{"text":"Время работы: ежедневно с 08:00 до 20:00 в период с мая по октябрь."},{"text":"{{link_to_park}}","variableDict":{"link_to_park":{"type":"in-app-link","value":"Адреса павильонов","url":"https://mosgorzdrav.ru/zm"}}}]}},{"covidSpecialityBanners":{"content":[{"text":"Вы можете сделать прививку без записи в торговых центрах и других общественных пространствах. {{link_to_mall}}","variableDict":{"link_to_mall":{"type":"in-app-link","value":"Подробнее","url":"https://www.mos.ru/city/projects/covid-19/privivka/#rec415220807"}}}]}},{"covidDoctorsDisclaimer":{"content":[{"text":"Вы можете сделать прививку без записи в торговых центрах и других общественных пространствах. {{link_to_mall}}","variableDict":{"link_to_mall":{"type":"in-app-link","value":"Подробнее","url":"https://www.mos.ru/city/projects/covid-19/privivka/#rec415220807"}}}]}},{"expressTestBanners":{"content":[{"text":"Пройти экспресс-тестирование на COVID-19 без записи можно в ТЦ ГУМ по адресу {{express-test-new-redsquare3}} (третий этаж), для этого оформите заявку","variableDict":{"express-test-new-redsquare3":{"type":"in-app-link","value":"Красная площадь, дом 3","url":"https://yandex.ru/maps/213/moscow/?ll=37.623391%2C55.754302&mode=poi&poi%5Bpoint%5D=37.621182%2C55.754572&poi%5Buri%5D=ymapsbm1%3A%2F%2Forg%3Foid%3D1331623198&pt=37.621408%2C55.754740&z=14.41"}}}]}}],"links":{"changeAttachmentLink":"https://www.mos.ru/uslugi/zdorove/prikreplenie-k-poliklinike/","checkUpMemoLink":"https://emias.info/media/checkup-notes.html","omsPolicyAbout":"https://emias.info/policy-about","qrCodeMore":"https://www.mos.ru/city/projects/covid-19/kod/","ehrAccessLink":"https://www.mos.ru/pgu/ru/services/link/3697/"},"togglersSettings":[{"chatBotExperimentProperties":[{"lpuId":[10000382],"stage":"Hard","banner":{"content":{"title":"Для записи к урологу пройдите опрос","content":"Создание записи невозможно без пройденного опроса. В течение 2 недель вы сможете записываться к урологу без его повторного прохождения"},"state":"warning"}},{"lpuId":[10000375,6485811854],"stage":"Middle","banner":{"content":{"title":"Вы записаны к урологу","content":"В противном случае созданная запись будет отменена"},"state":"warning"}},{"lpuId":[136],"stage":"Soft","banner":{"content":{"title":"Вы записаны к Урологу"},"state":"success"}},{"lpuId":[204],"stage":"Light"}]}]}}}]]></con:value></con:property><con:property><con:name>response1.2.0</con:name><con:value><![CDATA[{"payload": {"config": {    "lastVersion": "7.0.0",    "about":    {       "userAgreementLink": "https://app.emias.info/terms.html",       "text": "ЕМИАС — Единая медицинская информационно-аналитическая система города Москвы. Приложение ЕМИАС.ИНФО позволяет населению записываться к врачам в городские поликлиники Москвы и просматривать документы из своей электронной медкарты.",       "informationSecurityPolicy": "https://app.emias.info/privacy-policy.html"    },    "togglers":    {       "isSelfControlForm": true,       "isDispensaryObservationEnabled": true,       "isAppointmentPurposesEnabled": true,       "isPillbox": false,       "isExpressTestCovidEnable": false,       "isCheckUpParkEnable": true,       "isChatBotEnabled": false,       "isChatBotExperimentEnabled": true,       "isQRcodeCovidEnable": false    },    "banners":    [       {"expressTestNewRequestBanner": {"content": [      {          "text": "После оформления заявки в приложении отобразится QR-код. Затем в течении 2 дней вы можете пройти экспресс-тест на COVID-19 в ТЦ ГУМ по адресу {{express-test-new-redsquare3}} (третий этаж)",          "variableDict": {"express-test-new-redsquare3":          {             "type": "in-app-link",             "value": "Красная площадь, дом 3",             "url": "https://yandex.ru/maps/213/moscow/?ll=37.623391%2C55.754302&mode=poi&poi%5Bpoint%5D=37.621182%2C55.754572&poi%5Buri%5D=ymapsbm1%3A%2F%2Forg%3Foid%3D1331623198&pt=37.621408%2C55.754740&z=14.41"          }}       }]}},       {"dispensaryPark02":       {          "title": "Начните обследование в одном из парков",          "content":          [             {"text": "Спасибо, что заполнили анкету!"},             {"text": "Начните обследование своего здоровья, посетив любой из 46 павильонов «Здоровая Москва» в городских парках."},             {"text": "Время работы: ежедневно с 08:00 до 20:00 в период с мая по октябрь."},                         {                "text": "{{link_to_park}}",                "variableDict": {"link_to_park":                {                   "type": "in-app-link",                   "value": "Адреса павильонов",                   "url": "https://mosgorzdrav.ru/zm"                }}             },             {"text": "Теперь вы можете ознакомиться с перечнем исследований в рамках диспансеризации"}          ]       }},       {"dispensaryPark03":       {          "title": "Продолжите обследование в павильоне здоровья",          "content": [{"text": "Для завершения диспансеризации ждем вас в Павильоне «Здоровая Москва», где вы начали обследование."}]       }},       {"dispensaryPark04":       {          "title": "Продолжите обследование в поликлинике",          "content": [{"text": "Для завершения диспансеризации ждем вас в поликлинике для прохождения оставшихся исследований."}]       }},       {"dispensaryPark05":       {          "title": "Диспансеризация завершена",          "content": [{"text": "Вы можете просмотреть результаты всех пройденных обследований. Ждем вас в следующем году!"}]       }},       {"dispensaryParkSuccess": {"content": [      {          "text": "Пройдите обследование в одном из {{link_to_park}}. Они работают ежедневно с 08:00 до 20:00 с мая по октябрь. Возьмите с собой паспорт и убедитесь, что у вас действующий полис ОМС.",          "variableDict": {"link_to_park":          {             "type": "in-app-link",             "value": "46 павильонов «Здоровая Москва»",             "url": "https://mosgorzdrav.ru/zm"          }}       }]}},       {"dispensaryPark01":       {          "title": "Заполните анкету и пройдите диспансеризацию в парке",          "content":          [             {"text": "Заполните анкету для выявления хронических неинфекционных заболеваний."},             {"text": "После этого посетите любой из 46 павильонов «Здоровая Москва» в парках г.Москвы."},             {"text": "Время работы: ежедневно с 08:00 до 20:00 в период с мая по октябрь."},                         {                "text": "{{link_to_park}}",                "variableDict": {"link_to_park":                {                   "type": "in-app-link",                   "value": "Адреса павильонов",                   "url": "https://mosgorzdrav.ru/zm"                }}             }          ]       }},       {"covidSpecialityBanners": {"content": [      {          "text": "Вы можете сделать прививку без записи в торговых центрах и других общественных пространствах. {{link_to_mall}}",          "variableDict": {"link_to_mall":          {             "type": "in-app-link",             "value": "Подробнее",             "url": "https://www.mos.ru/city/projects/covid-19/privivka/#rec415220807"          }}       }]}},       {"covidDoctorsDisclaimer": {"content": [      {          "text": "Вы можете сделать прививку без записи в торговых центрах и других общественных пространствах. {{link_to_mall}}",          "variableDict": {"link_to_mall":          {             "type": "in-app-link",             "value": "Подробнее",             "url": "https://www.mos.ru/city/projects/covid-19/privivka/#rec415220807"          }}       }]}},       {"expressTestBanners": {"content": [      {          "text": "Пройти экспресс-тестирование на COVID-19 без записи можно в ТЦ ГУМ по адресу {{express-test-new-redsquare3}} (третий этаж), для этого оформите заявку",          "variableDict": {"express-test-new-redsquare3":          {             "type": "in-app-link",             "value": "Красная площадь, дом 3",             "url": "https://yandex.ru/maps/213/moscow/?ll=37.623391%2C55.754302&mode=poi&poi%5Bpoint%5D=37.621182%2C55.754572&poi%5Buri%5D=ymapsbm1%3A%2F%2Forg%3Foid%3D1331623198&pt=37.621408%2C55.754740&z=14.41"          }}       }]}}    ],    "links":    {       "changeAttachmentLink": "https://www.mos.ru/uslugi/zdorove/prikreplenie-k-poliklinike/",       "checkUpMemoLink": "https://emias.info/media/checkup-notes.html",       "omsPolicyAbout": "https://emias.info/policy-about",       "qrCodeMore": "https://www.mos.ru/city/projects/covid-19/kod/",       "ehrAccessLink": "https://www.mos.ru/pgu/ru/services/link/3697/"    },    "togglersSettings": [{"chatBotExperimentProperties":    [             {          "lpuId": [10000382],          "stage": "Hard",          "banner":          {             "content":             {                "title": "Для записи к урологу пройдите опрос",                "content": "Создание записи невозможно без пройденного опроса. В течение 2 недель вы сможете записываться к урологу без его повторного прохождения"             },             "state": "warning"          }       },             {          "lpuId":          [             10000375,             6485811854          ],          "stage": "Middle",          "banner":          {             "content":             {                "title": "Вы записаны к урологу",                "content": "В противном случае созданная запись будет отменена"             },             "state": "warning"          }       },             {          "lpuId": [136],          "stage": "Soft",          "banner":          {             "content": {"title": "Вы записаны к Урологу"},             "state": "success"          }       },             {          "lpuId": [204],          "stage": "Light"       }    ]}] }}}]]></con:value></con:property></con:properties></con:testCase><con:testCase id="303dbc5c-a3c8-40b9-8479-679929f1c395" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="sarOrchestrator" searchProperties="true"><con:settings/><con:testStep type="request" id="4f8f8faa-fb39-439c-ac12-2e9be2c9c713" name="getAssignmentsInfo sar" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SelfAppointmentServiceV5Binding</con:interface><con:operation>getAssignmentsInfo</con:operation><con:request name="getAssignmentsInfo sar" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="54fde3ed-ff8a-40c0-819b-582da6f77f43"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-main/proxy/Composite/saOrchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">
<soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>
      <v5:getAssignmentsInfo>
         <omsNumber>7700002085624106</omsNumber>
         <birthDate>2024-05-29</birthDate>
         <!--Optional:-->
         <returnExtended>false</returnExtended>
         <externalSystemId>EIM</externalSystemId>
      </v5:getAssignmentsInfo>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="524e4073-e6c5-4a9a-8582-660977960a77" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="af20e7b3-9a55-4d65-84aa-a4fa5c3a1ddc" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/SelfAppointmentServiceV5PT/getAssignmentsInfo"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getAssignmentsInfo" id="bbb231ab-18ff-4a69-b89f-40529f056114"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/saOrchestrator/getAssignmentsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getAssignmentsInfo" id="f35597c1-c723-40e2-9cc2-c810b08bc854" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "omsNumber": "7700002085624106",
  "birthDate": "2024-05-29",
  "registryEntryId": [
    0
  ]
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestrator/getAssignmentsInfo</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="d60efbf4-891b-4a39-b28e-e70769fcd1b0" name="HTTP Status Code=404" disabled="true"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cf4c2857-5a23-4eab-8b23-55ca8f428de3" name="Код ошибки=SA_PATIENT_NOT_FOUND" disabled="true"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="be9ba6bc-1202-4cba-b5fb-abd906833151"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getAssignmentsInfo#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getAssignmentsInfo").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getAssignmentsInfo HTTP status code: " + httpStatusCode)
log.info "getAssignmentsInfo Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("SA_PATIENT_NOT_FOUND")){ 
	testRunner.fail()
	log.info("ERROR: В ответе getAssignmentsInfo возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getAssignmentsInfo Ответ соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0589e982-151b-40d9-8ada-21d431f92caf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="saOrchestrator (cls)" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getMemo" id="080c9aca-49aa-493e-9368-2dea865bbd7c"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/saOrchestrator/getMemo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getMemo" id="28085547-0f77-49b9-b343-301cf6be9399" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "request": [
    {
      "laboratoryId": 1
    }
  ]
}</con:request><con:originalUri>http://application.emiasinfo-services.test.emias.mos.ru/api/api/v3/saOrchestrator/getMemo</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="34f2a264-e5ce-461f-9926-b2cea2c8313a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getMemo#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getMemo").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getMemo HTTP status code: " + httpStatusCode)
log.info "getMemo Ответ метода :" +response

if( !response.contains("payload") &amp;&amp; httpStatusCode !="200" &amp;&amp;  !response.contains("CLS_LAB_RESEARCH_NOT_FOUND")){ 
	testRunner.fail()
	log.info("ERROR: В ответе getMemo возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getMemo Ответ соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="640e84b3-0f9d-4766-a53a-f6edf7bc0c2b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="saOrchestratorCovid" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpusForVaccinations" id="9b3515bc-5852-4687-9eac-c90216c8fea8"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/saOrchestratorCovid/getLpusForVaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpusForVaccinations" id="d6c8f511-214f-4305-afd5-77fdfef20d25" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/saOrchestratorCovid/getLpusForVaccinations</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="21b28d89-99ba-4f21-b184-27515434f937" name="HTTP Status Code=404" disabled="true"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="03d8f18a-359d-47f1-93cf-551b81111795" name="Код ошибки=SA_PATIENT_NOT_FOUND" disabled="true"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="121212"/>
  <con:entry key="birthDate" value="2040-01-02"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="c219e674-6a3d-46e0-863f-0c13fc3ec2fd"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getLpusForVaccinations#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getLpusForVaccinations").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]


log.info("getLpusForVaccinations HTTP status code: " + httpStatusCode)
log.info "getLpusForVaccinations Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("SA_PATIENT_NOT_FOUND")){ 
	testRunner.fail()
	log.info("ERROR: В ответе getLpusForVaccinations возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getLpusForVaccinations соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="71d9d404-3073-49c8-a719-51217a3148ca" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="prescriptionInfo" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getAggregators" id="6b421360-35c1-46a4-b6fd-22f3fdb4d5d6"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/prescription/aggregators" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getAggregators" id="e92e6197-8505-4fbf-95ca-0427f18b82b6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/prescription/aggregators</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="21a0df67-5e05-47bd-9268-02872e37e314" name="HTTP Status Code=200" disabled="true"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="63f7851f-5138-4fe6-9feb-0324fadb671c" name="В ответе есть аггрегаторы" disabled="true"><con:configuration><path>$.payload.aggregator</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="4c5c9a1f-310f-4da0-ad94-9e477967f08a" name="В ответе нет ошибок" disabled="true"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="5a681c07-cbf9-4aa3-a5aa-7e2bf1c2d658"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getAggregators#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getAggregators").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getAggregators HTTP status code: " + httpStatusCode)
log.info "getAggregators Ответ метода :" +response

if( !response.contains("payload") &amp;&amp; httpStatusCode !="204" &amp;&amp;  !response.contains("LLO_BAD_REQUEST")) { 
	testRunner.fail()
	log.info("ERROR: В ответе getAggregators возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getAggregators соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="70374f2f-7874-404d-bfa9-7d1316656192" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInquiryPurpose" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="8b52e514-d709-49a7-94f4-506b4e6e738b" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="9d1dcf91-8ffb-42a9-923d-28088fc0288d" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="b7b0b9e6-a998-4235-ac09-d71e9a6884a7" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].policyNum</con:sourcePath><con:targetType>oms</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getInquiryPurpose" id="71c97342-3200-47bb-aac2-4caca75d9671"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/inquiryPurpose/getInquiryPurpose" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getInquiryPurpose" id="31c13985-d8bf-466d-b81d-3b906f3aed89" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/inquiryPurpose/getInquiryPurpose</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="${#Project#inqPurpOms}"/>
  <con:entry key="birthDate" value="${#Project#inqPurpBD}"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry><con:entry>isChatBotEnabled</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Обработка ошибки оркестратора" id="6715fe1f-5f21-4c23-8c03-7e0cc3d85f29"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Condition 1</con:name><con:type>XPATH</con:type><con:expression>$.error.code =="SA_SERVER_ERROR"</con:expression><con:targetStep>getInquiryPurpose</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="6389f8a7-48e2-436b-b459-cf68190fc9ac"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${getInquiryPurpose#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getInquiryPurpose").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getInquiryPurpose HTTP status code: " + httpStatusCode)
log.info "getInquiryPurpose Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("IP_INQUIRY_ERROR")) { 
	testRunner.fail()
	log.info("ERROR: В ответе getInquiryPurpose возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getInquiryPurpose Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>31062572</con:value></con:property><con:property><con:name>bd</con:name><con:value>1956-05-20</con:value></con:property><con:property><con:name>oms</con:name><con:value>0000000000017061</con:value></con:property></con:properties></con:testCase><con:testCase id="5038a18c-a1bc-493c-8a61-3dc19a8a4403" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="lpuScheduleInfo" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="lpuScheduleInfo" id="aadde1e2-9c99-49ce-9bf0-5882d3c0868f"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/policy/lpuScheduleInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="lpuScheduleInfo" id="c77f3b9f-8011-46a7-979e-a1e959523de8" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/policy/lpuScheduleInfo</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="lpuId" value="141" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>lpuId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="4b11a7d8-20b0-4b76-bbad-cadb69dbdd49"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${lpuScheduleInfo#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("lpuScheduleInfo").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("lpuScheduleInfo HTTP status code: " + httpStatusCode)
log.info "lpuScheduleInfo Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("SA_PATIENT_NOT_FOUND")) { 
	testRunner.fail()
	log.info("ERROR: В ответе lpuScheduleInfo возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ lpuScheduleInfo соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="304ef70e-b23b-4399-bfd6-ef84fa6d7b54" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST policy" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST policy" id="c003c1e9-213f-420d-9e7e-e70d3241d0a3"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/policy" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST policy" id="da038c25-91a8-44d8-8c1e-c74cf69547c0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{\r
   "omsNumber" : "string",\r
   "birthDate" : "2023-05-29",\r
   "typeAttach" : [\r
      0\r
   ],\r
   "onlyMoscowPolicy" : true\r
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/policy</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="fa608f8e-c6cc-46ea-8022-dce71fa07fbd" name="HTTP Status Code=404" disabled="true"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="722b9ae3-ed08-4747-927f-7cef24a45f9a" name="Код ошибки SUPP_PATIENT_NOT_FOUND" disabled="true"><con:configuration><path>$.error.code</path><content>SUPP_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="b2917ee6-99a0-4d80-9461-ea483aafaca6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${POST policy#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("POST policy").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("POST policy  HTTP status code: " + httpStatusCode)
log.info "POST policy  Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("SUPP_PATIENT_NOT_FOUND")) { 
	testRunner.fail()
	log.info("ERROR: В ответе POST policy возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ POST policy соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e10f2b95-97e4-4a76-b39c-74c1d3b783dc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInquiryPurpose" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getInquiryPurpose" id="e02c8463-c27e-470f-9f35-21a7be4f89bd"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/inquiryPurpose/getInquiryPurpose" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getInquiryPurpose" id="b0a10734-eb7a-4330-bfb5-cc4b23dfc190" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/inquiryPurpose/getInquiryPurpose</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7d54b2e3-b2bd-43df-a7f3-6c0004b2922c" name="HTTP Status Code=404" disabled="true"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2a16bd98-d7ff-413e-87d2-cb37a3ae8640" name="Код ошибки Sa_PATIENT_NOT_FOUND" disabled="true"><con:configuration><path>$.error.code</path><content>SA_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="7701516288821988"/>
  <con:entry key="birthDate" value="1988-03-04"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="3f2db400-d1d6-418f-9950-0eed621da6df"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getInquiryPurpose#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getInquiryPurpose").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getInquiryPurpose HTTP status code: " + httpStatusCode)
log.info "getInquiryPurpose Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("SA_PATIENT_NOT_FOUND")) { 
	testRunner.fail()
	log.info("ERROR: В ответе getInquiryPurpose возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getInquiryPurpose Ответ  соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="47966340-2f24-44eb-83ac-89fd564de550" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getInquiryPurpose2(getLink)" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Обновить appointmentId" id="bea9d5c8-9edc-49c0-89c8-aee8956c8592"><con:settings/><con:config><script>appointmentId = testRunner.testCase.getPropertyValue("appointmentId").toLong()
appointmentId -= 1
testRunner.testCase.setPropertyValue("appointmentId",appointmentId.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="getLink" id="f2ecfb68-a1d4-48a5-a2f9-bed579dbdaf2"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/inquiryPurpose/getLink" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLink" id="eba518b8-19c8-46da-90bc-69e2ff5253f7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application.emiasinfo-services.test.emias.mos.ru/api/v2/inquiryPurpose/getLink</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="positionNomCode " value="2"/>
  <con:entry key="appointmentId" value="${#TestCase#appointmentId}"/>
  <con:entry key="positionNomCode" value="759"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="1fec24c1-d9d5-4be2-8e52-3288b0eda307"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getLink#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getLink").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getLink HTTP status code: " + httpStatusCode)
log.info "getLink Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("hash")) { 
	testRunner.fail()
	log.info("ERROR: В ответе getLink возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getLink Ответ  соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>appointmentId</con:name><con:value>14345453424</con:value></con:property></con:properties></con:testCase><con:testCase id="6b7a48f5-ab30-46e6-af21-3a2b90ee0005" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="mainPage" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="saCount" id="a5f7fb28-de2a-4d44-a152-f5518e8a8306"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/mainPage/saCount" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="saCount" id="b484868b-eb1a-40e0-b5ed-2f3b91502448" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v3/mainPage/saCount</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6d168a6b-54f2-4cef-912c-6dd313f1bd8f" name="HTTP Status Code=200" disabled="true"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="eba21a60-a62d-420a-88bc-bdcd347efdb5" name="В ответе есть ошибка SA_APPOINTMENT_ERROR" disabled="true"><con:configuration><path>$.payload.activeAppointment.error.code</path><content>SA_APPOINTMENT_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="eba21a60-a62d-420a-88bc-bdcd347efdb5" name="В ответе есть ошибка SA_ASSIGNMENT_ERROR" disabled="true"><con:configuration><path>$.payload.activeReferrals.error.code</path><content>SA_ASSIGNMENT_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="omsNumber" value="1"/>
  <con:entry key="birthDate" value="2040-01-01"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="47fcb2ca-4cf7-4922-8c95-547b53c93cb9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${saCount#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("saCount").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("saCount  HTTP status code: " + httpStatusCode)
log.info "saCount  Ответ метода :" +response

if( !response.contains("payload") &amp;&amp; !response.contains("PATIENT_NOT_FOUND")) { 
	testRunner.fail()
	log.info("ERROR: В ответе saCount возникло несоответствие фактического результата ожидаемому")
	}
else log.info "saCount Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d343760c-7e5c-4619-8c23-af19e4987eea" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="covidTest" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="save covidTest" id="93045e4f-4d19-42e7-851b-1cf1e91cc1c3"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/covidTest/save" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="save covidTest" id="de2eafab-d63f-4102-8866-9176b202d067" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "patient": {
    "policyNumber": "string",
    "snils": "string",
    "document": {
      "documentTypeId": "1",
      "series": "string",
      "num": "string",
      "issueDate": "2023-05-29",
      "issuedBy": "string"
    },
    "secondName": "string",
    "firstName": "string",
    "middleName": "string",
    "birthDate": "2023-05-29",
    "gender": "string",
    "phone": "string",
    "address": {
      "flat": "string",
      "text": "string",
      "fiasId": "string"
    }
  }
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/covidTest/save</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="27ba7b5e-1367-4d1f-bf68-2ebb8c6d0bb9" name="HTTP Status Code=400" disabled="true"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b7285968-1899-4782-8355-11a92547b523" name="Код ошибки =COVID_LABS_SAVE_ERROR" disabled="true"><con:configuration><path>$.error.code</path><content>COVID_LABS_SAVE_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="27e7021b-ad0c-42b1-a1d9-430073e2329a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${save covidTest#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("save covidTest").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("save covidTest  HTTP status code: " + httpStatusCode)
log.info "save covidTest  Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("COVID_LABS_SAVE_ERROR")  &amp;&amp;  !response.contains("COVID_LABS_AUTH_ERROR")) { 
	testRunner.fail()
	log.info("ERROR: В ответе save covidTest возникло несоответствие фактического результата ожидаемому")
	}
else log.info "save covidTest Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="21eed23c-4f7d-4fd5-bbeb-c028736146c4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="support" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="createRequest" id="69788c44-1777-46d2-8d86-29cbfa2118dc"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/support/createRequest" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createRequest" id="6e104b05-4629-4b9b-b726-c922b67087ca" mediaType="multipart/form-data" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/support/createRequest</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="df164b48-a7dc-4085-bb24-1644dbcaf699" name="HTTP Status Code=404" disabled="true"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fc0c028f-2a95-41e7-90e5-78519f477f8b" name="result = false" disabled="true"><con:configuration><path>$.payload.result</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19161698-d304-41b6-bd64-1d8832c91992" name="Код ошибки =SUPP_PATIENT_NOT_FOUND" disabled="true"><con:configuration><path>$.error.code</path><content>SUPP_PATIENT_NOT_FOUND</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="productVersion" value="2"/>
  <con:entry key="omsNumber" value="2"/>
  <con:entry key="description" value="w"/>
  <con:entry key="requestCategory" value="1"/>
  <con:entry key="osName" value="w"/>
  <con:entry key="fio" value="2"/>
  <con:entry key="deviceName" value="1"/>
  <con:entry key="birthDate" value="2040-01-01"/>
  <con:entry key="email" value="2"/>
  <con:entry key="accept" value="application/json"/>
</con:parameters><con:parameterOrder><con:entry>omsNumber</con:entry><con:entry>email</con:entry><con:entry>fio</con:entry><con:entry>description</con:entry><con:entry>productVersion</con:entry><con:entry>deviceName</con:entry><con:entry>osName</con:entry><con:entry>requestCategory</con:entry><con:entry>accept</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="2f212fa0-a430-4fd3-b2dd-e4adda43ae07"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${createRequest#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("createRequest").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("createRequest  HTTP status code: " + httpStatusCode)
log.info "createRequest  Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("SUPP_PATIENT_NOT_FOUND")) { 
	testRunner.fail()
	log.info("ERROR: В ответе createRequest возникло несоответствие фактического результата ожидаемому")
	}
else log.info "createRequest Ответ соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="02f0e3f9-d719-43f8-af76-f089d6447153" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="calendar" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="3ab74a47-a871-4d9e-a5dd-203a229f942c" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="4185c82f-417d-44da-9ad1-c9a429407cff" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="a7751e65-26bb-4b28-975c-4aaed5d67f8c" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].ehrId</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getCalendar" id="2ccf7367-369a-46c3-89fe-b0e1367c983d"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v4/calendar/getCalendar" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getCalendar" id="d25d94e5-fb59-4b0e-a008-9eae43a8a43b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v4/calendar/getCalendar</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="347d56d1-dd07-482e-84fd-e7b49747f66b" name="HTTP Status Code=200" disabled="true"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="978a262f-dce5-4081-b5bc-de6427859d29" name="JsonPath Existence Match" disabled="true"><con:configuration><path>$.payload</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="ehrId" value="${#Project#calendarEhrId}"/>
  <con:entry key="birthDate" value="${#Project#calendarBD}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>EI-Token</con:entry><con:entry>ehrId</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="b3208dba-2c68-4357-b3e9-313fd8eb018b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getCalendar#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getCalendar").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getCalendar HTTP status code: " + httpStatusCode)
log.info "getCalendar Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("LK_PERMISSION_ERROR")) { 
	testRunner.fail()
	log.info("ERROR: В ответе getCalendar возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getCalendar Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>78c3f6ee-e387-4b98-abe8-8f9332fe2401</con:value></con:property><con:property><con:name>bd</con:name><con:value>1982-04-09</con:value></con:property></con:properties></con:testCase><con:testCase id="2ec03891-3233-4f21-8bd6-439cbc484d3e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="pdn" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="e42ed47b-98a1-4f70-9f0c-6bc11a2f7e96" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="2c506e73-01d0-4c25-875f-602f34de3304" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="fb79b445-59cc-4f21-b850-b5f4ea562d75" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].emiasId</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getShortProgram" id="0fe7ac28-e503-4ac4-b411-3be157850207"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="dfa3ba72-1ff9-4df7-b567-2de3240cdf63" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://srv-prpkubep1-emiasinfo-app.mosgorzdrav.local/api/v3/pdn/shortProgram</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#Project#pdnId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="13fc80d9-05b8-47d3-8209-0d66ca3f59ef"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${getShortProgram#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getShortProgram").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getShortProgram HTTP status code: " + httpStatusCode)
log.info "getShortProgram Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("PDN_ERROR") &amp;&amp; httpStatusCode != "204") { 
	testRunner.fail()
	log.info("ERROR: В ответе getShortProgram возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getShortProgram Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>30000011308116</con:value></con:property><con:property><con:name>bd</con:name><con:value>1956-05-20</con:value></con:property></con:properties></con:testCase><con:testCase id="6988aeb6-8521-4653-afc8-74ee418eeab5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="lifeAnamnesis" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="8b4b8e12-ab65-42a1-9737-426527242c52" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="cf4beb00-4d40-4e2f-82ba-6e16dfbd9f9b" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="9ca5b6ad-b922-4fd9-93a4-ccf017d548b6" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].ehrId</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getlifeAnamnesis" id="a1c32dc1-5d2d-4a0f-9bbb-a96f36e5f6e2"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/anamnesis/lifeAnamnesis" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getlifeAnamnesis" id="a4a45978-e5db-4e3e-b28b-413a85160e1b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v3/anamnesis/lifeAnamnesis</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-token" value="${#Project#sudirToken}"/>
  <con:entry key="ehrId" value="${#Project#medCardEhrId}"/>
</con:parameters><con:parameterOrder><con:entry>ehrId</con:entry><con:entry>EI-token</con:entry><con:entry>X-Access-JWT</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="966771d8-271e-4303-868d-ae11cc43f065"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${getlifeAnamnesis#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getlifeAnamnesis").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getlifeAnamnesis HTTP status code: " + httpStatusCode)
log.info "getlifeAnamnesis Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("LK_LIFE_ANAMNESIS_ERROR")  &amp;&amp; httpStatusCode != "204") { 
	testRunner.fail()
	log.info("ERROR: В ответе getlifeAnamnesis возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getlifeAnamnesis Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>723b7b61-066f-4e2e-ba0d-5b22c049e1cf</con:value></con:property><con:property><con:name>bd</con:name><con:value>1956-05-20</con:value></con:property><con:property><con:name>oms</con:name><con:value>5450530821000361</con:value></con:property></con:properties></con:testCase><con:testCase id="ad9f1006-3ccd-4c6b-9d27-94de8e7c267c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getLink" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="d09a3c42-e096-434a-b76b-b1f6698805af" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="de2c6414-3565-4c6c-8718-d52534ba638e" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].emiasId</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getLink" id="034bc854-0fc9-4835-8ff0-c76fffc718d0"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/inquiryPurpose/getLink" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLink" id="e1a36978-027a-4dd9-99fa-bbe8be01a557" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/inquiryPurpose/getLink</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="positionNomCode " value="1"/>
  <con:entry key="patientId" value="${#TestCase#id}"/>
  <con:entry key="appointmentId" value="1"/>
</con:parameters><con:parameterOrder><con:entry>appointmentId</con:entry><con:entry>patientId</con:entry><con:entry>positionNomCode</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="0715025a-d53f-4586-837b-b02f635e6a18"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

 
def getInquiryPurposeResponse = context.expand('${getInquiryPurpose#Response}')
def slurperJson = new JsonSlurper()
def getInquiryPurpose = slurperJson.parseText(getInquiryPurposeResponse)

if(getInquiryPurpose.error){
	if(getInquiryPurpose.error.code != " IP_INQUIRY_ERROR"){
		testRunner.fail("Некорректный текст ошибки " +getInquiryPurpose.error.code)
	}
	else log.info "Ответ нормальный"
}
else{
	if( !getInquiryPurpose.payload) testRunner.fail("В ответе нет  groupInquryPurpose")
	else log.info "Ответ нормальный"
}
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>31062572</con:value></con:property><con:property><con:name>bd</con:name><con:value>1964-09-28</con:value></con:property><con:property><con:name>oms</con:name><con:value>5450530821000361</con:value></con:property></con:properties></con:testCase><con:testCase id="994336fe-2571-470d-a313-2c8b29877e52" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="archiveAppointment" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="a30b84d9-a651-4777-a55e-7843152a79b7" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="497d9ad0-944b-418e-9824-0af2234f0b50" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="052e2ad3-fd44-448e-9757-5f6c74885ead" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].policyNum</con:sourcePath><con:targetType>oms</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="archiveAppointment" id="7dae8f55-269e-4e92-99b7-50e2ec04e275"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v4/archiveAppointment/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="archiveAppointment" id="98c553d6-4029-4b0a-9a5e-28dda04a9d01" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "birthDate": "${#Project#archiveAppointmentBD}",
  "omsNumber": "${#Project#archiveAppointmentOms}",
  "pagingOptions": {
    "pageNumber": 0,
    "pageSize": 0
  }
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v3/archiveAppointment/list</con:originalUri><con:assertion type="JsonPath Existence Match" id="9c01f37a-3643-4a1e-b2ff-f6f9f781dc56" name="JsonPath Existence Match" disabled="true"><con:configuration><path>$.payload</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="262726dc-669b-49d4-ae44-e07f26dec30e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${archiveAppointment#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("archiveAppointment").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("archiveAppointment HTTP status code: " + httpStatusCode)
log.info "archiveAppointment Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("SA_PATIENT_NOT_FOUND")  &amp;&amp; httpStatusCode != "204"){ 
	testRunner.fail()
	log.info("ERROR: В ответе archiveAppointment возникло несоответствие фактического результата ожидаемому")
	}
else log.info "archiveAppointment Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>31062572</con:value></con:property><con:property><con:name>bd</con:name><con:value>1956-05-20</con:value></con:property><con:property><con:name>oms</con:name><con:value>0000000000017061</con:value></con:property></con:properties></con:testCase><con:testCase id="a3ccb0ed-8371-4415-9041-b3851ce50dd2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="medicalCard" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="4378c04a-8c97-4d9f-bf3b-52aaf1961f11" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="bca14900-885a-4557-a803-f3c0f3cb7040" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="4c3d6cdf-956b-4829-8830-663eb446f85c" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].ehrId</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET additionalSections" id="cccc6146-fb64-4fe4-84cb-04ecb3123537"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/medicalCard/additionalSections" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET additionalSections" id="0772259b-d305-492b-8ee2-0c4ea46049e2" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/medicalCard/additionalSections</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9f6a105d-1d75-4413-8719-df89b40baa98" name="Valid HTTP Status Codes" disabled="true"><con:configuration><codes>200,204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-token" value="${#Project#sudirToken}"/>
  <con:entry key="ehrId" value="${#Project#medCardEhrId}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>EI-token</con:entry><con:entry>ehrId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="f6c64f8e-7aaa-4fac-9a0e-e3d9ae5b015e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${GET additionalSections#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("GET additionalSections").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("GET additionalSections HTTP status code: " + httpStatusCode)
log.info "GET additionalSections Ответ метода :" +response

if( httpStatusCode != "204" &amp;&amp; httpStatusCode != "200" &amp;&amp; !response.contains("payload")){ 
	testRunner.fail()
	log.info("ERROR: В ответе GET additionalSections возникло несоответствие фактического результата ожидаемому")
	}
else log.info "GET additionalSections Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>723b7b61-066f-4e2e-ba0d-5b22c049e1cf</con:value></con:property><con:property><con:name>bd</con:name><con:value>1956-05-20</con:value></con:property><con:property><con:name>oms</con:name><con:value>5450530821000361</con:value></con:property></con:properties></con:testCase><con:testCase id="6dce5803-e8b6-4aa8-9b0a-66d10254a9fa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="lkPatient" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="c0b8048b-8eb7-424f-96a1-de4439f51860" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="402c8f2b-2186-4112-b4c9-37775142dec0" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="4fa51806-d33b-4701-bc2c-b51f8f434fcf" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].ehrId</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getDiaries" id="8c96a9d0-b472-4f43-9938-934f0ea72e22"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/lkPatient/diaries" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDiaries" id="03dc2704-3b3e-44b5-a0f0-76e6bb7ddf50" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v3/lkPatient/diaries</con:originalUri><con:assertion type="JsonPath Existence Match" id="3f93e345-690e-41ef-93a0-26655c356377" name="JsonPath Existence Match" disabled="true"><con:configuration><path>$.payload</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="ehrId" value="${#Project#medCardEhrId}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>ehrId</con:entry><con:entry>X-Access-JWT</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="930da8a6-1e4f-4ba3-b7ad-2e4576857d2a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${getDiaries#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getDiaries").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getDiaries HTTP status code: " + httpStatusCode)
log.info "getDiaries Ответ метода:" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("LK_LIFE_ANAMNESIS_ERROR")  &amp;&amp; httpStatusCode != "204"){ 
	testRunner.fail()
	log.info("ERROR: В ответе getDiaries возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getDiaries Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>723b7b61-066f-4e2e-ba0d-5b22c049e1cf</con:value></con:property><con:property><con:name>bd</con:name><con:value>1956-05-20</con:value></con:property><con:property><con:name>oms</con:name><con:value>5450530821000361</con:value></con:property></con:properties></con:testCase><con:testCase id="f083305d-b1c4-4661-91a6-afc02302857a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="certificates" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="d5bf53d3-05c4-457a-bc12-53bd6a87fa8c" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="12573ac3-99cf-435e-a0a4-b77007071b06" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="f414e656-c0ea-4f1e-9ff4-36352f21e86b" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].emiasId</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getCertificateInfo" id="3715b915-6920-449c-a0c5-3e534bd1995a"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/certificates/info" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getCertificateInfo" id="7b56de27-89e0-4a3c-bfa7-9b6f9413cf2b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v3/certificates/info</con:originalUri><con:assertion type="JsonPath Match" id="93323102-572a-4da9-bd60-3d2fdb743118" name="JsonPath Match" disabled="true"><con:configuration><path>$.error.code</path><content>PIN_CERTIFICATE_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#Project#pdnId}"/>
  <con:entry key="conclusionId" value="1"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry><con:entry>conclusionId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="2a0a12a2-aed7-436a-badb-7767a28426f3"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${getCertificateInfo#Response}')


def httpResponseHeaders = testRunner.testCase.getTestStepByName("getCertificateInfo").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getCertificateInfo HTTP status code: " + httpStatusCode)
log.info "getCertificateInfo Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("PIN_CERTIFICATE_ERROR")  &amp;&amp; httpStatusCode != "204"){ 
	testRunner.fail()
	log.info("ERROR: В ответе getCertificateInfo возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getCertificateInfo Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>30000011308116</con:value></con:property><con:property><con:name>bd</con:name><con:value>1956-05-20</con:value></con:property><con:property><con:name>oms</con:name><con:value>5450530821000361</con:value></con:property></con:properties></con:testCase><con:testCase id="e38ad0bd-6298-451b-a2e6-37c7530fb8fc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="bzhd" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="a4d22219-e179-4124-b270-d22d4de749e5" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Посмотреть привязанных пользователей 2" id="7d8c06b0-531c-480b-a6b5-1bf2f7128e09" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей 2" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/lkservice/api-gateway/v1S/ProxyService</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="538b0be4-bcaf-444c-8d6d-c166893d09d0" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей 2#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей 2").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) log.info("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else { 
	log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
	oms=parsedResponse.permissions[1].policyNum.toString()
	bd=parsedResponse.permissions[1].birthday.toString()
	testRunner.testCase.setPropertyValue("oms", oms)
	testRunner.testCase.setPropertyValue("bd", bd)
}
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="0fe68f31-504b-4cbc-b08c-15c0f90e6a2c" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[1].policyNum</con:sourcePath><con:targetType>oms</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[1].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET acquireRemoteId" id="044a7887-a4a1-49d9-9f1a-ef26f18e8f5b"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/bzhd/acquireRemoteId" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET acquireRemoteId" id="506aa9d0-2bc6-451d-973e-a23c2c4d3e7b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v3/bzhd/acquireRemoteId</con:originalUri><con:assertion type="JsonPath Match" id="2031a399-05c3-4b39-9a7d-41e253429257" name="JsonPath Matchв" disabled="true"><con:configuration><path>$.error.code</path><content>BZHD_AUTHORIZATION_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="oms" value="${#Project#bzhdOms}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="birthDate" value="${#Project#bzhdBD}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>oms</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="ae9268be-d6d4-42fa-9a06-0182064ef6c2"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${GET acquireRemoteId#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("GET acquireRemoteId").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("acquireRemoteId HTTP status code: " + httpStatusCode)
log.info "acquireRemoteId Ответ метода GET :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("BZHD_AUTHORIZATION_ERROR")  &amp;&amp; httpStatusCode != "204"){ 
	testRunner.fail()
	log.info("ERROR: В ответе acquireRemoteId возникло несоответствие фактического результата ожидаемому")
	}
else log.info "acquireRemoteId Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET acquireRemoteId1" id="1b7095f5-83a9-480a-86c2-51be29295023" disabled="true"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/bzhd/acquireRemoteId" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET acquireRemoteId1" id="506aa9d0-2bc6-451d-973e-a23c2c4d3e7b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://emias.info/api-ng</con:endpoint><con:request/><con:originalUri>https://emias.info/api-ng/v3/bzhd/acquireRemoteId</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="oms" value="0000000000017061"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="birthDate" value="429764400"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>oms</con:entry><con:entry>birthDate</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>31062572</con:value></con:property><con:property><con:name>bd</con:name><con:value>1975-04-24</con:value></con:property><con:property><con:name>oms</con:name><con:value>7700001048740475</con:value></con:property></con:properties></con:testCase><con:testCase id="408b0eaf-7ad6-4f27-b9fe-e1f0830dddbe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="selfControl" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="72aa92b5-a8e0-4332-b144-7e15f2cfb8de" disabled="true"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Залогировать ответ" id="62dd603f-eedd-4a73-836d-d832047175b3" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${Посмотреть привязанных пользователей#Response}')
parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("Посмотреть привязанных пользователей").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("Посмотреть привязанных пользователей HTTP status code: " + httpStatusCode)
log.info "Посмотреть привязанных пользователей Ответ метода :" +response

if( !response.contains("policyNum")) testRunner.fail("ERROR: В ответе Посмотреть привязанных пользователей возникло несоответствие фактического результата ожидаемому")
else log.info "Посмотреть привязанных пользователей Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="transfer" name="Записать данные человека" id="66dcd783-897b-48db-82b6-8288a2e9de7e" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ud</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].emiasId</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Посмотреть привязанных пользователей</con:sourceStep><con:sourcePath>$.permissions[0].birthday</con:sourcePath><con:targetType>bd</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="checkSelfControl" id="43cf64c0-f25c-4474-8490-2cf39d038aa1"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/selfControl/checkSelfControl" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="checkSelfControl" id="cf07f7c0-03de-4a46-99f7-c8cf0f1c5dcd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/selfControl/checkSelfControl</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#Project#selfControlPatientId}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="7d649232-68df-4463-9cff-7aff13aa39ee"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${checkSelfControl#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("checkSelfControl").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("checkSelfControl HTTP status code: " + httpStatusCode)
log.info "checkSelfControl Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("PDN_ERROR")  &amp;&amp; httpStatusCode != "204"){ 
	testRunner.fail()
	log.info("ERROR: В ответе checkSelfControl возникло несоответствие фактического результата ожидаемому")
	}
else log.info "checkSelfControl Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>30000011308116</con:value></con:property><con:property><con:name>bd</con:name><con:value>1956-05-20</con:value></con:property><con:property><con:name>oms</con:name><con:value>5450530821000361</con:value></con:property></con:properties></con:testCase><con:testCase id="00c5c829-c951-4400-a1c9-209213f4eb61" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="chatBot" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getDialog" id="43ce8794-0036-4a1e-b841-6791eff95e2f"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/chatBot/getDialog" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDialog" id="e92e6197-8505-4fbf-95ca-0427f18b82b6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "complaints": "Больно в душе",
  "hash": "1234"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/prescription/aggregators</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="21a0df67-5e05-47bd-9268-02872e37e314" name="HTTP Status Code=200" disabled="true"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="63f7851f-5138-4fe6-9feb-0324fadb671c" name="В ответе есть аггрегаторы" disabled="true"><con:configuration><path>$.payload.aggregator</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="4c5c9a1f-310f-4da0-ad94-9e477967f08a" name="В ответе нет ошибок" disabled="true"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="12b85cae-a11a-45dc-a0c2-791e601d1034"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getDialog#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getDialog").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getDialog HTTP status code: " + httpStatusCode)
log.info "getDialog Ответ метода :" +response

if( !response.contains("payload") &amp;&amp; httpStatusCode !="200" &amp;&amp;  !response.contains("LLO_BAD_REQUEST")){ 
	testRunner.fail()
	log.info("ERROR: В ответе getDialog возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getDialog соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="97e71ef2-91b5-43f9-acb4-d539b4e2bdb8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hospitalizations" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="hospitalizations" id="8a0a06c3-27f8-45de-979c-a68d7d90734a"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/hospitalization/hospitalizations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="hospitalizations" id="a894dbb7-6331-420e-84bc-13c94e846ba0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "patientId": ${#Project#pdnId},
  "pagingOptions": {
    "pageNumber": 0,
    "pageSize": 30
  }
}</con:request><con:originalUri>http://application.emiasinfo-services.test.emias.mos.ru/api/v2/hospitalization/hospitalizations</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="4311096d-dd79-44cd-bdf1-556d61ee61e8"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${hospitalizations#Response}')
//parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("hospitalizations").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("hospitalizations HTTP status code: " + httpStatusCode)
log.info "hospitalizations Ответ метода :" +response

if( !response.contains("payload") &amp;&amp; httpStatusCode !="204" &amp;&amp;  !response.contains("HOSP_LIST_ERROR")){ 
	testRunner.fail()
	log.info("ERROR: В ответе hospitalizations возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ hospitalizations соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="07e566b0-28b8-450a-ad34-58c9883c7efa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="medication" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="get regime" id="ba4856c6-50c7-4796-ba19-00a952bc4678"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/medication/regime/{patientId}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get regime" id="62a7284b-4e0b-46bc-8620-88a35381688d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application.emiasinfo-services.test.emias.mos.ru/api/v2/medication/regime/10766700</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#Project#pdnId}"/>
  <con:entry key="EI-token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="960da2c3-b1b4-4020-90f0-1f4c300750c0"><con:settings/><con:config><script>import groovy.json.JsonSlurper 

def response = context.expand('${get regime#Response}')
//parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("get regime").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("get regime HTTP status code: " + httpStatusCode)
log.info "get regime Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("LN_GET_REGIME_ERROR")){ 
	testRunner.fail()
	log.info("ERROR: В ответе get regime возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ get regime соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0f07819d-bccf-43f4-b4d5-6c45e766308d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="pinAppointment" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getLpuList" id="85c8be80-12f5-458e-80e0-bc15737884d3"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/pin/getLpuList" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getLpuList" id="c12b955a-330a-4403-bdc7-fdd30d56b8fa" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application.emiasinfo-services.test.emias.mos.ru/api/v2/pin/getLpuList</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="cd93fb3e-e038-4b0f-831c-7e307ea461f1"><con:settings/><con:config><script>import groovy.json.JsonSlurper 

def response = context.expand('${getLpuList#Response}')
//parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getLpuList").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getLpuList HTTP status code: " + httpStatusCode)
log.info "getLpuList Ответ метода :" +response

if( !response.contains("lpu") &amp;&amp; !(httpStatusCode == 200)){ 
	testRunner.fail()
	log.info("ERROR: В ответе getLpuList возникло несоответствие фактического результата ожидаемому")
}
	
else log.info "Ответ getLpuList соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b6bb6d1c-018a-468b-8c6b-5d3251fbf592" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="queue" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getTicketNumber" id="c19f95bc-d671-4936-97f8-cae23946eb00"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/queue/ticketNumber" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getTicketNumber" id="b34af4e2-1121-49ed-b12e-bd82cede588f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v2/queue/ticketNumber</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="appointmentId" value="1234"/>
  <con:entry key="lpuId" value="141"/>
  <con:entry key="lpuId " value="204"/>
</con:parameters><con:parameterOrder><con:entry>appointmentId</con:entry><con:entry>lpuId</con:entry><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="80a74c22-13ef-469f-9fac-79f3e8b1ec8a"><con:settings/><con:config><script>import groovy.json.JsonSlurper 

def response = context.expand('${getTicketNumber#Response}')
//parsedResponse = new JsonSlurper().parseText(response)

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getTicketNumber").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getTicketNumber HTTP status code: " + httpStatusCode)
log.info "getTicketNumber Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("Q_GET_TICKET_ERROR")){ 
	testRunner.fail()
	log.info("ERROR: В ответе getTicketNumber возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getTicketNumber соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1c9e1092-ba9b-45be-ad81-31a14414030b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tmk" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="recieveConsent" id="0df65d95-12ad-44bb-8de4-5a64ebd21594"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/tmk/receiveConsent" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="recieveConsent" id="c496fc2f-47b5-4c01-904a-5217a7f7d0ce" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo1.emias.solit-clouds.ru/api/api/v2/tmk/receiveConsent</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="patientId" value="123" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="f9ba0f02-e316-4fb3-b315-0a437e67ed80"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${recieveConsent#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("recieveConsent").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("recieveConsent HTTP status code: " + httpStatusCode)
log.info "recieveConsent Ответ метода :" +response

if( !response.contains("payload") &amp;&amp; httpStatusCode !="200"){ 
	testRunner.fail()
	log.info("ERROR: В ответе recieveConsent возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ hospitalizations соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bbcb836e-c6a8-4d93-89c4-e9fa57ab16c9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="freeFood" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="foodGetDetails" id="e8cb6aad-5cac-4f54-beb0-d0a3972ad9fb"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/freefood/foodGetDetails" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="foodGetDetails" id="7d3b7f46-d61e-4e35-a48e-6feecf5979c6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "prescriptionNumber": "${#Project#foodPrescriptionNumber}",
  "omsNumber": "${#Project#foodOms}"
}</con:request><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/v1/freefood/foodGetDetails</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="90de7aa8-3e2b-4f68-8717-e440eedfb313"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${foodGetDetails#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("foodGetDetails").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("foodGetDetails HTTP status code: " + httpStatusCode)
log.info "foodGetDetails Ответ метода :" +response

if( !response.contains("prescriptionNumber") &amp;&amp; httpStatusCode !="200"){ 
	testRunner.fail()
	log.info("ERROR: В ответе foodGetDetails возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ foodGetDetails соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="56d51bc1-85d7-4289-a86d-4a068592c181" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверка эндпоинтов модуля Application" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="get env" id="91f526df-30b4-4ac1-9d8b-fa028c29ed96"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/actuator/env" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get env" id="9763043e-4ece-4343-b6e3-88d0ec972d17" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEnvEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/actuator/env</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="df82351e-3790-4b23-8bcb-da4d0c04db0e" name="Valid HTTP Status Codes" disabled="true"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа ППАК" id="de0f9028-7b8d-4eb0-bbdc-b62f7f46f15c"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import java.util.ArrayList

env=testRunner.testCase.testSuite.project.getPropertyValue("env")

 paramsPpak=[
	[ paramName : "app.services.prescriptionInfo.url", param : "http://srv-esb-vip-external/proxy/LLO/PrescriptionInfo/v4S/ProxyService"],
	[ paramName : "app.services.saOrchestrator.url", param : "http://srv-esb-vip-external/proxy/Composite/saOrchestrator/v1S/ProxyService"],
	[ paramName : "app.services.saOrchestratorCovid.url", param : "http://srv-esb-vip-external/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.url", param : "http://srv-esb-vip-external/proxy/inquirypurpose/inquiryPurpose/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.orchestration.url", param : "http://srv-esb-vip-external/proxy/inquirypurpose/orchestration/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.link.url", param : "http://srv-esb-vip-external/proxy/inquirypurpose/link/v3S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.complaints.url", param : "http://srv-esb-vip-external/proxy/inquirypurpose/complaints/v1S/ProxyService"],
	[ paramName : "app.services.pindata.url", param : "http://srv-esb-vip-external/proxy/pindata/pnExternalService/v1S/ProxyService"],
	[ paramName : "app.services.contingent.url", param : "http://srv-esb-vip-external/proxy/Contingent/PGUContingent/v2S/ProxyService"],
	[ paramName : "app.services.pgu.url", param : "http://srv-esb-vip-external/proxy/PGU/v1.1S/ProxyService"],
	[ paramName : "app.services.pdn.url", param : "http://srv-esb-vip-external/proxy/dnpdn/planService/v2S/ProxyService"],
	[ paramName : "app.services.suppmeinfo.url", param : "http://srv-esb-vip-external/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService"],
	[ paramName : "app.services.cls.url", param : "http://srv-esb-vip-external/proxy/cls/Dictionaries/v1S/ProxyService"],
	[ paramName : "app.services.pillbox.url", param : "http://srv-esb-vip-external/proxy/emiaslovv/pillboxService/v1S/ProxyService"],
	[ paramName : "app.services.nsi2.url", param : "http://srv-esb-vip-external/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService"],
	[ paramName : "app.services.chatbot.url", param : "http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService"],
	[ paramName : "app.services.sudir.url", param : "http://10.0.20.107:8480"],
	[ paramName : "app.services.lk.url", param : "http://srv-esb-vip-external/proxy/lkservice/api-gateway/v1S/ProxyService"],
	[ paramName : "app.services.covid.labs.url", param : "http://srv-esb-vip-external/proxy/covidlabs/materials/v1S/ProxyService"],
	[ paramName : "app.services.bzhd.url", param : "http://srv-esb-vip-external/proxy/bzhd/rest/v1S/ProxyService"],
//	[ paramName : "app.services.spk.url", param : "http://10.89.70.135:80"],
	[ paramName : "app.esu.enable", param : "false"],
//	[ paramName : "app.services.cloud-token.url", param : "https://emp.mos.ru"],
	[ paramName : "app.services.hospitalization.url", param : "http://srv-esb-vip-external/proxy/hospitalization/hospitalService/v2/ProxyService"],
	[ paramName : "app.services.pinAppointment.url", param : "http://srv-esb-vip-external/proxy/Gibdd/Appointment/v2S/ProxyService"],
	[ paramName : "app.services.eboardTicket.url", param : "http://srv-esb-vip-external/proxy/eboard/ticketService/v1S/ProxyService"],
	[ paramName : "app.services.eboardManage.url", param : "http://srv-esb-vip-external/proxy/eboard/boardManageService/v3S/ProxyService"],
	[ paramName : "app.elastic-search.url", param : "10.3.61.14"],
	[ paramName : "app.elastic-search.port", param : "33200"],
	[ paramName : "app.elastic-search.index", param : "application-api"],
	[ paramName : "logging.file.max-size", param : "10MB"],
	[ paramName : "app.services.redis.host", param : "10.3.61.8"],
	[ paramName : "app.services.tmk.url", param : "http://srv-esb-vip-external/proxy/tmk/tmkManageSoapService/v1S/ProxyService"],
	[ paramName : "app.services.redis.healthDiaryToggler.enable", param : "true"],
	[ paramName : "app.services.redis.healthDiaryToggler.expired", param : "1800"],
	[ paramName : "app.services.redis.healthDiaryToggler.dbName", param : "4"],
	[ paramName : "app.services.redis.permissions.dbName", param : "5"],
	[ paramName : "app.services.hpsm.path", param : "\"\""]
]

 paramsTest=[
	[ paramName : "app.services.prescriptionInfo.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService"],
	[ paramName : "app.services.saOrchestrator.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService"],
	[ paramName : "app.services.saOrchestratorCovid.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/inquiryPurpose/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.orchestration.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.link.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.complaints.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService"],
	[ paramName : "app.services.pindata.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService"],
	[ paramName : "app.services.contingent.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService"],
	[ paramName : "app.services.pgu.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService"],
	[ paramName : "app.services.pdn.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/dnpdn/planService/v2S/ProxyService"],
	[ paramName : "app.services.suppmeinfo.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService"],
	[ paramName : "app.services.cls.url", param : "http://esbcamel.test.emias.mos.ru/proxy/cls/Dictionaries/v1S/ProxyService"],
	[ paramName : "app.services.pillbox.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService"],
	[ paramName : "app.services.nsi2.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService"],
	[ paramName : "app.services.chatbot.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService"],
	[ paramName : "app.services.sudir.url", param : "http://10.2.173.132:8480"],
	[ paramName : "app.services.lk.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/lkservice/api-gateway/v1S/ProxyService"],
	[ paramName : "app.services.covid.labs.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/covidlabs/materials/v1S/ProxyService"],
	[ paramName : "app.services.bzhd.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/bzhd/rest/v1S/ProxyService"],
//	[ paramName : "app.services.spk.url", param : "http://10.89.70.135:80"],
	[ paramName : "app.esu.enable", param : "false"],
//	[ paramName : "app.services.cloud-token.url", param : "https://emp.mos.ru"],
	[ paramName : "app.services.hospitalization.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService"],
	[ paramName : "app.services.pinAppointment.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService"],
	[ paramName : "app.services.eboardTicket.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService"],
	[ paramName : "app.services.eboardManage.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService"],
	[ paramName : "app.elastic-search.url", param : "10.2.173.101"],
	[ paramName : "app.elastic-search.port", param : "31070"],
	[ paramName : "app.elastic-search.index", param : "emc-api"],
	[ paramName : "logging.file.max-size", param : "10MB"],
	[ paramName : "app.services.redis.host", param : "10.2.174.224"],
	[ paramName : "app.services.tmk.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/tmk/tmkManageSoapService/v1S/ProxyService"],
	[ paramName : "app.services.redis.healthDiaryToggler.enable", param : "true"],
	[ paramName : "app.services.redis.healthDiaryToggler.expired", param : "1800"],
	[ paramName : "app.services.redis.healthDiaryToggler.dbName", param : "4"],
	[ paramName : "app.services.redis.permissions.dbName", param : "5"],
	[ paramName : "app.services.eFreeFood.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/emiasff/eFreeFoodService/v1S/ProxyService"],
	[ paramName : "app.services.freeFoodInfo.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/emiasff/freeFoodInfoService/v1S/ProxyService"],
	[ paramName : "app.services.hpsm.path", param : ""]
 ]

 paramsSolit=[
	[ paramName : "app.services.prescriptioninfo.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService"],
	[ paramName : "app.services.saorchestrator.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/Composite/saOrchestrator/v1S/ProxyService"],
	[ paramName : "app.services.saorchestratorcovid.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/covidselfapp/CovidSelfAppointment/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/inquiryPurpose/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.orchestration.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/orchestration/v1S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.link.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/link/v3S/ProxyService"],
	[ paramName : "app.services.inquirypurpose.complaints.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/inquirypurpose/complaints/v1S/ProxyService"],
	[ paramName : "app.services.pindata.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/pindata/pnExternalService/v1S/ProxyService"],
	[ paramName : "app.services.contingent.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/Contingent/PGUContingent/v2S/ProxyService"],
	[ paramName : "app.services.pgu.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/PGU/v1.1S/ProxyService"],
	[ paramName : "app.services.pdn.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/dnpdn/planService/v2S/ProxyService"],
	[ paramName : "app.services.suppmeinfo.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService"],
	[ paramName : "app.services.cls.url", param : "http://esbcamel.test.emias.mos.ru/proxy/cls/Dictionaries/v1S/ProxyService"],
	[ paramName : "app.services.pillbox.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/emiaslovv/pillboxService/v1S/ProxyService"],
	[ paramName : "app.services.nsi2.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/Composite/nsi2PublicationAuth/v1S/ProxyService"],
	[ paramName : "app.services.chatbot.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/chatbot/interviewService/v1S/ProxyService"],
	[ paramName : "app.services.sudir.url", param : "http://10.2.173.132:8480"],
	[ paramName : "app.services.lk.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/lkservice/api-gateway/v1S/ProxyService"],
	[ paramName : "app.services.covid.labs.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/covidlabs/materials/v1S/ProxyService"],
	[ paramName : "app.services.bzhd.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/bzhd/rest/v1S/ProxyService"],
//	[ paramName : "app.services.spk.url", param : "http://10.89.70.135:80"],
	[ paramName : "app.esu.enable", param : "false"],
//	[ paramName : "app.services.cloud-token.url", param : "https://emp.mos.ru"],
	[ paramName : "app.services.hospitalization.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/hospitalization/hospitalService/v2/ProxyService"],
	[ paramName : "app.services.pinAppointment.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/Gibdd/Appointment/v2S/ProxyService"],
	[ paramName : "app.services.eboardTicket.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/eboard/ticketService/v1S/ProxyService"],
	[ paramName : "app.services.eboardManage.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/eboard/boardManageService/v3S/ProxyService"],
	[ paramName : "app.elastic-search.url", param : "10.2.173.101"],
	[ paramName : "app.elastic-search.port", param : "31070"],
	[ paramName : "app.elastic-search.index", param : "emc-api"],
	[ paramName : "logging.file.max-size", param : "10MB"],
	[ paramName : "app.services.redis.host", param : "172.17.5.11:6379"],
	[ paramName : "app.services.tmk.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/tmk/tmkManageSoapService/v1S/ProxyService"],
	[ paramName : "app.services.redis.healthDiaryToggler.enable", param : "true"],
	[ paramName : "app.services.redis.healthDiaryToggler.expired", param : "1800"],
	[ paramName : "app.services.redis.healthDiaryToggler.dbName", param : "4"],
	[ paramName : "app.services.redis.permissions.dbName", param : "5"],
	[ paramName : "app.services.eFreeFood.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/emiasff/eFreeFoodService/v1S/ProxyService"],
	[ paramName : "app.services.freeFoodInfo.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/emiasff/freeFoodInfoService/v1S/ProxyService"],
	[ paramName : "app.services.hpsm.path", param : ""]
]

def params 
def dif
 switch (env) {
 	case "test":
 		params =paramsTest
 		break
 	case "solit":
 		params =paramsSolit
 		break
 	case "ppak":
 		params =paramsPpak
 		break
 	default: 
		testRunner.fail()
 		log.info "ERROR: на переданный параметр окружения нет ожидаемых значений параметров окружения "
 }
 
dbConnection=testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoDbConnection")
dbSource="jdbc:postgresql://"+dbConnection
//добавить в список параметры, которые одинаковые для всех контуров
params  <<  [ paramName : "spring.datasource.url", param : dbSource]
//params  <<  [ paramName : "app.services.hpsm.path", param : "\"\""]
params  <<  [ paramName : "app.services.common.userRoleId", param : "7187"]
params  <<  [ paramName : "TZ", param : "Europe/Moscow"]
params  <<  [ paramName : "app.services.common.jobExecutionId", param : "1"]
params  <<  [ paramName : "app.services.covid.labs.login", param : "emias_info"]
params  <<  [ paramName : "app.nsi.enable", param : "true"]
params  <<  [ paramName : "app.services.redis.available", param : "true"]
params  <<  [ paramName : "app.services.common.isUserRoleSystemWide", param : "true"]
params  <<  [ paramName : "app.services.hpsm.passwd", param : "P123456p"]
params  <<  [ paramName : "nsi.diagnosis.catalog-id", param : "2675"]
params  <<  [ paramName : "app.services.hpsm.login", param : "emiasinfo.int"]
params  <<  [ paramName : "app.services.hpsm.attach.path", param : "/{id}/attachments"]
params  <<  [ paramName : "app.services.saOrchestrator.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.saOrchestratorCovid.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.inquirypurpose.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.inquirypurpose.orchestration.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.inquirypurpose.link.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.inquirypurpose.complaints.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.pindata.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.contingent.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.pgu.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.pdn.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.suppmeinfo.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.cls.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.pillbox.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.nsi2.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.chatbot.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.hospitalization.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.pinAppointment.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.eboardManage.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.eboardTicket.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.tmk.systemName", param : "EIM"]
params  <<  [ paramName : "app.services.tmk.productType", param : "emiasInfo"]
params  <<  [ paramName : "app.services.tmk.userRoleId", param : "7187"]
params  <<  [ paramName : "app.services.tmk.userRightId", param : "88003"]
params  <<  [ paramName : "app.services.userRights", param : "2024"]
params  <<  [ paramName : "app.services.userRoleId", param : "7086"]
params  <<  [ paramName : "app.services.redis.permissions.enable", param : "true"]
params  <<  [ paramName : "app.services.redis.permissions.expired", param : "86400"]
params  <<  [ paramName : "app.services.redis.speciality.enable", param : "true"]
params  <<  [ paramName : "app.services.redis.speciality.expired", param : "3600"]
params  <<  [ paramName : "app.services.redis.speciality.dbName", param : "1"]
dif=params 
if(params ){
	errors=[]
	def envResponse = context.expand('${get env#Response}')
	log.info "параметры окружения  модуля application: "+envResponse
	def slurperJson = new JsonSlurper()
	def  env = slurperJson.parseText( envResponse)
	//log.info env.propertySources
	env.propertySources.each{
		if(it.name=="systemEnvironment"){
			it.properties.each{ et ->
				if(params .paramName.contains(et.getKey())){
					//log.info et.getKey()
					int index= params .paramName.indexOf(et.getKey())
					expextedParam=params [index].param 
					dif=dif-params [index]
					envParam=et.value.value.replace("?wsdl","").replace("?WSDL","")
					if( expextedParam != envParam){
						//errorText=et.getKey()+" "+envUrl
						errorText="ERROR: Для параметра "+et.getKey()+" значение эндпоинта не соответствует ожидаемому. Ожидаемое: "+expextedParam+" , фактическое: "+envParam
						errors << errorText
					}
				}	
			}
		}
	}
	if( dif){
		dif.each{it ->
			errorText="ERROR: В списке  systemEnvironment не найден параметр с названиием "+it.paramName
			errors << errorText
		}
	}
	if(errors.size()>0){
		testRunner.fail("Количетсво ошибок при сравнении ответов = " +errors.size())
		log.info "ERROR: Параметры модуля application не соответствуют ожидаемым"
		errors.each{it ->
			log.info it
		}
	}
	else {
		log.info "Параметры модуля application соответствуют ожидаемым"
	}
}]]></script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>base64</con:name><con:value>ZHlufmVtaWFzLmluZm9+MzQxM2JlMzYtNmJiYy00ZDMxLWI0NzQtMTQwZGMyOTVjNGQxOjNWZEVPTUttS0VjU2d5bA==</con:value></con:property></con:properties></con:testSuite><con:testSuite id="96ce6bfd-8654-438a-92f5-140642c37cec" name="BVT Notifications"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a3a39556-a1e5-402b-9f2c-6bee13c06410" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userAdd" searchProperties="true"><con:settings/><con:testStep type="groovy" name="сгенерировать данные для запроса" id="53ba3060-d6db-4f70-be25-46861a4a6dbc"><con:settings/><con:config><script>
//oms = testRunner.testCase.testSuite.getPropertyValue("oms").toLong()
//patientId = testRunner.testCase.testSuite.getPropertyValue("patientId").toLong()
guid = java.util.UUID.randomUUID()
cloudId = java.util.UUID.randomUUID()
//patientId=patientId+1
//oms=oms+1
//testRunner.testCase.testSuite.setPropertyValue("patientId", patientId.toString())
//testRunner.testCase.testSuite.setPropertyValue("oms", oms.toString())
testRunner.testCase.testSuite.setPropertyValue("deviceGuid", guid.toString())
testRunner.testCase.testSuite.setPropertyValue("deviceCloudId", cloudId.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="userAdd" id="fd7f34a6-d496-4a07-851e-e1fb06744c44"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/user/add" methodName="userAdd" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="userAdd" id="0ef60847-9f57-4d23-8ec1-c3a8f1ac9185" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
	"patientId": ${#TestSuite#patientId},
	"omsNumber": "${#TestSuite#oms}",
	"birthDate": "2012-06-07",
	"platform": "APPLE",
	"appVersion": "1.3.2",
	"deviceCloudId": "${#TestSuite#deviceCloudId}",
	"deviceGuid": "${#TestSuite#deviceGuid}",
	"authentication": "true"
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/user/add</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить создание пользователя и девайса" id="3a88e10c-dac7-40f5-be27-fdb2896f0d6b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(ud.id) from f_user us
left join f_user_device ud on ud.user_id=us.id 
left join f_device dev on dev.device_guid = ud.device_guid 
where us.patient_id =${#TestSuite#patientId} and ud.deleted =FALSE and ud.device_guid ='${#TestSuite#deviceGuid}'</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="985f8818-d722-43fb-b725-f25cdd136990"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${userAdd#Response}')
def count = context.expand('${Проверить создание пользователя и девайса#ResponseAsXml#//*:COUNT}').toInteger()

def httpResponseHeaders = testRunner.testCase.getTestStepByName("userAdd").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("userAdd HTTP status code: " + httpStatusCode)
log.info "userAdd Ответ метода :" +response

if(  httpStatusCode !="204" &amp;&amp; response == null ){ 
	testRunner.fail()
	log.info("ERROR: В ответе userAdd возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ userAdd соответствует ожидаемому"
if(  count != 1){ 
	testRunner.fail()
	log.info("ERROR: в  БД не найдено ожидаемых записей")
	}
else log.info "В БД есть нужная запись. Создали девайс для пользователя"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ebc1e2d7-777f-43c0-86b1-2491e3299d48" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="check" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="check" id="183549ca-de28-44fb-8129-4424f8d3a6ba"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/user/authentication/check" methodName="check" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="check" id="7e9ba560-f422-4663-ab97-a1d2de152b81" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "userInformation": [
    {
      "patientId": ${#TestSuite#patientId},
      "omsNumber": "${#TestSuite#oms}",
      "birthDate": "2012-06-07",
      "authentication": true,
      "mainPolicy": true,
      "esiaAuthentication": true
    }
  ],
  "deviceGuid": "${#TestSuite#deviceGuid}",
  "deviceCloudId": "${#TestSuite#deviceCloudId}",
  "platform": "APPLE",
  "appVersion": "1.3.2"
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/user/authentication/check</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="e0324a8d-dca0-4558-b1a0-ca5fdb2338e1"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${check#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("check").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("check HTTP status code: " + httpStatusCode)
log.info "check Ответ метода :" +response

if(  httpStatusCode !="200" &amp;&amp;  !response.contains("payload") ){ 
	testRunner.fail()
	log.info("ERROR: В ответе check возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ check соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6e56d72e-d1ae-4754-b4a9-843011f2fd6b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="saveSettings" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="saveSettings" id="f4948ac9-092d-4043-a7d9-6ef9c09f5319"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/settings/save" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="saveSettings" id="86fd6789-ad4a-4a4d-a491-4ac49a3c220b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "deviceGuid": "${#TestSuite#deviceGuid}",
  "settings": {
    "appointment": true,
    "appointmentReminder": true,
    "referral": false,
    "prNews": true
  }
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/settings/save</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить обновление настроек" id="90208edf-1d74-447d-b40d-1bb2e4a96235"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select APPOINTMENT,APPOINTMENT_REMINDER,PR_NEWS,REFERRAL from f_device_settings
where device_guid ='${#TestSuite#deviceGuid}'</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="854312fd-c5d2-400e-a10b-a6f33587e251"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper

def response = context.expand('${saveSettings#Response}')
def dbResult = context.expand('${Проверить обновление настроек#ResponseAsXml}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("saveSettings").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("saveSettings HTTP status code: " + httpStatusCode)
log.info "saveSettings Ответ метода :" +response
log.info "результат запроса к таблице f_device_settings :" +dbResult

if(  httpStatusCode !="204" &amp;&amp; response == null ){ 
	testRunner.fail()
	log.info("ERROR: В ответе saveSettings возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ saveSettings соответствует ожидаемому"

settings = new XmlSlurper().parseText(dbResult)

if(  settings.ResultSet.Row != "tttf"){ 
	testRunner.fail()
	log.info("ERROR: в  БД измененная запись не соответствует ожиданию")
	}
else log.info "В БД запись соответствует ожидаемому результату"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d5e46c64-699f-45dc-aabe-3356f55b7882" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getSettingsList" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getSettingsList" id="8ca33df9-5ba3-4ec2-b71e-509ebf400d0c"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/settings/list" methodName="getSettingsList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getSettingsList" id="fd50c73e-374b-495d-b8ee-f917b8003ad1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/settings/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="deviceGuid" value="${#TestSuite#deviceGuid}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="35840030-9bae-43b9-b702-ca62e9990335"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getSettingsList#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getSettingsList").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getSettingsList HTTP status code: " + httpStatusCode)
log.info "getSettingsList Ответ метода :" +response

if(  httpStatusCode !="200" &amp;&amp;  !response.contains("payload") ){ 
	testRunner.fail()
	log.info("ERROR: В ответе getSettingsList возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getSettingsList соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a7eecc76-64ae-4afd-9e39-1839a14ae452" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение по пользователю о записи к доктору" searchProperties="true" disabled="true"><con:settings/><con:testStep type="jdbc" name="Получить appointmentId и eventId" id="4907031b-1aea-40d4-afbb-1352445b54f8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select coalesce(min(appointment_id)-1, 400000) as id from f_notification_appointment </con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="записать appointmentId" id="31b467b9-69b9-4a8d-a18a-868c1541d917"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ap</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить appointmentId и eventId</con:sourceStep><con:sourcePath>//*:ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Получить eventId" id="8559a7b1-f2e5-49ea-8321-3b2fa901efe9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select coalesce(min(event_id)-1, 400000) as id from f_notification_appointment </con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="записать eventId" id="01d99a53-d8f4-4727-98eb-b7bfef4243d9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ap</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить eventId</con:sourceStep><con:sourcePath>//*:ID</con:sourcePath><con:targetType>eventId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение" id="a1e15813-9751-4ac7-a630-0445db229857"><con:settings/><con:config><script><![CDATA[import org.apache.kafka.clients.consumer. *
import org.apache.kafka.clients.producer.*
import java.text.SimpleDateFormat
import java.util.Date
log.info "Отправка сообщения по записи ко врачу"

def date = new Date()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss+03:00").format(date)
currentDate=new SimpleDateFormat("yyyy-MM-dd").format(date)

def sendMessageToKafka(String topicName, String textOfMessage){
        def bootstrapServers= testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")
        log.info(bootstrapServers)
        //Отправка сообщения в топик
        Properties props = new Properties()
        props.put('zk.connect', '10.2.172.24:2181')
        props.put('bootstrap.servers', bootstrapServers)
        props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
        props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')

        def producer = new KafkaProducer(props)

        messageSender(topicName, textOfMessage, producer)

    }

    def messageSender(String topic, String message, def producer ){
        
        def key =  UUID.randomUUID().toString()
        Date date = new Date();
        long  timestamp= date.getTime()
        int partition =0
        String compoundMessage = "$message"
	   log.info( "messageSender:key: "+key+", topic:  "+topic+"; "+message )
        producer.send(
                new ProducerRecord<String, String>(topic, partition, timestamp,  key, compoundMessage),
                { RecordMetadata metadata, Exception e ->
                    log.info( "The offset of the record we just sent is: ${metadata.offset()}")
                } as Callback
        )
    };


topicName = testRunner.testCase.getPropertyValue("topic")
//env=testRunner.testCase.testSuite.project.getPropertyValue("env")
//if(env =="solit" ){
//	solitNumber=testRunner.testCase.testSuite.project.getPropertyValue("solitNumber")
//	topicName = topicName+".EMIASINFO_SOLIT_TEST_"+solitNumber
//}

log.info topicName
oms = testRunner.testCase.testSuite.getPropertyValue("oms")
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
eventId = testRunner.testCase.getPropertyValue("eventId")
status = testRunner.testCase.getPropertyValue("status")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
    <event>
        <id>"""+eventId+"""</id>
        <type>"""+status+"""</type>
        <time>"""+currentDateTime+"""</time>
        <system>EIM</system>
    </event>
    <patient>
       <id>"""+patientId+"""</id>
        <oms>"""+oms+"""</oms>
        <name12>Елизавета Сергеевна</name12>
    </patient>
    <appointment>
          <id>"""+appointmentId+"""</id>
        <startTime>"""+currentDate+"""T19:30:00+03:00</startTime>
        <endTime>"""+currentDate+"""T20:00:00+03:00</endTime>
        <number>С20230724-244</number>
        <speciality>
            <id>2</id>
            <name>Врач-уролог</name>
        </speciality>
    </appointment>
    <availableResource>
        <id>20583826989</id>
        <name> Шульц В. Е.</name>
    </availableResource>
    <complexResource>
        <id>241290613</id>
        <number>211</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>14441650</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <doctor>
        <lastName>Шульц</lastName>
        <firstName>Виктор</firstName>
        <middleName>Евгеньевич</middleName>
        <speciality>
            <id>2</id>
            <name>Врач-уролог</name>
        </speciality>
    </doctor>
</ns2:esuAppointment>
"""
//return message
    
sendMessageToKafka(topicName,message)]]></script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="b9b40313-8d2f-400b-bb99-68eafe443b2f"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Проверить наличие appointment" id="775842bb-e1ce-46ca-a138-a26957753686"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(id)  from f_notification_appointment 
where appointment_id =${#TestCase#appointmentId} AND event_id=${#TestCase#eventId}</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="26ec46b8-b41d-4de8-b3a4-87d4c7805c3e"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def count = context.expand('${Проверить наличие appointment#ResponseAsXml#//*:COUNT}').toInteger()

if(  count != 1) { 
	testRunner.fail()
	log.info("ERROR: в  БД не найдено уведомление по записи к доктору")
	}
else log.info "В БД есть уведомление по записи к доктору"
</script></con:config></con:testStep><con:properties><con:property><con:name>appointmentId</con:name><con:value>391930073178</con:value></con:property><con:property><con:name>topic</con:name><con:value>Appointment2Doctor</con:value></con:property><con:property><con:name>eventId</con:name><con:value>65688213073</con:value></con:property><con:property><con:name>status</con:name><con:value>CREATE</con:value></con:property></con:properties></con:testCase><con:testCase id="3477fd79-07fb-4356-80fb-3475b11f6ecc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение по пользователю о записи на взятие биоматериала" searchProperties="true" disabled="true"><con:settings/><con:testStep type="jdbc" name="Получить appointmentId" id="996eef32-a937-4a96-a1c2-04294b9e265c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select coalesce(min(appointment_id)-1, 400000) as id from f_notification_appointment </con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="записать appointmentId" id="6645fdef-5de2-4d21-96a5-b39f33d44dd4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ap</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить appointmentId</con:sourceStep><con:sourcePath>//*:ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Получить eventId" id="64ba2e4f-b378-418c-a006-28e1570a0653"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select coalesce(min(event_id)-1, 400000) as id from f_notification_appointment </con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="записать eventId" id="72108a69-8f68-4137-99b9-4e211aed1408"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ap</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить eventId</con:sourceStep><con:sourcePath>//*:ID</con:sourcePath><con:targetType>eventId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение" id="7550cf7d-0597-4d61-b520-6ed3efe4d15d"><con:settings/><con:config><script><![CDATA[import org.apache.kafka.clients.consumer. *
import org.apache.kafka.clients.producer.*
import java.text.SimpleDateFormat
import java.util.Date

def date = new Date()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss+03:00").format(date)
currentDate=new SimpleDateFormat("yyyy-MM-dd").format(date)

def sendMessageToKafka(String topicName, String textOfMessage){
        def bootstrapServers= testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")
        log.info(bootstrapServers)
        //Отправка сообщения в топик
        Properties props = new Properties()
        props.put('zk.connect', '10.2.172.24:2181')
        props.put('bootstrap.servers', bootstrapServers)
        props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
        props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')

        def producer = new KafkaProducer(props)

        messageSender(topicName, textOfMessage, producer)

    }

    def messageSender(String topic, String message, def producer ){
        
        def key =  UUID.randomUUID().toString()
        Date date = new Date();
        long  timestamp= date.getTime()
        int partition =0
        String compoundMessage = "$message"
	   log.info( "messageSender:key: "+key+", topic:  "+topic+"; "+message )
        producer.send(
                new ProducerRecord<String, String>(topic, partition, timestamp,  key, compoundMessage),
                { RecordMetadata metadata, Exception e ->
                    log.info( "The offset of the record we just sent is: ${metadata.offset()}")
                } as Callback
        )
    };
topicName = testRunner.testCase.getPropertyValue("topic")
//env=testRunner.testCase.testSuite.project.getPropertyValue("env")
//if(env =="solit" ){
//	solitNumber=testRunner.testCase.testSuite.project.getPropertyValue("solitNumber")
//	topicName = topicName+".EMIASINFO_SOLIT_TEST_"+solitNumber
//}

oms = testRunner.testCase.testSuite.getPropertyValue("oms")
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
eventId = testRunner.testCase.getPropertyValue("eventId")
status = testRunner.testCase.getPropertyValue("status")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
    <event>
        <id>"""+eventId+"""</id>
        <type>"""+status+"""</type>
        <time>"""+currentDateTime+"""</time>
        <system>EIM</system>
    </event>
    <patient>
       <id>"""+patientId+"""</id>
        <oms>"""+oms+"""</oms>
        <name12>Елизавета Сергеевна</name12>
    </patient>
    <appointment>
          <id>"""+appointmentId+"""</id>
        <startTime>"""+currentDate+"""T19:30:00+03:00</startTime>
        <endTime>"""+currentDate+"""T20:00:00+03:00</endTime>
        <number>С20230724-244</number>
         <samplingType>
            <id>2</id>
            <name>Взятие крови</name>
    </samplingType>
    </appointment>
    <availableResource>
        <id>20583826989</id>
        <name>Моби 2 Шульц В. Е.</name>
    </availableResource>
    <complexResource>
        <id>241290613</id>
        <number>211</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>14441650</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <samplingType>
            <id>2</id>
            <name>Взятие крови</name>
    </samplingType>
</ns2:esuAppointment>
"""
//return message
    
sendMessageToKafka(topicName,message)]]></script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="c20cf46c-036c-4072-9f68-56a845a429fe"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Проверить наличие appointment" id="a5f97c15-760b-4ddb-875d-e44c5ffe2464"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(id)  from f_notification_appointment 
where appointment_id =${#TestCase#appointmentId} AND event_id=${#TestCase#eventId}</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="99ada626-9137-4f13-9914-35f4723e0170"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def count = context.expand('${Проверить наличие appointment#ResponseAsXml#//*:COUNT}').toInteger()
if(  count != 1) { 
	testRunner.fail()
	log.info("ERROR: в  БД не найдено уведомление по записи на взятие биоматериала")
	}
else log.info "В БД есть уведомление по записи на взятие биоматериала"
</script></con:config></con:testStep><con:properties><con:property><con:name>appointmentId</con:name><con:value>391930073177</con:value></con:property><con:property><con:name>topic</con:name><con:value>Appointment2Bm</con:value></con:property><con:property><con:name>eventId</con:name><con:value>65688213072</con:value></con:property><con:property><con:name>status</con:name><con:value>CREATE</con:value></con:property></con:properties></con:testCase><con:testCase id="6d0b32ad-0390-452c-9555-dc45b6b9b2b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение по пользователю о записи на ЛДП" searchProperties="true" disabled="true"><con:settings/><con:testStep type="jdbc" name="Получить appointmentId" id="04dcee61-00e8-4843-9067-3e5f98093765"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select coalesce(min(appointment_id)-1, 400000) as id from f_notification_appointment </con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="записать appointmentId" id="e7dcafed-78ae-490d-ad4e-b95bed6834fa"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ap</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить appointmentId</con:sourceStep><con:sourcePath>//*:ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Получить eventId" id="68abdc2a-fee8-4aa5-a708-6799a790328b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select coalesce(min(event_id)-1, 400000) as id from f_notification_appointment </con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="записать eventId" id="f517f00b-53b1-4aef-bc38-3511a4c5f697"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ap</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить eventId</con:sourceStep><con:sourcePath>//*:ID</con:sourcePath><con:targetType>eventId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение" id="aa1934e9-ba7a-42fc-8446-1f96db2b2248"><con:settings/><con:config><script><![CDATA[import org.apache.kafka.clients.consumer. *
import org.apache.kafka.clients.producer.*
import java.text.SimpleDateFormat
import java.util.Date

def date = new Date()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss+03:00").format(date)
currentDate=new SimpleDateFormat("yyyy-MM-dd").format(date)

def sendMessageToKafka(String topicName, String textOfMessage){
        def bootstrapServers= testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")
        log.info(bootstrapServers)
        //Отправка сообщения в топик
        Properties props = new Properties()
        props.put('zk.connect', '10.2.172.24:2181')
        props.put('bootstrap.servers', bootstrapServers)
        props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
        props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')

        def producer = new KafkaProducer(props)

        messageSender(topicName, textOfMessage, producer)

    }

    def messageSender(String topic, String message, def producer ){
        
        def key =  UUID.randomUUID().toString()
        Date date = new Date();
        long  timestamp= date.getTime()
        int partition =0
        String compoundMessage = "$message"
	   log.info( "messageSender:key: "+key+", topic:  "+topic+"; "+message )
        producer.send(
                new ProducerRecord<String, String>(topic, partition, timestamp,  key, compoundMessage),
                { RecordMetadata metadata, Exception e ->
                    log.info( "The offset of the record we just sent is: ${metadata.offset()}")
                } as Callback
        )
    };
topicName = testRunner.testCase.getPropertyValue("topic")
//env=testRunner.testCase.testSuite.project.getPropertyValue("env")
//if(env =="solit" ){
//	solitNumber=testRunner.testCase.testSuite.project.getPropertyValue("solitNumber")
//	topicName = topicName+".EMIASINFO_SOLIT_TEST_"+solitNumber
//}

oms = testRunner.testCase.testSuite.getPropertyValue("oms")
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")
eventId = testRunner.testCase.getPropertyValue("eventId")
status = testRunner.testCase.getPropertyValue("status")

message="""<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:esuAppointment xmlns:ns2="http://emias.mos.ru/selfAppointment/selfAppointmentService/v1/">
    <event>
        <id>"""+eventId+"""</id>
        <type>"""+status+"""</type>
        <time>"""+currentDateTime+"""</time>
        <system>EIM</system>
    </event>
    <patient>
       <id>"""+patientId+"""</id>
        <oms>"""+oms+"""</oms>
        <name12>Елизавета Сергеевна</name12>
    </patient>
    <appointment>
          <id>"""+appointmentId+"""</id>
        <startTime>"""+currentDate+"""T19:30:00+03:00</startTime>
        <endTime>"""+currentDate+"""T20:00:00+03:00</endTime>
        <number>С20230724-244</number>
        <ldp>
            <id>2</id>
            <name>ЭКГ</name>
            <examination>true</examination>
    </ldp>
    </appointment>
    <availableResource>
        <id>20583826989</id>
        <name>Моби 2 Шульц В. Е.</name>
    </availableResource>
    <complexResource>
        <id>241290613</id>
        <number>211</number>
        <address>Москва, внутригородская территория поселение Филимонковское, деревня Верхнее Валуево, 5-я Валуевская улица, д. 20</address>
        <roomId>14441650</roomId>
    </complexResource>
    <lpu>
        <id>204</id>
        <shortName>ГБУЗ ГП 175 ДЗМ</shortName>
        <fullName>ГБУЗ ГП №175 ДЗМ</fullName>
        <phone>(495) 122-02-21</phone>
        <mainLpuId>204</mainLpuId>
    </lpu>
    <ldp>
            <id>2</id>
            <name>ЭКГ</name>
            <examination>true</examination>
    </ldp>
</ns2:esuAppointment>
"""
//return message2
    
sendMessageToKafka(topicName,message)]]></script></con:config></con:testStep><con:testStep type="delay" name="3000" id="1c8f8876-3717-433d-960e-00b553f7c2be"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Проверить наличие appointment" id="62a70286-027b-429b-b9ef-d2c98966ad60"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(id)  from f_notification_appointment 
where appointment_id =${#TestCase#appointmentId} AND event_id=${#TestCase#eventId}</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="94509d44-7169-47aa-a3ab-88f2fafcf333"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def count = context.expand('${Проверить наличие appointment#ResponseAsXml#//*:COUNT}').toInteger()

if(  count != 1) { 
	testRunner.fail()
	log.info("ERROR: в  БД не найдено уведомление по записи на ЛДП")
	}
else log.info "В БД есть уведомление по записи на ЛДП"</script></con:config></con:testStep><con:properties><con:property><con:name>appointmentId</con:name><con:value>391930073176</con:value></con:property><con:property><con:name>topic</con:name><con:value>Appointment2Ldp</con:value></con:property><con:property><con:name>eventId</con:name><con:value>65688213071</con:value></con:property><con:property><con:name>status</con:name><con:value>CREATE</con:value></con:property></con:properties></con:testCase><con:testCase id="8bb7cd1d-8e15-4cd4-8adf-cb41b589ef9e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение по госпитализации" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Получить appointmentId" id="a0735da3-ff45-45c1-8349-21d60d607b17" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select coalesce(min(appointment_id)-1, 400000) as id from f_notification_appointment </con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="записать appointmentId" id="daea88e2-8a8f-45ea-b76a-35f0a47eeffb" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ap</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить appointmentId</con:sourceStep><con:sourcePath>//*:ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение олд" id="49130403-2019-4793-a3cd-fbeb3629ba66" disabled="true"><con:settings/><con:config><script>import org.apache.kafka.clients.consumer. *
import org.apache.kafka.clients.producer.*
import java.text.SimpleDateFormat
import java.util.Date
log.info "Отправка сообщения по госпитализации пациента"

def date = new Date()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss+03:00").format(date)
currentDate=new SimpleDateFormat("yyyy-MM-dd").format(date)

nazId = java.util.UUID.randomUUID()
testRunner.testCase.setPropertyValue("nazId", nazId.toString())
def sendMessageToKafka(String topicName, String textOfMessage){
        def bootstrapServers= testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")
        log.info(bootstrapServers)
        //Отправка сообщения в топик
        Properties props = new Properties()
        props.put('zk.connect', '10.2.172.24:2181')
        props.put('bootstrap.servers', bootstrapServers)
        props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
        props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')

        def producer = new KafkaProducer(props)

        messageSender(topicName, textOfMessage, producer)

    }

    def messageSender(String topic, String message, def producer ){
        
        def key =  UUID.randomUUID().toString()
        Date date = new Date();
        long  timestamp= date.getTime()
        int partition =0
        String compoundMessage = "$message"
	   log.info( "messageSender:key: "+key+", topic:  "+topic+"; "+message )
        producer.send(
                new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
                { RecordMetadata metadata, Exception e ->
                    log.info( "The offset of the record we just sent is: ${metadata.offset()}")
                } as Callback
        )
    };
topicName = testRunner.testCase.getPropertyValue("topic")

oms = testRunner.testCase.testSuite.getPropertyValue("oms")
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
patientId ="20948239"
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")

message2="""{
  "patientInfo": {
    "emiasId": \""""+patientId+"""\",
    "caseNum": "49955-2023",
    "caseDate": "2012-04-23"
  },
  "moInfo": {
    "moId": "204",
    "moName": "ГБУЗ ГП №175 ДЗМ"
  },
  "mdInfo": {
    "mdSurname": "Петров",
    "mdName": "Иван",
    "mdPatron": "Михайлович",
    "mdPosition": "Заведующий отделением эндокринологии"
  },
  "hospInfo": {
    "patientId": \""""+patientId+"""\",
    "naz_id": \""""+nazId+"""\",
    "case_id": "ca5a762c-0611-442c-a452-0957b71b84e1"
  },
  "appointment": {
    "state": "new",
    "timestamp": "2012-04-23T18:25:43.511Z",
    "name": "Телемедицинская консультация",
    "urgency": "Экстренная",
    "appointTimestamp": "2023-08-30T08:25:43.511Z",
    "procedures": {
      "quantity": "1",
      "multiplicity": "2",
      "duration": {
        "hour": "2",
        "minutes": "30"
      },
      "schedule": {
        "daily": "Ежедневно",
        "assigned": "2012-04-23",
        "timeslot": "10:00"
      },
      "scope": "Верхневозлежащий крестец",
      "office": "12Б"
    },
    "drugAssignment": {
      "drug": [
        {
          "mnnName": "Дихлорэтана трихитронитротолуол бериллия",
          "dose": "0,25",
          "unitsNumber": "1"
        },
        {
          "mnnName": "Анальгин",
          "dose": "2 мг",
          "unitsNumber": "1 таблетка"
        }
      ],
      "introduction": "Парабульбарно",
      "repetition": "24 т/д",
      "relativeSleep": "В момент засыпания",
      "applyFrom": "2023-08-23T12:25:43.511Z",
      "duration": "5 дней",
      "schedule": "Каждую третью среду месяца",
      "relativeFeed": "До еды",
      "justification": "Высыпания",
      "notice": "Капсулу для приёма извлекать из блистера",
      "infusion": "В/В инфузомат 1,25 мл/мин в течение 3 минут"
    }
  }
}
"""
//return message
    
 sendMessageToKafka(topicName,message2)</script></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение" id="04cfd829-90fd-4134-9525-5f94b07b2ee9"><con:settings/><con:config><script>import org.apache.kafka.clients.consumer. *
import org.apache.kafka.clients.producer.*
import java.text.SimpleDateFormat
import java.util.Date
log.info "Отправка сообщения по госпитализации пациента"

def date = new Date()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss+03:00").format(date)
currentDate=new SimpleDateFormat("yyyy-MM-dd").format(date)

nazId = java.util.UUID.randomUUID()
testRunner.testCase.setPropertyValue("nazId", nazId.toString())
def sendMessageToKafka(String topicName, String textOfMessage){
        def bootstrapServers= testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")
        log.info(bootstrapServers)
        //Отправка сообщения в топик
        Properties props = new Properties()
        props.put('zk.connect', '10.2.172.24:2181')
        props.put('bootstrap.servers', bootstrapServers)
        props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
        props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')

        def producer = new KafkaProducer(props)

        messageSender(topicName, textOfMessage, producer)

    }

    def messageSender(String topic, String message, def producer ){
        
        def key =  UUID.randomUUID().toString()
        Date date = new Date();
        long  timestamp= date.getTime()
        int partition =0
        String compoundMessage = "$message"
	   log.info( "messageSender:key: "+key+", topic:  "+topic+"; "+message )
        producer.send(
                new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
                { RecordMetadata metadata, Exception e ->
                    log.info( "The offset of the record we just sent is: ${metadata.offset()}")
                } as Callback
        )
    };
topicName = testRunner.testCase.getPropertyValue("topic")
//env=testRunner.testCase.testSuite.project.getPropertyValue("env")
//if(env =="solit" ){
//	solitNumber=testRunner.testCase.testSuite.project.getPropertyValue("solitNumber")
//	topicName = topicName+".EMIASINFO_SOLIT_TEST_"+solitNumber
//}

oms = testRunner.testCase.testSuite.getPropertyValue("oms")
patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
//patientId ="20948239"
appointmentId = testRunner.testCase.getPropertyValue("appointmentId")

messageNew="""{
	"patientInfo": {
		"emiasId":  \""""+patientId+"""\",
		"caseNum": "22222-2023",
		"caseDate": "2023-08-21"
	},
	"moInfo": {
		"moId": "204",
		"moName": "ГБУЗ ГП №175 ДЗМ"
	},
	"mdInfo": {
		"mdSurname": "Петров",
		"mdName": "Иван",
		"mdPatron": "Михайлович",
		"mdPosition": "Заведующий отделением эндокринологии"
	},
	"hospInfo": {
		"patientId":  \""""+patientId+"""\",
		"naz_id": \""""+nazId+"""\",
		"case_id": "4639e096-75e2-470e-859c-6868b539eb78"
	},
	"appointment": {
		"state": "new",
		"timestamp": "2023-08-22T17:25:43.511Z",
		"create_dt": "2023-12-10T10:41:56.098Z",
		"name": "Забор крови",
		"type": "procedure",
		"urgency": "Плановая",
		"appointTimestamp": "2023-08-23T18:00:00.000Z",
		"procedures": {
			"multiplicity": "3",
			"duration": {
				"minutes": "30"
			},
			"schedule": {
				"daily": "В дату",
				"assigned": [
					"2023-04-20",
					"2023-04-21"
				]
			}
		}
	}
}"""
message2="""{
	"patientInfo": {
		"emiasId":  \""""+patientId+"""\",
		"caseNum": "49955-2023",
		"caseDate": "2012-04-23"
	},
	"moInfo": {
		"moId": "204",
		"moName": "ГБУЗ ГП №175 ДЗМ"
	},
	"mdInfo": {
		"mdSurname": "Петров",
		"mdName": "Иван",
		"mdPatron": "Михайлович",
		"mdPosition": "Заведующий отделением эндокринологии"
	},
	"hospInfo": {
		"patientId":  \""""+patientId+"""\",
		"naz_id": \""""+nazId+"""\",
		"case_id": "ca5a762c-0611-442c-a452-0957b71b84e1"
	},
	"appointment": {
		"state": "new",
		"timestamp": "2023-04-23T18:25:43.511Z",
		"create_dt": "2023-12-10T10:41:56.098Z",
		"name": "Назначение лекарственных препаратов, методов, форм лечебной физкультуры",
		"type": "drugs",
		"urgency": "Экстренная",
		"drugAssignment": {
			"drug": [
				{
					"mnnName": "Дихлорэтана трихитронитротолуол бериллия",
					"dose": "0,25",
					"unitsNumber": "1"
				},
				{
					"mnnName": "Анальгин",
					"dose": "2 мг",
					"unitsNumber": "1 таблетка"
				}
			],
			"introduction": "Парабульбарно",
			"repetition": "Принимать через равные промежутки времени 8 часов не более 3х раз в сутки по 2 таблетки утром днем вечером при болевом синдроме различного генеза (почечная и желчная колика, невралгия, миалгия, при травмах, ожогах, после операций, головная боль и аннемия)",
			"schedule": {
				"assigned": [
					"2023-04-23", 
					"2023-04-24"
				],
				"timeslot": [
					"06:00", 
					"18:00"
				]
			},
			"applyFrom": "2023-08-23",
			"duration": "5 дней",
			"relativeFeed": "До еды",
			"justification": "Высыпания",
			"notice": "Капсулу для приёма извлекать из блистера",
			"infusion": "В/В инфузомат 1,25 мл/мин в течение 3 минут"
		}
	}
}
"""
//return message
    
 sendMessageToKafka(topicName,messageNew)</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e18c6fa9-1086-4955-b695-d2108238254b"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Проверить наличие appointment" id="81f757d5-ce33-498f-846b-327cc3e9febb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select  count(nha.id) from f_notification_hospital_assignment nha
left join f_notification n on n.id =nha.notification_id
where nha.naz_id='${#TestCase#nazId}'</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="d10bdc14-b2f9-470f-95cd-9954041c81b6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def count = context.expand('${Проверить наличие appointment#ResponseAsXml#//*:COUNT}').toInteger()

if(  count != 1) { 
	testRunner.fail()
	log.info("ERROR: в  БД не найдено уведомление по госпитализации")
	}
else log.info "В БД есть уведомление по госпитализации"</script></con:config></con:testStep><con:testStep type="jdbc" name="Получить notificationId" id="c669184b-7221-4f40-9f85-a1d67fe273f6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select  n.id from f_notification_hospital_assignment nha
left join f_notification n on n.id =nha.notification_id
where nha.naz_id='${#TestCase#nazId}'</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="записать в свойства сьюта" id="79bf598b-0d97-47ed-b523-33be3db2ed4d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>n</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить notificationId</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION.ID</con:sourcePath><con:targetType>notificationId</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>appointmentId</con:name><con:value>10101010053</con:value></con:property><con:property><con:name>topic</con:name><con:value>kisNazToEmiasPublication</con:value></con:property><con:property><con:name>nazId</con:name><con:value>be18075b-9efe-426b-9492-dfa6e04a2ddd</con:value></con:property></con:properties></con:testCase><con:testCase id="8b6da689-f6f4-4dec-bccc-cf33064eb411" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение по рецептам" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Отправить сообщение" id="26285b07-8ca3-4edf-b200-aa65ad94bc32"><con:settings/><con:config><script>import org.apache.kafka.clients.consumer. *
import org.apache.kafka.clients.producer.*
import java.text.SimpleDateFormat
import java.util.Date
log.info "Отправка сообщения по рецепту пациента"
n = testRunner.testCase.getPropertyValue("n")
def date = new Date()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(date)
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())   

def sendMessageToKafka(String topicName, String textOfMessage){
        def bootstrapServers= testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")
        log.info(bootstrapServers)
        //Отправка сообщения в топик
        Properties props = new Properties()
        props.put('zk.connect', '10.2.172.24:2181')
        props.put('bootstrap.servers', bootstrapServers)
        props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
        props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')

        def producer = new KafkaProducer(props)

        messageSender(topicName, textOfMessage, producer)

    }

    def messageSender(String topic, String message, def producer ){
        
        def key =  UUID.randomUUID().toString()
        Date date = new Date();
        long  timestamp= date.getTime()
        int partition =0
        String compoundMessage = "$message"
	   log.info( "messageSender:key: "+key+", topic:  "+topic+"; "+message )
        producer.send(
                new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
                { RecordMetadata metadata, Exception e ->
                    log.info( "The offset of the record we just sent is: ${metadata.offset()}")
                } as Callback
        )
    };
  
topicName = testRunner.testCase.getPropertyValue("topic")
//env=testRunner.testCase.testSuite.project.getPropertyValue("env")
//if(env =="solit" ){
//	solitNumber=testRunner.testCase.testSuite.project.getPropertyValue("solitNumber")
//	topicName = topicName+".EMIASINFO_SOLIT_TEST_"+solitNumber
//}

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
//patientId ="20948239"


message="""
{
    "patientId": """+patientId+""",
    "prescriptionNumber": [
        "00Д4519372619"
    ],
    "messageHeader": "Вам выписан рецепт № """+n+"""",
    "messageText": "Вы можете забронировать лекарственный препарат онлайн и заказать доставку  № """+n+""""
}"""

sleep(2000)
sendMessageToKafka(topicName,message)</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="802416c5-cb58-4bb9-8d4e-1078905e00b1"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Получить notification" id="2238688a-ea19-4e2f-b593-e46ee1542f62"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fn.* from f_notification fn 
join f_user fu on fn.user_id =fu.id 
join d_notification_type dnt on dnt.id =fn.notification_type_id 
where fu.patient_id =${#TestSuite#patientId} 
and dnt.title ='prescriptions' 
and create_date >'${#TestCase#currentDateTime}'

</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:F_NOTIFICATION.TITLE</path><content>Вам выписан рецепт № 1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать notificationId" id="366be242-a2bc-4582-a61f-9662a2bbfa02"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="true" transferChildNodes="false"><con:name>n</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить notification</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION.ID</con:sourcePath><con:targetType>notificationId</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="true" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>22</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить notification</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION.ID</con:sourcePath><con:targetType>notificationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Получить notification_task" id="74ffaf05-03b6-4868-afac-5e82fc1f3d8d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select * from f_notification_task fnt
where notification_id = ${#TestCase#notificationId}
and device_guid = '${#TestSuite#deviceGuid}'



</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:F_NOTIFICATION.TITLE</path><content>Вам выписан рецепт № 1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответы" id="de94f256-f766-4361-983d-f1e7efbe8ed5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def compareMaps(Map m1, Map m2) {
        String errors=""
        int countErrors = 0
        m1.each{k,v->
            if(m2[k] != m1[k]) {
                countErrors=countErrors+1
                errors=errors+"Параметр ${k}, значение в первом объекте =${m1[k]}, значение во втором =${m2[k]}.  "
            }
        }
        if(countErrors){
            testRunner.fail("Обнаружены несоответствия данных в сообщении и в БД. Их количество : "+countErrors)
            log.info errors
        }
        else {
            log.info "Объекты идентичны"
        }
    }
n = testRunner.testCase.getPropertyValue("n")
title = context.expand('${Получить notification#ResponseAsXml#//*:F_NOTIFICATION.TITLE}')
description = context.expand('${Получить notification#ResponseAsXml#//*:F_NOTIFICATION.DESCRIPTION}')
deleted = context.expand('${Получить notification#ResponseAsXml#//*:F_NOTIFICATION.DELETED}')
viewed = context.expand('${Получить notification#ResponseAsXml#//*:F_NOTIFICATION.VIEWED}')
id = context.expand('${Получить notification#ResponseAsXml#//*:F_NOTIFICATION.ID}')

dbMap=[ 
			title : title ,
			description : description ,
			deleted : deleted ,
			viewed : viewed ,
]

expectedMap=[ 
			title : "Вам выписан рецепт № "+n ,
			description : "Вы можете забронировать лекарственный препарат онлайн и заказать доставку  № "+n ,
			deleted : "f" ,
			viewed : "f" ,
]
compareMaps(dbMap,expectedMap)

n=1+n.toInteger()
testRunner.testCase.setPropertyValue("n", n.toString())

status = context.expand('${Получить notification_task#ResponseAsXml#//*:F_NOTIFICATION_TASK.STATUS}')

if(status != 'SEND') {
            testRunner.fail("Статус задачи не равен SEND. полученный статус "+status)
            log.info errors
        }</script></con:config></con:testStep><con:properties><con:property><con:name>topic</con:name><con:value>BookingRecipeInfoMessage</con:value></con:property><con:property><con:name>n</con:name><con:value>28</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-01-26 17:06:49.072</con:value></con:property><con:property><con:name>notificationId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="56c62b65-c938-4871-9eec-a1612980f0e7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправить сообщение об изменении статуса ТМК" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Найти appointmentId" id="cbca261b-99d6-4afd-b040-eae83c4b8325"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select fna.appointment_id from f_notification_appointment fna
join f_notification fn on fn.id = fna.notification_id
join f_user fu on fu.id = fn.user_id
where fu.patient_id = ${#TestSuite#patientId} 
and fna.status = 'CREATE'
and fna.doctor_short_name is not NULL
LIMIT 1</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать appointmentId" id="a764bc1b-a6d4-486f-b17f-98352d5164af"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Найти appointmentId</con:sourceStep><con:sourcePath>//*:F_NOTIFICATION_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointmentId</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="Проверить наличие записи в f_notification_telemedicine" id="85984c89-7fe1-4d26-a8b7-03f43fa10108"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(id)  from f_notification_telemedicine
where appointment_id = ${#TestSuite#appointmentId}</con:query><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать count в бд" id="10e17a74-fc43-4cc9-8489-df20654fba23"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointmentId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Проверить наличие записи в f_notification_telemedicine</con:sourceStep><con:sourcePath>//*:COUNT</con:sourcePath><con:targetType>count</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Отправить сообщение" id="492baa64-0a23-4944-b329-babf698c3405"><con:settings/><con:config><script>import org.apache.kafka.clients.consumer. *
import org.apache.kafka.clients.producer.*
import java.text.SimpleDateFormat
import java.util.Date
log.info "Отправка сообщения об изменении статуса ТМК"
//n = testRunner.testCase.getPropertyValue("n")
def date = new Date()
def currentDateTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS").format(date)
def eventDateTime = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss").format(date)
testRunner.testCase.setPropertyValue("currentDateTime", currentDateTime.toString())   

def sendMessageToKafka(String topicName, String textOfMessage){
        def bootstrapServers= testRunner.testCase.testSuite.project.getPropertyValue("bootstrapServers")
        log.info(bootstrapServers)
        //Отправка сообщения в топик
        Properties props = new Properties()
        props.put('zk.connect', '10.2.172.24:2181')
        props.put('bootstrap.servers', bootstrapServers)
        props.put('key.serializer', 'org.apache.kafka.common.serialization.StringSerializer')
        props.put('value.serializer', 'org.apache.kafka.common.serialization.StringSerializer')

        def producer = new KafkaProducer(props)

        messageSender(topicName, textOfMessage, producer)

    }

    def messageSender(String topic, String message, def producer ){
        
        def key =  UUID.randomUUID().toString()
        Date date = new Date();
        long  timestamp= date.getTime()
        int partition =0
        String compoundMessage = "$message"
	   log.info( "messageSender:key: "+key+", topic:  "+topic+"; "+message )
        producer.send(
                new ProducerRecord&lt;String, String>(topic, partition, timestamp,  key, compoundMessage),
                { RecordMetadata metadata, Exception e ->
                    log.info( "The offset of the record we just sent is: ${metadata.offset()}")
                } as Callback
        )
    };
  
topicName = testRunner.testCase.getPropertyValue("topic")

patientId = testRunner.testCase.testSuite.getPropertyValue("patientId")
deviceGuid = testRunner.testCase.testSuite.getPropertyValue("deviceGuid")
appointmentId = testRunner.testCase.testSuite.getPropertyValue("appointmentId")

message="""
{
    "patientId": """+patientId+""",
    "deviceId": \""""+deviceGuid+"""\",
    "productType": "emiasInfo",
    "appointmentId": """+appointmentId+""",
    "participantURL": "/7d47420b-5dee-4cfe-bbf1-349fd9776370?participantUuid\u003d1436b14f-479d-432a-8c7f-b3301168b260",
    "eventType": "doctorLoginToRoom",
    "eventDateTime": \""""+eventDateTime+"""\",
    "unsuccessCallCounter": 1
}"""
log.info message
sleep(2000)
sendMessageToKafka(topicName,message)</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="139fb4ab-915c-42c8-ae56-79ddffab8104"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Проверить добавление записи в f_notification_telemedicine" id="ead42584-8de5-48b6-9fe4-185a18e7fcc6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(id)  from f_notification_telemedicine
where appointment_id =${#TestSuite#appointmentId}</con:query><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="3883faac-2994-4f7a-84f7-f023fcb4afcb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def countResponse = context.expand('${Проверить добавление записи в f_notification_telemedicine#ResponseAsXml#//*:COUNT}').toInteger()
count = testRunner.testCase.getPropertyValue("count").toInteger()+1

if(  countResponse != count) { 
	testRunner.fail()
	log.info("ERROR: в  БД не добавлено уведомление об изменении ТМК")
	}
else log.info "В БД есть уведомление об изменении ТМК"</script></con:config></con:testStep><con:properties><con:property><con:name>appointmentId</con:name><con:value>-35</con:value></con:property><con:property><con:name>topic</con:name><con:value>tmkNotify</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2024-04-08 16:44:41.450</con:value></con:property><con:property><con:name>count</con:name><con:value>3</con:value></con:property></con:properties></con:testCase><con:testCase id="208f3c0b-0aa5-4048-8fce-43e8fb1e9655" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getMessageList" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getMessageList" id="93b70377-fe2f-4f5a-932e-479944493cc8"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/message/list" methodName="getMessageList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getMessageList" id="55bba891-d3ec-4c36-af58-cc67a2b8ef29" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/message/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestSuite#patientId}"/>
  <con:entry key="deviceGuid" value="${#TestSuite#deviceGuid}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="b3633c24-a3b3-49e2-88a8-bf30b490cfe9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>notificationId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getMessageList</con:sourceStep><con:sourcePath>$.payload.notificationsList[0].notificationId</con:sourcePath><con:targetType>notificationId</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="9bdc72ad-4c3d-40ee-8c31-9fe32ed74508"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getMessageList#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getMessageList").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getMessageList HTTP status code: " + httpStatusCode)
log.info "getMessageList Ответ метода :" +response

if(  httpStatusCode !="200" &amp;&amp;  !response.contains("payload") ){ 
	testRunner.fail()
	log.info("ERROR: В ответе getMessageList возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getMessageList соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="901380bc-3790-4aad-8007-fbc9126f9de9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="get messageDetails" searchProperties="true"><con:settings/><con:testStep type="jdbc" name="Получить notificationId" id="bbc39b89-0630-4498-b40a-be9aba5f1201" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select *  from f_notification n
join f_user fu on fu.id=n.user_id
join f_notification_hospital_assignment na on na.notification_id=n.id
where fu.patient_id=${#TestSuite#patientId}</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Записать данные уведомления" id="076a19c5-89cc-4a08-b326-f479e4bd5d1c" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>notificationId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Получить notificationId</con:sourceStep><con:sourcePath>//Row[1]/F_NOTIFICATION.ID</con:sourcePath><con:targetType>notificationId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="messageDetails" id="5d96cd89-fcea-4fc0-bbed-c00945074586"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/message/details" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="messageDetails" id="78aeab8b-e5fa-4d6f-9fd4-3d1da90b3ab9" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/message/details</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="deviceGuid" value="${#TestSuite#deviceGuid}"/>
  <con:entry key="patientId" value="${#TestSuite#patientId}"/>
  <con:entry key="notificationId" value="${#TestSuite#notificationId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="87bea256-ccbb-419b-b969-9d79584d6289"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${messageDetails#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("messageDetails").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("messageDetails HTTP status code: " + httpStatusCode)
log.info "messageDetails Ответ метода :" +response

if(  httpStatusCode !="200" &amp;&amp;  !response.contains("payload") ){ 
	testRunner.fail()
	log.info("ERROR: В ответе messageDetails возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ messageDetails соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>notificationId</con:name><con:value>15705</con:value></con:property></con:properties></con:testCase><con:testCase id="f5fd29cb-6649-4fc3-8a25-bdc4f36891a8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getTmk" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getTMK" id="7713b0de-e81d-4281-a05f-b7838a017bcc"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" methodName="Method 1" resourcePath="/v1/status/tmk" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getTMK" id="5f327df2-a4f9-4057-9667-844008b6dabb" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/v1/status/tmk</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestSuite#patientId}"/>
  <con:entry key="deviceGuid" value="${#TestSuite#deviceGuid}"/>
  <con:entry key="appointmentId" value="${#TestSuite#appointmentId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="48ef0880-ead8-4078-a7b7-0209a8f4bf53"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getTMK#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getTMK").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getTMK HTTP status code: " + httpStatusCode)
log.info "getTMK Ответ метода :" +response

if(  httpStatusCode !="200" &amp;&amp;  !response.contains("payload") ){ 
	testRunner.fail()
	log.info("ERROR: В ответе getTMK возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getTMK соответствует ожидаемому"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="db05753e-9e50-40ad-af90-36a05ba0fdac" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinations" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Записать порядковый номер уведомления" id="fbad5060-33a0-4f59-82ff-54e68d6e230c"><con:settings/><con:config><script>n = testRunner.testCase.getPropertyValue("n").toLong()
n=n+1
testRunner.testCase.setPropertyValue("n", n.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="post pr vaccinations" id="f8c575c6-33ba-4648-a00a-3a1cb05dc3a4"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/prPush/vaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="post pr vaccinations" id="d82f9261-e827-4e6b-b958-d1f8bb84bad2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "campaignId": "${#TestSuite#campaing}",
  "patientInfo": [
    {
      "patientId": ${#TestSuite#patientId},
      "policyNumber": "${#TestSuite#oms}",
      "brithDate": "2012-06-07",
      "pushTitle": "Сделайте прививку от гриппа. уведомление№${#TestCase#n}",
      "pushBody": "Вы можете сделать прививку от гриппа где угодно",
      "html": "html test"
    }
  ]
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/prPush/vaccinations</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="2af2597f-90a7-4efd-8872-d3c213e9e668"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="jdbc" name="Проверить наличие уведомлений в бд" id="58827ed5-084b-463c-ae72-d9f5d651d3d2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(n.id)  from f_notification n
join f_user fu on fu.id=n.user_id
where fu.patient_id=${#TestSuite#patientId}
and n.notification_type_id=4 
</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="bebdde3b-5856-4211-bc10-902e695bccda"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${post pr vaccinations#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("post pr vaccinations").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("post pr vaccinations HTTP status code: " + httpStatusCode)
log.info "post pr vaccinations Ответ метода :" +response

if(  httpStatusCode !="200" &amp;&amp;  !response.contains("payload") ){ 
	testRunner.fail()
	log.info("ERROR: В ответе post pr vaccinations возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ post pr vaccinations соответствует ожидаемому"

def count = context.expand('${Проверить наличие уведомлений в бд#ResponseAsXml#//*:COUNT}').toInteger()

if(  count &lt; 1){ testRunner.fail("ERROR: в  БД не найдено ожидаемых записей"); log.info("ERROR: в  БД не найдено ожидаемых записей")}
else log.info "В БД есть нужная запись"

</script></con:config></con:testStep><con:properties><con:property><con:name>currentDateTime</con:name><con:value>2023-07-25T13:37:18</con:value></con:property><con:property><con:name>n</con:name><con:value>59</con:value></con:property></con:properties></con:testCase><con:testCase id="d11e56ff-c295-42ca-80ab-d512a99a26be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="view" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="view" id="8f1907d5-c6b8-4acb-9b21-490717a7cf99"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/message/view" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="view" id="0deaa0ab-97fb-4908-8e0e-3532b3a2f01b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/message/view</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="notificationId" value="${#TestSuite#notificationId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="4874b613-17e4-4cff-b2cb-b565754e9434"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${view#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("view").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("view HTTP status code: " + httpStatusCode)
log.info "view Ответ метода :" +response

if(  httpStatusCode !="204" &amp;&amp; response != null ){ 
	testRunner.fail()
	log.info("ERROR: В ответе view возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ view соответствует ожидаемому"

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c68e14a9-a831-44e9-a33c-206f18051384" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="checkUnreadMessages" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="checkUnreadMessages" id="946dfeb9-b941-4816-8821-764e864aac1f"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/message/checkUnreadMessages" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="checkUnreadMessages" id="62202491-6ba4-481f-94b4-54837d679367" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/message/checkUnreadMessages</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestSuite#patientId}"/>
  <con:entry key="deviceGuid" value="${#TestSuite#deviceGuid}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="6e111dac-edc0-4b4c-8401-a280994e1f9b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${checkUnreadMessages#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("checkUnreadMessages").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("checkUnreadMessages HTTP status code: " + httpStatusCode)
log.info "checkUnreadMessages Ответ метода :" +response
parsedResponse=new JsonSlurper().parseText(response)
count=parsedResponse.payload.unreadNotifications

if(  httpStatusCode !="200" ){ 
	testRunner.fail()
	log.info("ERROR: В ответе checkUnreadMessages возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ checkUnreadMessages соответствует ожидаемому"

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0562c665-00a3-4ce0-b2c2-ebfd2b885c35" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteUser" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="deleteUser" id="2f1e2d93-a6e1-47cf-acc9-6446bc56c943"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/user/delete" methodName="deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deleteUser" id="4e97b4fe-0da1-43e2-b801-4e3976ea8b7d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "patientId": ${#TestSuite#patientId},
  "deviceGuid": "${#TestSuite#deviceGuid}"
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/user/delete</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить удаление девайса" id="387bcc86-1da6-451b-ae51-12a67942f5a9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(ud.id) from f_user us
left join f_user_device ud on ud.user_id=us.id 
left join f_device dev on dev.device_guid = ud.device_guid 
where us.patient_id =${#TestSuite#patientId} and ud.deleted =TRUE and ud.device_guid ='${#TestSuite#deviceGuid}'</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="bb4df111-cb84-4608-8729-bc53a24054a8"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${deleteUser#Response}')
def count = context.expand('${Проверить удаление девайса#ResponseAsXml#//*:COUNT}').toInteger()

def httpResponseHeaders = testRunner.testCase.getTestStepByName("deleteUser").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("deleteUser HTTP status code: " + httpStatusCode)
log.info "deleteUser Ответ метода :" +response

if(  httpStatusCode !="204" &amp;&amp; response == null ){ 
	testRunner.fail()
	log.info("ERROR: В ответе deleteUser возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ deleteUser соответствует ожидаемому"
if(  count != 1){ 
	testRunner.fail()
	log.info("ERROR: в  БД девайс не удален")
	}
else log.info "В БД девайс удален"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ce2d5bd4-57f2-40d8-a71e-d8b7e5ebcc21" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверка эндпоинтов модуля Notifications" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="get env" id="51abb14f-2775-4d42-8ba3-8911ec03ebed"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/actuator/env" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="get env" id="9763043e-4ece-4343-b6e3-88d0ec972d17" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEnvEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/actuator/env</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="df82351e-3790-4b23-8bcb-da4d0c04db0e" name="Valid HTTP Status Codes" disabled="true"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа ППАК" id="d5bddb17-44de-4a66-907f-df3de6d187fc"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import java.util.ArrayList

env=testRunner.testCase.testSuite.project.getPropertyValue("env")

 paramsPpak=[
	[ paramName : "app.esu.enable", param : "true"],
	[ paramName :"app.esu.appointment.silent.enable", param : "false"],
	[ paramName : "app.esu.medicationAssignmentChangesPerDay.topic", param : "MedicationAssignmentChangesPerDay"],
	[ paramName : "app.esu.hospitalization.topic", param : "kisNazToEmiasPublication"],
	[ paramName : "app.esu.prescriptions.topic", param : "BookingRecipeInfoMessage"],
	[ paramName : "app.esu.appointment2Ldp.topic", param : "Appointment2Ldp"],
	[ paramName : "app.esu.appointment2Bm.topic", param : "Appointment2Bm"],
	[ paramName : "app.esu.appointment2Doctor.topic", param : "Appointment2Doctor"],
	[ paramName : "app.esu.tmkNotify.topic", param : "tmkNotify"],
	[ paramName : "app.esu.groupId", param : "EMIASINFO"],
	[ paramName : "app.esu.bootstrapServers", param : "srv-pesu-kaf01:9092,srv-pesu-kaf02:9092,srv-pesu-kaf03:9092"],
	[ paramName : "app.services.sudir.url", param : "http://10.0.20.107:8480"],
	[ paramName : "app.services.lk.url", param : "http://srv-esb-vip-external/proxy/lkservice/api-gateway/v1S/ProxyService"],
	[ paramName : "app.services.spk.url", param : "http://10.0.20.107:8080"],
	[ paramName : "app.services.cloud-token.url", param : "http://10.0.20.107:14380"],
	[ paramName : "app.elastic-search.url", param : "10.3.61.14"],
	[ paramName : "app.elastic-search.port", param : "33200"],
	[ paramName : "app.esu.medicationAssignmentChangesPerDay.enable", param : "false"],
	[ paramName : "app.elastic-search.index", param : "notification-api"],
	[ paramName : "app.services.cloud-token.auth", param : "b688b45b42ebc10e62e8950216412ddc"],
	[ paramName : "logging.file.max-size", param : "10MB"],
	[ paramName : "app.esiaAuthentication.tmkNeedEsiaAuthentication", param : "false"],
	[ paramName : "app.job.enable", param : "true"],
	[ paramName : "app.tmkCallTimeout", param : "60"],
	[ paramName : "app.services.vaccinationsPush.delimiter", param : ";"],
	[ paramName : "app.dataSource.schemaName", param : "emias_info"]
]

 paramsTest=[
	[ paramName : "app.esu.enable", param : "true"],
	[ paramName :"app.esu.appointment.silent.enable", param : "false"],
	[ paramName : "app.esu.medicationAssignmentChangesPerDay.topic", param : "MedicationAssignmentChangesPerDay"],
	[ paramName : "app.esu.hospitalization.topic", param : "kisNazToEmiasPublication"],
	[ paramName : "app.esu.prescriptions.topic", param : "BookingRecipeInfoMessage"],
	[ paramName : "app.esu.appointment2Ldp.topic", param : "Appointment2Ldp"],
	[ paramName : "app.esu.appointment2Bm.topic", param : "Appointment2Bm"],
	[ paramName : "app.esu.appointment2Doctor.topic", param : "Appointment2Doctor"],
	[ paramName : "app.esu.tmkNotify.topic", param : "tmkNotify"],
	[ paramName : "app.esu.groupId", param : "EMIASINFO"],
	[ paramName : "app.esu.bootstrapServers", param : "10.2.172.24:9092,10.2.172.25:9092,10.2.172.26:9092"],
	[ paramName : "app.services.sudir.url", param : "http://10.2.173.132:8480"],
	[ paramName : "app.services.lk.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/lkservice/api-gateway/v1S/ProxyService"],
	[ paramName : "app.services.spk.url", param : "http://10.2.173.132:8080"],
	[ paramName : "app.services.cloud-token.url", param : "http://10.2.173.132:14380"],
	[ paramName : "app.elastic-search.url", param : "10.2.173.101"],
	[ paramName : "app.elastic-search.port", param : "31070"],
	[ paramName : "app.esu.medicationAssignmentChangesPerDay.enable", param : "false"],
	[ paramName : "app.elastic-search.index", param : "emc-api"],
	[ paramName : "app.services.cloud-token.auth", param : "693df2fda431d968384b0b8cf0c5eef8"],
	[ paramName : "logging.file.max-size", param : "10MB"],
	[ paramName : "app.esiaAuthentication.tmkNeedEsiaAuthentication", param : "false"],
	[ paramName : "app.job.enable", param : "true"],
	[ paramName : "app.tmkCallTimeout", param : "60"],
	[ paramName : "app.services.vaccinationsPush.delimiter", param : ";"],
	[ paramName : "app.dataSource.schemaName", param : "public"]
]

 paramsSolit=[
	[ paramName : "app.esu.enable", param : "true"],
	[ paramName :"app.esu.appointment.silent.enable", param : "false"],
	[ paramName : "app.esu.medicationAssignmentChangesPerDay.topic", param : "MedicationAssignmentChangesPerDay"],
	[ paramName : "app.esu.hospitalization.topic", param : "kisNazToEmiasPublication"],
	[ paramName : "app.esu.prescriptions.topic", param : "BookingRecipeInfoMessage"],
	[ paramName : "app.esu.appointment2ldp.topic", param : "Appointment2Ldp"],
	[ paramName : "app.esu.appointment2bm.topic", param : "Appointment2Bm"],
	[ paramName : "app.esu.appointment2doctor.topic", param : "Appointment2Doctor"],
	[ paramName : "app.esu.tmkNotify.topic", param : "tmkNotify"],
	[ paramName : "app.esu.bootstrapservers", param : "10.2.172.24:9092,10.2.172.25:9092,10.2.172.26:9092"],
	[ paramName : "app.services.sudir.url", param : "http://10.2.173.132"],
	[ paramName : "app.services.lk.url", param : "http://esbcamelvv.test.emias.mos.ru/proxy/lkservice/api-gateway/v1S/ProxyService"],
	[ paramName : "app.services.spk.url", param : "https://demo2.spk.mos.ru"],
	[ paramName : "app.esu.medicationAssignmentChangesPerDay.enable", param : "false"],
	[ paramName : "app.services.cloudtoken.url", param : "http://uat.emp.mos.ru"],
	[ paramName : "app.services.cloud-token.auth", param : "693df2fda431d968384b0b8cf0c5eef8"],
	[ paramName : "logging.file.max-size", param : "10MB"],
	[ paramName : "app.esiaAuthentication.tmkNeedEsiaAuthentication", param : "false"],
	[ paramName : "app.job.enable", param : "true"],
	[ paramName : "app.tmkCallTimeout", param : "60"],
	[ paramName : "app.services.vaccinationsPush.delimiter", param : ";"],
	[ paramName : "app.dataSource.schemaName", param : "public"]
]

env=testRunner.testCase.testSuite.project.getPropertyValue("env")
if(env =="solit" ){
	solitNumber=testRunner.testCase.testSuite.project.getPropertyValue("solitNumber")
	solitGroup= "EMIASINFO_SOLIT_TEST_"+solitNumber
	paramsSolit << [ paramName : "app.esu.groupId", param :solitGroup]
}

def params
def dif
 switch (env) {
 	case "test":
 		params=paramsTest
 		break
 	case "solit":
 		params=paramsSolit
 		break
 	case "ppak":
 		params=paramsPpak
 		break
 	default: 
		testRunner.fail()
 		log.info "ERROR: на переданный параметр окружения нет ожидаемых значений параметров окружения "
 }

  
dbConnection=testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsDbConnection")
dbSource="jdbc:postgresql://"+dbConnection
//добавить в список параметры, которые одинаковые для всех контуров
params  <<  [ paramName : "spring.datasource.url", param : dbSource]
params  <<  [ paramName : "app.services.cloud-token.add-path", param : "/api/v2.0/communication/mobile/cloud/token/add"]
params  <<  [ paramName : "app.services.cloud-token.delete-path", param : "/api/v2.0/communication/mobile/cloud/token/delete"]


dif=params
if(params){
	errors=[]
	def envResponse = context.expand('${get env#Response}')
	log.info "параметры окружения модуля notification: "+envResponse
	def slurperJson = new JsonSlurper()
	def  env = slurperJson.parseText( envResponse)
	//log.info env.propertySources
	env.propertySources.each{
		if(it.name=="systemEnvironment"){
			it.properties.each{ et ->
				if(params.paramName.contains(et.getKey())){
					//log.info et.getKey()
					int index= params.paramName.indexOf(et.getKey())
					expextedParam=params[index].param
					dif=dif-params[index]
					envParam=et.value.value.replace("?wsdl","").replace("?WSDL","")
					if( expextedParam.replaceAll(" ", "") != envParam.replaceAll(" ", "")){
						errorText="ERROR: Для параметра "+et.getKey()+" значение эндпоинта не соответствует ожидаемому. Ожидаемое: "+expextedParam+" , фактическое: "+envParam
						errors << errorText
					}
				}	
			}
		}
	}
	if( dif){
		dif.each{it ->
			errorText="ERROR: В списке  systemEnvironment не найден параметр с названиием "+it.paramName
			errors << errorText
		}
	}
	if(errors.size()>0){
		testRunner.fail("Количетсво ошибок при сравнении ответов = " +errors.size())
		log.info "ERROR: Параметры модуля notification не соответствуют ожидаемым"
		errors.each{it ->
			log.info it
		}
	}
	else {
		log.info "Параметры модуля notification соответствуют ожидаемым"
	}
}]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9ebb519f-6b2f-41ec-aeb6-d5bf796c26cf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отправка уведомлений" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Cгенерировать данные для запроса" id="69844228-83d8-49cf-a170-de4d7bb679fb"><con:settings/><con:config><script>import java.text.SimpleDateFormat
import java.util.Date
import groovy.sql.Sql
//Подготовка соединения с БД

connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
driver =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsDBDriver")
 sql = Sql.newInstance(connection, driver)
 
 String alphabet = (('A'..'N')+('P'..'Z')+('a'..'k')+('m'..'z')).join() 
 length = 40

oms = testRunner.testCase.getPropertyValue("oms")
patientId = testRunner.testCase.getPropertyValue("patientId")
bd = testRunner.testCase.getPropertyValue("bd")
guid = java.util.UUID.randomUUID()
cloudId = new Random().with {
      (1..length).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
        }
checkQuery="select id from f_user where patient_id ="+patientId
user=sql.firstRow(checkQuery)

if (!user){
	userQuery="""INSERT INTO f_user
	(id, patient_id, oms_number, birth_date)
	VALUES(nextval('f_user_sequence'), """+patientId+""", '"""+oms+"""', ' """+bd+"""') RETURNING id"""
	userId=sql.firstRow(userQuery).id
}
else{ 
	userId=user.id
}


deviceQuery="""INSERT INTO f_device
(device_guid, app_version, platform, device_cloud_id, cloud_token_delete)
VALUES('"""+guid+"""', '1.2.2', 'APPLE', '"""+cloudId+"""', NULL);
INSERT INTO f_user_device
(id, device_guid, user_id, authentication, deleted, deleted_date)
VALUES(nextval('f_user_device_sequence'), '"""+guid+"""', """+userId+""", true, false, NULL);
INSERT INTO f_device_settings
(device_guid, appointment, appointment_reminder, referral, pr_news)
VALUES('"""+guid+"""', true, true, true, true)"""
deviceResult=sql.execute(deviceQuery)

notinQuery="""INSERT INTO f_notification
(id, user_id, notification_type_id, title, description, create_date, deleted, viewed)
VALUES(nextval('f_notification_sequence'), """+userId+""", 4, 'Сделайте прививку от гриппа. уведомление№', 'Вы можете сделать прививку от гриппа где угодно', '2023-07-25 14:18:36.574', false, false)
 RETURNING id"""
notificationId=sql.firstRow(notinQuery).id
log.info notificationId

notTaskQuery="""INSERT INTO f_notification_task
(id, notification_id, status, send_date, device_guid)
VALUES(nextval('f_notification_task_sequence'), """+notificationId+""", 'CREATE', '2023-07-31 12:34:58.900', '"""+guid+"""');
"""
sql.execute(notTaskQuery)
//patientId=patientId+1
//oms=oms+1
//testRunner.testCase.setPropertyValue("patientId", patientId.toString())
//testRunner.testCase.setPropertyValue("oms", oms.toString())
testRunner.testCase.setPropertyValue("deviceGuid", guid.toString())
testRunner.testCase.setPropertyValue("deviceCloudId", cloudId.toString())
testRunner.testCase.setPropertyValue("notificationId", notificationId.toString())


n = testRunner.testCase.getPropertyValue("n").toLong()
n=n+1
testRunner.testCase.setPropertyValue("n", n.toString())


Date date = new Date();
 long  timestamp= date.getTime()

testRunner.testCase.setPropertyValue("currentDateTime", timestamp.toString())

eventId = java.util.UUID.randomUUID()
testRunner.testCase.setPropertyValue("eventId", eventId.toString())
</script></con:config></con:testStep><con:testStep type="restrequest" name="send message" id="44cce52e-c53d-488b-94fe-58dcde3d9752"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/message/send" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="send message" id="622f233e-5f0a-4da5-9625-09c928bda087" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
	"eventId": "${#TestCase#eventId}",
	"eventCode": "EIM",
	"dateTime": ${#TestCase#currentDateTime},
	"to ": {
		"deviceGuid": "${#TestCase#deviceGuid}"
	},
	"data": {
		"title": "Тестовый пуш",
		"body": "Бодитест",
		"type": "pushOpen",
		"campaignId": "Компания для рассылки по вакцинации",
		"notificationId": ${#TestCase#notificationId},
		"payload": {"oms": "${#TestCase#oms}"}
	}
}</con:request><con:originalUri>http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/message/send</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="accessToken" value="${#Project#accessToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>accessToken</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="8a76967b-3872-435d-a6df-ed739580363a" disabled="true"><con:settings/><con:config><script>oms = testRunner.testCase.getPropertyValue("oms")
eventId = testRunner.testCase.getPropertyValue("eventId")
currentDateTime = testRunner.testCase.getPropertyValue("currentDateTime")
deviceGuid = testRunner.testCase.getPropertyValue("deviceGuid")
n = testRunner.testCase.getPropertyValue("n")
notificationId = testRunner.testCase.getPropertyValue("notificationId")
oms = testRunner.testCase.getPropertyValue("oms")

req="""{
	"eventId": \""""+eventId+"""\",
	"eventCode": "EIM",
	"dateTime": """+currentDateTime+""",
	"to ": {
		"deviceGuid": \""""+deviceGuid+"""\"
	},
	"data": {
		"title": "Тестовый пуш№"""+n+"""",
		"body": "Бодитест",
		"type": "pushOpen",
		"campaignId": "Компания для рассылки по вакцинации"
		"notificationId": """+notificationId+""",
		"payload": {"oms": \""""+oms+"""\"}
	}
}
"""
return req</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="018707c6-141b-450d-8dcc-fff789e6bec4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = context.expand('${send message#Response}')
def httpResponseHeaders = testRunner.testCase.getTestStepByName("send message").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("send message HTTP status code: " + httpStatusCode)
log.info "send message Ответ метода :" +response


if(  httpStatusCode !="204" &amp;&amp; response != null ) testRunner.fail("ERROR: В ответе send message возникло несоответствие фактического результата ожидаемому")
else log.info "Ответ send message соответствует ожидаемому"
</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1000021</con:value></con:property><con:property><con:name>oms</con:name><con:value>1000000000021</con:value></con:property><con:property><con:name>bd</con:name><con:value>1980-08-08</con:value></con:property><con:property><con:name>deviceGuid</con:name><con:value>d1ebf1ae-71ff-4518-a53a-900a2f2ef418</con:value></con:property><con:property><con:name>deviceCloudId</con:name><con:value>oZvTEABNcRfAUWuemBwiBzZWfDdrTWVrgdYEKpUR</con:value></con:property><con:property><con:name>n</con:name><con:value>6</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>1690796951664</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>9274</con:value></con:property><con:property><con:name>eventId</con:name><con:value>e42c031d-aee8-4a72-b035-8efa646b53f8</con:value></con:property></con:properties></con:testCase><con:testCase id="4e01de2a-2bc3-4b84-a066-4746371a01ab" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получение и сохранение настроек" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Cгенерировать данные для запроса" id="93eb94ce-33ad-4487-bf4c-e4aa173d42eb"><con:settings/><con:config><script>import java.text.SimpleDateFormat
import java.util.Date
import groovy.sql.Sql
//Подготовка соединения с БД

connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
driver =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsDBDriver")
 sql = Sql.newInstance(connection, driver)
 
 String alphabet = (('A'..'N')+('P'..'Z')+('a'..'k')+('m'..'z')).join() 
 length = 40

oms = testRunner.testCase.getPropertyValue("oms")
patientId = testRunner.testCase.getPropertyValue("patientId")
bd = testRunner.testCase.getPropertyValue("bd")
guid = java.util.UUID.randomUUID()
cloudId = new Random().with {
      (1..length).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
        }
checkQuery="select id from f_user where patient_id ="+patientId
user=sql.firstRow(checkQuery)

if (!user){
	userQuery="""INSERT INTO f_user
	(id, patient_id, oms_number, birth_date)
	VALUES(nextval('f_user_sequence'), """+patientId+""", '"""+oms+"""', ' """+bd+"""') RETURNING id"""
	userId=sql.firstRow(userQuery).id
}
else{ 
	userId=user.id
}

deviceQuery="""INSERT INTO f_device
(device_guid, app_version, platform, device_cloud_id, cloud_token_delete)
VALUES('"""+guid+"""', '1.2.2', 'APPLE', '"""+cloudId+"""', NULL);
INSERT INTO f_user_device
(id, device_guid, user_id, authentication, deleted, deleted_date)
VALUES(nextval('f_user_device_sequence'), '"""+guid+"""', """+userId+""", true, false, NULL);
INSERT INTO f_device_settings
(device_guid, appointment, appointment_reminder, referral, pr_news)
VALUES('"""+guid+"""', true, true, true, true)"""
deviceResult=sql.execute(deviceQuery)

//patientId=patientId+1
//oms=oms+1
//testRunner.testCase.setPropertyValue("patientId", patientId.toString())
//testRunner.testCase.setPropertyValue("oms", oms.toString())
testRunner.testCase.setPropertyValue("deviceGuid", guid.toString())
testRunner.testCase.setPropertyValue("deviceCloudId", cloudId.toString())
</script></con:config></con:testStep><con:testStep type="restrequest" name="saveSettings" id="a6b0a11f-d53c-4eb5-899c-4a8469aa261f"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/settings/save" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="saveSettings" id="86fd6789-ad4a-4a4d-a491-4ac49a3c220b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "deviceGuid": "${#TestCase#deviceGuid}",
  "settings": {
    "appointment": false,
    "appointmentReminder": false,
    "referral": false,
    "prNews": false
  }
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/settings/save</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="getSettingsList" id="0f4555a1-cb7c-4f51-9ee2-13138b1a2dfd"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/settings/list" methodName="getSettingsList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getSettingsList" id="fd50c73e-374b-495d-b8ee-f917b8003ad1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request/><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/settings/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="deviceGuid" value="${#TestCase#deviceGuid}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответы" id="bbd6c209-9e76-4b8c-9918-b216ab5f82e7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
errors=[]
def response = context.expand('${saveSettings#Response}')
def httpResponseHeaders = testRunner.testCase.getTestStepByName("saveSettings").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("saveSettings HTTP status code: " + httpStatusCode)
log.info "saveSettings Ответ метода :" +response


if(  httpStatusCode !="204" || response != "" ) errors &lt;&lt; "ERROR: В ответе saveSettings возникло несоответствие фактического результата ожидаемому" 
else log.info "Ответ saveSettings соответствует ожидаемому"

def response1 = context.expand('${getSettingsList#Response}')
parsedResponse = new JsonSlurper().parseText(response1)
settings=parsedResponse.payload
log.info settings
def httpResponseHeaders1 = testRunner.testCase.getTestStepByName("getSettingsList").testRequest.response.responseHeaders
def httpStatus1 = httpResponseHeaders1["#status#"]
def httpStatusCode1 = (httpStatus1 =~ "[1-5]\\d\\d")[0]

log.info("getSettingsList HTTP status code: " + httpStatusCode1)
log.info "getSettingsList Ответ метода :" +response1

expectedResponse="""{"payload": {
   "appointment": false,
   "appointmentReminder": false,
   "referral": false,
   "prNews": false
}}"""

parsedExpectedResponse = new JsonSlurper().parseText(expectedResponse)
expectedSettings=parsedExpectedResponse.payload
expectedSettings.each{
	settings.each{ s ->
		if (it.getKey() == s.getKey()){
			if(it != s) errors &lt;&lt; "Для параметра "+it.getKey()+" значение  не соответствует ожидаемому. Ожидаемое: "+it+" , фактическое: "+s
		}
	}
}

if(errors){
	testRunner.fail("При проверке ответов getSettingsList и saveSettings обнаружены ошибки")
	errors.each{
		log.info it
	}
}
else log.info "При проверке ответов getSettingsList и saveSettings НЕ обнаружены ошибки"
</script></con:config></con:testStep><con:properties><con:property><con:name>patientId</con:name><con:value>1000022</con:value></con:property><con:property><con:name>oms</con:name><con:value>1000000000022</con:value></con:property><con:property><con:name>bd</con:name><con:value>1980-08-08</con:value></con:property><con:property><con:name>deviceGuid</con:name><con:value>456abc1d-2fe6-4ab9-86e3-d44bfe08022c</con:value></con:property><con:property><con:name>deviceCloudId</con:name><con:value>kmtPaXmdkQeZsYejLgwoBIigWBuPotejVGaJneGm</con:value></con:property></con:properties></con:testCase><con:testCase id="b840f8e0-5761-4c6b-bb00-bcd314593db1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vaccinations 2" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Записать порядковый номер уведомления" id="8d2813c8-8439-4cb5-838a-540756ec8888"><con:settings/><con:config><script>n = testRunner.testCase.getPropertyValue("n").toLong()
n=n+1
testRunner.testCase.setPropertyValue("n", n.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="post pr vaccinations" id="f49f7292-635c-41de-bea2-a67945d5d9bf"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/prPush/vaccinations" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="post pr vaccinations" id="d82f9261-e827-4e6b-b958-d1f8bb84bad2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://emias.info/api-notifications</con:endpoint><con:request>{
  "campaignId": "${#TestSuite#campaing}",
  "patientInfo": [
    {
      "patientId": ${#TestSuite#patientId},
      "policyNumber": "${#TestSuite#oms}",
      "brithDate": "2012-06-07",
      "pushTitle": "Сделайте прививку от гриппа. уведомление№${#TestCase#n}",
      "pushBody": "Вы можете сделать прививку от гриппа где угодно",
      "html": "html test"
    }
  ]
}</con:request><con:originalUri>http://notifications.emiasinfo-application.test.emias.mos.ru/api/v1/prPush/vaccinations</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверить наличие уведомлений в бд" id="6c4544e4-cceb-4002-b32a-0e0e48d93e03"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationsDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotificationsFullDbConnection}</con:connectionString><con:query>select count(n.id)  from f_notification n
join f_user fu on fu.id=n.user_id
where fu.patient_id=${#TestSuite#patientId}
and n.notification_type_id=4 
and n.title='Сделайте прививку от гриппа. уведомление№${#TestSuite#n}'
</con:query><con:assertion type="XPath Match" id="e93015b2-d0fd-459e-8ccf-3d7632b2ba15" name="XPath Match" disabled="true"><con:configuration><path>//*:COUNT</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="550f2964-857c-4863-91ee-12e56e8e8737"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${post pr vaccinations#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("post pr vaccinations").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("post pr vaccinations HTTP status code: " + httpStatusCode)
log.info "post pr vaccinations Ответ метода :" +response

if(  httpStatusCode !="200" &amp;&amp;  !response.contains("payload") ) testRunner.fail("ERROR: В ответе post pr vaccinations возникло несоответствие фактического результата ожидаемому")
else log.info "Ответ post pr vaccinations соответствует ожидаемому"

def count = context.expand('${Проверить наличие уведомлений в бд#ResponseAsXml#//*:COUNT}').toInteger()

if(  count &lt; 1) testRunner.fail("ERROR: в  БД не найдено ожидаемых записей")
else log.info "В БД есть нужная запись"

</script></con:config></con:testStep><con:properties><con:property><con:name>currentDateTime</con:name><con:value>2023-07-25T13:37:18</con:value></con:property><con:property><con:name>n</con:name><con:value>7</con:value></con:property></con:properties></con:testCase><con:testCase id="7cdadc60-20a2-4066-806c-c305f4970621" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="отправка уведомлений по созданию" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Cгенерировать данные для запроса" id="30f1c24d-39f7-4afc-a608-e8d3cc7269ec"><con:settings/><con:config><script>n = testRunner.testCase.testSuite.getPropertyValue("n").toLong()
n=n+1
testRunner.testCase.testSuite.setPropertyValue("n", n.toString())
guid = java.util.UUID.randomUUID()
testRunner.testCase.setPropertyValue("eventId", guid.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="send" id="b1ef5b40-fed6-474b-b04b-70a1dcbe4faf"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/message/send" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="send" id="234a06a7-612c-4ca1-a040-3e735a08bdfa" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "eventId": "${#TestCase#eventId}",
  "eventCode": "EIM",
  "dateTime": 1691664161,
  "to ": {
    "deviceGuid": "db7a56fd-dce7-41f6-9943-077362ec24f9"
  },
  "data": {
    "title": "Тест пушей Инфо${#TestSuite#n}",
    "body": "Запрос на создание  записи${#TestSuite#n}",
    "type": "appointment",
    "notificationId": ${#TestSuite#n},
    "payload": "{\"type\":\"CREATE\",\"id\":100000000${#TestSuite#n},\"appointmentList\":\"Active\",\"oms\":\"0000000000001073\"}"
  }
}</con:request><con:originalUri>https://emias.info/api-notifications//v1/message/send</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="accessToken" value="${#Project#accessToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>accessToken</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>eventId</con:name><con:value>57061194-720d-4300-bbe7-449ab2ad84ca</con:value></con:property></con:properties></con:testCase><con:testCase id="53a09c1b-7d10-4b52-a278-1d296ef6eb96" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="отправка уведомлений по ИЗМЕНЕНИЮ" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Cгенерировать данные для запроса" id="b1a0cf12-43ef-4d93-8e4d-92f204b7a67f"><con:settings/><con:config><script>n = testRunner.testCase.testSuite.getPropertyValue("n").toLong()
n=n+1
testRunner.testCase.testSuite.setPropertyValue("n", n.toString())
guid = java.util.UUID.randomUUID()
testRunner.testCase.setPropertyValue("eventId", guid.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="send" id="2064d8c4-1fed-4d29-b1f5-4c5286b8fd40"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/message/send" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="send" id="234a06a7-612c-4ca1-a040-3e735a08bdfa" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "eventId": "${#TestCase#eventId}",
  "eventCode": "EIM",
  "dateTime": 1691664161,
  "to ": {
    "deviceGuid": "db7a56fd-dce7-41f6-9943-077362ec24f9"
  },
  "data": {
    "title": "Тест пушей Инфо${#TestSuite#n}",
    "body": "Запрос на ИЗМЕНЕНИЕ  записи${#TestSuite#n}",
    "type": "appointment",
    "notificationId": ${#TestSuite#n},
    "payload": "{\"type\":\"CHANGE\",\"id\":100000000${#TestSuite#n},\"appointmentList\":\"Active\",\"oms\":\"0000000000001073\"}"
  }
}</con:request><con:originalUri>https://emias.info/api-notifications//v1/message/send</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="accessToken" value="${#Project#accessToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>accessToken</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>eventId</con:name><con:value>3a3efc1f-13ce-44c6-a340-21fd177d6b5f</con:value></con:property></con:properties></con:testCase><con:testCase id="642ddce9-aa6f-481c-9dcd-a2d9f3b4e725" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="отправка уведомлений по ОТМЕНЕ" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Cгенерировать данные для запроса" id="9379769a-7110-47be-8f66-91056c6f895b"><con:settings/><con:config><script>n = testRunner.testCase.testSuite.getPropertyValue("n").toLong()
n=n+1
testRunner.testCase.testSuite.setPropertyValue("n", n.toString())
guid = java.util.UUID.randomUUID()
testRunner.testCase.setPropertyValue("eventId", guid.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="send" id="e4001bb2-7755-4d98-98cc-caee5bfe2078"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/message/send" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="send" id="234a06a7-612c-4ca1-a040-3e735a08bdfa" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "eventId": "${#TestCase#eventId}",
  "eventCode": "EIM",
  "dateTime": 1691664161,
  "to ": {
    "deviceGuid": "db7a56fd-dce7-41f6-9943-077362ec24f9"
  },
  "data": {
    "title": "Тест пушей Инфо${#TestSuite#n}",
    "body": "Запрос на ОТМЕНЕ  записи${#TestSuite#n}",
    "type": "appointment",
    "notificationId": ${#TestSuite#n},
    "payload": "{\"type\":\"CANCEL\",\"id\":100000000${#TestSuite#n},\"appointmentList\":\"Archive\",\"oms\":\"0000000000001073\"}"
  }
}</con:request><con:originalUri>https://emias.info/api-notifications//v1/message/send</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="accessToken" value="${#Project#accessToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>accessToken</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>eventId</con:name><con:value>d4104b45-fbec-487b-ac70-f0665ef76843</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>patientId</con:name><con:value>18833793</con:value></con:property><con:property><con:name>oms</con:name><con:value>7793899793001224</con:value></con:property><con:property><con:name>deviceGuid</con:name><con:value>d23688e9-fe7c-4a0d-a1cf-2aa5f84e68e8</con:value></con:property><con:property><con:name>deviceCloudId</con:name><con:value>9595ada2-e314-4eae-bb79-0caee9736330</con:value></con:property><con:property><con:name>currentDateTime</con:name><con:value>2023-07-25T13:33:46</con:value></con:property><con:property><con:name>campaing</con:name><con:value>Компания для рассылки по  вакцинации</con:value></con:property><con:property><con:name>n</con:name><con:value>2</con:value></con:property><con:property><con:name>eventId</con:name><con:value>0fed47e9-643a-4184-991c-b0bc0e18be1d</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>10427562</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">391930073178</con:value></con:property></con:properties></con:testSuite><con:testSuite id="68f82a0b-c35b-40ea-bf28-523205800a52" name="BVT service Tokens"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="08bfd995-3001-418e-a4b3-571ff8a77d03" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверить параметры джобы refreshToken" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Найти джобу refreshToken" id="cd80ae74-75fc-4938-a303-7fde77c9e37d"><con:settings/><con:config><script>import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
jobCode=testRunner.testCase.testSuite.getPropertyValue("jobCode")
sql = Sql.newInstance(connection)

job=sql.firstRow("select * from job_cron_triggers where \"name\" ='"+jobCode+"'")
log.info "Данные о джобе в бд:"+job

if(job.cron != "0 0/50 * * * *"){
	log.info "cron не соответсвует ожидаемому . фактическое значение="+job.cron
	testRunner.fail("ddd")
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c2489acd-7b90-4cba-90b8-6210e18923dc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="token start" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="token start" id="e990a652-6058-4037-9dc2-23bde1cd5da8"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/tokens/start" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="token start" id="113b7178-5da8-4ee3-8200-67d7371d3bc5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{\r
   "token" : "${#Project#sudirToken}",\r
   "refreshToken" : "${#Project#refreshToken}",\r
   "guid" : "${#Project#guid}",\r
   "login" : "${#Project#login}",\r
   "password" : "${#Project#password}",\r
   "clientId" : "${#Project#clientId}",\r
   "clientSecret" : "${#Project#clientSecret}"\r
}</con:request><con:originalUri>http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/tokens/start</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="a20cd269-883d-42f6-adbf-f71b60d83776"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

// проверить ответ метода
def response = context.expand('${token start#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("token start").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("token start HTTP status code: " + httpStatusCode)
log.info "token start Ответ метода :" +response

if(  httpStatusCode !="204" &amp;&amp; response == null ){ 
	testRunner.fail()
	log.info("ERROR: В ответе token start возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ token start соответствует ожидаемому"

// проверить данные в бд по токену
def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue){
		testRunner.fail()
		log.info "ERROR: значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString()
	}
}

guid =testRunner.testCase.testSuite.project.getPropertyValue("guid")
//guid ="в"
token =testRunner.testCase.testSuite.project.getPropertyValue("sudirToken")
refreshToken =testRunner.testCase.testSuite.project.getPropertyValue("refreshToken")
login =testRunner.testCase.testSuite.project.getPropertyValue("login")
password =testRunner.testCase.testSuite.project.getPropertyValue("password")
clientId =testRunner.testCase.testSuite.project.getPropertyValue("clientId")
clientSecret =testRunner.testCase.testSuite.project.getPropertyValue("clientSecret")

tokens=sql.firstRow("select *  from f_tokens where guid ='"+guid+"'")
log.info "Метод token start. Проверка создания данных в f_tokens "
log.info tokens
//id,"token",refresh_token,success,guid,login,"password",client_secret,client_id,last_refresh_date
if(token!=null ){
//	log.info "ыыыы "
	checkParameter("token", token, tokens.token)
	checkParameter("refreshToken", refreshToken, tokens.refresh_token)
	checkParameter("success", true, tokens.success)
	checkParameter("login", login, tokens.login)
	checkParameter("password", password, tokens.password)
	checkParameter("client_secret", clientSecret, tokens.client_secret)
	checkParameter("client_id", clientId, tokens.client_id)
}
else{
	testRunner.fail()
	log.info "ERROR: не найдена запись в таблице f_tokens с guid = "+guid 
}
log.info "Метод token start. Завершена проверка создания данных в f_tokens "

//проверка включения джобы
jobCode =testRunner.testCase.testSuite.getPropertyValue("jobCode")
log.info "Метод token start. Проверка включения джобы "+jobCode
job=sql.firstRow("select ENABLED  from job_cron_triggers where name ='"+jobCode+"'")
if(  job!=null){ 
	checkParameter("job.enabled ", true, job.enabled)
	}
else{ 
	testRunner.fail()
	log.info("ERROR: в  БД не найдено ожидаемых записей")
}
log.info "Метод token start. Завершена проверка включения джобы "+jobCode</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="60e21661-d529-4336-8299-47ed9bd87728" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getStatus" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getStatus" id="50b35756-e955-4696-8fd5-eed09cd7b478"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/tokens/getStatus" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getStatus" id="588b9986-19a1-43ac-a846-127458ebca78" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
   "login" : "${#Project#login}",
   "password" : "${#Project#password}"
}</con:request><con:originalUri>http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/tokens/getStatus</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="f8c6973e-34b6-4af3-8d46-b36be962665b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getStatus#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getStatus").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]
parsedResponce=new JsonSlurper().parseText(response)
log.info parsedResponce.success
log.info("getStatus HTTP status code: " + httpStatusCode)
log.info "getStatus Ответ метода :" +response

if(  httpStatusCode !="200" ||  !parsedResponce.success ){ 
	testRunner.fail()
	log.info("ERROR: В ответе getStatus возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getStatus соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e5d11867-9294-43dd-aab6-3c478692b321" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getToken" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getToken" id="307b73c7-492d-47f7-9a8d-84f45202b0ab"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/tokens/getToken" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getToken" id="e6370bf8-ccc5-4f94-9bda-0d2230ec3e1a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
   "login" : "${#Project#login}",
   "password" : "${#Project#password}"
}</con:request><con:originalUri>http://http//notification.emiasinfo-services.test.emias.mos.ru/api/v1/tokens/getToken</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="e89cbc77-ca16-4d25-8ca3-5649aa05be2f"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def response = context.expand('${getToken#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getToken").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]
parsedResponce=new JsonSlurper().parseText(response)

log.info("getToken HTTP status code: " + httpStatusCode)
log.info "getToken Ответ метода :" +response

if(  httpStatusCode !="200" ||  !response.contains("token") ){ 
	testRunner.fail()
	log.info("ERROR: В ответе getToken возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ getToken соответствует ожидаемому"
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7972b0e1-3de5-4ba2-8401-a0befa2fae88" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="token stop" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="token stop" id="1d84b4e3-dd17-49bc-a3de-fd6fc15d3f37"><con:settings/><con:config service="http://notifications.emiasinfo-application.test.emias.mos.ru" resourcePath="/v1/tokens/stop" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="token stop" id="160f534d-6865-4829-b2b6-5e5541c69f99" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoNotificationsEndpoint}</con:endpoint><con:request>{
  "guid": "${#Project#guid}"
}</con:request><con:originalUri>http://notification.emiasinfo-services.test.emias.mos.ru/api/v1/tokens/stop</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверить ответ" id="4d777300-1c80-46d7-adae-f77bc8ff941f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.sql.Sql
connection =testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationsFullDbConnection")
sql = Sql.newInstance(connection)

// проверить ответ метода
def response = context.expand('${token stop#Response}')
def httpResponseHeaders = testRunner.testCase.getTestStepByName("token stop").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("token stop HTTP status code: " + httpStatusCode)
log.info "token stop Ответ метода :" +response

if(  httpStatusCode !="204" &amp;&amp; response == null ){ 
	testRunner.fail()
	log.info("ERROR: В ответе token stop возникло несоответствие фактического результата ожидаемому")
	}
else log.info "Ответ token stop соответствует ожидаемому"

def checkParameter(String paramName, def expValue, def currentValue){
	if(currentValue != expValue){
		testRunner.fail()
		log.info "ERROR: значение "+paramName+" не соответствует ожидаемому. ожидаемое ="+expValue.toString()+", фактическое ="+currentValue.toString()
	}
}

//проверка выключения джобы
jobCode =testRunner.testCase.testSuite.getPropertyValue("jobCode")
log.info "Метод token stop. Проверка включения джобы "+jobCode
job=sql.firstRow("select ENABLED  from job_cron_triggers where name ='"+jobCode+"'")
if(  job!=null){ 
	checkParameter("job.enabled ", false, job.enabled)
	}
else{ 
	testRunner.fail()
	log.info("ERROR: в  БД не найдено ожидаемых записей")
}
log.info "Метод token stop. Завершена проверка включения джобы "+jobCode</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>jobCode</con:name><con:value>refreshToken</con:value></con:property></con:properties></con:testSuite><con:testSuite id="5bfe6c03-5704-492a-ac8b-76914462d672" name="тест чатбота" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="629338a7-b042-4d2c-b33c-d2bdcb206db3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="request" id="2f50e4b2-c7ad-4fee-8348-e556a6fd7bce" name="getDialog"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>InterviewServiceBinding</con:interface><con:operation>getDialog</con:operation><con:request name="getDialog" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b36c4a89-888a-422d-8bf3-206840e9814c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-7b6117a3-af7e-4774-9b65-3dea3cf4dc02" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>7187</ns2:userRoleId>\r
         <ns2:userRights>\r
            <ns2:userRightId>37070001</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getDialogRequest xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <complaints>Температура</complaints>\r
         <source>EIM</source>\r
         <code>2glj6</code>\r
      </getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="db1b2933-c0d2-44bb-836d-0cd69d45998b" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="20b6eb07-88dd-43de-a743-c03bc0595ea1" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="getuuid" id="571dbc14-0463-4983-acc6-21799ac6defc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDialog</con:sourceStep><con:sourcePath>//*:dialogUuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="61d1ec3f-cbe9-4fce-9bd8-10be6ead30de" name="sendAnswer"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>InterviewServiceBinding</con:interface><con:operation>sendAnswer</con:operation><con:request name="sendAnswer" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5452d4af-058f-4003-b781-11b4597e74ef"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-ca6a2b3a-07a5-44a1-9694-a9595b4ca6b4" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>7187</ns2:userRoleId>\r
         <ns2:userRights>\r
            <ns2:userRightId>37070003</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <sendAnswerRequest xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <dialogUuid>${#TestCase#uuid}</dialogUuid>\r
         <answer>Пропустить</answer>\r
      </sendAnswerRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="aa9d0267-4e7e-46e3-b13a-3f00da9d0551" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="19ff8207-e202-4cc5-ad0e-6c68c45e000a" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendAnswerRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>uuid</con:name><con:value>e5e244304dd9476aa5f40a703b102435</con:value></con:property></con:properties></con:testCase><con:testCase id="73f2cb20-5bb4-4317-80db-36b2b6ffa92e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 2" searchProperties="true"><con:settings/><con:testStep type="request" id="c544720b-af90-402b-b64f-86fa48202afd" name="getDialog"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>InterviewServiceBinding</con:interface><con:operation>getDialog</con:operation><con:request name="getDialog" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b36c4a89-888a-422d-8bf3-206840e9814c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-8051c674-af5c-4d44-a3c8-cd0f42761347" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>7187</ns2:userRoleId>\r
         <ns2:userRights>\r
            <ns2:userRightId>37070001</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <getDialogRequest xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <complaints>Температура</complaints>\r
         <source>EIM</source>\r
         <code>d</code>\r
      </getDialogRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="db1b2933-c0d2-44bb-836d-0cd69d45998b" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="ae32602a-e855-4007-a239-58abe72a603e" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/getDialogRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="getuuid" id="c57b67db-dfd2-4c74-8813-46b03a5c8cdc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDialog</con:sourceStep><con:sourcePath>//*:dialogUuid</con:sourcePath><con:targetType>uuid</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="291028d5-54f7-4292-8945-9b657b79ca05" name="sendResult"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>InterviewServiceBinding</con:interface><con:operation>sendResult</con:operation><con:request name="sendResult" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f12ac677-087e-4f4d-8d66-cc40c0d50774"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/chatbot/interviewService/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-1ddb2b08-40fa-4b67-b70e-8d5e22e41192" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM/EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns2:userContext xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <ns2:systemName>EIM</ns2:systemName>\r
         <ns2:userName>EIM</ns2:userName>\r
         <ns2:userRoleId>7187</ns2:userRoleId>\r
         <ns2:userRights>\r
            <ns2:userRightId>37070004</ns2:userRightId>\r
         </ns2:userRights>\r
         <ns2:jobExecutionId>0</ns2:jobExecutionId>\r
      </ns2:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <sendResultRequest xmlns="https://simptom.emias.ru/api/v1/soap/wsdl/types" xmlns:ns2="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/system/v1/faults/">\r
         <dialogUuid>${#TestCase#uuid}</dialogUuid>\r
      </sendResultRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="df3a6150-8470-4b8f-a168-b4a732f19857" name="SOAP Response"/><con:assertion type="SOAP Fault Assertion" id="7a283333-8fe5-4b72-8c00-4ba60963d48c" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://srv-dtchatboatbackp1-app01.mosgorzdrav.local/api/v1/soap/wsdl/types/InterviewServicePortType/sendResultRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>uuid</con:name><con:value>e5e244304dd9476aa5f40a703b102435</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="07205149-6ba3-4593-a8fc-821370bf0207" name="тест емп" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="71ece888-cc18-4238-aeae-25f202ab76f5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Add" id="5ce7c469-d7e6-4748-8a30-dc71b3b3575b"><con:settings/><con:config service="http://10.2.173.132:14380" resourcePath="/api/v2.0/communication/mobile/cloud/token/add" methodName="Add 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add" id="1ccc716b-b86a-42cd-b90c-3aa7afcf39a3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.0.20.107:14380</con:endpoint><con:request>{
	"citizen_ident_type": "device_guid",
	"citizen_ident_value": "48d4c97d-d88e-444a-a4b2-c9555de654b8",
	"platform": "ios",
	"cloud__name": "FCM",
	"app_version": "7.0.0-EmiasTest-00f65395-develop",
	"device_guid": "48d4c97d-d88e-444a-a4b2-c9555de654b8",
	"device_cloud_id": "e7BR98u9Uk8Grp2dHZw2UD:APA91bFD3yd14qRlorB1mCw--KhwG0HSViAY4LxFVr-jfiT5MDJ7BxO08xrbt7zQKCUzQY7sJsA2EHXx78xD6s55lu2cSuBmH0j-PI1GwpFaSq9wcfVyJFhQRjAUY7udA6LQJSyOoqZE"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Ext-Emp-Token" value="${#Project#empToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>X-Ext-Emp-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="delete" id="0b57ad04-39da-4a12-9bf6-37268821dee3"><con:settings/><con:config service="http://10.2.173.132:14380" resourcePath="/api/v2.0/communication/mobile/cloud/token/delete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="delete" id="bc16f11b-7eb8-4cdb-a725-daafab07f426" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.2.173.132:14380</con:endpoint><con:request>{\r
   "device_cloud_id" : "e7BR98u9Uk8Grp2dHZw2UD:APA91bFD3yd14qRlorB1mCw--KhwG0HSViAY4LxFVr-jfiT5MDJ7BxO08xrbt7zQKCUzQY7sJsA2EHXx78xD6s55lu2cSuBmH0j-PI1GwpFaSq9wcfVyJFhQRjAUY7udA6LQJSyOoqZE"\r
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Ext-Emp-Token" value="${#Project#empToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>X-Ext-Emp-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="574567e7-8c0a-4f03-92e0-37908f9a9afb" name="Поиск ошибок при прохождении опроса" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="c41e1380-226a-4211-9426-d95452631ed0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Запуск нескольких прогонов" id="0b4d4039-1a4f-4676-89d0-7a2d3ee70342"><con:settings/><con:config><script>import groovy.json.JsonSlurper
log.info "Начинаем прохождение несколиких опросов в ЧатБоте"
complains=[ 
				"боль в горле",
				"Беременность",
				"Сломана нога",
				"болит голова",
				"температура",
				"понос",
				"рвота",
				"ветрянка",
				"менингит",
				"золотуха",
				"обезвоживание",
				"потливость",
				"плохой запах",
				"болит зуб",
				"грустно",
				"депрессия",
				"боль в спине",
				"продуло",
				"газы"
				]
log.info "Количество будущих опросов="+complains.size()
for(int i=0; i&lt;complains.size(); i++ ){
	testRunner.testCase.setPropertyValue("complaints", complains[i])
	def tCase = testRunner.testCase.testSuite.testCases["TestCase 1"]
	def tStep = tCase.testSteps["getDialog"]
	tStep.run(testRunner, context)
	getDialogResponse=context.expand('${getDialog#Response}')
	parsedResponse = new JsonSlurper().parseText(getDialogResponse)
	dialogUuid=parsedResponse.payload.data.dialogUuid.toString()
	answer=parsedResponse.payload.data.question.answerVariants.answer[0]
	testRunner.testCase.setPropertyValue("dialogUuid", dialogUuid)
	testRunner.testCase.setPropertyValue("answer", answer)
	def tStep2 = tCase.testSteps["sendAnswer"]
	finished=false
	hasError=false
	while(!finished &amp;&amp; !hasError){
		tStep2.run(testRunner, context)
		sendAnswerResponse=context.expand('${sendAnswer#Response}')
		if(sendAnswerResponse.contains("error")){
			hasError=true
			break
		}
		sendAnswerParsedResponse = new JsonSlurper().parseText(sendAnswerResponse)
		complaintsFinished=sendAnswerParsedResponse.payload.data.complaintsFinished
		finished = complaintsFinished == null ? false : complaintsFinished
		if( finished ){
			n=i+1
			log.info "Опрос номер "+(i+1)+" по жалобе \""+complains[i]+"\" завершен без ошибок"
			break
		}
		answer=sendAnswerParsedResponse.payload.data.question.answerVariants.answer[0]
		testRunner.testCase.setPropertyValue("answer", answer)
	}
	if(hasError){
		log.info "Найдена ошибка"
		break
	}
	
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="getDialog" id="63fee004-49e3-47dd-93f9-de11d20f3ca6" disabled="true"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/chatBot/getDialog" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDialog" id="ae69905f-04da-48e2-9e46-abab2f7466e4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
  "complaints": "${#TestCase#complaints}",
  "hash": "${#TestCase#hash}"
}</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/chatBot/getDialog</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="164f8aca-f909-4c56-a92d-ba86df9da6f3" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="sendAnswer" id="1112ef71-5b7c-45e0-86c5-cb0d54618676" disabled="true"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v2/chatBot/sendAnswer" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="sendAnswer" id="9c96ad2a-1c72-4457-8530-09f64c2771ff" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request>{
	"dialogUuid": "${#TestCase#dialogUuid}",
	"answer": ["${#TestCase#answer}"]
}
</con:request><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/chatBot/sendAnswer</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7c4dcdbf-6db9-4dec-a399-f5496b465267" name="Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="38a770e0-1815-41fc-871e-de254e10873d" name="Содержит dialogUuid"><con:configuration><token>dialogUuid</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="463e9f76-ff18-4ac3-b08d-71890f6fe093" name="Содержит question"><con:configuration><token>question</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4bb4d2ee-d2c5-4d7a-b6ec-1a873b6ca0a1" name="Содержит answerVariants"><con:configuration><token>answerVariants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="895134d6-eb22-4639-a4f6-e8e0ae484abf" name="Содержит answer"><con:configuration><token>answer</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="33051dbd-6183-4516-b26b-fdbbcdbfe7bb" name="Содержит text"><con:configuration><token>text</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="72a60674-7bf6-4773-b97c-96c554bb433d" name="Содержит type"><con:configuration><token>type</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="bad4f34a-9269-4f5c-b904-2164849ed68f" name="Не сродержит complaintsFinished" disabled="true"><con:configuration><token>complaintsFinished</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="bad4f34a-9269-4f5c-b904-2164849ed68f" name="Не сродержит emergency"><con:configuration><token>emergency</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="bad4f34a-9269-4f5c-b904-2164849ed68f" name="Не сродержит answerConditions"><con:configuration><token>answerConditions</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="bad4f34a-9269-4f5c-b904-2164849ed68f" name="Не сродержит maskFormat"><con:configuration><token>maskFormat</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>complaints</con:name><con:value>газы</con:value></con:property><con:property><con:name>dialogUuid</con:name><con:value>1d2293c8b32a4f369d9bbc6104131de6</con:value></con:property><con:property><con:name>hash</con:name><con:value>guyruri</con:value></con:property><con:property><con:name>answer</con:name><con:value>Пропустить</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="00879f2c-e8bc-4f40-ab94-93b0d5687592" name="поиск тестовых данных" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="9fe8bbb8-350c-4e6a-b955-c7e2ba0cb070" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="поиск пациента с пдн и вызовом метода медработкники" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Посмотреть привязанных пользователей" id="53cf237e-1262-4ea4-b86f-e1fbb180489e"><con:settings/><con:config service="https://lk-prp.mosmedzdrav.ru" resourcePath="/api/internal/3/emc-permissions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Посмотреть привязанных пользователей" id="41600ef4-dbb4-46ce-81f3-fbc8d75231db" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lkEndpoint}</con:endpoint><con:request/><con:originalUri>https://lkservice.test.emias.mos.ru/api/internal/3/emc-permissions</con:originalUri><con:assertion type="Simple Contains" id="5636a380-bc1a-4484-8e5c-63221a606362" name="Contains" disabled="true"><con:configuration><token>policyNum</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ssoId" value="${#Project#guid}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>ssoId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Проверка ответа" id="c888ee43-1934-48d0-b713-2f9a6e57008f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
 
def response = context.expand('${getShortProgram#Response}')

def httpResponseHeaders = testRunner.testCase.getTestStepByName("getShortProgram").testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

log.info("getShortProgram HTTP status code: " + httpStatusCode)
log.info "getShortProgram Ответ метода :" +response

if( !response.contains("payload") &amp;&amp;  !response.contains("PDN_ERROR") &amp;&amp; httpStatusCode != "204") { 
	testRunner.fail()
	log.info("ERROR: В ответе getShortProgram возникло несоответствие фактического результата ожидаемому")
	}
else log.info "getShortProgram Ответ соответствует ожидаемому"
</script></con:config></con:testStep><con:testStep type="restrequest" name="getShortProgram" id="8bc42bc5-88e6-4d63-9073-47ca57cae92f" disabled="true"><con:settings/><con:config service="http://emiasinfo-application.test.emias.mos.ru" resourcePath="/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="dfa3ba72-1ff9-4df7-b567-2de3240cdf63" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://srv-prpkubep1-emiasinfo-app.mosgorzdrav.local/api/v3/pdn/shortProgram</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#Project#pdnId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="528ac673-cea3-4e99-889b-60634dfb7144" name="Проверка get agregators" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="15055458-bfdb-4535-9bb5-e81c365baf1f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="request" id="6864336d-6a69-42cb-9e53-8c1d32619a9a" name="piPharmacyAuxiliary"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPharmacyAuxiliary</con:operation><con:request name="piPharmacyAuxiliary" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0cf85e6c-4112-4dc5-946c-77098c52d4e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">
   <soapenv:Header>
  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
      <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>
      <typ:piPharmacyAuxiliaryRequest>
         <typ:ident>EMIASINFO</typ:ident>
      </typ:piPharmacyAuxiliaryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="09052bd6-2209-4cd8-b50d-9eeb52316ebd" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPharmacyAuxiliary"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8c902c69-5e1d-47a2-aac8-9e56b1e3ba28" name="piPharmacyAuxiliaryNew"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPharmacyAuxiliaryNew</con:operation><con:request name="piPharmacyAuxiliaryNew" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d94dda02-83f3-4bb3-bf23-dbabeb1cbf8f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://srv-esb-vip-external/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">
   <soapenv:Header>
  <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:UsernameToken>
      <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>
      <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
    </wsse:UsernameToken>
  </wsse:Security>
</soapenv:Header>
   <soapenv:Body>
      <typ:piPharmacyAuxiliaryNewRequest>
         <typ:ident>EMIASINFO</typ:ident>
      </typ:piPharmacyAuxiliaryNewRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9fb9528b-9674-45a6-82a9-569c684a4bc8" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPharmacyAuxiliaryNew"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>emiasInfoEndpoint</con:name><con:value>http://application.emiasinfo-services.test.emias.mos.ru/api</con:value></con:property><con:property><con:name>lkEndpoint</con:name><con:value>https://lkservice.test.emias.mos.ru</con:value></con:property><con:property><con:name>loginEndpoint</con:name><con:value>https://login-tech.mos.ru</con:value></con:property><con:property><con:name>sudirToken</con:name><con:value>FTc12AkqArrCC8Bb7niN-JI7n3ZDpKpPUyzKmVuPC7U</con:value></con:property><con:property><con:name>X-Access-JWT</con:name><con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ1c2VyX2F1dGgiLCJleHAiOjE3MTIzMzA3OTksImF1ZCI6IlBBVElFTlQiLCJzdWIiOiI3NTgzNWNiNy05ZTI3LTRhY2ItYTk1ZC1hOWRiMzRlOTY0MWUiLCJzaWQiOiIxOWFiNTRlOS1hMWE1LTQyYmMtODQ0Yy0wOTM3MzVlOTRlZDEiLCJwaG9uZSI6Ijc5MTUwMDQ5NzY2Iiwic3NvX2lkIjoiSWUvN1lvZUFETmRGN3c1ZnVjOGx3THhZK3N5MDRScGZpdXFMUUdGNzFpTldsRTNEQWVmWkFxektVNzYveWdncVZyTCt3MmZSNWFSM2lUT2krYTJUaGxQNVJaV2dJM1M1NklVZnNCL2tGS29DYkVZYmIyVzFFc3VFa2k0NFVrdkFkY0ViMi8zVXJwbUttMXBWeml4Mzd5SEcrRGROZ1Y0dGF1bXVDbzh5ZEJ2VnR2SWh3MmRvQ0V6b0tSM0diVEJWZC9KRlJZSUZtaHpLdlp6WkU3ZWhLUzJYYnRQMzlSYnNuMW5Xa2t0a3NQWTY0UVhVSWM2a1lZTU8rRGRuRGlIcXBNNTgxa1BVOXVFbUJhMUdzUXlDeEhVQjViS3h5MUxoR3BEODRheDcxWE5SQ3pOQjNUa2tHWUFYN0cvbnVuR2Y0UHRZUCtCNzN6VFp5WlZveFFtUkJBPT0iLCJlbWFpbCI6IiIsImZpcnN0X25hbWUiOiJcdTA0MjVcdTA0MzBcdTA0M2RcdTA0NDNcdTA0M2MiLCJzZWNvbmRfbmFtZSI6Ilx1MDQxMC4iLCJtaWRkbGVfbmFtZSI6Ilx1MDQxN1x1MDQzOFx1MDQ0MFx1MDQzMFx1MDQzY1x1MDQ0M1x1MDQ0Mlx1MDQzNFx1MDQzOFx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzZFx1MDQzMCIsImJpcnRoX2RhdGUiOiIyMDAxLTA2LTA2IiwiYW1yIjpbXX0.FmCyc_0DjLrj4gza-L-02gC6d-PjvQ6EJ48RHu5FwwsRssrVaNZRDOaDZBL_UPIRPcStOyUJHnzb839ISBcRIbliQxkSk6raJTUa08veLhdXWGvXTLhJHXDaBtdp33YiC-lyvKNf5OJjHtTgQdvIJl4YZWgZm638KAjin4-3xrCyAvOTKh73l5GMGaZNCcCio8mDSnxL3wzo1fXXqs5MSYYhS7F3Z6P5F0BAsiygcJzC0JSIjqpZ22hu930d0dT8nx0SjyKPHLUMObmZIhd4fVeRdKPRbSc77gEh95oLrZOtNlrKB7arSSEZW8XTSswSz9N12IVOvgjr_3d4Ru_z7lRxVrg4ob8NZT9_540W8jGIcGQnvNWyxlDW8dZzBjHhyD9ulxkBp5DmKPemMVbZQ6jQZqz-SWF2f8X1Ecg_PGCRObPImYUNGAPGCsXfqwLvz1gUUruOR2wlT9N_TnUa3U7boyUXJigYkZoxX0rCGbx3mV75ZXGbmoLL4V4iuGb3rPtV648IQrH8b9Z3QeJZx0ZiyJG1CVirnMepa_2bEoFiZMYe-nfrn7C9GuOVr6-D70DRdMPTOmxmU7u7l1tfXt8N6FrdredYDIdN8G1tkS5K4Lh4wqWUhWz62BdgSId5p2gnbag8OC7T2VTT5BFzwhvgF_fooSNqQwNz4MBpz2A</con:value></con:property><con:property><con:name>refreshToken</con:name><con:value>ny9kxKx1Z07nExyvfLTOey28sgCGOZiDx2fie5eDqXHw-hM8szSq_W3vHxuaEyKFFCUMLZhYZIcGeea2muw6OA</con:value></con:property><con:property><con:name>refresh-X-Access-JWT</con:name><con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ1c2VyX2F1dGgiLCJyaWQiOiIzYTU4MmE0Mi1lYzNiLTQ4OGEtOTM1Yi1hZDE5ZGM3ZmE0NjUiLCJzaWQiOiIxOWFiNTRlOS1hMWE1LTQyYmMtODQ0Yy0wOTM3MzVlOTRlZDEiLCJleHAiOjE3MTI5MzE5OTksInN1YiI6Ijc1ODM1Y2I3LTllMjctNGFjYi1hOTVkLWE5ZGIzNGU5NjQxZSIsInNzb19pZCI6IkdldW94MFNLdnIyRjJYM0wyTDJIMGR1ZThOQi9XWTBseVl0V203NlNVYnMwZ0doNDJ5YWxMWkw2N0hnSWVndGhUYVBxaDFpSlFzbGVQVnZJWmRKL0h1RTk0cStEVmNKUHg5TDAyd0R3a3pPakJySGVWWkREeXZuUWY1VzVQOWtOYkc5Rzk3MlBlUllGU1hBNTNlV215b3Fka3MxNW9TdGx5R3JaNkFiSSsxejZQcTdlc2NGMjZ3RUxDbndIWjBDS01vVFZ2ZWYwVmtQbW14b0tNcGpJVjBPbW5HUHl5RVgwQTh0K0JmZ2orMFNvS1BUTktSS2E5S3ovaGo3YVdRRVJsb2ZIMjZmU25wcC9mQ0syZTFnRldSUnF2QW5KUyt2TVBZOXJadWJubHY1TDFBL3ZkOExUNFhRbDcvWi9OZTVnMGRFOWZBUVB4alg3NGdobWttVmI2QT09In0.rx8UDur3R3NjdVOjGLgXEZv37wQuC655CDsZ9r7kSUcWn_xA6c2q15oML56Gmt9lVvVz9IybIeN2iHupl7KsUUwgAm7sV92TKblKalsJyn3LzxLsRhLkufKS8Txgla1tB2decB58P1A_JPu2KsFhA8sOfxvU5cgAi4jCJ1n_Wz_je62cg8rtTgvtlZVs24E0sDyOti6m5e-pZmqz8i8H3lnURzplGWqVXUKx8huKfCLeMhTmx-aohA1ceMV6x5Pq1GuX8-5lDzg5qGZCjDwEms1ShR4zNhu84sm2OtLguhxvBc3P2yEXO2TuVusECafYEiO0apALsqmQ-J0U3fB7Puu7es6UFOUFXoliwcVmepKcCYbo88R_eplqRz04kWU0-B5WdZz0MKIRg0TA3cxE8h20mufVhq4qklUTVTUxwucFizQGITOmEJlT5XwZa_jpwKpVwm30y8izq-Msor4jgwkX7tK9zPkV3lvJ6TfSslET7B53GyK0nPP53dRBjanuApx33cGj5slwhfiWM0RAyUyO7Ckgoz-VU1rkRzbRUJFhVKHzocVwFWI81qZbGvHDq-mGroT1huaHKzz18BwHCYMU2GnN1TVjmGruBB7qPB7b12kH0bqJ-JT-dgGPyJJdA3ZRAGe3GlqhPT235UtH9clorV2oCMXc3YEUdl0yWrc</con:value></con:property><con:property><con:name>guid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">af3e4ac5-96dd-4167-afb3-244eb7187aba</con:value></con:property><con:property><con:name>base64</con:name><con:value>ZHlufmVtaWFzLmluZm9+YTdiMDg0YTEtMDFiZS00YzJkLTlmZTYtMTlkZGNkYzQ2ZWI1OktOVllEbWp0Q2tCRldhRw==</con:value></con:property><con:property><con:name>emiasInfoDbConnection</con:name><con:value>10.2.174.253:5432/emiasinfo_application</con:value></con:property><con:property><con:name>emiasInfoDbLogin</con:name><con:value>emiasinfo_application</con:value></con:property><con:property><con:name>emiasInfoDbPassword</con:name><con:value>emiasinfo_application</con:value></con:property><con:property><con:name>emiasInfoFullDbConnection</con:name><con:value>jdbc:postgresql://10.2.174.253:5432/emiasinfo_application?user=emiasinfo_application&amp;password=emiasinfo_application</con:value></con:property><con:property><con:name>emiasInfoDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>emiasInfoNotificationsEndpoint</con:name><con:value>http://notification.emiasinfo-services.test.emias.mos.ru/api</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbConnection</con:name><con:value>10.2.174.253:5432/emias_info_notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbLogin</con:name><con:value>emiasinfo_notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDbPassword</con:name><con:value>emiasinfo_notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsFullDbConnection</con:name><con:value>jdbc:postgresql://10.2.174.253:5432/emias_info_notification?user=emiasinfo_notification&amp;password=emiasinfo_notification</con:value></con:property><con:property><con:name>emiasInfoNotificationsDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>version</con:name><con:value>1.2.0</con:value></con:property><con:property><con:name>bootstrapServers</con:name><con:value>10.2.172.24:9092</con:value></con:property><con:property><con:name>accessToken</con:name><con:value>e34f670a-1886-4b31-a28a-dbec43a1f721</con:value></con:property><con:property><con:name>empToken</con:name><con:value>b688b45b42ebc10e62e8950216412ddc</con:value></con:property><con:property><con:name>emiasInfoEnvEndpoint</con:name><con:value>http://application.emiasinfo-services.test.emias.mos.ru</con:value></con:property><con:property><con:name>emiasInfoNotificationsEnvEndpoint</con:name><con:value>http://notification.emiasinfo-services.test.emias.mos.ru</con:value></con:property><con:property><con:name>inqPurpOms</con:name><con:value>7776360879001050</con:value></con:property><con:property><con:name>inqPurpBD</con:name><con:value>1936-03-20</con:value></con:property><con:property><con:name>calendarEhrId</con:name><con:value>5f0831f3-2f9d-4407-9de4-ca633fdc5f2d</con:value></con:property><con:property><con:name>calendarBD</con:name><con:value>1936-03-20</con:value></con:property><con:property><con:name>pdnId</con:name><con:value>10766700</con:value></con:property><con:property><con:name>archiveAppointmentOms</con:name><con:value>7776360879001050</con:value></con:property><con:property><con:name>archiveAppointmentBD</con:name><con:value>1936-03-20</con:value></con:property><con:property><con:name>medCardEhrId</con:name><con:value>5f0831f3-2f9d-4407-9de4-ca633fdc5f2d</con:value></con:property><con:property><con:name>bzhdOms</con:name><con:value>7776360879001050</con:value></con:property><con:property><con:name>bzhdBD</con:name><con:value>-1066186800</con:value></con:property><con:property><con:name>env</con:name><con:value>test</con:value></con:property><con:property><con:name>selfControlPatientId</con:name><con:value>18833793</con:value></con:property><con:property><con:name>solitNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>clientId</con:name><con:value>dyn~emias.info~8e034b4f-6f8a-4c49-9e85-198faa1eb3bd</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>ziRHs3j1y9Wchyf</con:value></con:property><con:property><con:name>login</con:name><con:value>test_000-099-782@pflbmail.hopto.org</con:value></con:property><con:property><con:name>password</con:name><con:value>4aC2kwV2</con:value></con:property><con:property><con:name>foodOms</con:name><con:value>7787589724000449</con:value></con:property><con:property><con:name>foodPrescriptionNumber</con:name><con:value>БП-681508778</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>