<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="dbc6057f-2f8e-4ba9-b30e-5c68bbeb1285" activeEnvironment="Default" name="ЕМИАС.ИНФО сервис &quot;ПДН&quot;" resourceRoot="" soapui-version="5.7.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="eee0a765-46fb-4815-a45b-6f65a6893589" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://emiasinfo1.emias.solit-clouds.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint></con:endpoints><con:resource name="shortProgram" path="/api/v3/pdn/shortProgram" id="5f7825db-88c6-420c-bc79-0b7b9f755cf3"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="483dd51a-f111-404e-a4a0-827c7da454a8" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:shor="http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram">shor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xmlns:shor="http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram">shor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="253cb8f0-7a39-447f-9dfc-e8ef977e355f" mediaType="application/json"><con:settings/><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="dispensaryObservationProgram" path="/api/v1/pdn/dispensaryObservationProgram" id="7d18b321-39db-4b72-8c5d-4278237689fa"><con:settings/><con:parameters><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>omsNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="0d74f90b-45ba-4d07-9377-b7d1e761bbb5" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 400 403</con:status><con:params/><con:element xmlns:dis="http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram">dis:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dis="http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram">dis:Response</con:element></con:representation><con:request name="Request 1" id="d0085543-07b9-48fe-9d03-36f4fd7c43fd" mediaType="application/json"><con:settings/><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>omsNumber</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="dispensaryObservationProgram" path="/api/v2/pdn/dispensaryObservationProgram" id="7d18b321-39db-4b72-8c5d-4278237689fa"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter><con:parameter><con:name>Mock-pdn</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" id="0d74f90b-45ba-4d07-9377-b7d1e761bbb5" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403 400 503 500 401 409</con:status><con:params/><con:element xmlns:dis="http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram">dis:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dis="http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram">dis:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="d0085543-07b9-48fe-9d03-36f4fd7c43fd" mediaType="application/json"><con:settings/><con:endpoint>http://emiasinfo1.emias.solit-clouds.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-pdn" value=""/>
  <con:entry key="EI-Token" value=""/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry><con:entry>Mock-pdn</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="9b73808b-646d-4e9f-afeb-a04c9bc6dd98" wsaVersion="NONE" name="planServiceBinding" type="wsdl" bindingName="{http://emias.mos.ru/dnpdn/planService/v2/}planServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="planService" targetNamespace="http://emias.mos.ru/dnpdn/planService/v2/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ns1="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://emias.mos.ru/dnpdn/planService/v2/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_RFui1_6Xf6LTygA6.WQIQioP8.dJttWfYnwQLyXm9"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_CBPiryLmf5KLuF3ojpVAaaFouiWJ1oD6ztg--"/>
      <xs:import namespace="http://emias.mos.ru/dnpdn/planService/v2/types/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Gb_Z5LBcCwWXezaRQe3vG7wI5eWS_m.zK_Csqn5kOn8ihZYcyn.IEq7hc8EOjo-"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getPlanShortInput">
    <wsdl:part element="ns1:GetPlanShortRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEventsByPatientsInput">
    <wsdl:part element="ns1:GetEventsByPatientsRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPlanExtensionInput">
    <wsdl:part element="ns1:GetPlanExtensionRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentEventStatusInput">
    <wsdl:part element="ns1:GetCurrentEventStatusRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEventsByPatientsOutput">
    <wsdl:part element="ns1:GetEventsByPatientsResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPlanShortOutput">
    <wsdl:part element="ns1:GetPlanShortResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentEventStatusOutput">
    <wsdl:part element="ns1:GetCurrentEventStatusResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPlanExtensionOutput">
    <wsdl:part element="ns1:GetPlanExtensionResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="planServicePortType">
    <wsdl:operation name="GetPlanExtension">
      <wsdl:input message="tns:getPlanExtensionInput"></wsdl:input>
      <wsdl:output message="tns:getPlanExtensionOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPlanShort">
      <wsdl:input message="tns:getPlanShortInput"></wsdl:input>
      <wsdl:output message="tns:getPlanShortOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetEventsByPatient">
      <wsdl:input message="tns:getEventsByPatientsInput"></wsdl:input>
      <wsdl:output message="tns:getEventsByPatientsOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetCurrentEventStatus">
      <wsdl:input message="tns:getCurrentEventStatusInput"></wsdl:input>
      <wsdl:output message="tns:getCurrentEventStatusOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="planServiceBinding" type="tns:planServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetPlanExtension">
      <soap12:operation soapAction="GetPlanExtension"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetPlanShort">
      <soap12:operation soapAction="GetPlanShort"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetEventsByPatient">
      <soap12:operation soapAction="GetEventsByPatient"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetCurrentEventStatus">
      <soap12:operation soapAction="GetCurrentEventStatus"/>
      <wsdl:input>
        <soap12:header message="tns:userContext" part="userContext" use="literal"></soap12:header>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap12:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="planService">
    <wsdl:port binding="tns:planServiceBinding" name="planServicePortSoap12">
      <soap12:address location="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_RFui1_6Xf6LTygA6.WQIQioP8.dJttWfYnwQLyXm9</con:url><con:content><![CDATA[<!--Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown.-->
<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор Роли пользователя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль пользователя"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>ИД Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_CBPiryLmf5KLuF3ojpVAaaFouiWJ1oD6ztg--</con:url><con:content><![CDATA[<!--Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown.-->
<!--edited with XMLSpy v2017 rel. 3 sp1 (x64) (http://www.altova.com) by Vladimir Makarov (Private)-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_RFui1_6Xf6LTygA6.WQIQioP8.dJttWfYnwQLyXm9"/>
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10 записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Gb_Z5LBcCwWXezaRQe3vG7wI5eWS_m.zK_Csqn5kOn8ihZYcyn.IEq7hc8EOjo-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:core="http://emias.mos.ru/dnpdn/core/v2/" xmlns:tns="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/dnpdn/core/v2/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Gb_Z5LBcD8VTuenVkfvrX7xCk4a7lNmOVw2knbX79MMPw--"/>
  <!--Метод получения расширенной информации о ПДН-->
  <xs:element name="GetPlanExtensionRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="planOfEventsId" type="xs:long"/>
        <xs:element minOccurs="0" name="patientId" type="xs:long"/>
        <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPlanExtensionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="core:PlanOfEventsExtension"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод получения краткой информации о ПДН-->
  <xs:element name="GetPlanShortRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="planOfEventsId" type="xs:long"/>
        <xs:element minOccurs="0" name="patientId" type="xs:long"/>
        <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetPlanShortResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="core:PlanOfEventsShort"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <!--Метод обеспечивает предоставление информации о мероприятиях пациента на период времени.-->
  <xs:element name="GetEventsByPatientsRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="patientId" type="xs:long"/>
        <xs:element name="startDate" type="xs:dateTime"/>
        <xs:element name="endDate" type="xs:dateTime"/>
        <xs:element name="pagingOptions" type="core:PagingOptions"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetEventsByPatientsResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:EventsByPatientResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="EventsByPatientResultPage">
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element minOccurs="0" name="eventsByPatient" type="core:EventsByPatient"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--Метод получения информации по созданным назначениям-->
  <xs:element name="GetCurrentEventStatusRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="patientId" type="xs:long"/>
        <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        <xs:element minOccurs="0" name="options" type="core:Options"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCurrentEventStatusResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="core:CurrentEvents"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Gb_Z5LBcD8VTuenVkfvrX7xCk4a7lNmOVw2knbX79MMPw--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEuHmUhDvozy7dZLAs2rTS0UCFnwFLedfIMkk4w--"/>
  <!--planManageService-->
  <xs:complexType name="Assigment">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="passedInExternalMO" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventPDN">
    <xs:sequence>
      <xs:element name="id" type="ID"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element name="assigmentPDN" type="Assigment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ListOfEvents">
    <xs:sequence>
      <xs:element name="events">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="event" type="EventPDN"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--planService-->
  <!--PlanOfEvents-->
  <xs:complexType name="PlanOfEvents">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="jobExecutionId" type="xs:long"/>
      <xs:element maxOccurs="unbounded" name="diagnosis" type="Diagnosis"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="documentId" type="xs:string"/>
      <xs:element minOccurs="0" name="parentDocumentId" type="xs:string"/>
      <xs:element name="moId" type="xs:long"/>
      <xs:element name="moName" type="xs:string"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="planOfEventsDiagnosis" type="Diagnosis"/>
    </xs:sequence>
  </xs:complexType>
  <!--PlanOfEventsShort-->
  <xs:complexType name="PlanOfEventsShort">
    <xs:complexContent>
      <xs:extension base="PlanOfEvents">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="eventsPeriod" type="EventsPeriod"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--PlanOfEventsExtension-->
  <xs:complexType name="PlanOfEventsExtension">
    <xs:complexContent>
      <xs:extension base="PlanOfEvents">
        <xs:sequence>
          <xs:element name="patientId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="eventsPeriod" type="EventsPeriodInExtendedPlan"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="PlanOfEventsForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="documentId" type="xs:string"/>
      <xs:element name="status" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="Events" type="EventsPeriodForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Diagnosis">
    <xs:sequence>
      <xs:element name="diagnosisCode" type="xs:string"/>
      <xs:element name="diagnosisTitle" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventsPeriodInExtendedPlan">
    <xs:sequence>
      <xs:element minOccurs="0" name="priority" type="xs:string"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" name="event" type="EventInExtendedPlan"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventInExtendedPlan">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="eventStatus" type="StatusEnum"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element minOccurs="0" name="assignment" type="AssignmentInExtendedPlan"/>
      <xs:element minOccurs="0" name="appointment" type="AppointmentInExtendedPlan"/>
      <xs:element minOccurs="0" name="drugsEvent" type="DrugsEventInExtendedPlan"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="diagnoses" type="Diagnosis"/>
      <xs:element minOccurs="0" name="referralCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="destinationType" type="xs:string"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationId" type="xs:long"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationName" type="xs:string"/>
      <xs:element minOccurs="0" name="passedBeforePDNCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="eventExecutionType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <!--AssignmentInExtendedPlan-->
  <xs:complexType name="AssignmentInExtendedPlan">
    <xs:sequence>
      <xs:element minOccurs="0" name="assignmentConsultation" type="AssignmentConsultationExtended"/>
      <xs:element minOccurs="0" name="assignmentInstrumental" type="AssignmentInstrumentalExtended"/>
      <xs:element minOccurs="0" name="assignmentLaboratoryExtended" type="AssignmentLaboratoryExtended"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentConsultationExtended">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="assignment_id" type="xs:string"/>
      <xs:element minOccurs="0" name="suppReferralId" type="xs:long"/>
      <xs:element name="diagnosisCode" type="xs:string"/>
      <xs:element name="diagnosisTitle" type="xs:string"/>
      <xs:element name="specializationCode" type="xs:string"/>
      <xs:element name="specializationTitle" type="xs:string"/>
      <xs:element name="reason" type="xs:string"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="documentsByAssignment" type="DocumentsByAssignment"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
      <xs:element minOccurs="0" name="specialityCode" type="xs:string"/>
      <xs:element minOccurs="0" name="assigmentToControlCheckUp" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DocumentsByAssignment">
    <xs:sequence>
      <xs:element name="documentId" type="xs:string"/>
      <xs:element name="documentTypeName" type="DocumentTypeNameEnum"/>
      <xs:element name="documentCreateDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="DocumentTypeNameEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ASSIGNMENT_INSTRUMENTAL"/>
      <xs:enumeration value="ASSIGNMENT_LABORATORY"/>
      <xs:enumeration value="ASSIGNMENT_CONSULTATION"/>
      <xs:enumeration value="PRESCRIPTION"/>
      <xs:enumeration value="PROCESSING_PROTOCOL_AI"/>
      <xs:enumeration value="DECODE_PROTOCOL_AI"/>
      <xs:enumeration value="RESULT_OF_LI"/>
      <xs:enumeration value="INSPECTION_PROTOCOL"/>
      <xs:enumeration value="CANCELED_ASSIGNMENT"/>
      <xs:enumeration value="RESULT_OF_CONSULTATION"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="AssignmentInstrumentalExtended">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="assignment_id" type="xs:long"/>
      <xs:element minOccurs="0" name="suppReferralId" type="xs:long"/>
      <xs:element name="diagnosisCode" type="xs:string"/>
      <xs:element name="diagnosisTitle" type="xs:string"/>
      <xs:element name="mainDiagnosticId" type="xs:long"/>
      <xs:element name="mainDiagnosticTitle" type="xs:string"/>
      <xs:element name="reason" type="xs:string"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="additionalDiagnostics" type="AdditionalDiagnostics"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="documentsByAssignment" type="DocumentsByAssignment"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
      <xs:element minOccurs="0" name="justification" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AdditionalDiagnostics">
    <xs:sequence>
      <xs:element name="additionalDiagnosticId" type="xs:long"/>
      <xs:element name="additionalDiagnosticTitle" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentLaboratoryExtended">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="assignment_id" type="xs:long"/>
      <xs:element name="diagnosisCode" type="xs:string"/>
      <xs:element name="diagnosisTitle" type="xs:string"/>
      <xs:element name="laboratoryCode" type="xs:string"/>
      <xs:element name="laboratoryTitle" type="xs:string"/>
      <xs:element name="biomaterialCode" type="xs:string"/>
      <xs:element name="biomaterialTitle" type="xs:string"/>
      <xs:element name="locusCode" type="xs:string"/>
      <xs:element name="locusTitle" type="xs:string"/>
      <xs:element minOccurs="0" name="samplingTypeId" type="xs:long"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
      <xs:element minOccurs="0" name="samplingTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="anthropometricData" type="AnthropometricData"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="documentsByAssignment" type="DocumentsByAssignment"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="result" type="TestResult"/>
      <xs:element minOccurs="0" name="moIdTakingBiomaterial" type="xs:long"/>
      <xs:element minOccurs="0" name="moNameTakingBiomaterial" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AnthropometricData">
    <xs:sequence>
      <xs:element name="anthropometricDataId" type="xs:string"/>
      <xs:element name="anthropometricDataName" type="xs:string"/>
      <xs:element name="anthropometricDataValue" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TestResult">
    <xs:sequence>
      <xs:element minOccurs="0" name="testName" type="xs:string"/>
      <xs:element minOccurs="0" name="testStandartValue" type="xs:string"/>
      <xs:element minOccurs="0" name="testValue" type="xs:string"/>
      <xs:element minOccurs="0" name="testUnit" type="xs:string"/>
      <xs:element minOccurs="0" name="testDeviation" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <!--AppointmentInExtendedPlan-->
  <xs:complexType name="AppointmentInExtendedPlan">
    <xs:complexContent>
      <xs:extension base="Appointment">
        <xs:sequence>
          <xs:element name="type" type="xs:string"/>
          <xs:element name="appointmentDate" type="xs:dateTime"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!--DrugsEvent-->
  <xs:complexType name="DrugsEventInExtendedPlan">
    <xs:complexContent>
      <xs:extension base="DrugsEvent">
        <xs:sequence>
          <xs:element minOccurs="0" name="drugMnId" type="xs:string"/>
          <xs:element minOccurs="0" name="drugTnId" type="xs:string"/>
          <xs:element name="diagnosisCode" type="xs:string"/>
          <xs:element name="diagnosisTitle" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionId" type="xs:long"/>
          <xs:element minOccurs="0" name="documentId" type="xs:string"/>
          <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EventsPeriod">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" name="event" type="Event"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventsPeriodForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element maxOccurs="unbounded" name="event" type="EventForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Event">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="eventStatus" type="StatusEnum"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element minOccurs="0" name="assignment" type="Assignment"/>
      <xs:element minOccurs="0" name="appointment" type="Appointment"/>
      <xs:element minOccurs="0" name="drugsEvent" type="DrugsEvent"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="diagnoses" type="Diagnosis"/>
      <xs:element minOccurs="0" name="referralCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="destinationType" type="xs:string"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationId" type="xs:long"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationName" type="xs:string"/>
      <xs:element minOccurs="0" name="passedBeforePDNCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="eventExecutionType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="eventStatus" type="StatusEnum"/>
      <xs:element name="archived" type="xs:boolean"/>
      <xs:element minOccurs="0" name="assignment" type="AssignmentForCurrentEventStatus"/>
      <xs:element minOccurs="0" name="drugsEvent" type="DrugsEventForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <!--Assignments-->
  <xs:complexType name="Assignment">
    <xs:sequence>
      <xs:element minOccurs="0" name="assignmentConsultation" type="AssignmentConsultation"/>
      <xs:element minOccurs="0" name="assignmentInstrumental" type="AssignmentInstrumental"/>
      <xs:element minOccurs="0" name="assignmentLaboratory" type="AssignmentLaboratory"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentForCurrentEventStatus">
    <xs:sequence>
      <xs:element minOccurs="0" name="assignmentConsultation" type="AssignmentConsultationForCurrentEventStatus"/>
      <xs:element minOccurs="0" name="assignmentInstrumental" type="AssignmentBaseForCurrentEventStatus"/>
      <xs:element minOccurs="0" name="assignmentLaboratory" type="AssignmentBaseForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentConsultation">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="specializationTitle" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
      <xs:element minOccurs="0" name="assigmentToControlCheckUp" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentInstrumental">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="mainDiagnsoticTitle" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentLaboratory">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="laboratoryTitle" type="xs:string"/>
      <xs:element name="status" type="StatusEnum"/>
      <xs:element minOccurs="0" name="examinationPassedInExternalMO" type="xs:boolean"/>
      <xs:element minOccurs="0" name="careEventLinkedpassedInExternalMO" type="ID"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentBaseForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="assignmentId" type="xs:string"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element name="status" type="StatusEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentConsultationForCurrentEventStatus">
    <xs:complexContent>
      <xs:extension base="AssignmentBaseForCurrentEventStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="suppReferralId" type="xs:long"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Appointment">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="assignmentId" type="xs:string"/>
      <xs:element name="eventType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DrugsEvent">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="status" type="StatusEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DrugsEventForCurrentEventStatus">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="prescriptionId" type="xs:long"/>
      <xs:element minOccurs="0" name="documentId" type="xs:string"/>
      <xs:element minOccurs="0" name="documentCreateDate" type="xs:dateTime"/>
      <xs:element name="status" type="StatusEnum"/>
    </xs:sequence>
  </xs:complexType>
  <!--EventsByPatient-->
  <xs:complexType name="EventsByPatient">
    <xs:sequence>
      <xs:element name="patientId" type="xs:long"/>
      <xs:element maxOccurs="unbounded" name="eventsPeriod" type="EventsByPatientPeriod"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventsByPatientPeriod">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element minOccurs="0" name="priority" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="event" type="EventByPatient"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EventByPatient">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="planOfEventId" type="xs:long"/>
      <xs:element name="eventStatus" type="StatusEnum"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element minOccurs="0" name="assignment" type="AssignmentInExtendedPlan"/>
      <xs:element minOccurs="0" name="drugsEvent" type="DrugsEventInExtendedPlan"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="diagnoses" type="Diagnosis"/>
      <xs:element minOccurs="0" name="referralCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="destinationType" type="xs:string"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationId" type="xs:long"/>
      <xs:element minOccurs="0" name="destinationMedicalOrganizationName" type="xs:string"/>
      <xs:element minOccurs="0" name="passedBeforePDNCreated" type="xs:boolean"/>
      <xs:element minOccurs="0" name="eventExecutionType" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="StatusEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PLANNED"/>
      <xs:enumeration value="CREATED"/>
      <xs:enumeration value="COMPLETED"/>
      <xs:enumeration value="UNFINISHED"/>
      <xs:enumeration value="CANCELLED"/>
      <xs:enumeration value="EXPIRED"/>
      <xs:enumeration value="PRESCRIPTED"/>
    </xs:restriction>
  </xs:simpleType>
  <!--CurrentEventStatus-->
  <xs:complexType name="CurrentEvents">
    <xs:sequence>
      <xs:element name="patientId" type="xs:long"/>
      <xs:element name="eventsSum" type="xs:string"/>
      <xs:element name="eventsCreated" type="xs:string"/>
      <xs:element name="PlanOfEvents" type="PlanOfEventsForCurrentEventStatus"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEuHmUhDvozy7dZLAs2rTS0UCFnwFLedfIMkk4w--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_cFunWBerMmxg.4m3BPrNyW724"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
                Композиции Think!EHR
                ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
                Документа СИМИ
                ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания
                компонентов сущностей,
                владельцеми которых является
                текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
                    сущности/записи
                    на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания сущностей,
                владельцем которых является
                текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания
                компонентов сущностей,
                владельцами которых являются
                другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания сущностей,
                владельцами которых являются
                другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания типов,
                реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания типов,
                реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
                используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
                        (используются в соответствии с
                        переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
                непосредственно принадлежащей
                текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
                сущности ЕМИАС,
                внешней по отношнению
                к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
                ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELkr28OZcnVx.w5rcvVhVanFLWwJwARx0kRxnRT.1rJxvodJtg3NYLQROpcIEkEiqn1uu0dwR4Cy_OJPCNz0JEvHwUwGkuCPjPM_cFunWBerMmxg.4m3BPrNyW724</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint></con:endpoints><con:operation id="ce1fbe76-f9cb-4c7d-9e58-57cef53d7769" isOneWay="false" action="GetCurrentEventStatus" name="GetCurrentEventStatus" bindingOperationName="GetCurrentEventStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6c2b17d0-f045-468c-b062-92a7ad2ab029" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetCurrentEventStatusRequest>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:documentId>?</typ:documentId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetCurrentEventStatusRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetCurrentEventStatusRequest"/></con:call></con:operation><con:operation id="2a36beb1-a2e0-473b-8ebf-ed8215391825" isOneWay="false" action="GetEventsByPatient" name="GetEventsByPatient" bindingOperationName="GetEventsByPatient" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6b5eff41-2c25-4247-a9ed-fef2464fa522" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetEventsByPatientsRequest>\r
         <typ:patientId>?</typ:patientId>\r
         <typ:startDate>?</typ:startDate>\r
         <typ:endDate>?</typ:endDate>\r
         <typ:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </typ:pagingOptions>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetEventsByPatientsRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetEventsByPatientRequest"/></con:call></con:operation><con:operation id="3813dc74-6935-4f01-a2df-9545f49df969" isOneWay="false" action="GetPlanExtension" name="GetPlanExtension" bindingOperationName="GetPlanExtension" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d1a002af-8de3-4a95-890b-42a5a550d982" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetPlanExtensionRequest>\r
         <!--Optional:-->\r
         <typ:planOfEventsId>?</typ:planOfEventsId>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:documentId>?</typ:documentId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/></con:call></con:operation><con:operation id="8000edae-85fe-4660-9b5c-e85b82269fc4" isOneWay="false" action="GetPlanShort" name="GetPlanShort" bindingOperationName="GetPlanShort" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a1e720f3-6955-4b8b-8fe4-eeeed2ae9b96" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:v2="http://emias.mos.ru/dnpdn/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:GetPlanShortRequest>\r
         <!--Optional:-->\r
         <typ:planOfEventsId>?</typ:planOfEventsId>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:documentId>?</typ:documentId>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </typ:options>\r
      </typ:GetPlanShortRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanShortRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="86029ee1-63da-4b3a-afc3-ae24092f92da" wsaVersion="NONE" name="PrescriptionInfoServiceV4SoapBinding" type="wsdl" bindingName="{http://emias2.gov.ru/business/llo/v4}PrescriptionInfoServiceV4SoapBinding" soapVersion="1_1" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="PrescriptionInfoServiceV4" targetNamespace="http://emias2.gov.ru/business/llo/v4" xmlns:ns1="http://emias2.gov.ru/business/llo/v4/types" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://emias2.gov.ru/business/llo/v4" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias2.gov.ru/business/llo/v4/types" version="1.0" xmlns:tns="http://emias2.gov.ru/business/llo/v4/types" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="fpiChangeMilkShopRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="milkShopId" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiChangeMilkShopResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="extendedResponse">
        <xs:complexContent>
          <xs:extension base="tns:detailedResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="resultUserInfo" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="detailedResponse">
        <xs:complexContent>
          <xs:extension base="tns:generalResponse">
            <xs:sequence>
              <xs:element minOccurs="0" name="resultDetails" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="generalResponse">
        <xs:sequence>
          <xs:element name="resultCode" type="xs:int"/>
          <xs:element minOccurs="0" name="resultDescription" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCompleteOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCompleteOrderResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugAnnotationRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getFullText" type="xs:boolean"/>
          <xs:element minOccurs="0" name="getINNonly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="getStructureLevel" type="xs:int"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugAnnotationResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="annotation" nillable="true" type="tns:annotationDrugs"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="annotationDrugs">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="chapter" nillable="true" type="tns:chapter"/>
          <xs:element minOccurs="0" name="fullText" type="xs:string"/>
          <xs:element minOccurs="0" name="isActual" type="xs:boolean"/>
          <xs:element minOccurs="0" name="latTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="nameType" type="tns:annotationFeature"/>
          <xs:element minOccurs="0" name="rusTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="chapter">
        <xs:sequence>
          <xs:element minOccurs="0" name="bodyStyle" type="xs:string"/>
          <xs:element minOccurs="0" name="chapterText" type="xs:string"/>
          <xs:element minOccurs="0" name="fullTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="headerLevel" type="xs:int"/>
          <xs:element minOccurs="0" name="idx" type="xs:int"/>
          <xs:element minOccurs="0" name="shortTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiCheckPatientRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiCheckPatientResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="hasFoodPrescriptions" type="xs:boolean"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCheckOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCheckOrderResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="drug" nillable="true" type="tns:orderDrugInfo"/>
          <xs:element minOccurs="0" name="externalID" type="xs:string"/>
          <xs:element minOccurs="0" name="orderID" type="xs:long"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orderDrugInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:long"/>
          <xs:element minOccurs="0" name="drugID" type="xs:string"/>
          <xs:element minOccurs="0" name="numero" type="xs:int"/>
          <xs:element name="qtySec" type="xs:int"/>
          <xs:element minOccurs="0" name="storageCondition" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetDrugOrdersRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetDrugOrdersResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="order" type="tns:orderDrugOrder"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orderDrugOrder">
        <xs:sequence>
          <xs:element name="agregatorID" type="xs:long"/>
          <xs:element name="agregatorName" type="xs:string"/>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="createDate" type="xs:dateTime"/>
          <xs:element name="delivering" type="xs:boolean"/>
          <xs:element name="externalID" type="xs:string"/>
          <xs:element minOccurs="0" name="link" type="xs:string"/>
          <xs:element name="orderID" type="xs:long"/>
          <xs:element minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element maxOccurs="unbounded" name="prescription" type="tns:prescriptionDrugOrder"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element name="statusCode" type="xs:string"/>
          <xs:element minOccurs="0" name="statusDescription" type="xs:string"/>
          <xs:element minOccurs="0" name="statusDetail" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionDrugOrder">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="drug" type="tns:drugOrder"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="drugOrder">
        <xs:sequence>
          <xs:element minOccurs="0" name="amount" type="xs:long"/>
          <xs:element minOccurs="0" name="drugID" type="xs:string"/>
          <xs:element name="qty" type="xs:int"/>
          <xs:element minOccurs="0" name="storageCondition" type="xs:string"/>
          <xs:element name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piRatePharmacyRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="mark" type="xs:string"/>
          <xs:element name="markedObject" type="tns:markedObject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="markedObject">
        <xs:sequence>
          <xs:element minOccurs="0" name="orderID" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piRatePharmacyResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiSetScheduleRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="servicingDay" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiSetScheduleResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetScheduleRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetScheduleResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionPeriod" type="xs:string"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="schedule" nillable="true" type="tns:fpiScheduleItem"/>
          <xs:element minOccurs="0" name="serviceMode" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="milkShop">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiScheduleItem">
        <xs:sequence>
          <xs:element name="day" type="xs:int"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element name="scheduled" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="timeSlot" nillable="true" type="tns:timeSlotItem"/>
          <xs:element name="workLoad" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="timeSlotItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="service" nillable="true" type="xs:string"/>
          <xs:element name="slotEnd" type="xs:string"/>
          <xs:element name="slotStart" type="xs:string"/>
          <xs:element name="slotType" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDetailsRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getQR" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="signature" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Options">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" nillable="true" type="tns:KeyValuePair"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="KeyValuePair">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="key" type="xs:string" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="piDetailsResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="benefit" type="tns:benefitInfo"/>
          <xs:element minOccurs="0" name="controlType" type="xs:string"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="issuedBy" type="tns:registrationData"/>
          <xs:element minOccurs="0" name="medicine" type="tns:medicineInfo"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" type="tns:pharmacyInfo"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionState" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionTerm" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionType" type="tns:prescriptionType"/>
          <xs:element minOccurs="0" name="QRstring" type="xs:string"/>
          <xs:element minOccurs="0" name="recipeService" type="tns:recipeServiceType"/>
          <xs:element minOccurs="0" name="registrationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="benefitInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="budget" type="tns:benefitBudget"/>
          <xs:element minOccurs="0" name="code" type="xs:string"/>
          <xs:element minOccurs="0" name="discount" type="tns:discountValue"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registrationData">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctorName" type="xs:string"/>
          <xs:element minOccurs="0" name="doctorSpeciality" type="xs:string"/>
          <xs:element minOccurs="0" name="organizationCode" type="xs:string"/>
          <xs:element minOccurs="0" name="organizationStamp" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="medicineInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="dosage" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="usage" type="xs:string"/>
          <xs:element minOccurs="0" name="usageDetails" type="tns:signaDetails"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="signaDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="couponDose" type="xs:double"/>
          <xs:element minOccurs="0" name="couponLength" type="xs:int"/>
          <xs:element minOccurs="0" name="couponMethod" type="xs:string"/>
          <xs:element minOccurs="0" name="couponPer_day" type="xs:int"/>
          <xs:element minOccurs="0" name="couponUnit" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="schedule" nillable="true" type="tns:scheduleItem"/>
          <xs:element minOccurs="0" name="scheduleBase" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="sheduleLenght" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="scheduleItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="dayDirections" type="xs:string"/>
          <xs:element minOccurs="0" name="dayZ" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="remainder" nillable="true" type="xs:dateTime"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyIdent" type="xs:string"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="saleInfo" type="tns:saleInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="saleInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element name="saleDate" type="xs:date"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="recipeServiceType">
        <xs:sequence>
          <xs:element name="periodsQty" type="xs:int"/>
          <xs:element name="periodDrugAmount" type="xs:int"/>
          <xs:element minOccurs="0" name="periodicity" type="xs:int"/>
          <xs:element minOccurs="0" name="periodicityUnit" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="servicePeriod" type="tns:ServicePeriod"/>
          <xs:element minOccurs="0" name="booking" type="tns:pharmacyShort"/>
          <xs:element minOccurs="0" name="serviceMessage" type="tns:infoMessageType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServicePeriod">
        <xs:sequence>
          <xs:element name="periodNumber" type="xs:int"/>
          <xs:element name="periodTerm" type="tns:DatePeriod"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="periodMode" nillable="true" type="tns:KeyValuePair"/>
          <xs:element minOccurs="0" name="isAllowed" type="xs:boolean"/>
          <xs:element minOccurs="0" name="isCompleted" type="xs:boolean"/>
          <xs:element name="drugAmount" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="serviceCase" nillable="true" type="tns:ServiceCase"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DatePeriod">
        <xs:sequence>
          <xs:element minOccurs="0" name="start" type="xs:date"/>
          <xs:element minOccurs="0" name="end" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceCase">
        <xs:sequence>
          <xs:element name="saleDate" type="xs:date"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="saleMode" nillable="true" type="tns:KeyValuePair"/>
          <xs:element minOccurs="0" name="pharmacy" type="tns:pharmacyShort"/>
          <xs:element maxOccurs="unbounded" name="drugSold" type="tns:DrugSold"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyShort">
        <xs:sequence>
          <xs:element name="title" type="xs:string"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="phone" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DrugSold">
        <xs:sequence>
          <xs:element minOccurs="0" name="fullTradeName" type="xs:string"/>
          <xs:element minOccurs="0" name="fullTradeNameID" type="xs:int"/>
          <xs:element minOccurs="0" name="packQty" type="xs:decimal"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="infoMessageType">
        <xs:sequence>
          <xs:element minOccurs="0" name="colorMark" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="details" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetMarkPharmacyRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="markedObject" type="tns:markedObject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetMarkPharmacyResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="mark" type="xs:string"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetMilkShopListRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="searchString" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiGetMilkShopListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="milkShop" nillable="true" type="tns:fullMilkShop"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fullMilkShop">
        <xs:complexContent>
          <xs:extension base="tns:milkShop">
            <xs:sequence>
              <xs:element minOccurs="0" name="area" type="tns:area"/>
              <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
              <xs:element minOccurs="0" name="loadLevel" type="xs:string"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:metro"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="area">
        <xs:sequence>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="metro">
        <xs:sequence>
          <xs:element minOccurs="0" name="lineID" type="xs:long"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCancelOrderRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="QRCode" type="xs:string"/>
          <xs:element minOccurs="0" name="userIdent" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piCancelOrderResponseType">
        <xs:sequence>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPatientPrescriptionsRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPatientPrescriptionsResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="prescription" nillable="true" type="tns:prescriptionItem"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="expirationDate" type="xs:date"/>
          <xs:element name="medicine" type="tns:prescriptionMedicine"/>
          <xs:element name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="prescriptionState" type="xs:string"/>
          <xs:element minOccurs="0" name="registrationDate" type="xs:date"/>
          <xs:element name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionMedicine">
        <xs:sequence>
          <xs:element minOccurs="0" name="dosage" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="qty" type="xs:string"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="usage" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piPharmacyAuxiliaryResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="agregator" nillable="true" type="tns:agregator"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agregator">
        <xs:sequence>
          <xs:element name="bookingLink" type="xs:string"/>
          <xs:element minOccurs="0" name="bookingOfferUrl" type="xs:string"/>
          <xs:element minOccurs="0" name="logo" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiListRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="mode" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="patientID" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="foodPrescription" nillable="true" type="tns:foodPrescriptionItem"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="foodPrescriptionItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="issueDate" type="xs:date"/>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="prescriptionPeriod" type="xs:string"/>
          <xs:element name="prescriptionTitle" type="xs:string"/>
          <xs:element name="state" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyGeoRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:pharmacyGeoFilters"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="options" nillable="true" type="tns:Options"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyGeoFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchRadius">
        <xs:sequence>
          <xs:element name="distance" type="xs:int"/>
          <xs:element name="geoTag" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyGeoResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" nillable="true" type="tns:pharmacyGeo"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyGeo">
        <xs:sequence>
          <xs:element name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="isCommercial" type="xs:boolean"/>
          <xs:element name="geoTag" type="xs:string"/>
          <xs:element name="ID" type="xs:long"/>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:nearestMetro"/>
          <xs:element name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="nearestMetro">
        <xs:sequence>
          <xs:element minOccurs="0" name="metroTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyListRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:getPharmacyFilter"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="pagingOptions" type="tns:pagingOptions"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPharmacyFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyID" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyIdent" nillable="true" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacyType" nillable="true" type="xs:long"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="searchString" type="xs:string"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pagingOptions">
        <xs:sequence>
          <xs:element name="pageNumber" type="xs:int"/>
          <xs:element name="pageSize" type="xs:int"/>
          <xs:element minOccurs="0" name="sortingOptions" type="tns:sortingOptions"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sortingOptions">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sortOrder" nillable="true" type="tns:sortOrder"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sortOrder">
        <xs:sequence>
          <xs:element name="attributeName" type="xs:string"/>
          <xs:element name="descending" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piGetPharmacyListResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="pagingResults" type="tns:pagingResults"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" nillable="true" type="tns:pharmacyERItem"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pagingResults">
        <xs:sequence>
          <xs:element name="morePagesAvailable" type="xs:boolean"/>
          <xs:element name="pageNumber" type="xs:int"/>
          <xs:element name="pageSize" type="xs:int"/>
          <xs:element name="pageTotal" type="xs:int"/>
          <xs:element name="totalItemsCount" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyERItem">
        <xs:sequence>
          <xs:element name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="area" type="tns:area"/>
          <xs:element name="benefitPrescription" type="xs:boolean"/>
          <xs:element name="booking" type="xs:boolean"/>
          <xs:element name="commercialPrescription" type="xs:boolean"/>
          <xs:element minOccurs="0" name="contacts" type="tns:pharmacyContact"/>
          <xs:element minOccurs="0" name="FIAS" type="xs:string"/>
          <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
          <xs:element name="id" type="xs:long"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element name="is24Hours" type="xs:boolean"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" nillable="true" type="tns:nearestMetro"/>
          <xs:element minOccurs="0" name="pharmacyType" type="tns:pharmacyType"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
          <xs:element minOccurs="0" name="schedule" type="xs:string"/>
          <xs:element name="shortName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyContact">
        <xs:sequence>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyType">
        <xs:sequence>
          <xs:element minOccurs="0" name="pharmacyTypeID" type="xs:long"/>
          <xs:element minOccurs="0" name="pharmacyTypeName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piListRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="getForm" type="xs:boolean"/>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="oms" type="xs:string"/>
          <xs:element minOccurs="0" name="options" type="tns:Options"/>
          <xs:element minOccurs="0" name="patientId" type="xs:string"/>
          <xs:element minOccurs="0" name="snils" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piListResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="prescriptionList" nillable="true" type="tns:prescriptionInfo"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="bookingAvailable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="controlType" type="xs:string"/>
          <xs:element minOccurs="0" name="ctime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="form" type="xs:string"/>
          <xs:element minOccurs="0" name="medicineRus" type="xs:string"/>
          <xs:element minOccurs="0" name="number" type="xs:string"/>
          <xs:element minOccurs="0" name="periodical" type="tns:recipePeriodicalType"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
          <xs:element minOccurs="0" name="saleDate" type="xs:date"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
          <xs:element minOccurs="0" name="term" type="xs:string"/>
          <xs:element minOccurs="0" name="type" type="tns:prescriptionType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="recipePeriodicalType">
        <xs:sequence>
          <xs:element name="periodsQty" type="xs:int"/>
          <xs:element minOccurs="0" name="periodNumber" type="xs:int"/>
          <xs:element minOccurs="0" name="drugAmount" type="xs:int"/>
          <xs:element minOccurs="0" name="keyDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugsAvailabilityRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="ident" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piDrugsAvailabilityResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmaciesList" nillable="true" type="tns:pharmacyItem"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element minOccurs="0" name="rp" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="pharmacyAddress" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyIdent" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyName" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacyPhone" type="xs:string"/>
          <xs:element minOccurs="0" name="pharmacySchedule" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="tradeRemains" nillable="true" type="tns:pharmacyRemainInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyRemainInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="remainsDescription" type="xs:string"/>
          <xs:element minOccurs="0" name="remainsMedicine" type="xs:string"/>
          <xs:element minOccurs="0" name="remainsState" type="tns:remainsState"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piMultiplyDrugsAvailabilityRequestType">
        <xs:sequence>
          <xs:element minOccurs="0" name="filters" type="tns:multiplyDrugsAvailabilityFilters"/>
          <xs:element name="ident" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="options" type="tns:Options"/>
          <xs:element maxOccurs="unbounded" name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="multiplyDrugsAvailabilityFilters">
        <xs:sequence>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element minOccurs="0" name="OMKTE" type="xs:string"/>
          <xs:element minOccurs="0" name="searchRadius" type="tns:searchRadius"/>
          <xs:element minOccurs="0" name="stationID" type="xs:long"/>
          <xs:element minOccurs="0" name="type" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="piMultiplyDrugsAvailabilityResponseType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="pharmacy" type="tns:pharmacyMultiply"/>
          <xs:element name="result" type="tns:extendedResponse"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pharmacyMultiply">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="isCommercial" type="xs:boolean"/>
          <xs:element minOccurs="0" name="geoTag" type="xs:string"/>
          <xs:element minOccurs="0" name="is24Hours" type="xs:boolean"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nearestMetro" type="tns:nearestMetro"/>
          <xs:element name="pharmacyID" type="xs:long"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element maxOccurs="unbounded" name="prescription" type="tns:prescriptionMultiply"/>
          <xs:element minOccurs="0" name="rate" type="xs:string"/>
          <xs:element minOccurs="0" name="schedule" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element name="type" type="xs:string"/>
          <xs:element minOccurs="0" name="website" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionMultiply">
        <xs:sequence>
          <xs:element name="amount" type="xs:long"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="available" type="tns:available"/>
          <xs:element minOccurs="0" name="INNName" type="xs:string"/>
          <xs:element name="medicineTitle" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
          <xs:element name="qty" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="available">
        <xs:sequence>
          <xs:element minOccurs="0" name="comment" type="xs:string"/>
          <xs:element minOccurs="0" name="expiration" type="xs:date"/>
          <xs:element minOccurs="0" name="manufacturer" type="xs:string"/>
          <xs:element name="medicineTitle" type="xs:string"/>
          <xs:element minOccurs="0" name="origin" type="xs:string"/>
          <xs:element name="price" type="xs:long"/>
          <xs:element name="qty" type="xs:int"/>
          <xs:element name="surcharge" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiDetailsRequestType">
        <xs:sequence>
          <xs:element name="ident" type="xs:string"/>
          <xs:element name="prescriptionNumber" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fpiDetailsResponseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctor" type="tns:doctorInfo"/>
          <xs:element minOccurs="0" name="issueDate" type="xs:date"/>
          <xs:element minOccurs="0" name="milkShop" type="tns:milkShop"/>
          <xs:element minOccurs="0" name="MO" type="tns:moInfo"/>
          <xs:element minOccurs="0" name="notes" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionNumber" type="xs:string"/>
          <xs:element minOccurs="0" name="prescriptionPeriod" type="tns:prescriptionPeriod"/>
          <xs:element minOccurs="0" name="prescriptionTitle" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="productLine" nillable="true" type="tns:productLineItem"/>
          <xs:element minOccurs="0" name="result" type="tns:extendedResponse"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="doctorInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="doctorID" type="xs:string"/>
          <xs:element minOccurs="0" name="fullName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="moInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="MOID" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescriptionPeriod">
        <xs:sequence>
          <xs:element minOccurs="0" name="dateBegin" type="xs:date"/>
          <xs:element minOccurs="0" name="dateEnd" type="xs:date"/>
          <xs:element minOccurs="0" name="periodTitle" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="productLineItem">
        <xs:sequence>
          <xs:element minOccurs="0" name="periodicity" type="xs:string"/>
          <xs:element name="productName" type="xs:string"/>
          <xs:element name="productOutput" type="xs:long"/>
          <xs:element minOccurs="0" name="unit" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="annotationFeature">
        <xs:restriction base="xs:string">
          <xs:enumeration value="inn"/>
          <xs:enumeration value="ftn"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="benefitBudget">
        <xs:restriction base="xs:string">
          <xs:enumeration value="federal"/>
          <xs:enumeration value="regional"/>
          <xs:enumeration value="municipal"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="discountValue">
        <xs:restriction base="xs:string">
          <xs:enumeration value="_50"/>
          <xs:enumeration value="_100"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="prescriptionType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="benefit"/>
          <xs:enumeration value="commercial"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="remainsState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="available"/>
          <xs:enumeration value="soldout"/>
          <xs:enumeration value="shortage"/>
          <xs:enumeration value="unknown"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="fpiChangeMilkShopRequest" nillable="true" type="tns:fpiChangeMilkShopRequestType"/>
      <xs:element name="fpiChangeMilkShopResponse" nillable="true" type="tns:fpiChangeMilkShopResponseType"/>
      <xs:element name="piCompleteOrderRequest" nillable="true" type="tns:piCompleteOrderRequestType"/>
      <xs:element name="piCompleteOrderResponse" nillable="true" type="tns:piCompleteOrderResponseType"/>
      <xs:element name="piDrugAnnotationRequest" nillable="true" type="tns:piDrugAnnotationRequestType"/>
      <xs:element name="piDrugAnnotationResponse" nillable="true" type="tns:piDrugAnnotationResponseType"/>
      <xs:element name="fpiCheckPatientRequest" nillable="true" type="tns:fpiCheckPatientRequestType"/>
      <xs:element name="fpiCheckPatientResponse" nillable="true" type="tns:fpiCheckPatientResponseType"/>
      <xs:element name="piCheckOrderRequest" nillable="true" type="tns:piCheckOrderRequestType"/>
      <xs:element name="piCheckOrderResponse" nillable="true" type="tns:piCheckOrderResponseType"/>
      <xs:element name="piGetDrugOrdersRequest" nillable="true" type="tns:piGetDrugOrdersRequestType"/>
      <xs:element name="piGetDrugOrdersResponse" nillable="true" type="tns:piGetDrugOrdersResponseType"/>
      <xs:element name="piRatePharmacyRequest" nillable="true" type="tns:piRatePharmacyRequestType"/>
      <xs:element name="piRatePharmacyResponse" nillable="true" type="tns:piRatePharmacyResponseType"/>
      <xs:element name="fpiSetScheduleRequest" nillable="true" type="tns:fpiSetScheduleRequestType"/>
      <xs:element name="fpiSetScheduleResponse" nillable="true" type="tns:fpiSetScheduleResponseType"/>
      <xs:element name="fpiGetScheduleRequest" nillable="true" type="tns:fpiGetScheduleRequestType"/>
      <xs:element name="fpiGetScheduleResponse" nillable="true" type="tns:fpiGetScheduleResponseType"/>
      <xs:element name="piDetailsRequest" nillable="true" type="tns:piDetailsRequestType"/>
      <xs:element name="piDetailsResponse" nillable="true" type="tns:piDetailsResponseType"/>
      <xs:element name="piGetMarkPharmacyRequest" nillable="true" type="tns:piGetMarkPharmacyRequestType"/>
      <xs:element name="piGetMarkPharmacyResponse" nillable="true" type="tns:piGetMarkPharmacyResponseType"/>
      <xs:element name="fpiGetMilkShopListRequest" nillable="true" type="tns:fpiGetMilkShopListRequestType"/>
      <xs:element name="fpiGetMilkShopListResponse" nillable="true" type="tns:fpiGetMilkShopListResponseType"/>
      <xs:element name="piCancelOrderRequest" nillable="true" type="tns:piCancelOrderRequestType"/>
      <xs:element name="piCancelOrderResponse" nillable="true" type="tns:piCancelOrderResponseType"/>
      <xs:element name="piPatientPrescriptionsRequest" nillable="true" type="tns:piPatientPrescriptionsRequestType"/>
      <xs:element name="piPatientPrescriptionsResponse" nillable="true" type="tns:piPatientPrescriptionsResponseType"/>
      <xs:element name="piPharmacyAuxiliaryRequest" nillable="true" type="tns:piPharmacyAuxiliaryRequestType"/>
      <xs:element name="piPharmacyAuxiliaryResponse" nillable="true" type="tns:piPharmacyAuxiliaryResponseType"/>
      <xs:element name="fpiGetListRequest" nillable="true" type="tns:fpiListRequestType"/>
      <xs:element name="fpiGetListResponse" nillable="true" type="tns:fpiListResponseType"/>
      <xs:element name="piGetPharmacyGeoRequest" nillable="true" type="tns:piGetPharmacyGeoRequestType"/>
      <xs:element name="piGetPharmacyGeoResponse" nillable="true" type="tns:piGetPharmacyGeoResponseType"/>
      <xs:element name="piGetPharmacyListRequest" nillable="true" type="tns:piGetPharmacyListRequestType"/>
      <xs:element name="piGetPharmacyListResponse" nillable="true" type="tns:piGetPharmacyListResponseType"/>
      <xs:element name="piListRequest" nillable="true" type="tns:piListRequestType"/>
      <xs:element name="piListResponse" nillable="true" type="tns:piListResponseType"/>
      <xs:element name="piDrugsAvailabilityRequest" nillable="true" type="tns:piDrugsAvailabilityRequestType"/>
      <xs:element name="piDrugsAvailabilityResponse" nillable="true" type="tns:piDrugsAvailabilityResponseType"/>
      <xs:element name="piMultiplyDrugsAvailabilityRequest" nillable="true" type="tns:piMultiplyDrugsAvailabilityRequestType"/>
      <xs:element name="piMultiplyDrugsAvailabilityResponse" nillable="true" type="tns:piMultiplyDrugsAvailabilityResponseType"/>
      <xs:element name="fpiGetDetailsRequest" nillable="true" type="tns:fpiDetailsRequestType"/>
      <xs:element name="fpiGetDetailsResponse" nillable="true" type="tns:fpiDetailsResponseType"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="piPharmacyAuxiliaryResponse">
    <wsdl:part element="ns1:piPharmacyAuxiliaryResponse" name="piPharmacyAuxiliaryResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiCheckPatientResponse">
    <wsdl:part element="ns1:fpiCheckPatientResponse" name="fpiCheckPatientResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piRatePharmacy">
    <wsdl:part element="ns1:piRatePharmacyRequest" name="piRatePharmacyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetListResponse">
    <wsdl:part element="ns1:fpiGetListResponse" name="fpiGetListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiSetSchedule">
    <wsdl:part element="ns1:fpiSetScheduleRequest" name="fpiSetScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetScheduleResponse">
    <wsdl:part element="ns1:fpiGetScheduleResponse" name="fpiGetScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCancelOrderResponse">
    <wsdl:part element="ns1:piCancelOrderResponse" name="piCancelOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetDrugOrdersResponse">
    <wsdl:part element="ns1:piGetDrugOrdersResponse" name="piGetDrugOrdersResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetSchedule">
    <wsdl:part element="ns1:fpiGetScheduleRequest" name="fpiGetScheduleRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiChangeMilkShopResponse">
    <wsdl:part element="ns1:fpiChangeMilkShopResponse" name="fpiChangeMilkShopResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piRatePharmacyResponse">
    <wsdl:part element="ns1:piRatePharmacyResponse" name="piRatePharmacyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDetails">
    <wsdl:part element="ns1:piDetailsRequest" name="piDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetMilkShopList">
    <wsdl:part element="ns1:fpiGetMilkShopListRequest" name="fpiGetMilkShopListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyListResponse">
    <wsdl:part element="ns1:piGetPharmacyListResponse" name="piGetPharmacyListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugsAvailabilityResponse">
    <wsdl:part element="ns1:piDrugsAvailabilityResponse" name="piDrugsAvailabilityResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDetailsResponse">
    <wsdl:part element="ns1:piDetailsResponse" name="piDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piMultiplyDrugsAvailabilityResponse">
    <wsdl:part element="ns1:piMultiplyDrugsAvailabilityResponse" name="piMultiplyDrugsAvailabilityResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyList">
    <wsdl:part element="ns1:piGetPharmacyListRequest" name="piGetPharmacyListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCompleteOrderResponse">
    <wsdl:part element="ns1:piCompleteOrderResponse" name="piCompleteOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piMultiplyDrugsAvailability">
    <wsdl:part element="ns1:piMultiplyDrugsAvailabilityRequest" name="piMultiplyDrugsAvailabilityRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiSetScheduleResponse">
    <wsdl:part element="ns1:fpiSetScheduleResponse" name="fpiSetScheduleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiChangeMilkShop">
    <wsdl:part element="ns1:fpiChangeMilkShopRequest" name="fpiChangeMilkShopRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCompleteOrder">
    <wsdl:part element="ns1:piCompleteOrderRequest" name="piCompleteOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugAnnotation">
    <wsdl:part element="ns1:piDrugAnnotationRequest" name="piDrugAnnotationRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugAnnotationResponse">
    <wsdl:part element="ns1:piDrugAnnotationResponse" name="piDrugAnnotationResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiCheckPatient">
    <wsdl:part element="ns1:fpiCheckPatientRequest" name="fpiCheckPatientRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCheckOrder">
    <wsdl:part element="ns1:piCheckOrderRequest" name="piCheckOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetDrugOrders">
    <wsdl:part element="ns1:piGetDrugOrdersRequest" name="piGetDrugOrdersRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetDetailsResponse">
    <wsdl:part element="ns1:fpiGetDetailsResponse" name="fpiGetDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetMilkShopListResponse">
    <wsdl:part element="ns1:fpiGetMilkShopListResponse" name="fpiGetMilkShopListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetMarkPharmacy">
    <wsdl:part element="ns1:piGetMarkPharmacyRequest" name="piGetMarkPharmacyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCancelOrder">
    <wsdl:part element="ns1:piCancelOrderRequest" name="piCancelOrderRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPatientPrescriptions">
    <wsdl:part element="ns1:piPatientPrescriptionsRequest" name="piPatientPrescriptionsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyGeoResponse">
    <wsdl:part element="ns1:piGetPharmacyGeoResponse" name="piGetPharmacyGeoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piCheckOrderResponse">
    <wsdl:part element="ns1:piCheckOrderResponse" name="piCheckOrderResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPharmacyAuxiliary">
    <wsdl:part element="ns1:piPharmacyAuxiliaryRequest" name="piPharmacyAuxiliaryRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetMarkPharmacyResponse">
    <wsdl:part element="ns1:piGetMarkPharmacyResponse" name="piGetMarkPharmacyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetList">
    <wsdl:part element="ns1:fpiGetListRequest" name="fpiGetListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piGetPharmacyGeo">
    <wsdl:part element="ns1:piGetPharmacyGeoRequest" name="piGetPharmacyGeoRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piList">
    <wsdl:part element="ns1:piListRequest" name="piListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piDrugsAvailability">
    <wsdl:part element="ns1:piDrugsAvailabilityRequest" name="piDrugsAvailabilityRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piPatientPrescriptionsResponse">
    <wsdl:part element="ns1:piPatientPrescriptionsResponse" name="piPatientPrescriptionsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="piListResponse">
    <wsdl:part element="ns1:piListResponse" name="piListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fpiGetDetails">
    <wsdl:part element="ns1:fpiGetDetailsRequest" name="fpiGetDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="PrescriptionInfoSrvV4">
    <wsdl:operation name="fpiChangeMilkShop">
      <wsdl:input message="tns:fpiChangeMilkShop" name="fpiChangeMilkShop"></wsdl:input>
      <wsdl:output message="tns:fpiChangeMilkShopResponse" name="fpiChangeMilkShopResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCompleteOrder">
      <wsdl:input message="tns:piCompleteOrder" name="piCompleteOrder"></wsdl:input>
      <wsdl:output message="tns:piCompleteOrderResponse" name="piCompleteOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugAnnotation">
      <wsdl:input message="tns:piDrugAnnotation" name="piDrugAnnotation"></wsdl:input>
      <wsdl:output message="tns:piDrugAnnotationResponse" name="piDrugAnnotationResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiCheckPatient">
      <wsdl:input message="tns:fpiCheckPatient" name="fpiCheckPatient"></wsdl:input>
      <wsdl:output message="tns:fpiCheckPatientResponse" name="fpiCheckPatientResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCheckOrder">
      <wsdl:input message="tns:piCheckOrder" name="piCheckOrder"></wsdl:input>
      <wsdl:output message="tns:piCheckOrderResponse" name="piCheckOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetDrugOrders">
      <wsdl:input message="tns:piGetDrugOrders" name="piGetDrugOrders"></wsdl:input>
      <wsdl:output message="tns:piGetDrugOrdersResponse" name="piGetDrugOrdersResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piRatePharmacy">
      <wsdl:input message="tns:piRatePharmacy" name="piRatePharmacy"></wsdl:input>
      <wsdl:output message="tns:piRatePharmacyResponse" name="piRatePharmacyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiSetSchedule">
      <wsdl:input message="tns:fpiSetSchedule" name="fpiSetSchedule"></wsdl:input>
      <wsdl:output message="tns:fpiSetScheduleResponse" name="fpiSetScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetSchedule">
      <wsdl:input message="tns:fpiGetSchedule" name="fpiGetSchedule"></wsdl:input>
      <wsdl:output message="tns:fpiGetScheduleResponse" name="fpiGetScheduleResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDetails">
      <wsdl:input message="tns:piDetails" name="piDetails"></wsdl:input>
      <wsdl:output message="tns:piDetailsResponse" name="piDetailsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetMarkPharmacy">
      <wsdl:input message="tns:piGetMarkPharmacy" name="piGetMarkPharmacy"></wsdl:input>
      <wsdl:output message="tns:piGetMarkPharmacyResponse" name="piGetMarkPharmacyResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetMilkShopList">
      <wsdl:input message="tns:fpiGetMilkShopList" name="fpiGetMilkShopList"></wsdl:input>
      <wsdl:output message="tns:fpiGetMilkShopListResponse" name="fpiGetMilkShopListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCancelOrder">
      <wsdl:input message="tns:piCancelOrder" name="piCancelOrder"></wsdl:input>
      <wsdl:output message="tns:piCancelOrderResponse" name="piCancelOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPatientPrescriptions">
      <wsdl:input message="tns:piPatientPrescriptions" name="piPatientPrescriptions"></wsdl:input>
      <wsdl:output message="tns:piPatientPrescriptionsResponse" name="piPatientPrescriptionsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliary">
      <wsdl:input message="tns:piPharmacyAuxiliary" name="piPharmacyAuxiliary"></wsdl:input>
      <wsdl:output message="tns:piPharmacyAuxiliaryResponse" name="piPharmacyAuxiliaryResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetList">
      <wsdl:input message="tns:fpiGetList" name="fpiGetList"></wsdl:input>
      <wsdl:output message="tns:fpiGetListResponse" name="fpiGetListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyGeo">
      <wsdl:input message="tns:piGetPharmacyGeo" name="piGetPharmacyGeo"></wsdl:input>
      <wsdl:output message="tns:piGetPharmacyGeoResponse" name="piGetPharmacyGeoResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyList">
      <wsdl:input message="tns:piGetPharmacyList" name="piGetPharmacyList"></wsdl:input>
      <wsdl:output message="tns:piGetPharmacyListResponse" name="piGetPharmacyListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piList">
      <wsdl:input message="tns:piList" name="piList"></wsdl:input>
      <wsdl:output message="tns:piListResponse" name="piListResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugsAvailability">
      <wsdl:input message="tns:piDrugsAvailability" name="piDrugsAvailability"></wsdl:input>
      <wsdl:output message="tns:piDrugsAvailabilityResponse" name="piDrugsAvailabilityResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piMultiplyDrugsAvailability">
      <wsdl:input message="tns:piMultiplyDrugsAvailability" name="piMultiplyDrugsAvailability"></wsdl:input>
      <wsdl:output message="tns:piMultiplyDrugsAvailabilityResponse" name="piMultiplyDrugsAvailabilityResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetDetails">
      <wsdl:input message="tns:fpiGetDetails" name="fpiGetDetails"></wsdl:input>
      <wsdl:output message="tns:fpiGetDetailsResponse" name="fpiGetDetailsResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PrescriptionInfoServiceV4SoapBinding" type="tns:PrescriptionInfoSrvV4">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="fpiChangeMilkShop">
      <soap:operation soapAction="fpiChangeMilkShop" style="document"/>
      <wsdl:input name="fpiChangeMilkShop">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiChangeMilkShopResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCompleteOrder">
      <soap:operation soapAction="piCompleteOrder" style="document"/>
      <wsdl:input name="piCompleteOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCompleteOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugAnnotation">
      <soap:operation soapAction="piDrugAnnotation" style="document"/>
      <wsdl:input name="piDrugAnnotation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDrugAnnotationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiCheckPatient">
      <soap:operation soapAction="fpiCheckPatient" style="document"/>
      <wsdl:input name="fpiCheckPatient">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiCheckPatientResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCheckOrder">
      <soap:operation soapAction="piCheckOrder" style="document"/>
      <wsdl:input name="piCheckOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCheckOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetDrugOrders">
      <soap:operation soapAction="piGetDrugOrders" style="document"/>
      <wsdl:input name="piGetDrugOrders">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetDrugOrdersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piRatePharmacy">
      <soap:operation soapAction="piRatePharmacy" style="document"/>
      <wsdl:input name="piRatePharmacy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piRatePharmacyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiSetSchedule">
      <soap:operation soapAction="fpiSetSchedule" style="document"/>
      <wsdl:input name="fpiSetSchedule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiSetScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetSchedule">
      <soap:operation soapAction="fpiGetSchedule" style="document"/>
      <wsdl:input name="fpiGetSchedule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetScheduleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDetails">
      <soap:operation soapAction="piDetails" style="document"/>
      <wsdl:input name="piDetails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetMarkPharmacy">
      <soap:operation soapAction="piGetMarkPharmacy" style="document"/>
      <wsdl:input name="piGetMarkPharmacy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetMarkPharmacyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetMilkShopList">
      <soap:operation soapAction="fpiGetMilkShopList" style="document"/>
      <wsdl:input name="fpiGetMilkShopList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetMilkShopListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piCancelOrder">
      <soap:operation soapAction="piCancelOrder" style="document"/>
      <wsdl:input name="piCancelOrder">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piCancelOrderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPatientPrescriptions">
      <soap:operation soapAction="piPatientPrescriptions" style="document"/>
      <wsdl:input name="piPatientPrescriptions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piPatientPrescriptionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piPharmacyAuxiliary">
      <soap:operation soapAction="piPharmacyAuxiliary" style="document"/>
      <wsdl:input name="piPharmacyAuxiliary">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piPharmacyAuxiliaryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetList">
      <soap:operation soapAction="fpiGetList" style="document"/>
      <wsdl:input name="fpiGetList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyGeo">
      <soap:operation soapAction="piGetPharmacyGeo" style="document"/>
      <wsdl:input name="piGetPharmacyGeo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetPharmacyGeoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piGetPharmacyList">
      <soap:operation soapAction="piGetPharmacyList" style="document"/>
      <wsdl:input name="piGetPharmacyList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piGetPharmacyListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piList">
      <soap:operation soapAction="piList" style="document"/>
      <wsdl:input name="piList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piDrugsAvailability">
      <soap:operation soapAction="piDrugsAvailability" style="document"/>
      <wsdl:input name="piDrugsAvailability">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piDrugsAvailabilityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="piMultiplyDrugsAvailability">
      <soap:operation soapAction="piMultiplyDrugsAvailability" style="document"/>
      <wsdl:input name="piMultiplyDrugsAvailability">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="piMultiplyDrugsAvailabilityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fpiGetDetails">
      <soap:operation soapAction="fpiGetDetails" style="document"/>
      <wsdl:input name="fpiGetDetails">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fpiGetDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PrescriptionInfoServiceV4">
    <wsdl:port binding="tns:PrescriptionInfoServiceV4SoapBinding" name="PrescriptionInfoSrvPortV4">
      <soap:address location="http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint></con:endpoints><con:operation id="c237a4a7-5275-4012-9160-7ff03768b0ac" isOneWay="false" action="fpiChangeMilkShop" name="fpiChangeMilkShop" bindingOperationName="fpiChangeMilkShop" type="Request-Response" outputName="fpiChangeMilkShopResponse" inputName="fpiChangeMilkShop" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2a3848c6-1c1f-4b08-8448-6808421483fb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiChangeMilkShopRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:milkShopId>?</typ:milkShopId>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiChangeMilkShopRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiChangeMilkShop"/></con:call></con:operation><con:operation id="5fb69094-4690-43ad-afe5-a970df8da137" isOneWay="false" action="fpiCheckPatient" name="fpiCheckPatient" bindingOperationName="fpiCheckPatient" type="Request-Response" outputName="fpiCheckPatientResponse" inputName="fpiCheckPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="585db189-71d4-462d-8648-72fc550f8675" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiCheckPatientRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:fpiCheckPatientRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiCheckPatient"/></con:call></con:operation><con:operation id="8f6b7c99-7137-45fd-830e-e216073edcca" isOneWay="false" action="fpiGetDetails" name="fpiGetDetails" bindingOperationName="fpiGetDetails" type="Request-Response" outputName="fpiGetDetailsResponse" inputName="fpiGetDetails" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="40fb43f6-b143-4d93-9324-03667ed3fb87" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetDetailsRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiGetDetailsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetDetails"/></con:call></con:operation><con:operation id="3e0dad91-7abc-4308-83bc-d954c10615fe" isOneWay="false" action="fpiGetList" name="fpiGetList" bindingOperationName="fpiGetList" type="Request-Response" outputName="fpiGetListResponse" inputName="fpiGetList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0006f34b-5a03-4b00-812a-d1e353145a45" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetListRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:mode>?</typ:mode>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:fpiGetListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetList"/></con:call></con:operation><con:operation id="c66770dc-6083-4b27-9042-07e1c07aeb17" isOneWay="false" action="fpiGetMilkShopList" name="fpiGetMilkShopList" bindingOperationName="fpiGetMilkShopList" type="Request-Response" outputName="fpiGetMilkShopListResponse" inputName="fpiGetMilkShopList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2de950d1-70a1-4bb5-82e8-1b80cfcb9313" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetMilkShopListRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:OMKTE>?</typ:OMKTE>\r
         <!--Optional:-->\r
         <typ:searchString>?</typ:searchString>\r
         <!--Optional:-->\r
         <typ:stationID>?</typ:stationID>\r
      </typ:fpiGetMilkShopListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetMilkShopList"/></con:call></con:operation><con:operation id="baeddae8-3815-4ded-86be-1ee2749d5370" isOneWay="false" action="fpiGetSchedule" name="fpiGetSchedule" bindingOperationName="fpiGetSchedule" type="Request-Response" outputName="fpiGetScheduleResponse" inputName="fpiGetSchedule" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="604bf862-2cb9-4459-a866-5822233b089d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiGetScheduleRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:fpiGetScheduleRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiGetSchedule"/></con:call></con:operation><con:operation id="e7b284ef-ad5a-4139-8e2c-f233dfd6a05c" isOneWay="false" action="fpiSetSchedule" name="fpiSetSchedule" bindingOperationName="fpiSetSchedule" type="Request-Response" outputName="fpiSetScheduleResponse" inputName="fpiSetSchedule" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4a7aae3a-546d-4fcf-bf02-834346e4bc44" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:fpiSetScheduleRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         <!--1 or more repetitions:-->\r
         <typ:servicingDay>?</typ:servicingDay>\r
      </typ:fpiSetScheduleRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="fpiSetSchedule"/></con:call></con:operation><con:operation id="b6fd0496-9f12-4498-8f3c-ac5b162c502a" isOneWay="false" action="piCancelOrder" name="piCancelOrder" bindingOperationName="piCancelOrder" type="Request-Response" outputName="piCancelOrderResponse" inputName="piCancelOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1b2dd724-134f-402a-9f08-f9c0a0ae281f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCancelOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCancelOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCancelOrder"/></con:call></con:operation><con:operation id="db7a09d2-4d45-4ebb-a5ad-175cf6c3d694" isOneWay="false" action="piCheckOrder" name="piCheckOrder" bindingOperationName="piCheckOrder" type="Request-Response" outputName="piCheckOrderResponse" inputName="piCheckOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="38b80a9a-7022-460f-ab87-4fccf5ca2741" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCheckOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCheckOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCheckOrder"/></con:call></con:operation><con:operation id="abe07aed-3e3c-46e1-84df-a77f1f1951d6" isOneWay="false" action="piCompleteOrder" name="piCompleteOrder" bindingOperationName="piCompleteOrder" type="Request-Response" outputName="piCompleteOrderResponse" inputName="piCompleteOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b2ef276b-0fc6-4c8d-8aef-e08d876a9c07" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piCompleteOrderRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:QRCode>?</typ:QRCode>\r
         <!--Optional:-->\r
         <typ:userIdent>?</typ:userIdent>\r
      </typ:piCompleteOrderRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piCompleteOrder"/></con:call></con:operation><con:operation id="c23c2cda-c421-4ab1-b598-ec1dfc59b5da" isOneWay="false" action="piDetails" name="piDetails" bindingOperationName="piDetails" type="Request-Response" outputName="piDetailsResponse" inputName="piDetails" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3fd4d569-2d5a-4567-8c1e-5cf4dbde8102" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDetailsRequest>\r
         <!--Optional:-->\r
         <typ:getQR>?</typ:getQR>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         <!--Optional:-->\r
         <typ:signature>?</typ:signature>\r
      </typ:piDetailsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDetails"/></con:call></con:operation><con:operation id="35f769ba-cde2-46cd-b3c4-ae4a4b4b05a2" isOneWay="false" action="piDrugAnnotation" name="piDrugAnnotation" bindingOperationName="piDrugAnnotation" type="Request-Response" outputName="piDrugAnnotationResponse" inputName="piDrugAnnotation" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b665cd32-576f-4920-8090-c2bc6b35c1c5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDrugAnnotationRequest>\r
         <!--Optional:-->\r
         <typ:getFullText>?</typ:getFullText>\r
         <!--Optional:-->\r
         <typ:getINNonly>?</typ:getINNonly>\r
         <!--Optional:-->\r
         <typ:getStructureLevel>?</typ:getStructureLevel>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piDrugAnnotationRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDrugAnnotation"/></con:call></con:operation><con:operation id="c5e4eb12-5e71-4535-81f0-dd1935deef65" isOneWay="false" action="piDrugsAvailability" name="piDrugsAvailability" bindingOperationName="piDrugsAvailability" type="Request-Response" outputName="piDrugsAvailabilityResponse" inputName="piDrugsAvailability" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fb5166d4-1a11-4b52-bc75-2f386c0a738c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piDrugsAvailabilityRequest>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piDrugsAvailabilityRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piDrugsAvailability"/></con:call></con:operation><con:operation id="a9396227-2d02-494d-b08a-45e3f13a0f32" isOneWay="false" action="piGetDrugOrders" name="piGetDrugOrders" bindingOperationName="piGetDrugOrders" type="Request-Response" outputName="piGetDrugOrdersResponse" inputName="piGetDrugOrders" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6ffe92f2-71a4-41bc-bbe5-cf944542f9e2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetDrugOrdersRequest>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:patientID>?</typ:patientID>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:piGetDrugOrdersRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetDrugOrders"/></con:call></con:operation><con:operation id="45a11971-79ad-45b2-abe3-03da04b41db7" isOneWay="false" action="piGetMarkPharmacy" name="piGetMarkPharmacy" bindingOperationName="piGetMarkPharmacy" type="Request-Response" outputName="piGetMarkPharmacyResponse" inputName="piGetMarkPharmacy" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ca991aa6-9ab9-4199-be17-5e8e8cc7de2a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetMarkPharmacyRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:markedObject>\r
            <!--Optional:-->\r
            <typ:orderID>?</typ:orderID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         </typ:markedObject>\r
      </typ:piGetMarkPharmacyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetMarkPharmacy"/></con:call></con:operation><con:operation id="9dd3bd6b-200d-428d-bbd0-26d39580e3dd" isOneWay="false" action="piGetPharmacyGeo" name="piGetPharmacyGeo" bindingOperationName="piGetPharmacyGeo" type="Request-Response" outputName="piGetPharmacyGeoResponse" inputName="piGetPharmacyGeo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="182dab82-ac91-405e-b383-c1e775359d1e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetPharmacyGeoRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyID>?</typ:pharmacyID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Zero or more repetitions:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
      </typ:piGetPharmacyGeoRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetPharmacyGeo"/></con:call></con:operation><con:operation id="4b9466c3-3c6c-464d-ba11-edcd23435574" isOneWay="false" action="piGetPharmacyList" name="piGetPharmacyList" bindingOperationName="piGetPharmacyList" type="Request-Response" outputName="piGetPharmacyListResponse" inputName="piGetPharmacyList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="18c0f129-98d5-4be9-9eb1-c92d6c41952b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piGetPharmacyListRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyID>?</typ:pharmacyID>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyIdent>?</typ:pharmacyIdent>\r
            <!--Zero or more repetitions:-->\r
            <typ:pharmacyType>?</typ:pharmacyType>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:searchString>?</typ:searchString>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:pagingOptions>\r
            <typ:pageNumber>?</typ:pageNumber>\r
            <typ:pageSize>?</typ:pageSize>\r
            <!--Optional:-->\r
            <typ:sortingOptions>\r
               <!--Zero or more repetitions:-->\r
               <typ:sortOrder>\r
                  <typ:attributeName>?</typ:attributeName>\r
                  <typ:descending>?</typ:descending>\r
               </typ:sortOrder>\r
            </typ:sortingOptions>\r
         </typ:pagingOptions>\r
      </typ:piGetPharmacyListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piGetPharmacyList"/></con:call></con:operation><con:operation id="61e43ebf-fd73-4e7a-896f-3990d65a7932" isOneWay="false" action="piList" name="piList" bindingOperationName="piList" type="Request-Response" outputName="piListResponse" inputName="piList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8aec0654-354d-4f43-8ca9-207ac708bd5f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piListRequest>\r
         <!--Optional:-->\r
         <typ:getForm>?</typ:getForm>\r
         <!--Optional:-->\r
         <typ:ident>?</typ:ident>\r
         <!--Optional:-->\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--Optional:-->\r
         <typ:patientId>?</typ:patientId>\r
         <!--Optional:-->\r
         <typ:snils>?</typ:snils>\r
      </typ:piListRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piList"/></con:call></con:operation><con:operation id="60707fbf-c078-46c6-8f96-227e9a9f6e5a" isOneWay="false" action="piMultiplyDrugsAvailability" name="piMultiplyDrugsAvailability" bindingOperationName="piMultiplyDrugsAvailability" type="Request-Response" outputName="piMultiplyDrugsAvailabilityResponse" inputName="piMultiplyDrugsAvailability" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="18e4409c-d953-4aeb-8f4a-eed992e3decc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piMultiplyDrugsAvailabilityRequest>\r
         <!--Optional:-->\r
         <typ:filters>\r
            <!--Optional:-->\r
            <typ:is24Hours>?</typ:is24Hours>\r
            <!--Optional:-->\r
            <typ:OMKTE>?</typ:OMKTE>\r
            <!--Optional:-->\r
            <typ:searchRadius>\r
               <typ:distance>?</typ:distance>\r
               <typ:geoTag>?</typ:geoTag>\r
            </typ:searchRadius>\r
            <!--Optional:-->\r
            <typ:stationID>?</typ:stationID>\r
            <!--Optional:-->\r
            <typ:type>?</typ:type>\r
         </typ:filters>\r
         <typ:ident>?</typ:ident>\r
         <!--Zero or more repetitions:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piMultiplyDrugsAvailabilityRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piMultiplyDrugsAvailability"/></con:call></con:operation><con:operation id="d0d0a426-43c3-46db-a5fa-bc191a96e08b" isOneWay="false" action="piPatientPrescriptions" name="piPatientPrescriptions" bindingOperationName="piPatientPrescriptions" type="Request-Response" outputName="piPatientPrescriptionsResponse" inputName="piPatientPrescriptions" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a278a031-bf51-4efe-bdb2-e6cee2501562" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>?</typ:ident>\r
         <typ:oms>?</typ:oms>\r
         <!--Optional:-->\r
         <typ:options>\r
            <!--Zero or more repetitions:-->\r
            <typ:entry key="?">?</typ:entry>\r
         </typ:options>\r
         <!--1 or more repetitions:-->\r
         <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/></con:call></con:operation><con:operation id="f293c7b3-da13-4be0-a1ec-b44b34bc59ae" isOneWay="false" action="piPharmacyAuxiliary" name="piPharmacyAuxiliary" bindingOperationName="piPharmacyAuxiliary" type="Request-Response" outputName="piPharmacyAuxiliaryResponse" inputName="piPharmacyAuxiliary" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ca660cc7-76d9-418c-9a51-20e6d8f400cb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piPharmacyAuxiliaryRequest>\r
         <typ:ident>?</typ:ident>\r
      </typ:piPharmacyAuxiliaryRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPharmacyAuxiliary"/></con:call></con:operation><con:operation id="3e0d78b9-2710-437a-b2c8-9f148890fb9c" isOneWay="false" action="piRatePharmacy" name="piRatePharmacy" bindingOperationName="piRatePharmacy" type="Request-Response" outputName="piRatePharmacyResponse" inputName="piRatePharmacy" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ff172255-3268-4bc7-b88b-ec96de4aad1d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <typ:piRatePharmacyRequest>\r
         <!--Optional:-->\r
         <typ:comment>?</typ:comment>\r
         <typ:ident>?</typ:ident>\r
         <typ:mark>?</typ:mark>\r
         <typ:markedObject>\r
            <!--Optional:-->\r
            <typ:orderID>?</typ:orderID>\r
            <!--Optional:-->\r
            <typ:prescriptionNumber>?</typ:prescriptionNumber>\r
         </typ:markedObject>\r
      </typ:piRatePharmacyRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piRatePharmacy"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="f0390fb7-01ba-4497-9e48-1f2fbe8bd930" wsaVersion="NONE" name="meiPTBv2" type="wsdl" bindingName="{http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/}meiPTBv2" soapVersion="1_2" anonymous="optional" definition="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?wsdl"><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="applicationService" targetNamespace="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ns1="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:nsf="http://emias.mos.ru/system/v1/faults/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <wsdl:types>
    <xs:schema>
      <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7dyFKU8gNg2pcdsBsT958mJpjC6nz5H2DnwklaLl0r"/>
      <xs:import namespace="http://emias.mos.ru/system/v1/faults/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7O2kKKxR8g1oEBqZZ41n6AJ5sT7_AGwQnxmw--"/>
      <xs:import namespace="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnSS7p3FNh_8wLXK8udGqJm7rStsY6PEA2y7TSJzHwlKD.AJowdwT9hsf_YtopHhe1EUart7ccDdJgLOU9M990w9i"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="searchEmployeesInput">
    <wsdl:part element="ns1:searchEmployeesRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchEmployeesOptionalOutput">
    <wsdl:part element="ns1:searchEmployeesOptionalResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchEmployeesOutput">
    <wsdl:part element="ns1:searchEmployeesResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fault">
    <wsdl:documentation>Ошибка</wsdl:documentation>
    <wsdl:part element="nsf:fault" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMeInfoByJobIdOutput">
    <wsdl:part element="ns1:getMeInfoByJobIdResponse" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMeInfoByJobIdInput">
    <wsdl:part element="ns1:getMeInfoByJobIdRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchEmployeesOptionalInput">
    <wsdl:part element="ns1:searchEmployeesOptionalRequest" name="body"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userContext">
    <wsdl:documentation>Контекст пользователя</wsdl:documentation>
    <wsdl:part element="uctx:userContext" name="userContext"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="medicalEmployeeInfoPT">
    <wsdl:operation name="getMeInfoByJobId">
      <wsdl:documentation>Создание заявления на прикрепление</wsdl:documentation>
      <wsdl:input message="tns:getMeInfoByJobIdInput"></wsdl:input>
      <wsdl:output message="tns:getMeInfoByJobIdOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchEmployees">
      <wsdl:documentation>Создание заявления на прикрепление</wsdl:documentation>
      <wsdl:input message="tns:searchEmployeesInput"></wsdl:input>
      <wsdl:output message="tns:searchEmployeesOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchEmployeesOptional">
      <wsdl:documentation>Создание заявления на прикрепление</wsdl:documentation>
      <wsdl:input message="tns:searchEmployeesOptionalInput"></wsdl:input>
      <wsdl:output message="tns:searchEmployeesOptionalOutput"></wsdl:output>
      <wsdl:fault message="tns:fault" name="fault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="meiPTBv2" type="tns:medicalEmployeeInfoPT">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getMeInfoByJobId">
      <soap:operation soapAction="getMeInfoByJobId"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchEmployees">
      <soap:operation soapAction="searchEmployees"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchEmployeesOptional">
      <soap:operation soapAction="searchEmployeesOptional"/>
      <wsdl:input>
        <soap:header message="tns:userContext" part="userContext" use="literal"></soap:header>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="fault">
        <soap:fault name="fault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="medicalEmployeeInfoService">
    <wsdl:port binding="tns:meiPTBv2" name="medicalEmployeeInfoPort">
      <soap:address location="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService"/>
    </wsdl:port>
    <wsp:PolicyReference URI="#authPolicy"/>
  </wsdl:service>
  <wsp:Policy wsu:Id="authPolicy">
    <sp:SupportingTokens xmlns:sp="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702">
      <wsp:Policy>
        <sp:UsernameToken sp:IncludeToken="http://docs.oasis-open.org/ws-sx/ws-securitypolicy/200702/IncludeToken/AlwaysToRecipient">
          <wsp:Policy>
            <sp:NoPassword/>
          </wsp:Policy>
        </sp:UsernameToken>
      </wsp:Policy>
    </sp:SupportingTokens>
  </wsp:Policy>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7dyFKU8gNg2pcdsBsT958mJpjC6nz5H2DnwklaLl0r</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/userContext/" version="1.0" xmlns="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cd0T8_dPwVqQQIPMm8M.xCm.uNXE4SV.sjfB9A--"/>
  <xs:element name="userContext" type="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="UserContext">
    <xs:annotation>
      <xs:documentation>Контекст пользователя</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="systemName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Шифр системы-потребителя</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя пользователя (логин)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRoleId" type="ID">
        <xs:annotation>
          <xs:documentation>Код Роли</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="isUserRoleSystemWide" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак "Общесистемная Роль"</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="userRights">
        <xs:annotation>
          <xs:documentation>Коллекция Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Код Полномочия</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="jobExecutionId" type="ID"/>
      <xs:element minOccurs="0" name="hostIp" type="xs:string">
        <xs:annotation>
          <xs:documentation>IP адрес хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hostName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя хоста</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="options" type="Options">
        <xs:annotation>
          <xs:documentation>Набор именованных значений</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cd0T8_dPwVqQQIPMm8M.xCm.uNXE4SV.sjfB9A--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7QyFMFKBT1Wcprr3uHchFV3_HA"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7QyFMFKBT1Wcprr3uHchFV3_HA</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7O2kKKxR8g1oEBqZZ41n6AJ5sT7_AGwQnxmw--</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/system/v1/faults/" version="1.0" xmlns="http://emias.mos.ru/system/v1/faults/" xmlns:uctx="http://emias.mos.ru/system/v1/userContext/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7QyFMFKBT1Wcprr3uHchFV3_HA"/>
  <xs:import namespace="http://emias.mos.ru/system/v1/userContext/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cc0F8uYE2kXICd7dyFKU8gNg2pcdsBsT958mJpjC6nz5H2DnwklaLl0r"/>
  <!--faults-->
  <xs:element name="fault" type="BaseFault">
    <xs:annotation>
      <xs:documentation>Базовый тип ошибки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SecurityFault">
    <xs:annotation>
      <xs:documentation>Ошибка безопасности</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element ref="uctx:userContext"/>
          <xs:choice>
            <xs:element name="unauthorizedRequestSecurityException" type="UnauthorizedRequestSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="otherSecurityException" type="OtherSecurityException">
              <xs:annotation>
                <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
        <xs:attribute fixed="SECURITY" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BusinessFault">
    <xs:annotation>
      <xs:documentation>Бизнес ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Коллекция Сообщений об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="hasErrors" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Признак наличия ошибок в списке сообщений</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="BUSINESS" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UnexpectedFault">
    <xs:annotation>
      <xs:documentation>Непредвиденная ошибка</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="BaseFault">
        <xs:sequence>
          <xs:element name="version" type="xs:string">
            <xs:annotation>
              <xs:documentation>Версия продукта-сервиса</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="stackTrace">
            <xs:annotation>
              <xs:documentation>Стек вызова (последние 10  записей)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="10" name="stackTraceRecord">
                  <xs:annotation>
                    <xs:documentation>Запись StackTrace</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="declaringClass" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование класса, содержащего метод</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="methodName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование метода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="fileName" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>Наименование файла</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                      <xs:element minOccurs="0" name="lineNumber" type="xs:int">
                        <xs:annotation>
                          <xs:documentation>Номер строки кода</xs:documentation>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute fixed="UNEXPECTED" name="type" type="FaultTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип ошибки</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="BaseFault">
    <xs:annotation>
      <xs:documentation>Описание базового типа описания ошибки</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--security exceptions-->
  <xs:complexType name="UnauthorizedRequestSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа UNAUTHORIZED_REQUEST_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="requiredRights">
        <xs:annotation>
          <xs:documentation>Перечень идентификаторов недостающих Полномочий пользователя</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="userRightId" type="ID">
              <xs:annotation>
                <xs:documentation>Идентификатор Полномочия пользователя</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="UNAUTHORIZED_REQUEST_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OtherSecurityException">
    <xs:annotation>
      <xs:documentation>Исключение безопасности типа OTHER_SECURITY_EXCEPTION</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="Message">
        <xs:annotation>
          <xs:documentation>Сообщение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute fixed="OTHER_SECURITY_EXCEPTION" name="type" type="SecurityExceptionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Тип исключения безопасности</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="SecurityExceptionTypes">
    <xs:annotation>
      <xs:documentation>Типы исключений безопасности</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNAUTHORIZED_REQUEST_EXCEPTION"/>
      <xs:enumeration value="OTHER_SECURITY_EXCEPTION"/>
    </xs:restriction>
  </xs:simpleType>
  <!--components-->
  <xs:simpleType name="FaultTypes">
    <xs:annotation>
      <xs:documentation>Тип ошибки</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="SECURITY">
        <xs:annotation>
          <xs:documentation>Непредвиденная ошибка приложения</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BUSINESS">
        <xs:annotation>
          <xs:documentation>Бизнес ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="UNEXPECTED">
        <xs:annotation>
          <xs:documentation>Ошибка безопасности</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnSS7p3FNh_8wLXK8udGqJm7rStsY6PEA2y7TSJzHwlKD.AJowdwT9hsf_YtopHhe1EUart7ccDdJgLOU9M990w9i</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:core="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns:tns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://emias.mos.ru/suppmeinfo/core/v2/" schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnSS7p3FNh_8wLXK8udGqJm7rRNEO5LwXhUXGS5TxKNn8g_rbOFOcUEH812oD"/>
  <xs:complexType name="MedicalInfoResultPage">
    <xs:annotation>
      <xs:documentation>Результаты отбора сведений о мед работниках</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="employee" type="core:Employee">
            <xs:annotation>
              <xs:documentation>Сведения о мед работнике</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SearchEmployeeResultPage">
    <xs:annotation>
      <xs:documentation>Результаты отбора сведений о мед работниках</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="employee" type="core:EmployeeList">
            <xs:annotation>
              <xs:documentation>Сведения о мед работнике</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="getMeInfoByJobIdRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" name="jobIds">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" name="jobId" type="core:ID"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
        <xs:element minOccurs="0" ref="core:pagingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="getMeInfoByJobIdResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getMedicalEmployeeJobInfo</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:MedicalInfoResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchEmployeesRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" name="searchParameters">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="employeeInfo">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="employeeId" type="core:ID"/>
                    <xs:element minOccurs="0" name="snils" type="xs:string"/>
                    <xs:element minOccurs="0" name="lastName" type="xs:string"/>
                    <xs:element minOccurs="0" name="firstName" type="xs:string"/>
                    <xs:element minOccurs="0" name="secondName" type="xs:string"/>
                    <xs:element minOccurs="0" name="gender" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="jobInfo">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" name="jobId" type="core:ID"/>
                    <xs:element minOccurs="0" name="moId" type="core:ID"/>
                    <xs:element minOccurs="0" name="muId" type="core:ID"/>
                    <xs:element minOccurs="0" name="muDepartmentId" type="core:ID"/>
                    <xs:element minOccurs="0" name="patientAgeGroupCodes">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" name="patientAgeGroupCode" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" name="specialityIds">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element maxOccurs="unbounded" name="specialityId" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" name="positionTypeId" type="core:ID"/>
                    <xs:element minOccurs="0" name="positionKindId" type="xs:string"/>
                    <xs:element minOccurs="0" name="assistanceTypeId" type="xs:string"/>
                    <xs:element minOccurs="0" name="assistanceConditionId" type="xs:string"/>
                    <xs:element minOccurs="0" name="tapCode" type="xs:string"/>
                    <xs:element minOccurs="0" name="preferentialCode" type="xs:string"/>
                    <xs:element minOccurs="0" name="startDate">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element minOccurs="0" name="startDateIn" type="xs:date"/>
                          <xs:element minOccurs="0" name="startDateOut" type="xs:date"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" name="jobIsActive" type="xs:boolean"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
        <xs:element minOccurs="0" ref="core:pagingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchEmployeesResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода getMedicalEmployeeJobInfo</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:SearchEmployeeResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchEmployeesOptionalRequest">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="1" name="searchParameters">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="employeeInfo" type="core:EmployeeInfoRequest"/>
              <xs:element minOccurs="0" name="jobInfo" type="core:JobInfoRequest"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" name="outputParameters">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="outputParameter" type="xs:string"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element minOccurs="0" ref="core:options"/>
        <xs:element minOccurs="0" ref="core:pagingOptions"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="searchEmployeesOptionalResponse">
    <xs:annotation>
      <xs:documentation>Выходные параметры метода searchEmployeesOptional</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="result" type="tns:SearchEmployeeResultPage"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnSS7p3FNh_8wLXK8udGqJm7rRNEO5LwXhUXGS5TxKNn8g_rbOFOcUEH812oD</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns:tns="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELiUCf89H7RkzAWIKlGTmAmSzpjXxvUOr.UVaYQt4toRKFChcG9OdO5IRmbKVQqlKc5JjvT7bNqZoTg3qZ_PeWk7MyPYh7Za1OR.DgI_QGQOlnW_44T4QhukoNGOi892pKWC2Cd0T8_dPwVqQQIPMm8M.xCm.uNXE4SV.sjfB9A--"/>
  <xs:complexType name="IdNameType">
    <xs:sequence>
      <xs:element name="id" type="ID">
        <xs:annotation>
          <xs:documentation>Ид</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IdNameStringType">
    <xs:sequence>
      <xs:element name="id" type="xs:string">
        <xs:annotation>
          <xs:documentation>Ид</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IdNameOGRNType">
    <xs:complexContent>
      <xs:extension base="IdNameType">
        <xs:sequence>
          <xs:element minOccurs="0" name="ogrn" type="xs:string">
            <xs:annotation>
              <xs:documentation>ОГРН</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EmployeeInfo">
    <xs:annotation>
      <xs:documentation>Группирующая сущность информации о сотруднике</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="employeeId" type="ID">
        <xs:annotation>
          <xs:documentation>Идентификатор МР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="snils" type="xs:string">
        <xs:annotation>
          <xs:documentation>СНИЛС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="firstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Имя сотрудника</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="secondName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Отчество сотрудника</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="lastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия сотрудника</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="gender" type="xs:string">
        <xs:annotation>
          <xs:documentation>Пол</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="phone" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер телефона</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="email" type="xs:string">
        <xs:annotation>
          <xs:documentation>Электронная почта</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="birthDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата рождения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="updateDate" type="xs:dateTime">
        <xs:annotation>
          <xs:documentation>Дата последнего обновления</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="JobInfo">
    <xs:annotation>
      <xs:documentation>Группирующая сущность информации об исполняемой должности сотрудника</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="jobId" type="ID"/>
      <xs:element minOccurs="0" name="mo" type="IdNameOGRNType"/>
      <xs:element name="mu" type="IdNameType"/>
      <xs:element name="muDepartment" type="IdNameType"/>
      <xs:element name="speciality" type="IdNameStringType"/>
      <xs:element minOccurs="0" name="position" type="IdNameStringType"/>
      <xs:element minOccurs="0" name="positionType" type="IdNameType"/>
      <xs:element minOccurs="0" name="positionKind" type="IdNameStringType"/>
      <xs:element minOccurs="0" name="assistanceType" type="IdNameStringType"/>
      <xs:element minOccurs="0" name="assistanceCondition" type="IdNameType"/>
      <xs:element minOccurs="0" name="period">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="tapCode" type="xs:string"/>
      <xs:element minOccurs="0" name="preferentialCode" type="xs:string"/>
      <xs:element minOccurs="0" name="archived" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Employee">
    <xs:annotation>
      <xs:documentation>Группирующая сущность с информацией о сотруднике</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="employeeInfo" type="EmployeeInfo"/>
      <xs:element name="jobInfo" type="JobInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EmployeeList">
    <xs:annotation>
      <xs:documentation>Группирующая сущность с информацией о сотруднике</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="employeeInfo" type="EmployeeInfo"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="jobInfo" type="JobInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EmployeeInfoRequest">
    <xs:annotation>
      <xs:documentation>Фильтры поиска по сведениям МР</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="employeeId" type="ID"/>
      <xs:element minOccurs="0" name="snils" type="xs:string"/>
      <xs:element minOccurs="0" name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="firstName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element minOccurs="0" name="gender" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="JobInfoRequest">
    <xs:annotation>
      <xs:documentation>Фильтры поиска по сведениям исполнения должности МР</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="jobId" type="ID"/>
      <xs:element minOccurs="0" name="moId" type="ID"/>
      <xs:element minOccurs="0" name="muId" type="ID"/>
      <xs:element minOccurs="0" name="muDepartmentId" type="ID"/>
      <xs:element minOccurs="0" name="specialityIds">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="specialityId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="positionTypeId" type="ID"/>
      <xs:element minOccurs="0" name="positionKindId" type="xs:string"/>
      <xs:element minOccurs="0" name="assistanceTypeId" type="xs:string"/>
      <xs:element minOccurs="0" name="assistanceConditionId" type="xs:string"/>
      <xs:element minOccurs="0" name="tapCode" type="xs:string"/>
      <xs:element minOccurs="0" name="preferentialCode" type="xs:string"/>
      <xs:element minOccurs="0" name="startDate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="startDateIn" type="xs:date"/>
            <xs:element minOccurs="0" name="startDateOut" type="xs:date"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="jobIsActive" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint></con:endpoints><con:operation id="5541fefd-1910-44fb-a62c-6af6de22f636" isOneWay="false" action="getMeInfoByJobId" name="getMeInfoByJobId" bindingOperationName="getMeInfoByJobId" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="36db9d8d-e60e-4101-b132-a8add963d0b7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:getMeInfoByJobIdRequest>\r
         <typ:jobIds>\r
            <!--1 or more repetitions:-->\r
            <typ:jobId>?</typ:jobId>\r
         </typ:jobIds>\r
         <!--Optional:-->\r
         <v2:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </v2:options>\r
         <!--Optional:-->\r
         <v2:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </v2:pagingOptions>\r
      </typ:getMeInfoByJobIdRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/medicalEmployeeInfoPT/getMeInfoByJobIdRequest"/></con:call></con:operation><con:operation id="b87d4389-a3aa-45a1-8d56-53f167bc09b2" isOneWay="false" action="searchEmployees" name="searchEmployees" bindingOperationName="searchEmployees" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5eda052c-6d4a-47c4-abef-9a2881b326d9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:searchEmployeesRequest>\r
         <typ:searchParameters>\r
            <!--Optional:-->\r
            <typ:employeeInfo>\r
               <!--Optional:-->\r
               <typ:employeeId>?</typ:employeeId>\r
               <!--Optional:-->\r
               <typ:snils>?</typ:snils>\r
               <!--Optional:-->\r
               <typ:lastName>?</typ:lastName>\r
               <!--Optional:-->\r
               <typ:firstName>?</typ:firstName>\r
               <!--Optional:-->\r
               <typ:secondName>?</typ:secondName>\r
               <!--Optional:-->\r
               <typ:gender>?</typ:gender>\r
            </typ:employeeInfo>\r
            <!--Optional:-->\r
            <typ:jobInfo>\r
               <!--Optional:-->\r
               <typ:jobId>?</typ:jobId>\r
               <!--Optional:-->\r
               <typ:moId>?</typ:moId>\r
               <!--Optional:-->\r
               <typ:muId>?</typ:muId>\r
               <!--Optional:-->\r
               <typ:muDepartmentId>?</typ:muDepartmentId>\r
               <!--Optional:-->\r
               <typ:patientAgeGroupCodes>\r
                  <!--1 or more repetitions:-->\r
                  <typ:patientAgeGroupCode>?</typ:patientAgeGroupCode>\r
               </typ:patientAgeGroupCodes>\r
               <!--Optional:-->\r
               <typ:specialityIds>\r
                  <!--1 or more repetitions:-->\r
                  <typ:specialityId>?</typ:specialityId>\r
               </typ:specialityIds>\r
               <!--Optional:-->\r
               <typ:positionTypeId>?</typ:positionTypeId>\r
               <!--Optional:-->\r
               <typ:positionKindId>?</typ:positionKindId>\r
               <!--Optional:-->\r
               <typ:assistanceTypeId>?</typ:assistanceTypeId>\r
               <!--Optional:-->\r
               <typ:assistanceConditionId>?</typ:assistanceConditionId>\r
               <!--Optional:-->\r
               <typ:tapCode>?</typ:tapCode>\r
               <!--Optional:-->\r
               <typ:preferentialCode>?</typ:preferentialCode>\r
               <!--Optional:-->\r
               <typ:startDate>\r
                  <!--Optional:-->\r
                  <typ:startDateIn>?</typ:startDateIn>\r
                  <!--Optional:-->\r
                  <typ:startDateOut>?</typ:startDateOut>\r
               </typ:startDate>\r
               <!--Optional:-->\r
               <typ:jobIsActive>?</typ:jobIsActive>\r
            </typ:jobInfo>\r
         </typ:searchParameters>\r
         <!--Optional:-->\r
         <v2:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </v2:options>\r
         <!--Optional:-->\r
         <v2:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </v2:pagingOptions>\r
      </typ:searchEmployeesRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/medicalEmployeeInfoPT/searchEmployeesRequest"/></con:call></con:operation><con:operation id="fc8de051-7fce-4108-a091-816fad09d7d2" isOneWay="false" action="searchEmployeesOptional" name="searchEmployeesOptional" bindingOperationName="searchEmployeesOptional" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c7d677c4-ae53-4e55-91c8-300f0475ac17" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">\r
   <soap:Header>\r
      <user:userContext>\r
         <user:systemName>?</user:systemName>\r
         <user:userName>?</user:userName>\r
         <user:userRoleId>?</user:userRoleId>\r
         <!--Optional:-->\r
         <user:isUserRoleSystemWide>?</user:isUserRoleSystemWide>\r
         <user:userRights>\r
            <!--Zero or more repetitions:-->\r
            <user:userRightId>?</user:userRightId>\r
         </user:userRights>\r
         <user:jobExecutionId>?</user:jobExecutionId>\r
         <!--Optional:-->\r
         <user:hostIp>?</user:hostIp>\r
         <!--Optional:-->\r
         <user:hostName>?</user:hostName>\r
         <!--Optional:-->\r
         <user:options>\r
            <!--Zero or more repetitions:-->\r
            <user:entry key="?">?</user:entry>\r
         </user:options>\r
      </user:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <typ:searchEmployeesOptionalRequest>\r
         <typ:searchParameters>\r
            <!--Optional:-->\r
            <typ:employeeInfo>\r
               <!--Optional:-->\r
               <v2:employeeId>?</v2:employeeId>\r
               <!--Optional:-->\r
               <v2:snils>?</v2:snils>\r
               <!--Optional:-->\r
               <v2:lastName>?</v2:lastName>\r
               <!--Optional:-->\r
               <v2:firstName>?</v2:firstName>\r
               <!--Optional:-->\r
               <v2:secondName>?</v2:secondName>\r
               <!--Optional:-->\r
               <v2:gender>?</v2:gender>\r
            </typ:employeeInfo>\r
            <!--Optional:-->\r
            <typ:jobInfo>\r
               <!--Optional:-->\r
               <v2:jobId>?</v2:jobId>\r
               <!--Optional:-->\r
               <v2:moId>?</v2:moId>\r
               <!--Optional:-->\r
               <v2:muId>?</v2:muId>\r
               <!--Optional:-->\r
               <v2:muDepartmentId>?</v2:muDepartmentId>\r
               <!--Optional:-->\r
               <v2:specialityIds>\r
                  <!--1 or more repetitions:-->\r
                  <v2:specialityId>?</v2:specialityId>\r
               </v2:specialityIds>\r
               <!--Optional:-->\r
               <v2:positionTypeId>?</v2:positionTypeId>\r
               <!--Optional:-->\r
               <v2:positionKindId>?</v2:positionKindId>\r
               <!--Optional:-->\r
               <v2:assistanceTypeId>?</v2:assistanceTypeId>\r
               <!--Optional:-->\r
               <v2:assistanceConditionId>?</v2:assistanceConditionId>\r
               <!--Optional:-->\r
               <v2:tapCode>?</v2:tapCode>\r
               <!--Optional:-->\r
               <v2:preferentialCode>?</v2:preferentialCode>\r
               <!--Optional:-->\r
               <v2:startDate>\r
                  <!--Optional:-->\r
                  <v2:startDateIn>?</v2:startDateIn>\r
                  <!--Optional:-->\r
                  <v2:startDateOut>?</v2:startDateOut>\r
               </v2:startDate>\r
               <!--Optional:-->\r
               <v2:jobIsActive>?</v2:jobIsActive>\r
            </typ:jobInfo>\r
         </typ:searchParameters>\r
         <!--Optional:-->\r
         <typ:outputParameters>\r
            <!--Zero or more repetitions:-->\r
            <typ:outputParameter>?</typ:outputParameter>\r
         </typ:outputParameters>\r
         <!--Optional:-->\r
         <v2:options>\r
            <!--Zero or more repetitions:-->\r
            <v2:entry key="?">?</v2:entry>\r
         </v2:options>\r
         <!--Optional:-->\r
         <v2:pagingOptions pageNumber="?" pageSize="?">\r
            <!--Optional:-->\r
            <v2:sortingOptions>\r
               <!--1 to 3 repetitions:-->\r
               <v2:sortOrder attributeName="?" desceding="false"/>\r
            </v2:sortingOptions>\r
         </v2:pagingOptions>\r
      </typ:searchEmployeesOptionalRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/medicalEmployeeInfoPT/searchEmployeesOptionalRequest"/></con:call></con:operation></con:interface><con:testSuite id="692de010-9d12-4963-9a9f-ee2d49040727" name="getShortProgram"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5dd956ae-3c23-40ed-b554-c7fdeb8da9b9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="210558_АС1. Пациент без ПДН" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="afdae50f-5538-416c-9d9c-d29533cbdf00"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>19184405</con:value></con:property></con:properties></con:testCase><con:testCase id="85f9fb32-335e-4e3c-a595-339fea4d5c2f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390410_АС1. Архивный ПДН (archived = true)" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="e921e618-06ae-40b1-88a5-91d8f445e869"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-pdn" value="${#TestCase#Mock-pdn}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>19184405</con:value></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/390410</con:value></con:property></con:properties></con:testCase><con:testCase id="fe4e3603-31cb-469f-96e8-2cbce3991907" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390440_АС1. Архивный ПДН (endTime &lt; текущей даты)" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="25c1060b-d69d-449c-ab5c-527e04a1c4b0"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-pdn" value="${#TestCase#Mock-pdn}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>19184405</con:value></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/390440</con:value></con:property></con:properties></con:testCase><con:testCase id="bd1fdff8-f701-4010-8673-4a2da894d0bb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390435_АС1. Ошибка E002" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="406c5051-3d13-4b97-bf8e-0b992a94a53b"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-pdn" value="${#TestCase#Mock-pdn}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" name="getPlanExtention" id="b452076c-a713-4ae2-87c2-5204a74e1287" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="getPlanExtention" id="ba633d93-c667-4921-9492-b05f536b48f4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-9d130c8c-53c1-4cf0-94af-d0da7dd509fa" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
<ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <GetPlanExtensionRequest xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">
         <patientId>${#TestCase#Id}111</patientId>
      </GetPlanExtensionRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="97a7f3a9-b5c8-448b-895a-1abbb5c118e7"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>19184405</con:value></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/390435</con:value></con:property></con:properties></con:testCase><con:testCase id="67087412-ab4e-4b48-93d2-f650aed4045c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390437_АС1. Ошибка E005" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="d6592207-010e-4597-b167-d3acd7aaaa5a"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-pdn" value="${#TestCase#Mock-pdn}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 204"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>19184405</con:value></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/390437</con:value></con:property></con:properties></con:testCase><con:testCase id="35eff24a-877c-4741-9755-65746c1b0a60" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="375964_АС2. PDN_ERROR" searchProperties="true"><con:settings/><con:testStep type="request" name="getPlanExtention" id="3417593d-2fc3-4a65-85bb-98cd192ffd70" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="getPlanExtention" id="ba633d93-c667-4921-9492-b05f536b48f4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-9d130c8c-53c1-4cf0-94af-d0da7dd509fa" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
<ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <GetPlanExtensionRequest xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">
         <patientId>123</patientId>
      </GetPlanExtensionRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="97a7f3a9-b5c8-448b-895a-1abbb5c118e7"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="getShortProgram" id="05f57b2d-cede-4261-9e6b-80f95b64cef3"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Mock-pdn" value="${#TestCase#Mock-pdn}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 503"><con:configuration><codes>503</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="34a7eeb3-5992-461d-b8bc-204940ebe9c7" name="error.code = PDN_ERROR"><con:configuration><path>$.error.code</path><content>PDN_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="34a7eeb3-5992-461d-b8bc-204940ebe9c7" name="error.description = Ошибка получения программы диспансерного наблюдения"><con:configuration><path>$.error.description</path><content>Ошибка получения программы диспансерного наблюдения</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="34a7eeb3-5992-461d-b8bc-204940ebe9c7" name="error.type = TECHNICAL"><con:configuration><path>$.error.type</path><content>TECHNICAL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="34a7eeb3-5992-461d-b8bc-204940ebe9c7" name="error.origin = [ERROR] E099:  Не удалось получить ответ от сервиса"><con:configuration><path>$.error.origin</path><content>[ERROR] E099:  Не удалось получить ответ от сервиса</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>id</con:name><con:value>25517322</con:value></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/375964</con:value></con:property></con:properties></con:testCase><con:testCase id="008254ce-ae4b-48bc-81cd-9c9f510b4ea7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="375965_АС3. RECIPE_ERROR" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="75af8a2c-6dff-4dad-b7bd-d6d35f3d0e35"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="${#TestCase#Mock-pdn}"/>&#13;
  &lt;con:entry key="Mock-supp" value="${#TestCase#Mock-supp}"/>&#13;
  &lt;con:entry key="Mock-llo" value="${#TestCase#Mock-llo}"/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07a0d738-c9b1-45b3-8a17-f5d2b25885f8" name="prescriptions.error.code = RECIPE_ERROR"><con:configuration><path>$.payload.prescriptions.error.code</path><content>RECIPE_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07a0d738-c9b1-45b3-8a17-f5d2b25885f8" name="prescriptions.error.description = Не удалось уточнить сведения о рецептах"><con:configuration><path>$.payload.prescriptions.error.description</path><content>Не удалось уточнить сведения о рецептах</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07a0d738-c9b1-45b3-8a17-f5d2b25885f8" name="prescriptions.error.type = BUSINESS"><con:configuration><path>$.payload.prescriptions.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07a0d738-c9b1-45b3-8a17-f5d2b25885f8" name="prescriptions.error.origin = Пациент не найден."><con:configuration><path>$.payload.prescriptions.error.origin</path><content>Пациент не найден.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e71762ca-e857-44ea-8aec-c0c2d2a765b9" name="shortProgram соответствует"><con:configuration><path>$.payload.shortProgram</path><content>{"planId":"6716","documentId":"32947792-d125-4799-8a5f-9b011b61ca34","assignment":{"count":5,"endDate":"2024-03-01T23:59:59","assignments":[{"destinationType":"Назначение в текущую МО","assignmentId":"32261963","title":"ЭКГ","period":{"startDate":"2024-01-01T00:00:00","endDate":"2024-03-01T23:59:59"},"suppReferralId":74444356680,"type":"instrumental"},{"destinationType":"Назначение в текущую МО","assignmentId":"32261964","title":"Флюорография легких профилактическая","period":{"startDate":"2024-01-01T00:00:00","endDate":"2024-03-01T23:59:59"},"suppReferralId":74444356682,"type":"instrumental"},{"destinationType":"Назначение в текущую МО","assignmentId":"152062792","title":"Общий клинический анализ крови (общий анализ + СОЭ); микроскопическое исследование мазка крови при выявлении патологии","period":{"startDate":"2024-01-01T00:00:00","endDate":"2024-03-01T23:59:59"},"type":"laboratory"},{"destinationType":"Назначение в текущую МО","assignmentId":"152062794","title":"Определение функций концентрирования и разведения мочи (по Зимницкому) порция 1 (09:00)","period":{"startDate":"2024-01-01T00:00:00","endDate":"2024-03-01T23:59:59"},"type":"laboratory"},{"destinationType":"Назначение в текущую МО","assignmentId":"152062793","title":"Обнаружение простейших в кале","period":{"startDate":"2024-01-01T00:00:00","endDate":"2024-03-01T23:59:59"},"type":"laboratory"}]}}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="17aacf26-5214-41c9-b0a4-7f744ed1bfd7" name="dispensaryObservationInfo соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo</path><content>{"doctor":{"jobId":"15869869716","fioFull":"Данилов Василий","speciality":"Врач общей практики (семейный врач)"},"diagnosis":[{"code":"I48.0","title":"Пароксизмальная форма фибрилляции предсердий"}],"mo":{"id":204,"name":"ГБУЗ ГП №175 ДЗМ"}}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" name="PiPrescriptions" id="9646ae4c-3237-4886-a515-1f24324bac12" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="PiPrescriptions" id="f07d5aff-8086-4add-83ed-8bb081aa7ceb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>123</typ:oms>\r
         <typ:prescriptionNumber>${#TestCase#prescriptionNumber}</typ:prescriptionNumber>\r
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bd6db1a0-c52d-48f1-aab1-4b1cd1b0b58d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>15869869716</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/375965</con:value></con:property><con:property><con:name>Mock-supp</con:name><con:value>${#Project#Mock-url}/293219</con:value></con:property><con:property><con:name>Mock-llo</con:name><con:value>${#Project#Mock-url}/375965</con:value></con:property></con:properties></con:testCase><con:testCase id="4844d5ae-f8ba-4474-adac-dc0e7805a14b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="375966_АС4. MEDICAL_EMPLOYEE_ERROR" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="eae54260-de48-4d97-ba92-18fe0ee22371"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="${#TestCase#Mock-pdn}"/>&#13;
  &lt;con:entry key="Mock-supp" value="${#TestCase#Mock-supp}"/>&#13;
  &lt;con:entry key="Mock-llo" value="${#TestCase#Mock-llo}"/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7a78a2dc-0628-4a4d-86d4-79240ddeb186" name="dispensaryObservationInfo.doctor.error.code = MEDICAL_EMPLOYEE_ERROR"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor.error.code</path><content>MEDICAL_EMPLOYEE_ERROR</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7a78a2dc-0628-4a4d-86d4-79240ddeb186" name="dispensaryObservationInfo.doctor.error.description = Не удалось уточнить сведения о мед.работнике"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor.error.description</path><content>Не удалось уточнить сведения о мед.работнике</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7a78a2dc-0628-4a4d-86d4-79240ddeb186" name="dispensaryObservationInfo.doctor.error.type = BUSINESS"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7a78a2dc-0628-4a4d-86d4-79240ddeb186" name="dispensaryObservationInfo.doctor.error.origin соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor.error.origin</path><content>org.apache.cxf.binding.soap.SoapFault: bad request</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="93828377-00f1-439a-b03e-2e19e345153f" name="dispensaryObservationInfo.diagosis соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.diagnosis</path><content>[{"code":"E11.3","title":"Инсулиннезависимый сахарный диабет с поражениями глаз"},{"code":"G45.4","title":"Транзиторная глобальная амнезия"},{"code":"I48.0","title":"Пароксизмальная форма фибрилляции предсердий"},{"code":"K26.0","title":"Язва двенадцатиперстной кишки острая с кровотечением"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="93828377-00f1-439a-b03e-2e19e345153f" name="shortProgram соответствует"><con:configuration><path>$.payload.shortProgram</path><content>{"planId":"11684","documentId":"c048e43e-e217-4589-a740-5e82b755ae3c","assignment":{"count":18,"endDate":"2024-04-01T23:59:59","assignments":[{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Исследование микроальбумина","period":{"startDate":"2024-02-01T00:00:00","endDate":"2024-04-01T23:59:59"},"type":"laboratory"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Флюорография легких профилактическая","period":{"startDate":"2024-02-01T00:00:00","endDate":"2024-04-01T23:59:59"},"type":"instrumental"},{"destinationType":"Назначение в текущую МО","title":"Неврология","period":{"startDate":"2024-03-01T00:00:00","endDate":"2024-04-30T23:59:59"},"controlCheckUp":true,"type":"consultation"},{"destinationType":"Назначение в текущую МО","title":"Терапия","period":{"startDate":"2024-04-01T00:00:00","endDate":"2024-05-31T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Исследование микроальбумина","period":{"startDate":"2024-04-01T00:00:00","endDate":"2024-05-31T23:59:59"},"type":"laboratory"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Флюорография легких профилактическая","period":{"startDate":"2024-04-01T00:00:00","endDate":"2024-05-31T23:59:59"},"type":"instrumental"},{"destinationType":"Назначение в текущую МО","title":"Неврология","period":{"startDate":"2024-05-01T00:00:00","endDate":"2024-06-30T23:59:59"},"controlCheckUp":true,"type":"consultation"},{"destinationType":"Назначение в текущую МО","title":"Неврология","period":{"startDate":"2024-06-01T00:00:00","endDate":"2024-07-31T23:59:59"},"controlCheckUp":true,"type":"consultation"},{"destinationType":"Назначение в текущую МО","title":"Терапия","period":{"startDate":"2024-06-01T00:00:00","endDate":"2024-07-31T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Исследование микроальбумина","period":{"startDate":"2024-06-01T00:00:00","endDate":"2024-07-31T23:59:59"},"type":"laboratory"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Флюорография легких профилактическая","period":{"startDate":"2024-06-01T00:00:00","endDate":"2024-07-31T23:59:59"},"type":"instrumental"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Флюорография легких профилактическая","period":{"startDate":"2024-07-01T00:00:00","endDate":"2024-08-30T23:59:59"},"type":"instrumental"},{"destinationType":"Назначение в текущую МО","title":"Неврология","period":{"startDate":"2024-08-01T00:00:00","endDate":"2024-09-30T23:59:59"},"controlCheckUp":true,"type":"consultation"},{"destinationType":"Направление в стационар","destinationMedicalOrganizationId":10361028,"destinationMedicalOrganizationName":"ФГБУ \"НМИЦ Гематологии\" Минздрава России","title":"Психотерапия","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Направление в стационар","destinationMedicalOrganizationId":10843803,"destinationMedicalOrganizationName":"ООО Центр охраны зрения детей и подростков","title":"Оториноларингология и сурдология","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Направление в стационар","destinationMedicalOrganizationId":10843803,"destinationMedicalOrganizationName":"ООО Центр охраны зрения детей и подростков","assignmentId":"null","title":"Определение липопротеинов низкой плотности (ЛПНП-бета)","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"type":"laboratory"},{"destinationType":"Направление в стационар","destinationMedicalOrganizationId":11359378,"destinationMedicalOrganizationName":"ФГБУН \"ФИЦ Питания и Биотехнологии\"","title":"Физиотерапия","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Направление по маршруту","assignmentId":"null","title":"Определение липопротеинов низкой плотности (ЛПНП-бета)","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"type":"laboratory"}]}}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="93828377-00f1-439a-b03e-2e19e345153f" name="prescriptions соответствует"><con:configuration><path>$.payload.prescriptions</path><content>{"items":[{"prescriptionState":"active","prescriptionNumber":"00Д4519366100","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2024-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д4519367100","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"benefit","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2024-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д4519368100","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2024-12-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д4519366101","type":"benefit","usage":"Применять  в течение 10 дней, 3 раз в день по 65 мг","expirationDate":"2024-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д4519366102","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 9 дней, 2 раз в день по 65 мг","expirationDate":"2024-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д4519366103","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 9 дней, 2 раз в день по 65 мг","expirationDate":"2024-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д4519366104","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2024-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д4519366105","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"commercial","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2024-11-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д4519366106","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"commercial","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2024-11-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д4519366107","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"commercial","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2023-11-05"}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" name="getMeInfo" id="3369fdc5-e5eb-4d48-92bb-7b4ec373810a" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>meiPTBv2</con:interface><con:operation>getMeInfoByJobId</con:operation><con:request name="getMeInfo" id="1f158fd7-a141-4499-8607-c8098ed7170c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#suppmeinfoEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-0d393076-a609-42b0-a17e-567f0e8b81a2" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
         <ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <typ:getMeInfoByJobIdRequest>
         <typ:jobIds>
            <typ:jobId>${#TestCase#jobId}+</typ:jobId>
         </typ:jobIds>
      </typ:getMeInfoByJobIdRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="525d1d6c-77d7-4600-8311-6842a1095b40"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>123456</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/209774</con:value></con:property><con:property><con:name>Mock-supp</con:name><con:value>${#Project#Mock-url}/375966</con:value></con:property><con:property><con:name>Mock-llo</con:name><con:value>${#Project#Mock-url}/209774</con:value></con:property></con:properties></con:testCase><con:testCase id="1b662f8f-ccc2-4ebd-8527-d3d508f778f3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="375967_АС5. SUDIR_TOKEN_EXPIRED" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="a15976f8-60e3-48e1-a4c0-a778492fd8a9"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 401"><con:configuration><codes>401</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e13a6156-0380-4ebe-bb2d-6697869161de" name="error.code = SUDIR_TOKEN_EXPIRED"><con:configuration><path>$.error.code</path><content>SUDIR_TOKEN_EXPIRED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e13a6156-0380-4ebe-bb2d-6697869161de" name="error.description = Время действия токена в СУДИР истекло"><con:configuration><path>$.error.description</path><content>Время действия токена в СУДИР истекло</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e13a6156-0380-4ebe-bb2d-6697869161de" name="error.type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}1"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>123456</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="5ae8a8c6-9dda-4c42-8cdf-9773f5fc212b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390439_АС5. ACCESS_DENIED" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="140080fa-3864-46b4-a1ca-d6f0373e0d07"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value=""/>&#13;
  &lt;con:entry key="Mock-supp" value=""/>&#13;
  &lt;con:entry key="Mock-llo" value=""/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 403"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e13a6156-0380-4ebe-bb2d-6697869161de" name="error.code = ACCESS_DENIED"><con:configuration><path>$.error.code</path><content>ACCESS_DENIED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e13a6156-0380-4ebe-bb2d-6697869161de" name="error.description = Доступ к запрошенной медкарте отсутствует"><con:configuration><path>$.error.description</path><content>Доступ к запрошенной медкарте отсутствует</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e13a6156-0380-4ebe-bb2d-6697869161de" name="error.type = BUSINESS"><con:configuration><path>$.error.type</path><content>BUSINESS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}1"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>123456</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="07e974ae-bdfe-4763-b9bd-606a0a7b305f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390441_Формирование fioFull с отсутствующими параметрами" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="e2448012-9498-4cb4-adc5-053dd04d9034"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="${#TestCase#Mock-pdn}"/>&#13;
  &lt;con:entry key="Mock-supp" value="${#TestCase#Mock-supp}"/>&#13;
  &lt;con:entry key="Mock-llo" value="${#TestCase#Mock-llo}"/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bf3d20f3-e5be-4761-afe6-3a3c90d54420" name="doctor.fioFull соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor.fioFull</path><content>Данилов</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>15869869716</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/209774</con:value></con:property><con:property><con:name>Mock-supp</con:name><con:value>${#Project#Mock-url}/390441</con:value></con:property><con:property><con:name>Mock-llo</con:name><con:value>${#Project#Mock-url}/209774</con:value></con:property></con:properties></con:testCase><con:testCase id="4dc32f06-8abd-4c11-b5f2-1c17efe42ac2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390606_Проверка выборки рецептов из ответа getPlanExtension" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Доделать, когда можно будет подключаться к логам" id="b3450f3d-947b-4d20-95be-069dc0d2b6db"><con:description/><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Чтобы проверить корректность выборки рецептов, необходимо посмотреть,
что ушло в запросе к методу PIPatientPrescriptions.
В запросе должны быть только следующие номера рецептов:
00Д0000000001
00Д0000000002
00Д0000000003
00Д0000000004
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Записать даты в проперти" id="be20042e-01de-42b5-9937-ec37e5c65858"><con:settings/><con:config><script>import java.text.SimpleDateFormat

// Записать в переменную текущую дату в формате yyyy-MM-dd
def today = new Date()
sdf = new SimpleDateFormat("yyyy-MM-dd")
def todayNewFormat = sdf.format(today)

// Записать дату завтра
def tomorrow = new Date()+1
def tomorrowNewFormat = sdf.format(tomorrow)

// Записать дату вчера
def yesterday = new Date()-1
def yesterdayNewFormat = sdf.format(yesterday)

testRunner.testCase.setPropertyValue("today", todayNewFormat.toString())
testRunner.testCase.setPropertyValue("tomorrow", tomorrowNewFormat.toString())
testRunner.testCase.setPropertyValue("yesterday", yesterdayNewFormat.toString())

</script></con:config></con:testStep><con:testStep type="groovy" name="Изменить response мока из текста внутри скрипта" id="0eb811f6-6495-4e94-9adc-737fcbd14438"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

//получить из свойств кейса данные мока
path = testRunner.testCase.getPropertyValue("path")
code = testRunner.testCase.getPropertyValue("code")
today = testRunner.testCase.getPropertyValue("today")
tomorrow = testRunner.testCase.getPropertyValue("tomorrow")
yesterday = testRunner.testCase.getPropertyValue("yesterday")

//подключиться к бд 
connection =testRunner.testCase.testSuite.project.getPropertyValue("mockDbFullConnection")
sql = Sql.newInstance(connection)

// Сформировать тело ответа от getPlanExtension, заменив даты
response="""<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
	<soap:Body>
		<GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
			<result>
				<ns2:id>11684</ns2:id>
				<ns2:jobExecutionId>13008809089</ns2:jobExecutionId>
				<ns2:diagnosis>
					<ns2:diagnosisCode>E11.3</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет с поражениями глаз</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:diagnosis>
					<ns2:diagnosisCode>G45.4</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Транзиторная глобальная амнезия</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:diagnosis>
					<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:diagnosis>
					<ns2:diagnosisCode>K26.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Язва двенадцатиперстной кишки острая с кровотечением</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:startTime>2023-11-13T00:00:00.000+03:00</ns2:startTime>
				<ns2:endTime>2030-11-30T23:59:59.999+03:00</ns2:endTime>
				<ns2:documentId>c048e43e-e217-4589-a740-5e82b755ae3c</ns2:documentId>
				<ns2:parentDocumentId>null</ns2:parentDocumentId>
				<ns2:moId>204</ns2:moId>
				<ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
				<ns2:status>STOPPED</ns2:status>
				<ns2:archived>false</ns2:archived>
				<ns2:planOfEventsDiagnosis>
					<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
				</ns2:planOfEventsDiagnosis>
				<ns2:planOfEventsDiagnosis>
					<ns2:diagnosisCode>G45.4</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Транзиторная глобальная амнезия</ns2:diagnosisTitle>
				</ns2:planOfEventsDiagnosis>
				<ns2:observationProgram>
					<ns2:id>158396645</ns2:id>
				</ns2:observationProgram>
				<ns2:observationProgram>
					<ns2:id>158396647</ns2:id>
				</ns2:observationProgram>
				<ns2:patientId>1723794691</ns2:patientId>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+today+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+today+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>PRESCRIPTED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000001</ns2:number>
							<ns2:status>PRESCRIPTED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+today+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+today+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>PRESCRIPTED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000002</ns2:number>
							<ns2:status>COMPLETED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+today+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+tomorrow+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>PRESCRIPTED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000003</ns2:number>
							<ns2:status>PRESCRIPTED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+yesterday+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+today+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:event>
							<ns2:id>256136</ns2:id>
							<ns2:eventStatus>COMPLETED</ns2:eventStatus>
							<ns2:archived>false</ns2:archived>
							<ns2:drugsEvent>
								<ns2:id>5751</ns2:id>
								<ns2:number>00Д0000000004</ns2:number>
								<ns2:status>COMPLETED</ns2:status>
								<ns2:drugTnId>3292</ns2:drugTnId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
							</ns2:drugsEvent>
							<ns2:diagnoses>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							</ns2:diagnoses>
							<ns2:referralCreated>false</ns2:referralCreated>
							<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
							<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
							<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
						</ns2:event>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+tomorrow+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+tomorrow+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000005</ns2:number>
							<ns2:status>PRESCRIPTED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+yesterday+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+yesterday+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>CREATED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000006</ns2:number>
							<ns2:status>COMPLETED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-02-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>UNFINISHED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000007</ns2:number>
							<ns2:status>PLANNED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-02-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256149</ns2:id>
						<ns2:eventStatus>CANCELLED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5764</ns2:id>
							<ns2:number>00Д0000000008</ns2:number>
							<ns2:status>CREATED</ns2:status>
							<ns2:drugTnId>11658</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Финлепсин ретард табл. пролонг. действ. 200 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-02-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256149</ns2:id>
						<ns2:eventStatus>EXPIRED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5764</ns2:id>
							<ns2:number>00Д0000000009</ns2:number>
							<ns2:status>UNFINISHED</ns2:status>
							<ns2:drugTnId>11658</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Финлепсин ретард табл. пролонг. действ. 200 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-01-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256149</ns2:id>
						<ns2:eventStatus>PRESCRIPTED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5764</ns2:id>
							<ns2:number>00Д0000000010</ns2:number>
							<ns2:status>CANCELLED</ns2:status>
							<ns2:drugTnId>11658</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Финлепсин ретард табл. пролонг. действ. 200 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-02-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256149</ns2:id>
						<ns2:eventStatus>COMPLETED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5764</ns2:id>
							<ns2:number>00Д0000000011</ns2:number>
							<ns2:status>EXPIRED</ns2:status>
							<ns2:drugTnId>11658</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Финлепсин ретард табл. пролонг. действ. 200 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:statusHistoryLists>
					<ns2:statusHistory>
						<ns2:currentStatus>STOPPED</ns2:currentStatus>
						<ns2:changeStatusReasonCode>pdnDiagnosisDoNotMatchDnWhenProgramCreated</ns2:changeStatusReasonCode>
						<ns2:changeStatusReasonDescription>Диагнозы программы не соответствуют проактивным диагнозам ДН на момент создания программы</ns2:changeStatusReasonDescription>
						<ns2:created>2023-11-13T14:06:07.020+03:00</ns2:created>
					</ns2:statusHistory>
				</ns2:statusHistoryLists>
			</result>
		</GetPlanExtensionResponse>
	</soap:Body>
</soap:Envelope>"""

//изменить запись
query="update template_response set response=' "+response+"' where \"path\"= '"+path+"'"
//log.info query
sql.execute(query)

]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getShortProgram" id="ee1367cf-80fe-4889-a0a1-52875b86d3a9"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="${#TestCase#Mock-pdn}"/>&#13;
  &lt;con:entry key="Mock-supp" value="${#TestCase#Mock-supp}"/>&#13;
  &lt;con:entry key="Mock-llo" value="${#TestCase#Mock-llo}"/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.doctor соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor</path><content>{"jobId":"13008809089","fioFull":"Данилов Василий Леонидович","speciality":"Врач общей практики (семейный врач)"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.diagnosis соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.diagnosis</path><content>[{"code":"E11.3","title":"Инсулиннезависимый сахарный диабет с поражениями глаз"},{"code":"G45.4","title":"Транзиторная глобальная амнезия"},{"code":"I48.0","title":"Пароксизмальная форма фибрилляции предсердий"},{"code":"K26.0","title":"Язва двенадцатиперстной кишки острая с кровотечением"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.planId соответствует"><con:configuration><path>$.payload.shortProgram.planId</path><content>11684</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.documentId соответствует"><con:configuration><path>$.payload.shortProgram.documentId</path><content>c048e43e-e217-4589-a740-5e82b755ae3c</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="prescriptions.items соответствует"><con:configuration><path>$.payload.prescriptions.items</path><content>[{"prescriptionState":"active","prescriptionNumber":"00Д0000000001","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2050-12-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д0000000002","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"benefit","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2050-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000003","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2050-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000004","type":"benefit","usage":"Применять  в течение 10 дней, 3 раз в день по 65 мг","expirationDate":"2050-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000005","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 9 дней, 2 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д0000000006","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"benefit","usage":"Применять  в течение 9 дней, 2 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000007","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000008","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"benefit","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000009","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"commercial","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д0000000010","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"benefit","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2050-11-05"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>15869869716</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/390606</con:value></con:property><con:property><con:name>Mock-supp</con:name><con:value>${#Project#Mock-url}/209774</con:value></con:property><con:property><con:name>Mock-llo</con:name><con:value>${#Project#Mock-url}/390606</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/390606/getPlanExtension</con:value></con:property><con:property><con:name>today</con:name><con:value>2024-02-05</con:value></con:property><con:property><con:name>tomorrow</con:name><con:value>2024-02-06</con:value></con:property><con:property><con:name>yesterday</con:name><con:value>2024-02-04</con:value></con:property></con:properties></con:testCase><con:testCase id="e82cfb47-e7ca-460c-a42d-fed5501f864d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390975_Проверка вернувшихся от ЛЛО рецептов" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Доделать, когда можно будет подключаться к логам" id="825d7e14-3a22-4b88-8267-5f7eae2e1864"><con:description/><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult>Чтобы проверить корректность выборки рецептов, необходимо посмотреть,
что ушло в запросе к методу PIPatientPrescriptions.
В запросе должны быть только следующие номера рецептов:
00Д0000000001
00Д0000000002
00Д0000000003
00Д0000000004
</con:expectedResult></con:config></con:testStep><con:testStep type="groovy" name="Записать даты в проперти" id="d9228fd1-b5e3-497d-9f9f-b7ca0f99e9c6"><con:settings/><con:config><script>import java.text.SimpleDateFormat

// Записать в переменную текущую дату в формате yyyy-MM-dd
def today = new Date()
sdf = new SimpleDateFormat("yyyy-MM-dd")
def todayNewFormat = sdf.format(today)

// Записать дату завтра
def tomorrow = new Date()+1
def tomorrowNewFormat = sdf.format(tomorrow)

// Записать дату вчера
def yesterday = new Date()-1
def yesterdayNewFormat = sdf.format(yesterday)

testRunner.testCase.setPropertyValue("today", todayNewFormat.toString())
testRunner.testCase.setPropertyValue("tomorrow", tomorrowNewFormat.toString())
testRunner.testCase.setPropertyValue("yesterday", yesterdayNewFormat.toString())

</script></con:config></con:testStep><con:testStep type="groovy" name="Изменить response мока из текста внутри скрипта" id="7166a8b4-161e-4bda-9494-c92f4ea2a5dc"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

//получить из свойств кейса данные мока
path = testRunner.testCase.getPropertyValue("path")
code = testRunner.testCase.getPropertyValue("code")
today = testRunner.testCase.getPropertyValue("today")
tomorrow = testRunner.testCase.getPropertyValue("tomorrow")
yesterday = testRunner.testCase.getPropertyValue("yesterday")

//подключиться к бд 
connection =testRunner.testCase.testSuite.project.getPropertyValue("mockDbFullConnection")
sql = Sql.newInstance(connection)

// Сформировать тело ответа от getPlanExtension, заменив даты
response="""<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
	<soap:Body>
		<GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
			<result>
				<ns2:id>11684</ns2:id>
				<ns2:jobExecutionId>13008809089</ns2:jobExecutionId>
				<ns2:diagnosis>
					<ns2:diagnosisCode>E11.3</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет с поражениями глаз</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:diagnosis>
					<ns2:diagnosisCode>G45.4</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Транзиторная глобальная амнезия</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:diagnosis>
					<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:diagnosis>
					<ns2:diagnosisCode>K26.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Язва двенадцатиперстной кишки острая с кровотечением</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:startTime>2023-11-13T00:00:00.000+03:00</ns2:startTime>
				<ns2:endTime>2030-11-30T23:59:59.999+03:00</ns2:endTime>
				<ns2:documentId>c048e43e-e217-4589-a740-5e82b755ae3c</ns2:documentId>
				<ns2:parentDocumentId>null</ns2:parentDocumentId>
				<ns2:moId>204</ns2:moId>
				<ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
				<ns2:status>STOPPED</ns2:status>
				<ns2:archived>false</ns2:archived>
				<ns2:planOfEventsDiagnosis>
					<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
				</ns2:planOfEventsDiagnosis>
				<ns2:planOfEventsDiagnosis>
					<ns2:diagnosisCode>G45.4</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Транзиторная глобальная амнезия</ns2:diagnosisTitle>
				</ns2:planOfEventsDiagnosis>
				<ns2:observationProgram>
					<ns2:id>158396645</ns2:id>
				</ns2:observationProgram>
				<ns2:observationProgram>
					<ns2:id>158396647</ns2:id>
				</ns2:observationProgram>
				<ns2:patientId>1723794691</ns2:patientId>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+today+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+today+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>PRESCRIPTED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000001</ns2:number>
							<ns2:status>PRESCRIPTED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+today+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+today+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>PRESCRIPTED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000002</ns2:number>
							<ns2:status>COMPLETED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+today+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+tomorrow+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>PRESCRIPTED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000003</ns2:number>
							<ns2:status>PRESCRIPTED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+yesterday+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+today+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:event>
							<ns2:id>256136</ns2:id>
							<ns2:eventStatus>COMPLETED</ns2:eventStatus>
							<ns2:archived>false</ns2:archived>
							<ns2:drugsEvent>
								<ns2:id>5751</ns2:id>
								<ns2:number>00Д0000000004</ns2:number>
								<ns2:status>COMPLETED</ns2:status>
								<ns2:drugTnId>3292</ns2:drugTnId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
							</ns2:drugsEvent>
							<ns2:diagnoses>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							</ns2:diagnoses>
							<ns2:referralCreated>false</ns2:referralCreated>
							<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
							<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
							<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
						</ns2:event>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+tomorrow+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+tomorrow+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000005</ns2:number>
							<ns2:status>PRESCRIPTED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>"""+yesterday+"""T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>"""+yesterday+"""T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>CREATED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000006</ns2:number>
							<ns2:status>COMPLETED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-02-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256136</ns2:id>
						<ns2:eventStatus>UNFINISHED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5751</ns2:id>
							<ns2:number>00Д0000000007</ns2:number>
							<ns2:status>PLANNED</ns2:status>
							<ns2:drugTnId>3292</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Депакин Хроно табл. п/об. пролонг. действ. 300 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-02-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256149</ns2:id>
						<ns2:eventStatus>CANCELLED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5764</ns2:id>
							<ns2:number>00Д0000000008</ns2:number>
							<ns2:status>CREATED</ns2:status>
							<ns2:drugTnId>11658</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Финлепсин ретард табл. пролонг. действ. 200 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-02-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256149</ns2:id>
						<ns2:eventStatus>EXPIRED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5764</ns2:id>
							<ns2:number>00Д0000000009</ns2:number>
							<ns2:status>UNFINISHED</ns2:status>
							<ns2:drugTnId>11658</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Финлепсин ретард табл. пролонг. действ. 200 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-01-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256149</ns2:id>
						<ns2:eventStatus>PRESCRIPTED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5764</ns2:id>
							<ns2:number>00Д0000000010</ns2:number>
							<ns2:status>CANCELLED</ns2:status>
							<ns2:drugTnId>11658</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Финлепсин ретард табл. пролонг. действ. 200 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2020-11-13T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-02-12T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>256149</ns2:id>
						<ns2:eventStatus>COMPLETED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:drugsEvent>
							<ns2:id>5764</ns2:id>
							<ns2:number>00Д0000000011</ns2:number>
							<ns2:status>EXPIRED</ns2:status>
							<ns2:drugTnId>11658</ns2:drugTnId>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
							<ns2:title>Финлепсин ретард табл. пролонг. действ. 200 мг</ns2:title>
						</ns2:drugsEvent>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
				</ns2:eventsPeriod>
				<ns2:statusHistoryLists>
					<ns2:statusHistory>
						<ns2:currentStatus>STOPPED</ns2:currentStatus>
						<ns2:changeStatusReasonCode>pdnDiagnosisDoNotMatchDnWhenProgramCreated</ns2:changeStatusReasonCode>
						<ns2:changeStatusReasonDescription>Диагнозы программы не соответствуют проактивным диагнозам ДН на момент создания программы</ns2:changeStatusReasonDescription>
						<ns2:created>2023-11-13T14:06:07.020+03:00</ns2:created>
					</ns2:statusHistory>
				</ns2:statusHistoryLists>
			</result>
		</GetPlanExtensionResponse>
	</soap:Body>
</soap:Envelope>"""

//изменить запись
query="update template_response set response=' "+response+"' where \"path\"= '"+path+"'"
//log.info query
sql.execute(query)

]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getShortProgram" id="7484d8b9-55d1-48a2-8af8-8ae68b25a7c5"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="${#TestCase#Mock-pdn}"/>&#13;
  &lt;con:entry key="Mock-supp" value="${#TestCase#Mock-supp}"/>&#13;
  &lt;con:entry key="Mock-llo" value="${#TestCase#Mock-llo}"/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.doctor соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor</path><content>{"jobId":"13008809089","fioFull":"Данилов Василий Леонидович","speciality":"Врач общей практики (семейный врач)"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.diagnosis соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.diagnosis</path><content>[{"code":"E11.3","title":"Инсулиннезависимый сахарный диабет с поражениями глаз"},{"code":"G45.4","title":"Транзиторная глобальная амнезия"},{"code":"I48.0","title":"Пароксизмальная форма фибрилляции предсердий"},{"code":"K26.0","title":"Язва двенадцатиперстной кишки острая с кровотечением"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.planId соответствует"><con:configuration><path>$.payload.shortProgram.planId</path><content>11684</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.documentId соответствует"><con:configuration><path>$.payload.shortProgram.documentId</path><content>c048e43e-e217-4589-a740-5e82b755ae3c</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="prescriptions.items соответствует"><con:configuration><path>$.payload.prescriptions.items</path><content>[{"prescriptionState":"active","prescriptionNumber":"00Д0000000001","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2050-12-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д0000000002","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"benefit","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2050-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000003","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 3 дней, 3 раз в день по 65 г","expirationDate":"2050-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000004","type":"benefit","usage":"Применять  в течение 10 дней, 3 раз в день по 65 мг","expirationDate":"2050-12-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000005","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 9 дней, 2 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д0000000006","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"benefit","usage":"Применять  в течение 9 дней, 2 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000007","title":"Депакин Хроно табл. п/об. пролонг. действ. 300 мг","type":"commercial","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000008","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"benefit","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"active","prescriptionNumber":"00Д0000000009","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"commercial","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2050-11-05"},{"prescriptionState":"completed","prescriptionNumber":"00Д0000000010","title":"Финлепсин ретард табл. пролонг. действ. 200 мг","type":"benefit","usage":"Применять  в течение 18 дней, 1 раз в день по 65 мг","expirationDate":"2050-11-05"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>15869869716</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/390606</con:value></con:property><con:property><con:name>Mock-supp</con:name><con:value>${#Project#Mock-url}/209774</con:value></con:property><con:property><con:name>Mock-llo</con:name><con:value>${#Project#Mock-url}/390606</con:value></con:property><con:property><con:name>path</con:name><con:value>/390606/getPlanExtension</con:value></con:property><con:property><con:name>today</con:name><con:value>2024-02-06</con:value></con:property><con:property><con:name>tomorrow</con:name><con:value>2024-02-07</con:value></con:property><con:property><con:name>yesterday</con:name><con:value>2024-02-05</con:value></con:property></con:properties></con:testCase><con:testCase id="8fb4e5e3-7fd2-4d32-8701-89f46790b4b2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="390993_Проверка assignment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Записать даты в проперти" id="b2d8f9e5-41c7-45e1-b31e-a2d5aad9ec5c"><con:settings/><con:config><script>import java.text.SimpleDateFormat
import java.time.LocalDateTime

// Записать в переменную текущую дату в формате yyyy-MM-dd'T'HH:mm:ss.SSSXXX + 1 минута
Date now = new Date()
Date nowPlusOneMin = LocalDateTime.now().plusMinutes(1).toDate()
sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def nowNewFormat = sdf.format(nowPlusOneMin)
testRunner.testCase.setPropertyValue("nowPlusOneMin", nowNewFormat.toString())
log.info nowNewFormat</script></con:config></con:testStep><con:testStep type="groovy" name="Изменить response мока из текста внутри скрипта" id="284956eb-cb5b-431d-91dd-170912327dc2"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

//получить из свойств кейса данные мока
path = testRunner.testCase.getPropertyValue("path")
code = testRunner.testCase.getPropertyValue("code")
today = testRunner.testCase.getPropertyValue("today")
tomorrow = testRunner.testCase.getPropertyValue("tomorrow")
yesterday = testRunner.testCase.getPropertyValue("yesterday")
nowPlusOneMin = testRunner.testCase.getPropertyValue("nowPlusOneMin")

//подключиться к бд 
connection =testRunner.testCase.testSuite.project.getPropertyValue("mockDbFullConnection")
sql = Sql.newInstance(connection)

// Сформировать тело ответа от getPlanExtension, заменив даты
response="""<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
	<soap:Body>
		<GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
			<result>
				<ns2:id>6716</ns2:id>
				<ns2:jobExecutionId>15869869716</ns2:jobExecutionId>
				<ns2:diagnosis>
					<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
				<ns2:endTime>2050-05-31T23:59:59.999+03:00</ns2:endTime>
				<ns2:documentId>32947792-d125-4799-8a5f-9b011b61ca34</ns2:documentId>
				<ns2:parentDocumentId>null</ns2:parentDocumentId>
				<ns2:moId>204</ns2:moId>
				<ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
				<ns2:status>ACTIVE</ns2:status>
				<ns2:archived>false</ns2:archived>
				<ns2:planOfEventsDiagnosis>
					<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
				</ns2:planOfEventsDiagnosis>
				<ns2:observationProgram>
					<ns2:id>158396645</ns2:id>
				</ns2:observationProgram>
				<ns2:patientId>104296741</ns2:patientId>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915001</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentLaboratoryExtended>
								<ns2:id>420220509001</ns2:id>
								<ns2:assignment_id>420220509001</ns2:assignment_id>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:laboratoryCode>ESLI.LI.7.10.1</ns2:laboratoryCode>
								<ns2:laboratoryTitle>Определение функций концентрирования и разведения мочи (по Зимницкому) порция 1 (09:00)</ns2:laboratoryTitle>
								<ns2:biomaterialCode>ESLI.BIOMATERIAL.2</ns2:biomaterialCode>
								<ns2:biomaterialTitle>Моча</ns2:biomaterialTitle>
								<ns2:locusCode>ESLI.LOCUS.42</ns2:locusCode>
								<ns2:locusTitle>Мочевой пузырь</ns2:locusTitle>
								<ns2:samplingTypeId>3</ns2:samplingTypeId>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:samplingTypeName>Забор самовзятых биоматериалов</ns2:samplingTypeName>
								<ns2:documentId>209ef8cc-d0e9-4ee6-8e56-9cf38d60be62</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:06.645+03:00</ns2:documentCreateDate>
								<ns2:moIdTakingBiomaterial>204</ns2:moIdTakingBiomaterial>
								<ns2:moNameTakingBiomaterial>ГБУЗ ГП №175 ДЗМ</ns2:moNameTakingBiomaterial>
							</ns2:assignmentLaboratoryExtended>
						</ns2:assignment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>				
					</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2049-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915002</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509002</ns2:id>
								<ns2:assignment_id>420220509002</ns2:assignment_id>
								<ns2:suppReferralId>74410126214</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>8d28f87b-6252-4ee5-8937-b5ee2c248589</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.911+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208002</ns2:id>
							<ns2:assignmentId>420220509002</ns2:assignmentId>
							<ns2:eventType>CANCEL</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Направление по маршруту</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
										</ns2:eventsPeriod>
														<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2049-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>9150021</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>4202205090021</ns2:id>
								<ns2:assignment_id>4202205090021</ns2:assignment_id>
								<ns2:suppReferralId>74410126214</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>8d28f87b-6252-4ee5-8937-b5ee2c248589</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.911+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>true</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>20240502080021</ns2:id>
							<ns2:assignmentId>4202205090021</ns2:assignmentId>
							<ns2:eventType>CANCEL</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Направление по маршруту</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
										</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2048-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915003</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentInstrumental>
								<ns2:id>420220509003</ns2:id>
								<ns2:assignment_id>420220509003</ns2:assignment_id>
								<ns2:suppReferralId>74410124164</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:mainDiagnosticId>12</ns2:mainDiagnosticId>
								<ns2:mainDiagnosticTitle>ЭКГ</ns2:mainDiagnosticTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>821eabce-55a4-4503-90d2-7ab7ec2f05f7</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:02.615+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:justification>Назначено по ПДН</ns2:justification>
							</ns2:assignmentInstrumental>
						</ns2:assignment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Направление в стационар</ns2:destinationType>
						<ns2:destinationMedicalOrganizationId>205</ns2:destinationMedicalOrganizationId>
						<ns2:destinationMedicalOrganizationId>205</ns2:destinationMedicalOrganizationId>
						<ns2:destinationMedicalOrganizationName>Больница 205</ns2:destinationMedicalOrganizationName>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915004</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509004</ns2:id>
								<ns2:assignment_id>420220509004</ns2:assignment_id>
								<ns2:suppReferralId>74410126214</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>8d28f87b-6252-4ee5-8937-b5ee2c248589</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.911+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>true</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208004</ns2:id>
							<ns2:assignmentId>420220509004</ns2:assignmentId>
							<ns2:eventType>CREATE</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915005</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentInstrumental>
								<ns2:id>420220509005</ns2:id>
								<ns2:assignment_id>420220509005</ns2:assignment_id>
								<ns2:suppReferralId>74410125189</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:mainDiagnosticId>34</ns2:mainDiagnosticId>
								<ns2:mainDiagnosticTitle>Флюорография легких профилактическая</ns2:mainDiagnosticTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>26350c6a-5374-46d2-907a-79fd044197f7</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.290+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:justification>Назначено по ПДН</ns2:justification>
							</ns2:assignmentInstrumental>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208005</ns2:id>
							<ns2:assignmentId>420220509005</ns2:assignmentId>
							<ns2:eventType>CHANGE</ns2:eventType>
							<ns2:type>LDP</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Обязательное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915006</ns2:id>
						<ns2:eventStatus>CREATED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentLaboratoryExtended>
								<ns2:id>420220509006</ns2:id>
								<ns2:assignment_id>420220509006</ns2:assignment_id>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:laboratoryCode>ESLI.LI.7.10.1</ns2:laboratoryCode>
								<ns2:laboratoryTitle>Определение функций концентрирования и разведения мочи (по Зимницкому) порция 1 (09:00)</ns2:laboratoryTitle>
								<ns2:biomaterialCode>ESLI.BIOMATERIAL.2</ns2:biomaterialCode>
								<ns2:biomaterialTitle>Моча</ns2:biomaterialTitle>
								<ns2:locusCode>ESLI.LOCUS.42</ns2:locusCode>
								<ns2:locusTitle>Мочевой пузырь</ns2:locusTitle>
								<ns2:samplingTypeId>3</ns2:samplingTypeId>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:samplingTypeName>Забор самовзятых биоматериалов</ns2:samplingTypeName>
								<ns2:documentId>209ef8cc-d0e9-4ee6-8e56-9cf38d60be62</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:06.645+03:00</ns2:documentCreateDate>
								<ns2:moIdTakingBiomaterial>204</ns2:moIdTakingBiomaterial>
								<ns2:moNameTakingBiomaterial>ГБУЗ ГП №175 ДЗМ</ns2:moNameTakingBiomaterial>
							</ns2:assignmentLaboratoryExtended>
						</ns2:assignment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915007</ns2:id>
						<ns2:eventStatus>COMPLETED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509007</ns2:id>
								<ns2:assignment_id>420220509007</ns2:assignment_id>
								<ns2:suppReferralId>74410126214</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>8d28f87b-6252-4ee5-8937-b5ee2c248589</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.911+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208007</ns2:id>
							<ns2:assignmentId>420220509007</ns2:assignmentId>
							<ns2:eventType>CANCEL</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915008</ns2:id>
						<ns2:eventStatus>UNFINISHED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentInstrumental>
								<ns2:id>420220509008</ns2:id>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:mainDiagnosticId>12</ns2:mainDiagnosticId>
								<ns2:mainDiagnosticTitle>ЭКГ</ns2:mainDiagnosticTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:status>CREATED</ns2:status>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:justification>Назначено по ПДН</ns2:justification>
							</ns2:assignmentInstrumental>
						</ns2:assignment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915012</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentLaboratoryExtended>
								<ns2:id>420220509012</ns2:id>
								<ns2:assignment_id>420220509012</ns2:assignment_id>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:laboratoryCode>ESLI.LI.C.2.2</ns2:laboratoryCode>
								<ns2:laboratoryTitle>Общий клинический анализ крови (общий анализ + СОЭ); микроскопическое исследование мазка крови при выявлении патологии</ns2:laboratoryTitle>
								<ns2:biomaterialCode>ESLI.BIOMATERIAL.1</ns2:biomaterialCode>
								<ns2:biomaterialTitle>Кровь цельная</ns2:biomaterialTitle>
								<ns2:locusCode>ESLI.LOCUS.1</ns2:locusCode>
								<ns2:locusTitle>Вена</ns2:locusTitle>
								<ns2:samplingTypeId>1</ns2:samplingTypeId>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:samplingTypeName>Взятие венозной крови</ns2:samplingTypeName>
								<ns2:documentId>f66117e6-2ce9-449a-94e8-df78c05b3074</ns2:documentId>
								<ns2:status>PLANNED</ns2:status>
							</ns2:assignmentLaboratoryExtended>
						</ns2:assignment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915013</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509013</ns2:id>
								<ns2:assignment_id>420220509013</ns2:assignment_id>
								<ns2:suppReferralId>74413203264</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>f6d37871-2660-422d-92f6-b93a2176b226</ns2:documentId>
								<ns2:status>UNFINISHED</ns2:status>
								<ns2:documentCreateDate>2023-06-01T00:00:29.079+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208013</ns2:id>
							<ns2:assignmentId>420220509013</ns2:assignmentId>
							<ns2:eventType>CANCEL</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915014</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentInstrumental>
								<ns2:id>420220509014</ns2:id>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:mainDiagnosticId>12</ns2:mainDiagnosticId>
								<ns2:mainDiagnosticTitle>ЭКГ</ns2:mainDiagnosticTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:status>UNFINISHED</ns2:status>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:justification>Назначено по ПДН</ns2:justification>
							</ns2:assignmentInstrumental>
						</ns2:assignment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915016</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509016</ns2:id>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:status>EXPIRED</ns2:status>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915017</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentInstrumental>
								<ns2:id>420220509017</ns2:id>
								<ns2:assignment_id>420220509017</ns2:assignment_id>
								<ns2:suppReferralId>74413179689</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:mainDiagnosticId>12</ns2:mainDiagnosticId>
								<ns2:mainDiagnosticTitle>ЭКГ</ns2:mainDiagnosticTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>e5a03e28-21d6-4c62-80ad-b642b018944b</ns2:documentId>
								<ns2:status>PRESCRIPTED</ns2:status>
								<ns2:documentCreateDate>2023-05-31T23:59:14.721+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:justification>Назначено по ПДН</ns2:justification>
							</ns2:assignmentInstrumental>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208017</ns2:id>
							<ns2:assignmentId>420220509017</ns2:assignmentId>
							<ns2:eventType>CANCEL</ns2:eventType>
							<ns2:type>LDP</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>	
				</ns2:eventsPeriod>
				<ns2:statusHistoryLists/>
			</result>
		</GetPlanExtensionResponse>
	</soap:Body>
</soap:Envelope>"""

//изменить запись
query="update template_response set response=' "+response+"' where \"path\"= '"+path+"'"
//log.info query
sql.execute(query)

]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getShortProgram" id="4f563b0c-ab81-48de-a127-59a1a430a40a"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="${#TestCase#Mock-pdn}"/>&#13;
  &lt;con:entry key="Mock-supp" value=""/>&#13;
  &lt;con:entry key="Mock-llo" value=""/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.doctor соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor</path><content>{"jobId":"15869869716","fioFull":"Данилов Василий Леонидович","speciality":"Врач общей практики (семейный врач)"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.diagnosis соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.diagnosis</path><content>[{"code":"I48.0","title":"Пароксизмальная форма фибрилляции предсердий"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.planId соответствует"><con:configuration><path>$.payload.shortProgram.planId</path><content>6716</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.documentId соответствует"><con:configuration><path>$.payload.shortProgram.documentId</path><content>32947792-d125-4799-8a5f-9b011b61ca34</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.appointment.appointmentId соответствует"><con:configuration><path>$.payload.shortProgram.appointment.appointmentId</path><content>[2024050208004,2024050208005]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="destinationType[0] = Направление в стационар"><con:configuration><path>$.payload.shortProgram.assignment.assignments[0].destinationType</path><content>Направление в стационар</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="destinationType[1] = Направление по маршруту"><con:configuration><path>$.payload.shortProgram.assignment.assignments[1].destinationType</path><content>Направление по маршруту</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="destinationType[2] = Направление по маршруту"><con:configuration><path>$.payload.shortProgram.assignment.assignments[2].destinationType</path><content>Направление по маршруту</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="destinationType[3] = Направление по маршруту"><con:configuration><path>$.payload.shortProgram.assignment.assignments[3].destinationType</path><content>Назначение в текущую МО</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="destinationMedicalOrganizationId[0] = 205"><con:configuration><path>$.payload.shortProgram.assignment.assignments[0].destinationMedicalOrganizationId</path><content>205</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="destinationMedicalOrganizationName[0] = Больница 205"><con:configuration><path>$.payload.shortProgram.assignment.assignments[0].destinationMedicalOrganizationName</path><content>Больница 205</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="controlCheckUp = false"><con:configuration><path>$.payload.shortProgram.assignment.assignments[1].controlCheckUp</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="controlCheckUp = true"><con:configuration><path>$.payload.shortProgram.assignment.assignments[2].controlCheckUp</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="assignments[0].type = instrumental"><con:configuration><path>$.payload.shortProgram.assignment.assignments[0].type</path><content>instrumental</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="assignments[1].type = consultation"><con:configuration><path>$.payload.shortProgram.assignment.assignments[1].type</path><content>consultation</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="assignments[3].type = laboratory"><con:configuration><path>$.payload.shortProgram.assignment.assignments[3].type</path><content>laboratory</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>25517322</con:value></con:property><con:property><con:name>jobId</con:name><con:value>15869869716</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/390993</con:value></con:property><con:property><con:name>Mock-supp</con:name><con:value>${#Project#Mock-url}/390993</con:value></con:property><con:property><con:name>Mock-llo</con:name><con:value>${#Project#Mock-url}/390993</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/390993/getPlanExtension</con:value></con:property><con:property><con:name>nowPlusOneMin</con:name><con:value>2024-02-06T08:14:34.227+03:00</con:value></con:property></con:properties></con:testCase><con:testCase id="1a8f9dc1-f324-46b5-ad3f-c6d8282ee577" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="391021_Проверка appointment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Записать даты в проперти" id="1c533210-bfae-41fa-9f2d-615de5504981"><con:settings/><con:config><script>import java.text.SimpleDateFormat
import java.time.LocalDateTime

// Записать в переменную текущую дату в формате yyyy-MM-dd'T'HH:mm:ss.SSSXXX + 1 минута
Date now = new Date()
Date nowPlusOneMin = LocalDateTime.now().plusMinutes(1).toDate()
sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def nowNewFormat = sdf.format(nowPlusOneMin)
testRunner.testCase.setPropertyValue("nowPlusOneMin", nowNewFormat.toString())
log.info nowNewFormat</script></con:config></con:testStep><con:testStep type="groovy" name="Изменить response мока из текста внутри скрипта" id="2fc1c75a-5bf3-45e0-b652-d60c3f7f00a9"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

//получить из свойств кейса данные мока
path = testRunner.testCase.getPropertyValue("path")
code = testRunner.testCase.getPropertyValue("code")
today = testRunner.testCase.getPropertyValue("today")
tomorrow = testRunner.testCase.getPropertyValue("tomorrow")
yesterday = testRunner.testCase.getPropertyValue("yesterday")
nowPlusOneMin = testRunner.testCase.getPropertyValue("nowPlusOneMin")

//подключиться к бд 
connection =testRunner.testCase.testSuite.project.getPropertyValue("mockDbFullConnection")
sql = Sql.newInstance(connection)

// Сформировать тело ответа от getPlanExtension, заменив даты
response="""<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
	<soap:Body>
		<GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
			<result>
				<ns2:id>6716</ns2:id>
				<ns2:jobExecutionId>15869869716</ns2:jobExecutionId>
				<ns2:diagnosis>
					<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
				</ns2:diagnosis>
				<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
				<ns2:endTime>2050-05-31T23:59:59.999+03:00</ns2:endTime>
				<ns2:documentId>32947792-d125-4799-8a5f-9b011b61ca34</ns2:documentId>
				<ns2:parentDocumentId>null</ns2:parentDocumentId>
				<ns2:moId>204</ns2:moId>
				<ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
				<ns2:status>ACTIVE</ns2:status>
				<ns2:archived>false</ns2:archived>
				<ns2:planOfEventsDiagnosis>
					<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
					<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
				</ns2:planOfEventsDiagnosis>
				<ns2:observationProgram>
					<ns2:id>158396645</ns2:id>
				</ns2:observationProgram>
				<ns2:patientId>104296741</ns2:patientId>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915002</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509001</ns2:id>
								<ns2:assignment_id>420220509002</ns2:assignment_id>
								<ns2:suppReferralId>74410126214</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>8d28f87b-6252-4ee5-8937-b5ee2c248589</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.911+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208001</ns2:id>
							<ns2:assignmentId>420220509002</ns2:assignmentId>
							<ns2:eventType>CHANGE</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
										</ns2:eventsPeriod>
														<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2050-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915002</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509002</ns2:id>
								<ns2:assignment_id>420220509002</ns2:assignment_id>
								<ns2:suppReferralId>74410126214</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>8d28f87b-6252-4ee5-8937-b5ee2c248589</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.911+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208002</ns2:id>
							<ns2:assignmentId>420220509002</ns2:assignmentId>
							<ns2:eventType>CREATE</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
										</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2048-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915004</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509003</ns2:id>
								<ns2:assignment_id>420220509003</ns2:assignment_id>
								<ns2:suppReferralId>74410126214</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>8d28f87b-6252-4ee5-8937-b5ee2c248589</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.911+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208003</ns2:id>
							<ns2:assignmentId>420220509003</ns2:assignmentId>
							<ns2:eventType>CHANGE</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>2023-07-15T23:59:59.999+03:00</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
															</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2048-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915005</ns2:id>
						<ns2:eventStatus>COMPLETED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentInstrumental>
								<ns2:id>420220509004</ns2:id>
								<ns2:assignment_id>420220509004</ns2:assignment_id>
								<ns2:suppReferralId>74410125189</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:mainDiagnosticId>34</ns2:mainDiagnosticId>
								<ns2:mainDiagnosticTitle>Флюорография легких профилактическая</ns2:mainDiagnosticTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>26350c6a-5374-46d2-907a-79fd044197f7</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.290+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:justification>Назначено по ПДН</ns2:justification>
							</ns2:assignmentInstrumental>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208004</ns2:id>
							<ns2:assignmentId>420220509004</ns2:assignmentId>
							<ns2:eventType>CHANGE</ns2:eventType>
							<ns2:type>LDP</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Обязательное</ns2:eventExecutionType>
					</ns2:event>
																				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2048-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915006</ns2:id>
						<ns2:eventStatus>EXPIRED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentLaboratoryExtended>
								<ns2:id>420220509005</ns2:id>
								<ns2:assignment_id>420220509005</ns2:assignment_id>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:laboratoryCode>ESLI.LI.7.10.1</ns2:laboratoryCode>
								<ns2:laboratoryTitle>Определение функций концентрирования и разведения мочи (по Зимницкому) порция 1 (09:00)</ns2:laboratoryTitle>
								<ns2:biomaterialCode>ESLI.BIOMATERIAL.2</ns2:biomaterialCode>
								<ns2:biomaterialTitle>Моча</ns2:biomaterialTitle>
								<ns2:locusCode>ESLI.LOCUS.42</ns2:locusCode>
								<ns2:locusTitle>Мочевой пузырь</ns2:locusTitle>
								<ns2:samplingTypeId>3</ns2:samplingTypeId>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:samplingTypeName>Забор самовзятых биоматериалов</ns2:samplingTypeName>
								<ns2:documentId>209ef8cc-d0e9-4ee6-8e56-9cf38d60be62</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:06.645+03:00</ns2:documentCreateDate>
								<ns2:moIdTakingBiomaterial>204</ns2:moIdTakingBiomaterial>
								<ns2:moNameTakingBiomaterial>ГБУЗ ГП №175 ДЗМ</ns2:moNameTakingBiomaterial>
							</ns2:assignmentLaboratoryExtended>
						</ns2:assignment>
												<ns2:appointment>
							<ns2:id>2024050208005</ns2:id>
							<ns2:assignmentId>420220509005</ns2:assignmentId>
							<ns2:eventType>CREATE</ns2:eventType>
							<ns2:type>BM</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Добавленное</ns2:eventExecutionType>
					</ns2:event>
					<ns2:event>
						<ns2:id>915007</ns2:id>
						<ns2:eventStatus>CANCELED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509006</ns2:id>
								<ns2:assignment_id>420220509006</ns2:assignment_id>
								<ns2:suppReferralId>74410126214</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>8d28f87b-6252-4ee5-8937-b5ee2c248589</ns2:documentId>
								<ns2:status>CREATED</ns2:status>
								<ns2:documentCreateDate>2023-05-16T10:06:03.911+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208006</ns2:id>
							<ns2:assignmentId>420220509006</ns2:assignmentId>
							<ns2:eventType>CHANGE</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
																				</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2048-07-15T23:59:59.999+03:00</ns2:endTime>

					<ns2:event>
						<ns2:id>915013</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>true</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentConsultation>
								<ns2:id>420220509007</ns2:id>
								<ns2:assignment_id>420220509007</ns2:assignment_id>
								<ns2:suppReferralId>74413203264</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:specializationCode>35</ns2:specializationCode>
								<ns2:specializationTitle>Неврология</ns2:specializationTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>f6d37871-2660-422d-92f6-b93a2176b226</ns2:documentId>
								<ns2:status>UNFINISHED</ns2:status>
								<ns2:documentCreateDate>2023-06-01T00:00:29.079+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:specialityCode>9</ns2:specialityCode>
								<ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
							</ns2:assignmentConsultation>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208007</ns2:id>
							<ns2:assignmentId>420220509007</ns2:assignmentId>
							<ns2:eventType>CREATE</ns2:eventType>
							<ns2:type>DOCTOR</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>
															</ns2:eventsPeriod>
				<ns2:eventsPeriod>
					<ns2:priority>Свой период</ns2:priority>
					<ns2:startTime>2023-05-16T00:00:00.000+03:00</ns2:startTime>
					<ns2:endTime>2048-07-15T23:59:59.999+03:00</ns2:endTime>
					<ns2:event>
						<ns2:id>915017</ns2:id>
						<ns2:eventStatus>PLANNED</ns2:eventStatus>
						<ns2:archived>false</ns2:archived>
						<ns2:assignment>
							<ns2:assignmentInstrumental>
								<ns2:id>420220509008</ns2:id>
								<ns2:assignment_id>420220509008</ns2:assignment_id>
								<ns2:suppReferralId>74413179689</ns2:suppReferralId>
								<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
								<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
								<ns2:mainDiagnosticId>12</ns2:mainDiagnosticId>
								<ns2:mainDiagnosticTitle>ЭКГ</ns2:mainDiagnosticTitle>
								<ns2:reason>для диспансерного наблюдения</ns2:reason>
								<ns2:documentId>e5a03e28-21d6-4c62-80ad-b642b018944b</ns2:documentId>
								<ns2:status>PRESCRIPTED</ns2:status>
								<ns2:documentCreateDate>2023-05-31T23:59:14.721+03:00</ns2:documentCreateDate>
								<ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
								<ns2:justification>Назначено по ПДН</ns2:justification>
							</ns2:assignmentInstrumental>
						</ns2:assignment>
						<ns2:appointment>
							<ns2:id>2024050208008</ns2:id>
							<ns2:assignmentId>420220509008</ns2:assignmentId>
							<ns2:eventType>CANCEL</ns2:eventType>
							<ns2:type>LDP</ns2:type>
							<ns2:appointmentDate>"""+nowPlusOneMin+"""</ns2:appointmentDate>
						</ns2:appointment>
						<ns2:diagnoses>
							<ns2:diagnosisCode>I48.0</ns2:diagnosisCode>
							<ns2:diagnosisTitle>Пароксизмальная форма фибрилляции предсердий</ns2:diagnosisTitle>
						</ns2:diagnoses>
						<ns2:referralCreated>false</ns2:referralCreated>
						<ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
						<ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
						<ns2:eventExecutionType>Дополнительное</ns2:eventExecutionType>
					</ns2:event>	
				</ns2:eventsPeriod>
				
				<ns2:statusHistoryLists/>
			</result>
		</GetPlanExtensionResponse>
	</soap:Body>
</soap:Envelope>"""

//изменить запись
query="update template_response set response=' "+response+"' where \"path\"= '"+path+"'"
//log.info query
sql.execute(query)

]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getShortProgram" id="ec87d6f1-c799-422b-8415-a53f8bf980da"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="${#TestCase#Mock-pdn}"/>&#13;
  &lt;con:entry key="Mock-supp" value=""/>&#13;
  &lt;con:entry key="Mock-llo" value=""/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.doctor соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor</path><content>{"jobId":"15869869716","fioFull":"Данилов Василий Леонидович","speciality":"Врач общей практики (семейный врач)"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.diagnosis соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.diagnosis</path><content>[{"code":"I48.0","title":"Пароксизмальная форма фибрилляции предсердий"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.planId соответствует"><con:configuration><path>$.payload.shortProgram.planId</path><content>6716</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.documentId соответствует"><con:configuration><path>$.payload.shortProgram.documentId</path><content>32947792-d125-4799-8a5f-9b011b61ca34</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.appointment.appointmentId соответствует"><con:configuration><path>$.payload.shortProgram.appointment.appointmentId</path><content>[2024050208001,2024050208002]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.appointment.count соответствует"><con:configuration><path>$.payload.shortProgram.appointment.count</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>25517322</con:value></con:property><con:property><con:name>jobId</con:name><con:value>15869869716</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property><con:property><con:name>Mock-pdn</con:name><con:value>${#Project#Mock-url}/390993</con:value></con:property><con:property><con:name>Mock-supp</con:name><con:value>${#Project#Mock-url}/390993</con:value></con:property><con:property><con:name>Mock-llo</con:name><con:value>${#Project#Mock-url}/390993</con:value></con:property><con:property><con:name>path</con:name><con:value>/mock/390993/getPlanExtension</con:value></con:property><con:property><con:name>nowPlusOneMin</con:name><con:value>2024-02-05T21:22:04.567+03:00</con:value></con:property></con:properties></con:testCase><con:testCase id="840a44b2-94e0-4aa8-8705-4c8acf7381db" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="shortProgram" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="ca3158be-bfb9-4699-91cb-32fb9fcce52f"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value=""/>&#13;
  &lt;con:entry key="Mock-llo" value=""/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" name="getPlanExtention" id="8834f9bf-3518-4ebf-8bb9-a4f2a24b7a8e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="getPlanExtention" id="ba633d93-c667-4921-9492-b05f536b48f4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-9d130c8c-53c1-4cf0-94af-d0da7dd509fa" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
<ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <GetPlanExtensionRequest xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">
         <patientId>${#TestCase#Id}</patientId>
      </GetPlanExtensionRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="97a7f3a9-b5c8-448b-895a-1abbb5c118e7"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Получить jobId" id="4918e645-0253-4962-9053-9505441ecb41"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>jobId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getPlanExtention</con:sourceStep><con:sourcePath>//*:jobExecutionId[1]/text()[1]</con:sourcePath><con:targetType>jobId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="getMeInfo" id="4d0c8306-bc4f-4937-97d0-3f020f5ac100"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>meiPTBv2</con:interface><con:operation>getMeInfoByJobId</con:operation><con:request name="getMeInfo" id="1f158fd7-a141-4499-8607-c8098ed7170c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#suppmeinfoEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-0d393076-a609-42b0-a17e-567f0e8b81a2" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
         <ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <typ:getMeInfoByJobIdRequest>
         <typ:jobIds>
            <typ:jobId>${#TestCase#jobId}</typ:jobId>
         </typ:jobIds>
      </typ:getMeInfoByJobIdRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="525d1d6c-77d7-4600-8311-6842a1095b40"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="PiPrescriptions" id="301bf086-f5e1-4340-b1ed-1f40259ad2c1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="PiPrescriptions" id="f07d5aff-8086-4add-83ed-8bb081aa7ceb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         <typ:prescriptionNumber>${#TestCase#prescriptionNumber}</typ:prescriptionNumber>\r
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bd6db1a0-c52d-48f1-aab1-4b1cd1b0b58d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить doctor, diagnosis, mo" id="c3cd1da0-68c4-41c4-ae34-141243cc4cd3"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper
def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def doctorRest = jsonResponse.payload.dispensaryObservationInfo.doctor.jobId.toString() //получаем jobId врача из рест ответа
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
 def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
 def onlyTextSoap =  new XmlSlurper().parseText(soapResponse)  // парсим текст из xml
 def doctorSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.jobExecutionId.toString()// получаем jobExecutionId из соап ответа
 log.info "JobId_soap" + " " + doctorSoap
assert doctorRest == doctorSoap //проверяем на совпадение Id врача из рест с соап

def diagnosisCodeRest = jsonResponse.payload.dispensaryObservationInfo.diagnosis.code.join() //получаем коды диагнозов из рест
def diagnosisCodeSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.diagnosis.diagnosisCode.toString()//получаем коды диагнозов из соап
log.info "DiagnosisCode_soap" + " " + diagnosisCodeSoap
assert diagnosisCodeRest == diagnosisCodeSoap //проверяем на совпадение коды диагнозов рест с соап

def diagnosisTitleRest = jsonResponse.payload.dispensaryObservationInfo.diagnosis.title.join() //получаем названия диагнозов из рест
def diagnosisTitleSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.diagnosis.diagnosisTitle.toString() //получаем названия диагнозов из соап
log.info "DiagnosisTitle_soap" + " " + diagnosisTitleSoap
assert diagnosisTitleRest == diagnosisTitleSoap // проверяем на совпадение названия диагнозов рест с соап

def moIdRest = jsonResponse.payload.dispensaryObservationInfo.mo.id.toString() //получаем id МО из рест
def moIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.moId.toString()//получаем id МО из соап
log.info "moId_soap" + " " + moIdSoap
assert moIdRest == moIdSoap //проверяем на совпадение id МО рест с соап

def nameMoRest = jsonResponse.payload.dispensaryObservationInfo.mo.name.toString() //получаем название МО из рест
def nameMoSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.moName.toString() //получаем название МО из соап
log.info "moName_soap" + " " + nameMoSoap
assert nameMoRest == nameMoSoap //проверяем на совпадение название МО рест с соап

def planIdRest = jsonResponse.payload.shortProgram.planId.toString() //получаем id ДН из рест
def planIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.id.toString() //получаем id ДН из соап
log.info "shortId_soap" + " " + planIdSoap
assert planIdRest == planIdSoap // //проверяем на совпадение id ДН рест с соап

def documentIdRest = jsonResponse.payload.shortProgram.documentId.toString() //получаем id документа ПДН из рест
def documentIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.documentId.toString() //получаем id документа ПДН из соап
log.info "docId_soap" + " " + documentIdSoap
assert documentIdRest == documentIdSoap //проверяем на совпадение id документа ПДН рест с соап

def FIO = jsonResponse.payload.dispensaryObservationInfo.doctor.fioFull.toString() // получаем ФИО врача из рест
def soapInfoResponse = context.expand('${getMeInfo#Response}') // получаем из рест запроса ответ
def onlyTextSoapInfo =  new XmlSlurper().parseText(soapInfoResponse) // создаем объект json
def firstName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.firstName.toString() //получаем имя врача из соап
def lastName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.lastName.toString()//получаем фамилию врача из соап
def secondName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.secondName.toString() //получаем отчество врача из соап
def FIO_soap = lastName+' '+firstName+' '+secondName //складываем ФИО из соап
log.info "FIO_soap" + " " + FIO_soap
assert FIO == FIO_soap//проверяем на совпадение ФИО врача рест с ФИО соап

def specialityRest = jsonResponse.payload.dispensaryObservationInfo.doctor.speciality.toString() //получаем название специальности врача рест
def specialitySoap = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.jobInfo.speciality.name.toString() //получаем название специальности соап
log.info "docSpeciality_soap" + " " + specialitySoap
assert specialityRest == specialitySoap //проверяем на совпадение название специальности рест с соап


</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить appointment" id="7ed6fbc3-31e1-475a-9c10-99745f523178"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'hh:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() //получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def appointmentRest = jsonResponse.payload.shortProgram.appointment.appointmentId.join() //получаем все appointmentId из getShortProgram
//log.info appointmentRest
log.info jsonResponse.payload.shortProgram.appointment.appointmentId
def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention

def Id=[] //объявляем пустой массив для заполнения id
def massiv_date=[] //объявляем пустой массив для заполнения appointmentDate
for( i in 0..soap_event.size()){ //цикл для заполнения массива Id данными
		if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых есть объект appointment
			def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].eventStatus.text() ///записываем параметры в переменные - статус event
			def archived = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].archived.toBoolean() //признак архивности
			def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //статус appointment
			def ap_date = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.appointmentDate.text()) //дата appointment
			def ap_id = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.id.text() //id
			//log.info ap_date
				if (status == 'PLANNED' && archived == false && type != 'CANCEL' && ap_date >= currentDate){ //отбираем appointment_id, которые соответствуют условиям
					Id.add(ap_id) //записываем в массив id, которые подходят под условия выше
					massiv_date.add(ap_date) //записываем appointmentDate в массив
				}
		}
}

if (massiv_date.size() !=0){ //уловие для проверки минимальной даты
	def min_date = Date.parse(dTF, jsonResponse.payload.shortProgram.appointment.earliestAppointmentDate.toString()) //объявляем переменную с датой
	log.info "minDate_soap" + " " + Collections.min(massiv_date)
	assert Collections.min(massiv_date) == min_date //сравниваем минимальную дату из массива с датой из рест
}
log.info "appointment.id_soap" + " " + Id
log.info "count_soap" + " " + Id.size()
assert Id.join() == appointmentRest //проверяем соответствие отобранных по условиям из соап с рест ответом
assert Id.size() == jsonResponse.payload.shortProgram.appointment.count //проверяем кол-во id

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить suppReferralId" id="67397277-a6ef-40ce-b9b6-68bee4264c75"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'hh:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() // получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def suppReferralRest = jsonResponse.payload.shortProgram.assignment.suppReferralId.join()//получаем все appointmentId из getShortProgram
def checkUpRest = jsonResponse.payload.shortProgram.assignment.controlCheckUp.toString() //получаем размер массива с suppReferralId
def assignmentRest = jsonResponse.payload.shortProgram.assignment.assignmentId.join()//получаем все appointmentId из getShortProgram
//log.info suppReferralRest

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention
def eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod //получаем все eventsPeriod из getPlanExtention

assignmentConsultation=[] //объявляем пустой массив, который будем заполнять данными из цикла
massiv_date=[]//объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i in 0..soap_event.size()){ //цикл для заполнения массива assignmentConsultation данными
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.text()){ //оставляем только те event, у которых есть объект assignmentConsultation
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.status.text() //записываем параметры в переменные - статус assignmentConsultation
				def asConsultation = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.suppReferralId.text() //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text() //статус appointment
					if (status == 'CREATED'){ //отбираем assignmentConsultation только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentConsultation.add(asConsultation) //записываем suppReferralId в массив assignmentConsultation
							massiv_date.add(date_min) //добавляем дату eventsPeriod  в массив massiv_date из которого этот suppReferralId
						}
						else if(type=='CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
								assignmentConsultation.add(asConsultation) //записываем suppReferralId  в массив assignmentConsultation
								massiv_date.add(date_min)//добавляем дату eventsPeriod в массив massiv_date из которого этот suppReferralId
						}
					}
			}
		}
}

assignmentInstrumental=[] //объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i=0; i<soap_event.size(); i++){ //2й цикл, т.к. разная размерность
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.text()){ //оставляем только те event, у которых есть объект assignmentInstrumental
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.status.text() //записываем параметры в переменные статус assignmentInstrumental
				def asInstrumental = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.suppReferralId.text() //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text()//статус appointment
					if (status == 'CREATED'){ //отбираем assignmentInstrumental только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentInstrumental.add(asInstrumental) //записываем suppReferralId в массив assignmentInstrumental
							massiv_date.add(date_min) //добавляем дату eventsPeriod  в массив massiv_date из которого этот suppReferralId
						}
						else if (type == 'CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
								assignmentInstrumental.add(asInstrumental) //записываем suppReferralId в массив assignmentInstrumental
								massiv_date.add(date_min) //добавляем дату eventsPeriod в массив massiv_date из которого этот suppReferralId
						}
					}
			}
		}
}

log.info "Instrumental_suppReferralId" + " " +  assignmentInstrumental
log.info "Consultation_suppReferralId" + " " +  assignmentConsultation.size()

assignmentsId=[] //объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i=0; i<soap_event.size(); i++){ //2й цикл, т.к. разная размерность
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.text()){ //оставляем только те event, у которых есть объект assignmentLaboratoryExtended
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.status.text() //записываем параметры в переменные - статус assignmentLaboratoryExtended
				def asId = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.assignment_id.text() //id //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text() //статус appointment
					if (status == 'CREATED'){ //отбираем assignmentLaboratoryExtended только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentsId.add(asId) //записываем assignment_id в массив assignmentsId
							massiv_date.add(date_min) //добавляем дату eventsPeriod в массив massiv_date из которого этот assignment_id
						}
						else if (type == 'CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
							assignmentsId.add(asId) //записываем assignment_id в массив assignmentsId
							massiv_date.add(date_min)//добавляем дату eventsPeriod в массив massiv_date из которого этот assignment_id
						}
					}
			}
		}
}
log.info "assignment_Id" + " " + assignmentsId

if (massiv_date.size() !=0){ //уловие для проверки минимальной даты
	def min_date = Date.parse(dTF, jsonResponse.payload.shortProgram.assignment.endDate.toString())//объявляем переменную с датой
	def min_date_soap = Collections.min(massiv_date) //,thtv vbybvfkmye. lfne bp vfccbdf
	long min_time = min_date.getTime()/1000 //получаем время в милисекундах и отбрасываем 3 последних знака, т.к. они отличаются но время 23:59
	long min_time_soap = min_date_soap.getTime()/1000 //получаем время в милисекундах и отбрасываем 3 последних знака, т.к. они отличаются но время 23:59
	assert min_time ==  min_time_soap //сравниваем минимальную дату с рест
}

def count_soap = assignmentsId + assignmentInstrumental + assignmentConsultation
log.info "count_soap" + " " + count_soap.size()
def suppReferralId = assignmentInstrumental.join()+assignmentConsultation.join() //складываем 2 массива assignmentInstrumental и assignmentConsultation
assert suppReferralId == suppReferralRest //проверяем соответствие suppReferralId рест с соап
assert count_soap.size() == jsonResponse.payload.shortProgram.assignment.count //проверяем соответствие кол-ва suppReferralId рест и соап
assert assignmentsId.join() == assignmentRest //проверяем соответствие assignmentId рест с соап

controlCheckUp=[] //объявляем пустой массив, который будем заполнять данными из цикла
for( i in 0..soap_event.size()){ //цикл для заполнения массива controlCheckUp данными
	if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.text()){ //оставляем только те event, у которых есть объект assignmentConsultation
		def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.status.text() //записываем параметры в переменные - статус assignmentConsultation
		def asConsultation = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.suppReferralId.text() //id направления
		def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //статус appointment
		def statusCheckUp = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.assigmentToControlCheckUp.toBoolean() //признак контрольного мероприятия
			if (status == 'CREATED'){ //отбираем assignmentConsultation только со статусом 'CREATED'
				if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
					if (statusCheckUp == true){ //отбираем assignmentConsultation с признаком контрольного мероприятия assigmentToControlCheckUp = true
						controlCheckUp.add(asConsultation) //записываем suppReferralId в массив controlCheckUp
					}
				}
				else if(type=='CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
							if (statusCheckUp == true){ //отбираем assignmentConsultation с признаком контрольного мероприятия assigmentToControlCheckUp = true
								controlCheckUp.add(asConsultation) //записываем suppReferralId в массив controlCheckUp
							}
				}
			}
	}
}
if(controlCheckUp.size() != 0 && checkUpRest != null){
log.info "controlCheckUp_soap" + " " + controlCheckUp
assert controlCheckUp.join() == checkUpRest //проверяем соответствие controlCheckUp рест с соап
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить assignmentsId" id="013871b4-1367-4f17-adfd-01e0228a2a68" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date()

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def assignmentRest = jsonResponse.payload.shortProgram.assignment.assignmentId.join()//получаем все appointmentId из getShortProgram
def count_assignmentRest = assignmentRest.size() //получаем размер массива assignmentId
log.info assignmentRest

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention


assignmentsId=[] //объявляем пустой массив, который будем заполнять данными из цикла
for( i in 0..soap_event.size()){ //цикл для заполнения массива assignmentsId данными
	if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.text()){ //оставляем только те event, у которых есть объект assignmentLaboratoryExtended
		def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.status.text() //записываем параметры в переменные
		def asId = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.assignment_id.text()
		def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //записываем параметр в переменную
			if (status == 'CREATED'){ //отбираем assignmentLaboratoryExtended только со статусом 'CREATED'
				if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых есть объект appointment
					assignmentsId.add(asId)
				}
				else if (type == 'CANCEL'){ //отбираем appointment только со статусом "CANCEL"
							assignmentsId.add(asId)
				}
			}
	}
}

log.info assignmentsId
log.info assignmentsId.join()
assert assignmentsId.join() == assignmentRest //проверяем соответствие assignmentId рест с соап</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить prescriptions" id="dfdfdebf-a43c-4d81-b9e7-1a003c57d2a7"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.util.concurrent.TimeUnit

String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() // получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def prescriptionRest = jsonResponse.payload.prescriptions.prescriptionNumber//получаем все appointmentId из getShortProgram

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod //получаем все eventsPeriod из getPlanExtention


prescriptionState=[] //объявляем пустые массивы, которые будем заполнять данными из цикла - статус рецепта
prescNumber=[] //номер рецепта
title=[] //описание
type=[] //тип рецепта
usage=[] //способ применения
expirationDate=[] //дата окончания
for (i = 0; i<eventsPeriod.size(); i++){ //цикл для заполнения массивов выше, данными
	def startEvents = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].startTime.text()) //записываем параметры в переменные - время начала
	def endEvents = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].endTime.text()) //время окончания
	def drugs_eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent.number //номер цецепта
		if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent){ //оставляем только те eventsPeriod у которых есть drugsEvent
			if (startEvents <= currentDate && endEvents >= currentDate){ //оставляем только те eventsPeriod, которые соответствуют условиям
				for(n=0; n<drugs_eventsPeriod.size(); n++){ //2й цикл для заполнения массивов выше, данными
					def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].status.text() //записываем параметры в переменные - статус рецепта
					def number = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].number.toString() //номер рецепта
					def Ptitle = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].title.text() //описание
						if (status == 'PRESCRIPTED' || status == 'COMPLETED'){ //оставляем только те drugsEvent, которые соответствуют условиям
							testRunner.testCase.setPropertyValue("prescriptionNumber", number) //записываем в проперти переменную
							testRunner.runTestStepByName('PiPrescriptions') //запускаем запрос метода piPatientPrescriptions из тест-кейса
							TimeUnit.SECONDS.sleep(5) //таймаут для выполнения запроса
							def prescriptionResponse = context.expand('${PiPrescriptions#Response}') // получаем из соап запроса ответ
							def onlyTextPrescriptions =  new XmlSlurper().parseText(prescriptionResponse) // создаем объект xml
							def PState = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.prescriptionState.text() //записываем параметр в переменную - статус рецепта
								if (PState != 'expired'){ //отбираем рецепты со статусом !=xpired
									def PNumber = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.number.text() //записываем параметры в переменные - статус рецепта
									def PType = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.type.text() //тип рецепта
									def PUsage = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.medicine.usage.text() //способ применения
									def PexpDate = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.expirationDate.text() //дата окончания
									prescNumber.add(PNumber) //записываем number в массив prescNumber
									title.add(Ptitle) //записываем itle в массив title
									type.add(PType) //записываем type в массив type
									usage.add(PUsage) //записываем usage в массив usage
									expirationDate.add(PexpDate) //записываем expirationDate в массив expirationDate
										if (PState == 'active' || PState == 'inprogress' || PState == 'delivered'){ //если статус рецепта active или inprogress или delivered
											prescriptionState.add('active')//то записываем в массив prescriptionState статус active
										}
										else if (PState == 'completed'){ //если статус рецепта cpmpleted
											prescriptionState.add('completed') //то записываем в массив prescriptionState статус completed
										}
								}
						}
				}
			}
		}
}
log.info prescriptionState
log.info prescNumber
log.info title
log.info type
log.info usage
log.info expirationDate

for (i=0; i<prescNumber.size(); i++){ //цикл для проверки соответствия параметров из рест с соап
	assert prescriptionRest.contains(prescNumber[i]) //проверяем, что number есть в ответе рест
	assert prescriptionState[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.prescriptionState.toString() //проверяем что у этого number, статус соответствует маппингу
	assert title[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.title.toString() //проверяем что у этого number, title из рест соответствует title из соап
	assert type[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.type.toString() //проверяем что у этого number, type из рест соответствует type из соап
	assert usage[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.usage.toString() //проверяем что у этого number, usage из рест соответствует usage из соап
	assert expirationDate[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.expirationDate.toString() //проверяем что у этого number, expirationDate из рест соответствует expirationDate из соап
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700004071801057</con:value></con:property><con:property><con:name>Id</con:name><con:value>1723794691</con:value></con:property><con:property><con:name>jobId</con:name><con:value>13008809089</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519358855</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="49431af6-4965-4bac-8cf7-9dad9e930677" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС с записями" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="1c531b9f-49fc-4448-aa2f-ecc1a341425f"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="http://application-mock.emias.solit-clouds.ru/209774"/>&#13;
  &lt;con:entry key="Mock-llo" value="http://application-mock.emias.solit-clouds.ru/209774"/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" name="getPlanExtention" id="32af394d-2079-4927-9189-abdd05eaf365"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="getPlanExtention" id="ba633d93-c667-4921-9492-b05f536b48f4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-9d130c8c-53c1-4cf0-94af-d0da7dd509fa" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
<ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <GetPlanExtensionRequest xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">
         <patientId>${#TestCase#Id}</patientId>
      </GetPlanExtensionRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="97a7f3a9-b5c8-448b-895a-1abbb5c118e7"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Получить jobId" id="13db5d66-968b-4801-bffc-af4cb4ef7e7a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>jobId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getPlanExtention</con:sourceStep><con:sourcePath>//*:jobExecutionId[1]/text()[1]</con:sourcePath><con:targetType>jobId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="getMeInfo" id="5e2a5c93-ced5-4ee3-8e81-4177a8014165"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>meiPTBv2</con:interface><con:operation>getMeInfoByJobId</con:operation><con:request name="getMeInfo" id="1f158fd7-a141-4499-8607-c8098ed7170c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#suppmeinfoEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-0d393076-a609-42b0-a17e-567f0e8b81a2" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
         <ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <typ:getMeInfoByJobIdRequest>
         <typ:jobIds>
            <typ:jobId>${#TestCase#jobId}</typ:jobId>
         </typ:jobIds>
      </typ:getMeInfoByJobIdRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="525d1d6c-77d7-4600-8311-6842a1095b40"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="PiPrescriptions" id="f5e011e9-57d6-42cf-a44f-37c81a059cb8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="PiPrescriptions" id="f07d5aff-8086-4add-83ed-8bb081aa7ceb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         <typ:prescriptionNumber>${#TestCase#prescriptionNumber}</typ:prescriptionNumber>\r
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bd6db1a0-c52d-48f1-aab1-4b1cd1b0b58d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить doctor, diagnosis, mo" id="2cbe8f18-5116-4602-9855-b62f90e5e9fb"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper
def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def doctorRest = jsonResponse.payload.dispensaryObservationInfo.doctor.jobId.toString() //получаем jobId врача из рест ответа
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
 def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
 def onlyTextSoap =  new XmlSlurper().parseText(soapResponse)  // парсим текст из xml
 def doctorSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.jobExecutionId.toString()// получаем jobExecutionId из соап ответа
 log.info "JobId_soap" + " " + doctorSoap
assert doctorRest == doctorSoap //проверяем на совпадение Id врача из рест с соап

def diagnosisCodeRest = jsonResponse.payload.dispensaryObservationInfo.diagnosis.code.join() //получаем коды диагнозов из рест
def diagnosisCodeSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.diagnosis.diagnosisCode.toString()//получаем коды диагнозов из соап
log.info "DiagnosisCode_soap" + " " + diagnosisCodeSoap
assert diagnosisCodeRest == diagnosisCodeSoap //проверяем на совпадение коды диагнозов рест с соап

def diagnosisTitleRest = jsonResponse.payload.dispensaryObservationInfo.diagnosis.title.join() //получаем названия диагнозов из рест
def diagnosisTitleSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.diagnosis.diagnosisTitle.toString() //получаем названия диагнозов из соап
log.info "DiagnosisTitle_soap" + " " + diagnosisTitleSoap
assert diagnosisTitleRest == diagnosisTitleSoap // проверяем на совпадение названия диагнозов рест с соап

def moIdRest = jsonResponse.payload.dispensaryObservationInfo.mo.id.toString() //получаем id МО из рест
def moIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.moId.toString()//получаем id МО из соап
log.info "moId_soap" + " " + moIdSoap
assert moIdRest == moIdSoap //проверяем на совпадение id МО рест с соап

def nameMoRest = jsonResponse.payload.dispensaryObservationInfo.mo.name.toString() //получаем название МО из рест
def nameMoSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.moName.toString() //получаем название МО из соап
log.info "moName_soap" + " " + nameMoSoap
assert nameMoRest == nameMoSoap //проверяем на совпадение название МО рест с соап

def planIdRest = jsonResponse.payload.shortProgram.planId.toString() //получаем id ДН из рест
def planIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.id.toString() //получаем id ДН из соап
log.info "shortId_soap" + " " + planIdSoap
assert planIdRest == planIdSoap // //проверяем на совпадение id ДН рест с соап

def documentIdRest = jsonResponse.payload.shortProgram.documentId.toString() //получаем id документа ПДН из рест
def documentIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.documentId.toString() //получаем id документа ПДН из соап
log.info "docId_soap" + " " + documentIdSoap
assert documentIdRest == documentIdSoap //проверяем на совпадение id документа ПДН рест с соап

def FIO = jsonResponse.payload.dispensaryObservationInfo.doctor.fioFull.toString() // получаем ФИО врача из рест
def soapInfoResponse = context.expand('${getMeInfo#Response}') // получаем из рест запроса ответ
def onlyTextSoapInfo =  new XmlSlurper().parseText(soapInfoResponse) // создаем объект json
def firstName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.firstName.toString() //получаем имя врача из соап
def lastName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.lastName.toString()//получаем фамилию врача из соап
def secondName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.secondName.toString() //получаем отчество врача из соап
def FIO_soap = lastName+' '+firstName+' '+secondName //складываем ФИО из соап
log.info "FIO_soap" + " " + FIO_soap
assert FIO == FIO_soap//проверяем на совпадение ФИО врача рест с ФИО соап

def specialityRest = jsonResponse.payload.dispensaryObservationInfo.doctor.speciality.toString() //получаем название специальности врача рест
def specialitySoap = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.jobInfo.speciality.name.toString() //получаем название специальности соап
log.info "docSpeciality_soap" + " " + specialitySoap
assert specialityRest == specialitySoap //проверяем на совпадение название специальности рест с соап


</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить appointment" id="76dac2bc-b09e-421b-b7b9-93e802f14de7"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'hh:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() //получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def appointmentRest = jsonResponse.payload.shortProgram.appointment.appointmentId.join() //получаем все appointmentId из getShortProgram
//log.info appointmentRest
log.info jsonResponse.payload.shortProgram.appointment.appointmentId
def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention

def Id=[] //объявляем пустой массив для заполнения id
def massiv_date=[] //объявляем пустой массив для заполнения appointmentDate
for( i in 0..soap_event.size()){ //цикл для заполнения массива Id данными
		if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых есть объект appointment
			def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].eventStatus.text() ///записываем параметры в переменные - статус event
			def archived = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].archived.toBoolean() //признак архивности
			def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //статус appointment
			def ap_date = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.appointmentDate.text()) //дата appointment
			def ap_id = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.id.text() //id
			//log.info ap_date
				if (status == 'PLANNED' && archived == false && type != 'CANCEL' && ap_date >= currentDate){ //отбираем appointment_id, которые соответствуют условиям
					Id.add(ap_id) //записываем в массив id, которые подходят под условия выше
					massiv_date.add(ap_date) //записываем appointmentDate в массив
				}
		}
}

if (massiv_date.size() !=0){ //уловие для проверки минимальной даты
	def min_date = Date.parse(dTF, jsonResponse.payload.shortProgram.appointment.earliestAppointmentDate.toString()) //объявляем переменную с датой
	log.info "minDate_soap" + " " + Collections.min(massiv_date)
	assert Collections.min(massiv_date) == min_date //сравниваем минимальную дату из массива с датой из рест
}
log.info "appointment.id_soap" + " " + Id
log.info "count_soap" + " " + Id.size()
assert Id.join() == appointmentRest //проверяем соответствие отобранных по условиям из соап с рест ответом
assert Id.size() == jsonResponse.payload.shortProgram.appointment.count //проверяем кол-во id

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить suppReferralId" id="fc2d37be-2d0c-4627-8f45-61e740096958"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'hh:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() // получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def suppReferralRest = jsonResponse.payload.shortProgram.assignment.suppReferralId.join()//получаем все appointmentId из getShortProgram
def checkUpRest = jsonResponse.payload.shortProgram.assignment.controlCheckUp.toString() //получаем размер массива с suppReferralId
def assignmentRest = jsonResponse.payload.shortProgram.assignment.assignmentId.join()//получаем все appointmentId из getShortProgram
//log.info suppReferralRest

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention
def eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod //получаем все eventsPeriod из getPlanExtention

assignmentConsultation=[] //объявляем пустой массив, который будем заполнять данными из цикла
massiv_date=[]//объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i in 0..soap_event.size()){ //цикл для заполнения массива assignmentConsultation данными
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.text()){ //оставляем только те event, у которых есть объект assignmentConsultation
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.status.text() //записываем параметры в переменные - статус assignmentConsultation
				def asConsultation = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.suppReferralId.text() //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text() //статус appointment
					if (status == 'CREATED'){ //отбираем assignmentConsultation только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentConsultation.add(asConsultation) //записываем suppReferralId в массив assignmentConsultation
							massiv_date.add(date_min) //добавляем дату eventsPeriod  в массив massiv_date из которого этот suppReferralId
						}
						else if(type=='CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
								assignmentConsultation.add(asConsultation) //записываем suppReferralId  в массив assignmentConsultation
								massiv_date.add(date_min)//добавляем дату eventsPeriod в массив massiv_date из которого этот suppReferralId
						}
					}
			}
		}
}

assignmentInstrumental=[] //объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i=0; i<soap_event.size(); i++){ //2й цикл, т.к. разная размерность
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.text()){ //оставляем только те event, у которых есть объект assignmentInstrumental
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.status.text() //записываем параметры в переменные статус assignmentInstrumental
				def asInstrumental = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.suppReferralId.text() //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text()//статус appointment
					if (status == 'CREATED'){ //отбираем assignmentInstrumental только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentInstrumental.add(asInstrumental) //записываем suppReferralId в массив assignmentInstrumental
							massiv_date.add(date_min) //добавляем дату eventsPeriod  в массив massiv_date из которого этот suppReferralId
						}
						else if (type == 'CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
								assignmentInstrumental.add(asInstrumental) //записываем suppReferralId в массив assignmentInstrumental
								massiv_date.add(date_min) //добавляем дату eventsPeriod в массив massiv_date из которого этот suppReferralId
						}
					}
			}
		}
}

log.info "Instrumental_suppReferralId" + " " +  assignmentInstrumental
log.info "Consultation_suppReferralId" + " " +  assignmentConsultation.size()

assignmentsId=[] //объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i=0; i<soap_event.size(); i++){ //2й цикл, т.к. разная размерность
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.text()){ //оставляем только те event, у которых есть объект assignmentLaboratoryExtended
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.status.text() //записываем параметры в переменные - статус assignmentLaboratoryExtended
				def asId = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.assignment_id.text() //id //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text() //статус appointment
					if (status == 'CREATED'){ //отбираем assignmentLaboratoryExtended только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentsId.add(asId) //записываем assignment_id в массив assignmentsId
							massiv_date.add(date_min) //добавляем дату eventsPeriod в массив massiv_date из которого этот assignment_id
						}
						else if (type == 'CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
							assignmentsId.add(asId) //записываем assignment_id в массив assignmentsId
							massiv_date.add(date_min)//добавляем дату eventsPeriod в массив massiv_date из которого этот assignment_id
						}
					}
			}
		}
}
log.info "assignment_Id" + " " + assignmentsId

if (massiv_date.size() !=0){ //уловие для проверки минимальной даты
	def min_date = Date.parse(dTF, jsonResponse.payload.shortProgram.assignment.endDate.toString())//объявляем переменную с датой
	def min_date_soap = Collections.min(massiv_date) //,thtv vbybvfkmye. lfne bp vfccbdf
	long min_time = min_date.getTime()/1000 //получаем время в милисекундах и отбрасываем 3 последних знака, т.к. они отличаются но время 23:59
	long min_time_soap = min_date_soap.getTime()/1000 //получаем время в милисекундах и отбрасываем 3 последних знака, т.к. они отличаются но время 23:59
	assert min_time ==  min_time_soap //сравниваем минимальную дату с рест
}

def count_soap = assignmentsId + assignmentInstrumental + assignmentConsultation
log.info "count_soap" + " " + count_soap.size()
def suppReferralId = assignmentInstrumental.join()+assignmentConsultation.join() //складываем 2 массива assignmentInstrumental и assignmentConsultation
assert suppReferralId == suppReferralRest //проверяем соответствие suppReferralId рест с соап
assert count_soap.size() == jsonResponse.payload.shortProgram.assignment.count //проверяем соответствие кол-ва suppReferralId рест и соап
assert assignmentsId.join() == assignmentRest //проверяем соответствие assignmentId рест с соап

controlCheckUp=[] //объявляем пустой массив, который будем заполнять данными из цикла
for( i in 0..soap_event.size()){ //цикл для заполнения массива controlCheckUp данными
	if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.text()){ //оставляем только те event, у которых есть объект assignmentConsultation
		def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.status.text() //записываем параметры в переменные - статус assignmentConsultation
		def asConsultation = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.suppReferralId.text() //id направления
		def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //статус appointment
		def statusCheckUp = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.assigmentToControlCheckUp.toBoolean() //признак контрольного мероприятия
			if (status == 'CREATED'){ //отбираем assignmentConsultation только со статусом 'CREATED'
				if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
					if (statusCheckUp == true){ //отбираем assignmentConsultation с признаком контрольного мероприятия assigmentToControlCheckUp = true
						controlCheckUp.add(asConsultation) //записываем suppReferralId в массив controlCheckUp
					}
				}
				else if(type=='CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
							if (statusCheckUp == true){ //отбираем assignmentConsultation с признаком контрольного мероприятия assigmentToControlCheckUp = true
								controlCheckUp.add(asConsultation) //записываем suppReferralId в массив controlCheckUp
							}
				}
			}
	}
}
if(controlCheckUp.size() != 0 && checkUpRest != null){
log.info "controlCheckUp_soap" + " " + controlCheckUp
assert controlCheckUp.join() == checkUpRest //проверяем соответствие controlCheckUp рест с соап
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить assignmentsId" id="9fdd422c-04b3-4089-bc7e-f5a2d7e8841e" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date()

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def assignmentRest = jsonResponse.payload.shortProgram.assignment.assignmentId.join()//получаем все appointmentId из getShortProgram
def count_assignmentRest = assignmentRest.size() //получаем размер массива assignmentId
log.info assignmentRest

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention


assignmentsId=[] //объявляем пустой массив, который будем заполнять данными из цикла
for( i in 0..soap_event.size()){ //цикл для заполнения массива assignmentsId данными
	if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.text()){ //оставляем только те event, у которых есть объект assignmentLaboratoryExtended
		def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.status.text() //записываем параметры в переменные
		def asId = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.assignment_id.text()
		def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //записываем параметр в переменную
			if (status == 'CREATED'){ //отбираем assignmentLaboratoryExtended только со статусом 'CREATED'
				if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых есть объект appointment
					assignmentsId.add(asId)
				}
				else if (type == 'CANCEL'){ //отбираем appointment только со статусом "CANCEL"
							assignmentsId.add(asId)
				}
			}
	}
}

log.info assignmentsId
log.info assignmentsId.join()
assert assignmentsId.join() == assignmentRest //проверяем соответствие assignmentId рест с соап</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить prescriptions" id="a694317f-6dd1-46f6-8e3e-1df9ad08295e" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.util.concurrent.TimeUnit

String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() // получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def prescriptionRest = jsonResponse.payload.prescriptions.prescriptionNumber//получаем все appointmentId из getShortProgram

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod //получаем все eventsPeriod из getPlanExtention


prescriptionState=[] //объявляем пустые массивы, которые будем заполнять данными из цикла - статус рецепта
prescNumber=[] //номер рецепта
title=[] //описание
type=[] //тип рецепта
usage=[] //способ применения
expirationDate=[] //дата окончания
for (i = 0; i<eventsPeriod.size(); i++){ //цикл для заполнения массивов выше, данными
	def startEvents = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].startTime.text()) //записываем параметры в переменные - время начала
	def endEvents = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].endTime.text()) //время окончания
	def drugs_eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent.number //номер цецепта
		if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent){ //оставляем только те eventsPeriod у которых есть drugsEvent
			if (startEvents <= currentDate && endEvents >= currentDate){ //оставляем только те eventsPeriod, которые соответствуют условиям
				for(n=0; n<drugs_eventsPeriod.size(); n++){ //2й цикл для заполнения массивов выше, данными
					def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].status.text() //записываем параметры в переменные - статус рецепта
					def number = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].number.toString() //номер рецепта
					def Ptitle = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].title.text() //описание
						if (status == 'PRESCRIPTED' || status == 'COMPLETED'){ //оставляем только те drugsEvent, которые соответствуют условиям
							testRunner.testCase.setPropertyValue("prescriptionNumber", number) //записываем в проперти переменную
							testRunner.runTestStepByName('PiPrescriptions') //запускаем запрос метода piPatientPrescriptions из тест-кейса
							TimeUnit.SECONDS.sleep(5) //таймаут для выполнения запроса
							def prescriptionResponse = context.expand('${PiPrescriptions#Response}') // получаем из соап запроса ответ
							def onlyTextPrescriptions =  new XmlSlurper().parseText(prescriptionResponse) // создаем объект xml
							def PState = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.prescriptionState.text() //записываем параметр в переменную - статус рецепта
								if (PState != 'expired'){ //отбираем рецепты со статусом !=xpired
									def PNumber = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.number.text() //записываем параметры в переменные - статус рецепта
									def PType = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.type.text() //тип рецепта
									def PUsage = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.medicine.usage.text() //способ применения
									def PexpDate = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.expirationDate.text() //дата окончания
									prescNumber.add(PNumber) //записываем number в массив prescNumber
									title.add(Ptitle) //записываем itle в массив title
									type.add(PType) //записываем type в массив type
									usage.add(PUsage) //записываем usage в массив usage
									expirationDate.add(PexpDate) //записываем expirationDate в массив expirationDate
										if (PState == 'active' || PState == 'inprogress' || PState == 'delivered'){ //если статус рецепта active или inprogress или delivered
											prescriptionState.add('active')//то записываем в массив prescriptionState статус active
										}
										else if (PState == 'completed'){ //если статус рецепта cpmpleted
											prescriptionState.add('completed') //то записываем в массив prescriptionState статус completed
										}
								}
						}
				}
			}
		}
}
log.info prescriptionState
log.info prescNumber
log.info title
log.info type
log.info usage
log.info expirationDate

for (i=0; i<prescNumber.size(); i++){ //цикл для проверки соответствия параметров из рест с соап
	assert prescriptionRest.contains(prescNumber[i]) //проверяем, что number есть в ответе рест
	assert prescriptionState[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.prescriptionState.toString() //проверяем что у этого number, статус соответствует маппингу
	assert title[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.title.toString() //проверяем что у этого number, title из рест соответствует title из соап
	assert type[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.type.toString() //проверяем что у этого number, type из рест соответствует type из соап
	assert usage[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.usage.toString() //проверяем что у этого number, usage из рест соответствует usage из соап
	assert expirationDate[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.expirationDate.toString() //проверяем что у этого number, expirationDate из рест соответствует expirationDate из соап
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>15869869716</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="f4cc91a0-d453-4c87-906f-1f42ee3dd2d7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="209774_Получение ПДН по пациенту с назначениями и рецептами" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="getShortProgram" id="52fb102c-702f-403b-a5d0-8357c6fc78a9"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v3/pdn/shortProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getShortProgram" id="b7254431-96ed-4527-8a9d-3b2d557c08ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value=""/>&#13;
  &lt;con:entry key="Mock-supp" value=""/>&#13;
  &lt;con:entry key="Mock-llo" value=""/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/shortProgram</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ad3077ef-e10d-47fb-9ffb-93acb93a74f0" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.doctor соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.doctor</path><content>{"jobId":"13008809089","fioFull":"Данилов Василий Леонидович","speciality":"Врач общей практики (семейный врач)"}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="dispensaryObservationInfo.diagnosis соответствует"><con:configuration><path>$.payload.dispensaryObservationInfo.diagnosis</path><content>[{"code":"E11.3","title":"Инсулиннезависимый сахарный диабет с поражениями глаз"},{"code":"G45.4","title":"Транзиторная глобальная амнезия"},{"code":"I48.0","title":"Пароксизмальная форма фибрилляции предсердий"},{"code":"K26.0","title":"Язва двенадцатиперстной кишки острая с кровотечением"}]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.planId соответствует"><con:configuration><path>$.payload.shortProgram.planId</path><content>11684</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.documentId соответствует"><con:configuration><path>$.payload.shortProgram.documentId</path><content>c048e43e-e217-4589-a740-5e82b755ae3c</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2bf20629-65ee-46ff-89bd-6f44e9c0920b" name="shortProgram.assignment соответствует"><con:configuration><path>$.payload.shortProgram.assignment</path><content>{"count":18,"endDate":"2024-04-01T23:59:59","assignments":[{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Исследование микроальбумина","period":{"startDate":"2024-02-01T00:00:00","endDate":"2024-04-01T23:59:59"},"type":"laboratory"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Флюорография легких профилактическая","period":{"startDate":"2024-02-01T00:00:00","endDate":"2024-04-01T23:59:59"},"type":"instrumental"},{"destinationType":"Назначение в текущую МО","title":"Неврология","period":{"startDate":"2024-03-01T00:00:00","endDate":"2024-04-30T23:59:59"},"controlCheckUp":true,"type":"consultation"},{"destinationType":"Назначение в текущую МО","title":"Терапия","period":{"startDate":"2024-04-01T00:00:00","endDate":"2024-05-31T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Исследование микроальбумина","period":{"startDate":"2024-04-01T00:00:00","endDate":"2024-05-31T23:59:59"},"type":"laboratory"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Флюорография легких профилактическая","period":{"startDate":"2024-04-01T00:00:00","endDate":"2024-05-31T23:59:59"},"type":"instrumental"},{"destinationType":"Назначение в текущую МО","title":"Неврология","period":{"startDate":"2024-05-01T00:00:00","endDate":"2024-06-30T23:59:59"},"controlCheckUp":true,"type":"consultation"},{"destinationType":"Назначение в текущую МО","title":"Неврология","period":{"startDate":"2024-06-01T00:00:00","endDate":"2024-07-31T23:59:59"},"controlCheckUp":true,"type":"consultation"},{"destinationType":"Назначение в текущую МО","title":"Терапия","period":{"startDate":"2024-06-01T00:00:00","endDate":"2024-07-31T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Исследование микроальбумина","period":{"startDate":"2024-06-01T00:00:00","endDate":"2024-07-31T23:59:59"},"type":"laboratory"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Флюорография легких профилактическая","period":{"startDate":"2024-06-01T00:00:00","endDate":"2024-07-31T23:59:59"},"type":"instrumental"},{"destinationType":"Назначение в текущую МО","assignmentId":"null","title":"Флюорография легких профилактическая","period":{"startDate":"2024-07-01T00:00:00","endDate":"2024-08-30T23:59:59"},"type":"instrumental"},{"destinationType":"Назначение в текущую МО","title":"Неврология","period":{"startDate":"2024-08-01T00:00:00","endDate":"2024-09-30T23:59:59"},"controlCheckUp":true,"type":"consultation"},{"destinationType":"Направление в стационар","destinationMedicalOrganizationId":10361028,"destinationMedicalOrganizationName":"ФГБУ \"НМИЦ Гематологии\" Минздрава России","title":"Психотерапия","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Направление в стационар","destinationMedicalOrganizationId":10843803,"destinationMedicalOrganizationName":"ООО Центр охраны зрения детей и подростков","title":"Оториноларингология и сурдология","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Направление в стационар","destinationMedicalOrganizationId":10843803,"destinationMedicalOrganizationName":"ООО Центр охраны зрения детей и подростков","assignmentId":"null","title":"Определение липопротеинов низкой плотности (ЛПНП-бета)","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"type":"laboratory"},{"destinationType":"Направление в стационар","destinationMedicalOrganizationId":11359378,"destinationMedicalOrganizationName":"ФГБУН \"ФИЦ Питания и Биотехнологии\"","title":"Физиотерапия","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"controlCheckUp":false,"type":"consultation"},{"destinationType":"Направление по маршруту","assignmentId":"null","title":"Определение липопротеинов низкой плотности (ЛПНП-бета)","period":{"startDate":"2023-11-13T00:00:00","endDate":"2030-02-12T23:59:59"},"type":"laboratory"}]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#Id}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>patientId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Записать даты в проперти" id="654b9b7b-d459-4469-a8ae-562e861b0187"><con:settings/><con:config><script>import java.text.SimpleDateFormat

// Записать в переменную текущую дату в формате yyyy-MM-dd
def today = new Date()
sdf = new SimpleDateFormat("yyyy-MM-dd")
def todayNewFormat = sdf.format(today)

testRunner.testCase.setPropertyValue("today", todayNewFormat.toString())


</script></con:config></con:testStep><con:testStep type="request" name="getPlanExtention" id="bd35a5dd-fb6d-4a24-aa9d-f69b02a2a13a" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="getPlanExtention" id="ba633d93-c667-4921-9492-b05f536b48f4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-9d130c8c-53c1-4cf0-94af-d0da7dd509fa" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
<ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <GetPlanExtensionRequest xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/">
         <patientId>${#TestCase#Id}</patientId>
      </GetPlanExtensionRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="97a7f3a9-b5c8-448b-895a-1abbb5c118e7"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Получить jobId" id="54a9295d-12f7-4503-9bb7-dfaf7d42a9b1" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>jobId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getPlanExtention</con:sourceStep><con:sourcePath>//*:jobExecutionId[1]/text()[1]</con:sourcePath><con:targetType>jobId</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="getMeInfo" id="14ab9c06-72b8-4ee7-8784-6385e957201c" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>meiPTBv2</con:interface><con:operation>getMeInfoByJobId</con:operation><con:request name="getMeInfo" id="1f158fd7-a141-4499-8607-c8098ed7170c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#suppmeinfoEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:user="http://emias.mos.ru/system/v1/userContext/" xmlns:typ="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/" xmlns:v2="http://emias.mos.ru/suppmeinfo/core/v2/">
   <soap:Header>
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken wsu:Id="UsernameToken-0d393076-a609-42b0-a17e-567f0e8b81a2" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
            <wsse:Username>EIM/EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
      <ns3:userContext xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns2="http://emias.mos.ru/suppmeinfo/core/v2/" xmlns="http://emias.mos.ru/suppmeinfo/medicalEmployeeInfo/v2/types/">
         <ns3:systemName>EIM</ns3:systemName>
         <ns3:userName>HYkle6XW7ifrlT7wCuuK0iZ9RoePXm2NG92bTaLowfMA8P/yw85Mi/WrVHo89WDhWFgRt66EU3MBtQ3SEhhkrwOOLjNFijcReVF2xegR4E+wxgBS2JRt3CSP4mQfw4YEEJCPprUUC2KPBW+ckkHyt9wOaRq4TQjZ2/wTtdHDEyRs2sYIM1WUZPgc39vRRpfKGMv4keac/eirq9PlTfPQauQdxnGJ9ZDzQbAsUMULVbFW0m78KKR5JzAFpl7YFEx1o9eUT70XdBZDhfdVlljA+T+yRIOpW2SOZOEpVhYAZ8qTVOtKcJk060bDndYdUd1gQ0x6ckT1+CgOxQEbefi/Yw==</ns3:userName>
         <ns3:userRoleId>7187</ns3:userRoleId>
         <ns3:isUserRoleSystemWide>true</ns3:isUserRoleSystemWide>
         <ns3:userRights>
            <ns3:userRightId>5150001</ns3:userRightId>
            <ns3:userRightId>333001</ns3:userRightId>
         </ns3:userRights>
         <ns3:jobExecutionId>1</ns3:jobExecutionId>
      </ns3:userContext>
   </soap:Header>
   <soap:Body>
      <typ:getMeInfoByJobIdRequest>
         <typ:jobIds>
            <typ:jobId>${#TestCase#jobId}</typ:jobId>
         </typ:jobIds>
      </typ:getMeInfoByJobIdRequest>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="525d1d6c-77d7-4600-8311-6842a1095b40"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="PiPrescriptions" id="6a12ec8c-b5b2-48e8-b89f-d5516dcc55ba" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="PiPrescriptions" id="f07d5aff-8086-4add-83ed-8bb081aa7ceb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>
         </wsse:UsernameToken>
      </wsse:Security>
   </soapenv:Header>
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         <typ:prescriptionNumber>${#TestCase#prescriptionNumber}</typ:prescriptionNumber>\r
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bd6db1a0-c52d-48f1-aab1-4b1cd1b0b58d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить doctor, diagnosis, mo" id="63195dda-95e7-4afa-920c-2b71cd57484b" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper
def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def doctorRest = jsonResponse.payload.dispensaryObservationInfo.doctor.jobId.toString() //получаем jobId врача из рест ответа
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
 def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
 def onlyTextSoap =  new XmlSlurper().parseText(soapResponse)  // парсим текст из xml
 def doctorSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.jobExecutionId.toString()// получаем jobExecutionId из соап ответа
 log.info "JobId_soap" + " " + doctorSoap
assert doctorRest == doctorSoap //проверяем на совпадение Id врача из рест с соап

def diagnosisCodeRest = jsonResponse.payload.dispensaryObservationInfo.diagnosis.code.join() //получаем коды диагнозов из рест
def diagnosisCodeSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.diagnosis.diagnosisCode.toString()//получаем коды диагнозов из соап
log.info "DiagnosisCode_soap" + " " + diagnosisCodeSoap
assert diagnosisCodeRest == diagnosisCodeSoap //проверяем на совпадение коды диагнозов рест с соап

def diagnosisTitleRest = jsonResponse.payload.dispensaryObservationInfo.diagnosis.title.join() //получаем названия диагнозов из рест
def diagnosisTitleSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.diagnosis.diagnosisTitle.toString() //получаем названия диагнозов из соап
log.info "DiagnosisTitle_soap" + " " + diagnosisTitleSoap
assert diagnosisTitleRest == diagnosisTitleSoap // проверяем на совпадение названия диагнозов рест с соап

def moIdRest = jsonResponse.payload.dispensaryObservationInfo.mo.id.toString() //получаем id МО из рест
def moIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.moId.toString()//получаем id МО из соап
log.info "moId_soap" + " " + moIdSoap
assert moIdRest == moIdSoap //проверяем на совпадение id МО рест с соап

def nameMoRest = jsonResponse.payload.dispensaryObservationInfo.mo.name.toString() //получаем название МО из рест
def nameMoSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.moName.toString() //получаем название МО из соап
log.info "moName_soap" + " " + nameMoSoap
assert nameMoRest == nameMoSoap //проверяем на совпадение название МО рест с соап

def planIdRest = jsonResponse.payload.shortProgram.planId.toString() //получаем id ДН из рест
def planIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.id.toString() //получаем id ДН из соап
log.info "shortId_soap" + " " + planIdSoap
assert planIdRest == planIdSoap // //проверяем на совпадение id ДН рест с соап

def documentIdRest = jsonResponse.payload.shortProgram.documentId.toString() //получаем id документа ПДН из рест
def documentIdSoap = onlyTextSoap.Body.GetPlanExtensionResponse.result.documentId.toString() //получаем id документа ПДН из соап
log.info "docId_soap" + " " + documentIdSoap
assert documentIdRest == documentIdSoap //проверяем на совпадение id документа ПДН рест с соап

def FIO = jsonResponse.payload.dispensaryObservationInfo.doctor.fioFull.toString() // получаем ФИО врача из рест
def soapInfoResponse = context.expand('${getMeInfo#Response}') // получаем из рест запроса ответ
def onlyTextSoapInfo =  new XmlSlurper().parseText(soapInfoResponse) // создаем объект json
def firstName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.firstName.toString() //получаем имя врача из соап
def lastName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.lastName.toString()//получаем фамилию врача из соап
def secondName = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.employeeInfo.secondName.toString() //получаем отчество врача из соап
def FIO_soap = lastName+' '+firstName+' '+secondName //складываем ФИО из соап
log.info "FIO_soap" + " " + FIO_soap
assert FIO == FIO_soap//проверяем на совпадение ФИО врача рест с ФИО соап

def specialityRest = jsonResponse.payload.dispensaryObservationInfo.doctor.speciality.toString() //получаем название специальности врача рест
def specialitySoap = onlyTextSoapInfo.Body.getMeInfoByJobIdResponse.result.employee.jobInfo.speciality.name.toString() //получаем название специальности соап
log.info "docSpeciality_soap" + " " + specialitySoap
assert specialityRest == specialitySoap //проверяем на совпадение название специальности рест с соап


</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить appointment" id="ba7d2cbf-b640-46b2-b7c4-fac2c453575c" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'hh:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() //получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def appointmentRest = jsonResponse.payload.shortProgram.appointment.appointmentId.join() //получаем все appointmentId из getShortProgram
//log.info appointmentRest
log.info jsonResponse.payload.shortProgram.appointment.appointmentId
def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention

def Id=[] //объявляем пустой массив для заполнения id
def massiv_date=[] //объявляем пустой массив для заполнения appointmentDate
for( i in 0..soap_event.size()){ //цикл для заполнения массива Id данными
		if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых есть объект appointment
			def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].eventStatus.text() ///записываем параметры в переменные - статус event
			def archived = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].archived.toBoolean() //признак архивности
			def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //статус appointment
			def ap_date = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.appointmentDate.text()) //дата appointment
			def ap_id = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.id.text() //id
			//log.info ap_date
				if (status == 'PLANNED' && archived == false && type != 'CANCEL' && ap_date >= currentDate){ //отбираем appointment_id, которые соответствуют условиям
					Id.add(ap_id) //записываем в массив id, которые подходят под условия выше
					massiv_date.add(ap_date) //записываем appointmentDate в массив
				}
		}
}

if (massiv_date.size() !=0){ //уловие для проверки минимальной даты
	def min_date = Date.parse(dTF, jsonResponse.payload.shortProgram.appointment.earliestAppointmentDate.toString()) //объявляем переменную с датой
	log.info "minDate_soap" + " " + Collections.min(massiv_date)
	assert Collections.min(massiv_date) == min_date //сравниваем минимальную дату из массива с датой из рест
}
log.info "appointment.id_soap" + " " + Id
log.info "count_soap" + " " + Id.size()
assert Id.join() == appointmentRest //проверяем соответствие отобранных по условиям из соап с рест ответом
assert Id.size() == jsonResponse.payload.shortProgram.appointment.count //проверяем кол-во id

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить suppReferralId" id="0a2c3580-736b-48f8-9ae3-441174163cf3" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.text.SimpleDateFormat

String dTF = "yyyy-MM-dd'T'hh:mm:ss"
String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() // получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def suppReferralRest = jsonResponse.payload.shortProgram.assignment.suppReferralId.join()//получаем все appointmentId из getShortProgram
def checkUpRest = jsonResponse.payload.shortProgram.assignment.controlCheckUp.toString() //получаем размер массива с suppReferralId
def assignmentRest = jsonResponse.payload.shortProgram.assignment.assignmentId.join()//получаем все appointmentId из getShortProgram
//log.info suppReferralRest

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention
def eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod //получаем все eventsPeriod из getPlanExtention

assignmentConsultation=[] //объявляем пустой массив, который будем заполнять данными из цикла
massiv_date=[]//объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i in 0..soap_event.size()){ //цикл для заполнения массива assignmentConsultation данными
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.text()){ //оставляем только те event, у которых есть объект assignmentConsultation
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.status.text() //записываем параметры в переменные - статус assignmentConsultation
				def asConsultation = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentConsultation.suppReferralId.text() //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text() //статус appointment
					if (status == 'CREATED'){ //отбираем assignmentConsultation только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentConsultation.add(asConsultation) //записываем suppReferralId в массив assignmentConsultation
							massiv_date.add(date_min) //добавляем дату eventsPeriod  в массив massiv_date из которого этот suppReferralId
						}
						else if(type=='CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
								assignmentConsultation.add(asConsultation) //записываем suppReferralId  в массив assignmentConsultation
								massiv_date.add(date_min)//добавляем дату eventsPeriod в массив massiv_date из которого этот suppReferralId
						}
					}
			}
		}
}

assignmentInstrumental=[] //объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i=0; i<soap_event.size(); i++){ //2й цикл, т.к. разная размерность
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.text()){ //оставляем только те event, у которых есть объект assignmentInstrumental
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.status.text() //записываем параметры в переменные статус assignmentInstrumental
				def asInstrumental = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentInstrumental.suppReferralId.text() //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text()//статус appointment
					if (status == 'CREATED'){ //отбираем assignmentInstrumental только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentInstrumental.add(asInstrumental) //записываем suppReferralId в массив assignmentInstrumental
							massiv_date.add(date_min) //добавляем дату eventsPeriod  в массив massiv_date из которого этот suppReferralId
						}
						else if (type == 'CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
								assignmentInstrumental.add(asInstrumental) //записываем suppReferralId в массив assignmentInstrumental
								massiv_date.add(date_min) //добавляем дату eventsPeriod в массив massiv_date из которого этот suppReferralId
						}
					}
			}
		}
}

log.info "Instrumental_suppReferralId" + " " +  assignmentInstrumental
log.info "Consultation_suppReferralId" + " " +  assignmentConsultation.size()

assignmentsId=[] //объявляем пустой массив, который будем заполнять данными из цикла
for (n=0; n<eventsPeriod.size(); n++){ //цикл для заполнения массива assignmentsId данными
	def date_min = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].endTime.text())// объявляем переменную - время окончания eventsPeriod
		for( i=0; i<soap_event.size(); i++){ //2й цикл, т.к. разная размерность
			if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.text()){ //оставляем только те event, у которых есть объект assignmentLaboratoryExtended
				def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.status.text() //записываем параметры в переменные - статус assignmentLaboratoryExtended
				def asId = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].assignment.assignmentLaboratoryExtended.assignment_id.text() //id //id направления
				def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.eventType.text() //статус appointment
					if (status == 'CREATED'){ //отбираем assignmentLaboratoryExtended только со статусом 'CREATED'
						if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[n].event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
							assignmentsId.add(asId) //записываем assignment_id в массив assignmentsId
							massiv_date.add(date_min) //добавляем дату eventsPeriod в массив massiv_date из которого этот assignment_id
						}
						else if (type == 'CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
							assignmentsId.add(asId) //записываем assignment_id в массив assignmentsId
							massiv_date.add(date_min)//добавляем дату eventsPeriod в массив massiv_date из которого этот assignment_id
						}
					}
			}
		}
}
log.info "assignment_Id" + " " + assignmentsId

if (massiv_date.size() !=0){ //уловие для проверки минимальной даты
	def min_date = Date.parse(dTF, jsonResponse.payload.shortProgram.assignment.endDate.toString())//объявляем переменную с датой
	def min_date_soap = Collections.min(massiv_date) //,thtv vbybvfkmye. lfne bp vfccbdf
	long min_time = min_date.getTime()/1000 //получаем время в милисекундах и отбрасываем 3 последних знака, т.к. они отличаются но время 23:59
	long min_time_soap = min_date_soap.getTime()/1000 //получаем время в милисекундах и отбрасываем 3 последних знака, т.к. они отличаются но время 23:59
	assert min_time ==  min_time_soap //сравниваем минимальную дату с рест
}

def count_soap = assignmentsId + assignmentInstrumental + assignmentConsultation
log.info "count_soap" + " " + count_soap.size()
def suppReferralId = assignmentInstrumental.join()+assignmentConsultation.join() //складываем 2 массива assignmentInstrumental и assignmentConsultation
assert suppReferralId == suppReferralRest //проверяем соответствие suppReferralId рест с соап
assert count_soap.size() == jsonResponse.payload.shortProgram.assignment.count //проверяем соответствие кол-ва suppReferralId рест и соап
assert assignmentsId.join() == assignmentRest //проверяем соответствие assignmentId рест с соап

controlCheckUp=[] //объявляем пустой массив, который будем заполнять данными из цикла
for( i in 0..soap_event.size()){ //цикл для заполнения массива controlCheckUp данными
	if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.text()){ //оставляем только те event, у которых есть объект assignmentConsultation
		def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.status.text() //записываем параметры в переменные - статус assignmentConsultation
		def asConsultation = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.suppReferralId.text() //id направления
		def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //статус appointment
		def statusCheckUp = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentConsultation.assigmentToControlCheckUp.toBoolean() //признак контрольного мероприятия
			if (status == 'CREATED'){ //отбираем assignmentConsultation только со статусом 'CREATED'
				if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых отсутствует объект appointment
					if (statusCheckUp == true){ //отбираем assignmentConsultation с признаком контрольного мероприятия assigmentToControlCheckUp = true
						controlCheckUp.add(asConsultation) //записываем suppReferralId в массив controlCheckUp
					}
				}
				else if(type=='CANCEL'){ //проверяем остальные event с объектами appointment и статусом = cancel
							if (statusCheckUp == true){ //отбираем assignmentConsultation с признаком контрольного мероприятия assigmentToControlCheckUp = true
								controlCheckUp.add(asConsultation) //записываем suppReferralId в массив controlCheckUp
							}
				}
			}
	}
}
if(controlCheckUp.size() != 0 && checkUpRest != null){
log.info "controlCheckUp_soap" + " " + controlCheckUp
assert controlCheckUp.join() == checkUpRest //проверяем соответствие controlCheckUp рест с соап
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="Проверить assignmentsId" id="39c5845a-4ad0-478d-8584-beb8c45a55ee" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder

String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date()

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def assignmentRest = jsonResponse.payload.shortProgram.assignment.assignmentId.join()//получаем все appointmentId из getShortProgram
def count_assignmentRest = assignmentRest.size() //получаем размер массива assignmentId
log.info assignmentRest

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def soap_event = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event //получаем все event из getPlanExtention


assignmentsId=[] //объявляем пустой массив, который будем заполнять данными из цикла
for( i in 0..soap_event.size()){ //цикл для заполнения массива assignmentsId данными
	if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.text()){ //оставляем только те event, у которых есть объект assignmentLaboratoryExtended
		def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.status.text() //записываем параметры в переменные
		def asId = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].assignment.assignmentLaboratoryExtended.assignment_id.text()
		def type = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.eventType.text() //записываем параметр в переменную
			if (status == 'CREATED'){ //отбираем assignmentLaboratoryExtended только со статусом 'CREATED'
				if (!onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod.event[i].appointment.text()){ //оставляем только те event, у которых есть объект appointment
					assignmentsId.add(asId)
				}
				else if (type == 'CANCEL'){ //отбираем appointment только со статусом "CANCEL"
							assignmentsId.add(asId)
				}
			}
	}
}

log.info assignmentsId
log.info assignmentsId.join()
assert assignmentsId.join() == assignmentRest //проверяем соответствие assignmentId рест с соап</script></con:config></con:testStep><con:testStep type="groovy" name="Проверить prescriptions" id="c1348590-83b7-42e2-9fac-871d11d36d2a" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import com.eviware.soapui.support.XmlHolder
import java.util.concurrent.TimeUnit

String dateTimeFormat="yyyy-MM-dd'T'hh:mm:ss.SSS+03:00" //устанавливаем формат даты
def currentDate = new Date() // получаем текущую дату

def restResponse = context.expand('${getShortProgram#Response}').toString() // получаем из рест запроса ответ
def jsonResponse =  new JsonSlurper().parseText(restResponse) // создаем объект json
def prescriptionRest = jsonResponse.payload.prescriptions.prescriptionNumber//получаем все appointmentId из getShortProgram

def soapResponse = context.expand('${getPlanExtention#Response}') // получаем из соап запроса ответ
def onlyTextSoap =  new XmlSlurper().parseText(soapResponse) // создаем объект xml
def eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod //получаем все eventsPeriod из getPlanExtention


prescriptionState=[] //объявляем пустые массивы, которые будем заполнять данными из цикла - статус рецепта
prescNumber=[] //номер рецепта
title=[] //описание
type=[] //тип рецепта
usage=[] //способ применения
expirationDate=[] //дата окончания
for (i = 0; i<eventsPeriod.size(); i++){ //цикл для заполнения массивов выше, данными
	def startEvents = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].startTime.text()) //записываем параметры в переменные - время начала
	def endEvents = Date.parse(dateTimeFormat, onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].endTime.text()) //время окончания
	def drugs_eventsPeriod = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent.number //номер цецепта
		if (onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent){ //оставляем только те eventsPeriod у которых есть drugsEvent
			if (startEvents <= currentDate && endEvents >= currentDate){ //оставляем только те eventsPeriod, которые соответствуют условиям
				for(n=0; n<drugs_eventsPeriod.size(); n++){ //2й цикл для заполнения массивов выше, данными
					def status = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].status.text() //записываем параметры в переменные - статус рецепта
					def number = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].number.toString() //номер рецепта
					def Ptitle = onlyTextSoap.Body.GetPlanExtensionResponse.result.eventsPeriod[i].event.drugsEvent[n].title.text() //описание
						if (status == 'PRESCRIPTED' || status == 'COMPLETED'){ //оставляем только те drugsEvent, которые соответствуют условиям
							testRunner.testCase.setPropertyValue("prescriptionNumber", number) //записываем в проперти переменную
							testRunner.runTestStepByName('PiPrescriptions') //запускаем запрос метода piPatientPrescriptions из тест-кейса
							TimeUnit.SECONDS.sleep(5) //таймаут для выполнения запроса
							def prescriptionResponse = context.expand('${PiPrescriptions#Response}') // получаем из соап запроса ответ
							def onlyTextPrescriptions =  new XmlSlurper().parseText(prescriptionResponse) // создаем объект xml
							def PState = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.prescriptionState.text() //записываем параметр в переменную - статус рецепта
								if (PState != 'expired'){ //отбираем рецепты со статусом !=xpired
									def PNumber = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.number.text() //записываем параметры в переменные - статус рецепта
									def PType = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.type.text() //тип рецепта
									def PUsage = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.medicine.usage.text() //способ применения
									def PexpDate = onlyTextPrescriptions.Body.piPatientPrescriptionsResponse.prescription.expirationDate.text() //дата окончания
									prescNumber.add(PNumber) //записываем number в массив prescNumber
									title.add(Ptitle) //записываем itle в массив title
									type.add(PType) //записываем type в массив type
									usage.add(PUsage) //записываем usage в массив usage
									expirationDate.add(PexpDate) //записываем expirationDate в массив expirationDate
										if (PState == 'active' || PState == 'inprogress' || PState == 'delivered'){ //если статус рецепта active или inprogress или delivered
											prescriptionState.add('active')//то записываем в массив prescriptionState статус active
										}
										else if (PState == 'completed'){ //если статус рецепта cpmpleted
											prescriptionState.add('completed') //то записываем в массив prescriptionState статус completed
										}
								}
						}
				}
			}
		}
}
log.info prescriptionState
log.info prescNumber
log.info title
log.info type
log.info usage
log.info expirationDate

for (i=0; i<prescNumber.size(); i++){ //цикл для проверки соответствия параметров из рест с соап
	assert prescriptionRest.contains(prescNumber[i]) //проверяем, что number есть в ответе рест
	assert prescriptionState[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.prescriptionState.toString() //проверяем что у этого number, статус соответствует маппингу
	assert title[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.title.toString() //проверяем что у этого number, title из рест соответствует title из соап
	assert type[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.type.toString() //проверяем что у этого number, type из рест соответствует type из соап
	assert usage[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.usage.toString() //проверяем что у этого number, usage из рест соответствует usage из соап
	assert expirationDate[i].toString() == jsonResponse.payload.prescriptions.find {it.prescriptionNumber == prescNumber[i]}.expirationDate.toString() //проверяем что у этого number, expirationDate из рест соответствует expirationDate из соап
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>oms</con:name><con:value>7700002103120170</con:value></con:property><con:property><con:name>Id</con:name><con:value>104296741</con:value></con:property><con:property><con:name>jobId</con:name><con:value>15869869716</con:value></con:property><con:property><con:name>prescriptionNumber</con:name><con:value>00Д4519379722</con:value></con:property><con:property><con:name>ehrId</con:name><con:value/></con:property><con:property><con:name>Mock-pdn</con:name><con:value>http://application-mock.emias.solit-clouds.ru/209774</con:value></con:property><con:property><con:name>Mock-supp</con:name><con:value>http://application-mock.emias.solit-clouds.ru/209774</con:value></con:property><con:property><con:name>Mock-llo</con:name><con:value>http://application-mock.emias.solit-clouds.ru/209774</con:value></con:property><con:property><con:name>path</con:name><con:value>/209774/getPlanExtension</con:value></con:property><con:property><con:name>today</con:name><con:value>2024-02-02</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="dcaf010f-8de7-4dc8-8554-91ff50a306c1" name="getDispensaryObservationProgram"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="c13275a8-4158-4cf4-83b1-df6d797ec1c0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получить пдн с рецептами" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента с рецептами" id="8e7a2caf-d458-4872-afae-b0821fb5f699" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct poe.patient_id as id from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true "

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<supp.size(); i++){
	id=supp[i].PATIENT_ID.toString()
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	testRunner.testCase.setPropertyValue("patientId", patientsSupp[i].id)
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	testRunner.testCase.setPropertyValue("numbers", numbers)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[1].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="7fc2ffea-1e4c-4e71-b12e-25c3e92767cc"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0de92896-fe47-406f-9830-048239c4788d" name="Contains"><con:configuration><token>prescription</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#TestSuite#token}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>patientId</con:entry><con:entry>omsNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="0079b427-05a7-4bd8-83c0-7786b7209dd1" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="Simple Contains" id="6ce801c1-c35c-4b43-8b23-254ab9aa2528" name="Contains"><con:configuration><token>prescriptionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="546649ac-f726-4095-a423-240e0389e54a"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

// получить мероприятия драг ивент
def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

eventPeriods=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod
n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
numbers=""
prescriptions=[]

// собрать из драг ивент номера рецептов
for(int i=0; i<n; i++){
	number= events[i].number.toString()
	if(number!="")	{
		numbers=numbers+"<typ:prescriptionNumber>"+number+"</typ:prescriptionNumber>"
		
	}
}

if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)

// выполнить запрос получения рецептов по номеру и собрать мапу с номерами и expirationDate
testRunner.runTestStepByName( "piPatientPrescription")
def piPatientPrescriptionResponse = context.expand('${piPatientPrescription#Response}')
piPatientPrescription = new XmlSlurper().parseText(piPatientPrescriptionResponse)
piPrescriptions=piPatientPrescription.Body.piPatientPrescriptionsResponse.prescription
piPrescriptionsArray=[]
s=piPrescriptions.size()
for(int i=0; i<s; i++){
	number=piPrescriptions[i].number.toString()
	expirationDate =piPrescriptions[i].expirationDate .toString()
	map=[number:number,expirationDate:expirationDate ]
	piPrescriptionsArray << map
}

//собрать все данные по рецептам
prescriptionsArray=[]
for(int i=0; i<n; i++){
	parent =events[i].parent()
	eventStatus=parent.eventStatus
	drugEventStatus=events[i].status
	parent2 =parent.parent()
	startTime=parent2.startTime.toString()
	startDate=startTime.split('T')[0]
	endTime=parent2.endTime.toString()
	endDate=endTime.split('T')[0]
	title=events[i].title.toString()
	number= events[i].number.toString()
	def expirationDate
	def hint
	def status
	statuses=[eventStatus,drugEventStatus]
	switch(statuses){
		case ("PLANNED","PLANNED"): 
			status="PLANNED"
			break; 
        case ("PLANNED","CREATED"): 
			status="CREATED"
			break; 
		case ("COMPLETED","COMPLETED"): 
			status="COMPLETED"
			break; 
		case ("EXPIRED","EXPIRED"): 
			status="EXPIRED "
			break; 
	}
//	log.info status
	if(number!="")	{
		piPrescriptionsArray.each{
			if (it.number == number) expirationDate= it.expirationDate
		}
	}
	else {
		expirationDate=null
		number=null
	}
	log.info startDate+" "+endDate+" "+status
	map=[]
}
]]></script></con:config></con:testStep><con:testStep type="request" id="1690f193-5d72-4cfc-84af-6d0a256fbedc" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="4c0ba27b-bd74-478a-83a2-fa886cbd3f58" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;typ:prescriptionNumber>00Д4519354529&lt;/typ:prescriptionNumber>&lt;typ:prescriptionNumber>00Д4519354530&lt;/typ:prescriptionNumber></con:value></con:property><con:property><con:name>oms</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7701008143150660</con:value></con:property><con:property><con:name>patientId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1723794691</con:value></con:property></con:properties></con:testCase><con:testCase id="bbb49cc8-2b4f-4e51-8692-d48d483f4e23" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получить пдн с рецептами пациент 17965152" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента с рецептами" id="dc070145-ca40-4a09-86d4-92a170fff13e" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct poe.patient_id as id from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true "

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<supp.size(); i++){
	id=supp[i].PATIENT_ID.toString()
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	testRunner.testCase.setPropertyValue("patientId", patientsSupp[i].id)
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	testRunner.testCase.setPropertyValue("numbers", numbers)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[0].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="b024c8b7-ae90-41f1-834e-f9167e32c7a8"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Mock-pdn" value="http://application-mock.emias.solit-clouds.ru/209774"/>&#13;
  &lt;con:entry key="Mock-llo" value=""/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#TestSuite#token}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>patientId</con:entry><con:entry>omsNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="50db8dbc-c1c4-42db-93ef-437baa2a621d" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="Simple Contains" id="6ce801c1-c35c-4b43-8b23-254ab9aa2528" name="Contains"><con:configuration><token>prescriptionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="04bcfa96-913a-4593-a49d-ad4cff6c747b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
numbers=""
for(int i=0; i&lt;n; i++){
	log.info i
	number= events[i].number.toString()
	if(number!="")	numbers=numbers+"&lt;typ:prescriptionNumber>"+number+"&lt;/typ:prescriptionNumber>"
	log.info  numbers
}
log.info numbers
if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)</script></con:config></con:testStep><con:testStep type="request" id="ef6679e9-b5f8-49f0-84b2-b5002eef60b8" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value><![CDATA[<typ:prescriptionNumber>00Д4519357633</typ:prescriptionNumber><typ:prescriptionNumber>00Д4519357634</typ:prescriptionNumber><typ:prescriptionNumber>00Д4519357636</typ:prescriptionNumber>]]></con:value></con:property><con:property><con:name>oms</con:name><con:value>7753530884001892</con:value></con:property><con:property><con:name>patientId</con:name><con:value>17965152</con:value></con:property></con:properties></con:testCase><con:testCase id="c609066b-f616-4d20-8f14-7e1c388b991d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Получить пдн без рецептов" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента с рецептами" id="008f8065-b8a2-40a7-901b-6e1bc84613e2" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct poe.patient_id as id from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true "

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<supp.size(); i++){
	id=supp[i].PATIENT_ID.toString()
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	testRunner.testCase.setPropertyValue("patientId", patientsSupp[i].id)
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	testRunner.testCase.setPropertyValue("numbers", numbers)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[0].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		break
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="005a2305-8126-4b03-8ded-b33c1b801da5"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#TestSuite#token}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>patientId</con:entry><con:entry>omsNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="13492ca9-8807-4d18-bb42-846682d717c4" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="Simple Contains" id="6ce801c1-c35c-4b43-8b23-254ab9aa2528" name="Contains"><con:configuration><token>prescriptionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="95bbb206-f87c-4f06-86b6-3b6fa475101c"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
numbers=""
for(int i=0; i&lt;n; i++){
	number= events[i].number.toString()
	if(number!="")	numbers=numbers+"&lt;typ:prescriptionNumber>"+number+"&lt;/typ:prescriptionNumber>"
}
log.info numbers
if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)</script></con:config></con:testStep><con:testStep type="request" id="51d8d984-c3e1-44e9-91e8-d94a2cf3cc11" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
          ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value>&lt;typ:prescriptionNumber>99975953&lt;/typ:prescriptionNumber></con:value></con:property><con:property><con:name>oms</con:name><con:value>7700005014600550</con:value></con:property><con:property><con:name>patientId</con:name><con:value>19806849</con:value></con:property></con:properties></con:testCase><con:testCase id="18760daa-7f37-41d4-8d8b-bd76c5de3d0b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверить назначения на консультацию в пдн с записью 17252250" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента с рецептами" id="5d38752c-a9e3-42d6-8902-03a06873da40" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct poe.patient_id as id from plan_of_events poe  "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id   "+
"join \"event\" e on e.id =poee.event_id   "+
"join assignments_in_plan aip  on aip.event_id  =e.id  "+
"join assignment_consultation ac on aip.id=ac.assignments_in_plan_id "+
"join appointment a on a.assignment_id =ac.assignment_id "+
"where poe.archived =false and poe.is_actual =true "+
"group by poe.patient_id "+
"having count(ac.id)>1 limit  1000 "

log.info pdnQuery

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<supp.size(); i++){
	id=supp[i].PATIENT_ID.toString()
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	testRunner.testCase.setPropertyValue("patientId", patientsSupp[i].id)
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	numbers = numbers=="" ? "<typ:prescriptionNumber>1</typ:prescriptionNumber>" : numbers
	testRunner.testCase.setPropertyValue("numbers", numbers)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[0].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		break
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="542bd24f-0413-4619-9bdc-82e38b2ac700"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>patientId</con:entry><con:entry>omsNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="c82d6b63-82df-415b-acb5-98fa24771a2e" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" id="320692ef-3b74-4d45-aab6-60f2f6e5fde2" name="В ответе result.endDate > текущей даты"><con:configuration><scriptText>import groovy.xml.XmlSlurper
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
date1=  sdf.format(date)


def GetPlanExtension = context.expand('${GetPlanExtension#Response}')
getPlanExtension = new XmlSlurper().parseText(GetPlanExtension)
endTimeInResp=getPlanExtension.Body.GetPlanExtensionResponse.result.endTime.toString()
 log.info endTimeInResp
String endTime=endTimeInResp.replace("T"," ").tokenize('.')[0]
log.info endTime
date2= new SimpleDateFormat(formate).parse(endTime)
date3 = sdf.format(date2)
assert date1&lt; date3
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="92193122-49c9-406d-87ff-802d36b11aca" name="XPath Match"><con:configuration><path>declare namespace ns2='http://emias.mos.ru/dnpdn/core/v2/';
//*:result/ns2:archived</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="8486ffcb-4435-4d46-ace1-10fd0bb00e85"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
numbers=""
for(int i=0; i&lt;n; i++){
	number= events[i].number.toString()
	if(number!="")	numbers=numbers+"&lt;typ:prescriptionNumber>"+number+"&lt;/typ:prescriptionNumber>"
}
log.info numbers
if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)</script></con:config></con:testStep><con:testStep type="request" id="8c99a2af-c3d7-46bb-9b75-527bc0e89204" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг" id="c7e4d911-900a-409d-bb6c-d8e15c624c31"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
today=  sdf.format(date)

DateFormat fmt = new SimpleDateFormat("MMMM dd, yyyy", Locale.RU);
Date d = fmt.parse(date);
log.info d

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
log.info GetPlanExtensionResponse
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod
numberEventspdn=eventspdn.size()
//log.info numberSACArs
//log.info eventspdn
 mySet = new HashSet<>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberEventspdn>0){
	for(int i=0; i<numberEventspdn; i++){
		eventsXml=eventspdn[i].event
		eventsSize=eventsXml.size()
		//log.info eventsXml
		for(int k=0; k<eventsSize; k++){
			eventXml=eventsXml[k]
			archived=eventXml.archived.toBoolean()
			status=eventXml.eventStatus.toString()
			//log.info status+" "+archived
			def documentCompletedId=null
			if(archived==false && status!='CANCEL') {
				
				if(eventXml.assignment.assignmentConsultation.size()==1){
					cons=eventXml.assignment.assignmentConsultation
					suppReferralId=cons.suppReferralId.toString() ? suppReferralId=cons.suppReferralId.toString() : null
					specializationTitle=cons.specializationTitle.toString()
					controlCheckUp=cons.assigmentToControlCheckUp.toBoolean()
					assigmentId=cons.assignment_id.toString()
					documentCompletedId= cons.documentsByAssignment.toString() && [ 'RESULT_OF_CONSULTATION','INSPECTION_PROTOCOL'].contains(cons.documentsByAssignment.documentTypeName.toString()) ? cons.documentsByAssignment.documentTypeName.toString() : null 
					appointment= eventXml.appointment.toString() ? eventXml.appointment : null
					documentCreateDate= documentCompletedId != null ? cons.documentsByAssignment.documentCreateDate.toString().tokenize('T')[0]  : null
					if(appointment != null){
						apDateString=appointment.appointmentDate.toString().replace("T"," ").tokenize('.')[0]
						apDateParsed= new SimpleDateFormat(formate).parse(apDateString)
						appointmentDateFormated = sdf.format(apDateParsed)
						appointmentAssigmentId=appointment.assignmentId.toString()
						appointmentEventType=appointment.eventType.toString()
						//log.info appointmentEventType
						if(appointmentEventType!="CANCEL" && appointmentDateFormated >= today && assigmentId==appointmentAssigmentId){
							appointmentId=appointment.id.toLong()
							appointmentDate=appointmentDateFormated.toString().replace(" ","T")
							
						}
						else {
							appointmentId=null
							appointmentDate=null
						}
					}
					else {
						appointmentId=null
						appointmentDate=null
					}
					eventStatus=eventXml.eventStatus.toString()
					assigmentStatus=cons.status.toString()
					//log.info eventStatus+"  "+assigmentStatus
					infoStatus=""
					hint=""
					if (eventStatus=="PLANNED" && assigmentStatus=="PLANNED"){
						infoStatus="PLANNED"
					}
					else if (eventStatus=="CREATED" && assigmentStatus=="CREATED"){
						infoStatus="CREATED"
					}
					else if  (eventStatus=="COMPLETED" && assigmentStatus=="COMPLETED"){
						infoStatus="COMPLETED"
					}
					else if  (eventStatus=="EXPIRED" && assigmentStatus=="UNFINISHED"){
						infoStatus="EXPIRED"
					}
					log.info infoStatus
					//log.info cons.documentsByAssignment.documentTypeName.toString()
					//log.info documentCompletedId
					
				}
			}
		}
	}
}

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Проверить маппинг" id="e4997621-72f6-4f40-888e-60733fbfd60b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.eventsPeriod
numberSACArs=SACArs.size()
//log.info numberSACArs

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}
assert numberSACArs== mySet.size()
assert goctorInfoINFO.payload[0].lpuId ==SACArs[0].complexResource.room.lpuId.toLong()
assert goctorInfoINFO.payload[0].lpuShortName ==SACArs[0].complexResource.room.lpuShortName.toString()
assert goctorInfoINFO.payload[0].defaultAddress ==SACArs[0].complexResource.room.defaultAddress.toString()</script></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value>&lt;typ:prescriptionNumber>1&lt;/typ:prescriptionNumber></con:value></con:property><con:property><con:name>oms</con:name><con:value>7700003080181099</con:value></con:property><con:property><con:name>patientId</con:name><con:value>17252250</con:value></con:property></con:properties></con:testCase><con:testCase id="37f640df-1daa-43da-a973-390370f15d3c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверить назначения на консультацию в пдн" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента с рецептами" id="a6ee2dca-f12c-466d-b0f8-23901109462d" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct poe.patient_id as id from plan_of_events poe  "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id   "+
"join \"event\" e on e.id =poee.event_id   "+
"join assignments_in_plan aip  on aip.event_id  =e.id  "+
"join assignment_consultation ac on aip.id=ac.assignments_in_plan_id "+
"join appointment a on a.assignment_id =ac.assignment_id "+
"where poe.archived =false and poe.is_actual =true "+
"group by poe.patient_id "+
"having count(ac.id)>1 limit  1000 "

log.info pdnQuery

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<supp.size(); i++){
	id=supp[i].PATIENT_ID.toString()
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	testRunner.testCase.setPropertyValue("patientId", patientsSupp[i].id)
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	numbers = numbers=="" ? "<typ:prescriptionNumber>1</typ:prescriptionNumber>" : numbers
	testRunner.testCase.setPropertyValue("numbers", numbers)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[0].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		break
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="f6468c73-c4f7-4db8-8161-c5eca8aca4fa"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry><con:entry>Mock-pdn</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="1c29801c-4e05-4c90-83e1-f4c732df13bc" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" id="320692ef-3b74-4d45-aab6-60f2f6e5fde2" name="В ответе result.endDate > текущей даты"><con:configuration><scriptText>import groovy.xml.XmlSlurper
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
date1=  sdf.format(date)


def GetPlanExtension = context.expand('${GetPlanExtension#Response}')
getPlanExtension = new XmlSlurper().parseText(GetPlanExtension)
endTimeInResp=getPlanExtension.Body.GetPlanExtensionResponse.result.endTime.toString()
 log.info endTimeInResp
String endTime=endTimeInResp.replace("T"," ").tokenize('.')[0]
log.info endTime
date2= new SimpleDateFormat(formate).parse(endTime)
date3 = sdf.format(date2)
assert date1&lt; date3
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="92193122-49c9-406d-87ff-802d36b11aca" name="XPath Match"><con:configuration><path>declare namespace ns2='http://emias.mos.ru/dnpdn/core/v2/';
//*:result/ns2:archived</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="a10fd849-359e-4059-b508-08fe97415869"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
log.info n
numbers=""
for(int i=0; i&lt;n; i++){
	log.info i
	number= events[i].number.toString()
	if(number!="")	numbers=numbers+"&lt;typ:prescriptionNumber>"+number+"&lt;/typ:prescriptionNumber>"
	log.info  numbers
}
log.info numbers
if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)</script></con:config></con:testStep><con:testStep type="request" id="3cfcca5c-1fd6-423c-a88a-84da8d750d1d" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг" id="c487ef8d-76c3-49c0-b105-994023b8adc8"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
today=  sdf.format(date)

DateFormat fmt = new SimpleDateFormat("MMMM dd, yyyy", Locale.RU);
Date d = fmt.parse(date);
log.info d

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
log.info GetPlanExtensionResponse
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod
numberEventspdn=eventspdn.size()
//log.info numberSACArs
//log.info eventspdn
 mySet = new HashSet<>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberEventspdn>0){
	for(int i=0; i<numberEventspdn; i++){
		eventsXml=eventspdn[i].event
		eventsSize=eventsXml.size()
		//log.info eventsXml
		for(int k=0; k<eventsSize; k++){
			eventXml=eventsXml[k]
			archived=eventXml.archived.toBoolean()
			status=eventXml.eventStatus.toString()
			//log.info status+" "+archived
			def documentCompletedId=null
			if(archived==false && status!='CANCEL') {
				
				if(eventXml.assignment.assignmentConsultation.size()==1){
					cons=eventXml.assignment.assignmentConsultation
					suppReferralId=cons.suppReferralId.toString() ? suppReferralId=cons.suppReferralId.toString() : null
					specializationTitle=cons.specializationTitle.toString()
					controlCheckUp=cons.assigmentToControlCheckUp.toBoolean()
					assigmentId=cons.assignment_id.toString()
					documentCompletedId= cons.documentsByAssignment.toString() && [ 'RESULT_OF_CONSULTATION','INSPECTION_PROTOCOL'].contains(cons.documentsByAssignment.documentTypeName.toString()) ? cons.documentsByAssignment.documentTypeName.toString() : null 
					appointment= eventXml.appointment.toString() ? eventXml.appointment : null
					documentCreateDate= documentCompletedId != null ? cons.documentsByAssignment.documentCreateDate.toString().tokenize('T')[0]  : null
					if(appointment != null){
						apDateString=appointment.appointmentDate.toString().replace("T"," ").tokenize('.')[0]
						apDateParsed= new SimpleDateFormat(formate).parse(apDateString)
						appointmentDateFormated = sdf.format(apDateParsed)
						appointmentAssigmentId=appointment.assignmentId.toString()
						appointmentEventType=appointment.eventType.toString()
						//log.info appointmentEventType
						if(appointmentEventType!="CANCEL" && appointmentDateFormated >= today && assigmentId==appointmentAssigmentId){
							appointmentId=appointment.id.toLong()
							appointmentDate=appointmentDateFormated.toString().replace(" ","T")
							
						}
						else {
							appointmentId=null
							appointmentDate=null
						}
					}
					else {
						appointmentId=null
						appointmentDate=null
					}
					eventStatus=eventXml.eventStatus.toString()
					assigmentStatus=cons.status.toString()
					//log.info eventStatus+"  "+assigmentStatus
					infoStatus=""
					hint=""
					if (eventStatus=="PLANNED" && assigmentStatus=="PLANNED"){
						infoStatus="PLANNED"
					}
					else if (eventStatus=="CREATED" && assigmentStatus=="CREATED"){
						infoStatus="CREATED"
					}
					else if  (eventStatus=="COMPLETED" && assigmentStatus=="COMPLETED"){
						infoStatus="COMPLETED"
					}
					else if  (eventStatus=="EXPIRED" && assigmentStatus=="UNFINISHED"){
						infoStatus="EXPIRED"
					}
					log.info infoStatus
					//log.info cons.documentsByAssignment.documentTypeName.toString()
					//log.info documentCompletedId
					
				}
			}
		}
	}
}

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Проверить маппинг" id="b931e95b-b651-4644-9870-bd07f6a2c343"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.eventsPeriod
numberSACArs=SACArs.size()
//log.info numberSACArs

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}
assert numberSACArs== mySet.size()
assert goctorInfoINFO.payload[0].lpuId ==SACArs[0].complexResource.room.lpuId.toLong()
assert goctorInfoINFO.payload[0].lpuShortName ==SACArs[0].complexResource.room.lpuShortName.toString()
assert goctorInfoINFO.payload[0].defaultAddress ==SACArs[0].complexResource.room.defaultAddress.toString()</script></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value>&lt;typ:prescriptionNumber>1&lt;/typ:prescriptionNumber></con:value></con:property><con:property><con:name>oms</con:name><con:value>7758210869001044</con:value></con:property><con:property><con:name>patientId</con:name><con:value>19803956</con:value></con:property></con:properties></con:testCase><con:testCase id="fb5326e6-d9d1-4711-9420-6ed34f1d94e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверить назначения на консультацию в пдн с документом" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента с рецептами" id="79903e1d-ca80-4179-b1be-8d8019021b37" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct poe.patient_id as id from plan_of_events poe  "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id   "+
"join \"event\" e on e.id =poee.event_id   "+
"join assignments_in_plan aip  on aip.event_id  =e.id  "+
"join assignment_consultation ac on aip.id=ac.assignments_in_plan_id "+
"join documents_by_assignment dba on dba.assignments_in_plan_id =aip.id "+
"where poe.archived =false and poe.is_actual =true and dba.document_type in ('INSPECTION_PROTOCOL','RESULT_OF_CONSULTATION') "


log.info pdnQuery

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<supp.size(); i++){
	id=supp[i].PATIENT_ID.toString()
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	testRunner.testCase.setPropertyValue("patientId", patientsSupp[i].id)
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	numbers = numbers=="" ? "<typ:prescriptionNumber>1</typ:prescriptionNumber>" : numbers
	testRunner.testCase.setPropertyValue("numbers", numbers)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[0].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		break
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="e3546905-cd2a-423a-bc2f-e6aa1fba1982"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#TestSuite#token}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>patientId</con:entry><con:entry>omsNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="60f7c670-a318-4008-9c15-e7816845e06a" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" id="320692ef-3b74-4d45-aab6-60f2f6e5fde2" name="В ответе result.endDate > текущей даты"><con:configuration><scriptText>import groovy.xml.XmlSlurper
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
date1=  sdf.format(date)


def GetPlanExtension = context.expand('${GetPlanExtension#Response}')
getPlanExtension = new XmlSlurper().parseText(GetPlanExtension)
endTimeInResp=getPlanExtension.Body.GetPlanExtensionResponse.result.endTime.toString()
 log.info endTimeInResp
String endTime=endTimeInResp.replace("T"," ").tokenize('.')[0]
log.info endTime
date2= new SimpleDateFormat(formate).parse(endTime)
date3 = sdf.format(date2)
assert date1&lt; date3
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="92193122-49c9-406d-87ff-802d36b11aca" name="XPath Match"><con:configuration><path>declare namespace ns2='http://emias.mos.ru/dnpdn/core/v2/';
//*:result/ns2:archived</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="f79c630d-7a4d-4813-845d-d39575672c31"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
numbers=""
for(int i=0; i&lt;n; i++){
	number= events[i].number.toString()
	if(number!="")	numbers=numbers+"&lt;typ:prescriptionNumber>"+number+"&lt;/typ:prescriptionNumber>"
}
log.info numbers
if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)</script></con:config></con:testStep><con:testStep type="request" id="ddef31ce-1bfd-4b36-9ce2-34af558e8692" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг" id="17896d34-29b6-44d8-af51-26ae00444f9e"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId
eventsInfo=getDispensaryObservationProgramINFO.payload.dispensaryObservationProgram.group..event

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
today=  sdf.format(date)


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
log.info GetPlanExtensionResponse
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod
numberEventspdn=eventspdn.size()
//log.info numberSACArs
//log.info eventspdn
 mySet = new HashSet<>();
consEvents=[]
//проверить все ли ресурсы в отсете sac уникальные
if (numberEventspdn>0){
	for(int i=0; i<numberEventspdn; i++){
		eventsXml=eventspdn[i].event
		eventPeriodXml= eventspdn[i]
		eventsSize=eventsXml.size()
		//log.info eventsXml
		for(int k=0; k<eventsSize; k++){
			eventXml=eventsXml[k]
			archived=eventXml.archived.toBoolean()
			status=eventXml.eventStatus.toString()
			//log.info status+" "+archived
			def documentCompletedId=null
			if(archived==false && status!='CANCEL') {
				
				if(eventXml.assignment.assignmentConsultation.size()==1){
					startDate=eventPeriodXml.startTime.toString().tokenize('T')[0]
					endDate=eventPeriodXml.endTime.toString().tokenize('T')[0]
					cons=eventXml.assignment.assignmentConsultation
					suppReferralId=cons.suppReferralId.toString() ? suppReferralId=cons.suppReferralId.toLong() : null
					specializationTitle=cons.specializationTitle.toString()
					controlCheckUp=cons.assigmentToControlCheckUp.toBoolean()
					assigmentId=cons.assignment_id.toString()
					documentCompletedId=  [ 'RESULT_OF_CONSULTATION','INSPECTION_PROTOCOL'].contains(cons.documentsByAssignment.documentTypeName.toString()) ? cons.documentsByAssignment.documentId.toString() : null 
					appointment= eventXml.appointment.toString() ? eventXml.appointment : null
					documentCreateDate= documentCompletedId != null ? cons.documentsByAssignment.documentCreateDate.toString().tokenize('T')[0]  : null
					if(appointment != null){
						apDateString=appointment.appointmentDate.toString().replace("T"," ").tokenize('.')[0]
						apDateParsed= new SimpleDateFormat(formate).parse(apDateString)
						appointmentDateFormated = sdf.format(apDateParsed)
						appointmentAssigmentId=appointment.assignmentId.toString()
						appointmentEventType=appointment.eventType.toString()
						//log.info appointmentEventType
						if(appointmentEventType!="CANCEL" && appointmentDateFormated >= today && assigmentId==appointmentAssigmentId){
							appointmentId=appointment.id.toLong()
							appointmentDate=appointmentDateFormated.toString().replace(" ","T")
							
						}
						else {
							appointmentId=null
							appointmentDate=null
						}
					}
					else {
						appointmentId=null
						appointmentDate=null
					}
					eventStatus=eventXml.eventStatus.toString()
					assigmentStatus=cons.status.toString()
					//log.info eventStatus+"  "+assigmentStatus
					infoStatus=""
					hint=""
					if (eventStatus=="PLANNED" && assigmentStatus=="PLANNED"){
						infoStatus="PLANNED"
					}
					else if (eventStatus=="CREATED" && assigmentStatus=="CREATED"){
						infoStatus="CREATED"
					}
					else if  (eventStatus=="COMPLETED" && assigmentStatus=="COMPLETED"){
						infoStatus="COMPLETED"
					}
					else if  (eventStatus=="EXPIRED" && assigmentStatus=="UNFINISHED"){
						infoStatus="EXPIRED"
					}

					//log.info cons.documentsByAssignment.documentTypeName.toString()
					//log.info documentCompletedId+" "+documentCreateDate
					assigment=[suppReferralId:suppReferralId,specializationTitle:specializationTitle,controlCheckUp:controlCheckUp,appointmentId:appointmentId,appointmentDate:appointmentDate,documentCompletedId:documentCompletedId,documentCreateDate:documentCreateDate,hint:hint]
					map=[startDate:startDate,endDate:endDate,status:infoStatus,assignmentConsultation:assigment]
					consEvents <<map
				}
			}
		}
	}
}
log.info consEvents.size()

consultationsInfo=[]
eventsInfo
for(int i=0; i<eventsInfo.size(); i++){
	event=eventsInfo[i]
	if(event.assignmentConsultation != null){
		log.info i
		suppReferralId=event.assignmentConsultation.suppReferralId 
		specializationTitle=event.assignmentConsultation.specializationTitle 
		controlCheckUp=event.assignmentConsultation.controlCheckUp 
		appointmentId=event.assignmentConsultation.appointmentId 
		appointmentDate=event.assignmentConsultation.appointmentDate ?  event.assignmentConsultation.appointmentDate.toString() : null
		documentCompletedId=event.assignmentConsultation.documentCompletedId 
		documentCreateDate=event.assignmentConsultation.documentCreateDate  ?  event.assignmentConsultation.documentCreateDate.toString() : null
		hint=event.assignmentConsultation.hint 
		assigment=[suppReferralId:suppReferralId,specializationTitle:specializationTitle,controlCheckUp:controlCheckUp,appointmentId:appointmentId,appointmentDate:appointmentDate,documentCompletedId:documentCompletedId,documentCreateDate:documentCreateDate,hint:hint]
		log.info eventsInfo.size()
	}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Проверить маппинг" id="c63503b0-9467-4c8f-aaa1-3969c43453dd"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.eventsPeriod
numberSACArs=SACArs.size()
//log.info numberSACArs

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}
assert numberSACArs== mySet.size()
assert goctorInfoINFO.payload[0].lpuId ==SACArs[0].complexResource.room.lpuId.toLong()
assert goctorInfoINFO.payload[0].lpuShortName ==SACArs[0].complexResource.room.lpuShortName.toString()
assert goctorInfoINFO.payload[0].defaultAddress ==SACArs[0].complexResource.room.defaultAddress.toString()</script></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value>&lt;typ:prescriptionNumber>1&lt;/typ:prescriptionNumber></con:value></con:property><con:property><con:name>oms</con:name><con:value>7751930897000901</con:value></con:property><con:property><con:name>patientId</con:name><con:value>10114212</con:value></con:property></con:properties></con:testCase><con:testCase id="3b02fc45-55d6-4ec0-aa96-7fbe5790f6a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверить назначения на ЛИ в пдн с документом и результатом" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента" id="16515d0d-1a30-41d4-8562-156e306879ed" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct poe.patient_id as id from plan_of_events poe  "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id   "+
"join \"event\" e on e.id =poee.event_id   "+
"join assignments_in_plan aip  on aip.event_id  =e.id   "+
"join assignment_laboratory al on aip.id=al.assignments_in_plan_id  "+
"join documents_by_assignment dba on dba.assignments_in_plan_id =aip.id  "+
"join cls_result cr on cr.laboratory_id=al.id "+
"where poe.archived =false and poe.is_actual =true and dba.document_type='RESULT_OF_LI'"


log.info pdnQuery

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<supp.size(); i++){
	id=supp[i].PATIENT_ID.toString()
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	testRunner.testCase.setPropertyValue("patientId", patientsSupp[i].id)
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	numbers = numbers=="" ? "<typ:prescriptionNumber>1</typ:prescriptionNumber>" : numbers
	testRunner.testCase.setPropertyValue("numbers", numbers)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[0].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		break
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="77ee2a00-1363-42e4-b89a-b5660a6201a6"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#TestSuite#token}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>patientId</con:entry><con:entry>omsNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="3a209821-9114-4fbd-becb-9e2e94ccdf4a" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#pdnEndpoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" id="320692ef-3b74-4d45-aab6-60f2f6e5fde2" name="В ответе result.endDate > текущей даты"><con:configuration><scriptText>import groovy.xml.XmlSlurper
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
date1=  sdf.format(date)


def GetPlanExtension = context.expand('${GetPlanExtension#Response}')
getPlanExtension = new XmlSlurper().parseText(GetPlanExtension)
endTimeInResp=getPlanExtension.Body.GetPlanExtensionResponse.result.endTime.toString()
 log.info endTimeInResp
String endTime=endTimeInResp.replace("T"," ").tokenize('.')[0]
log.info endTime
date2= new SimpleDateFormat(formate).parse(endTime)
date3 = sdf.format(date2)
assert date1&lt; date3
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="92193122-49c9-406d-87ff-802d36b11aca" name="XPath Match"><con:configuration><path>declare namespace ns2='http://emias.mos.ru/dnpdn/core/v2/';
//*:result/ns2:archived</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="2c07dd24-9c67-495e-b5fc-80b586d0b918"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
numbers=""
for(int i=0; i&lt;n; i++){
	number= events[i].number.toString()
	if(number!="")	numbers=numbers+"&lt;typ:prescriptionNumber>"+number+"&lt;/typ:prescriptionNumber>"
}
log.info numbers
if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)</script></con:config></con:testStep><con:testStep type="request" id="e3d4f69e-adc0-4237-8de9-e63e3fe84720" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#lloEndpoint}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг" id="d9efdf06-5c1b-42ee-b27d-6a1bb1367198"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId
eventsInfo=getDispensaryObservationProgramINFO.payload.dispensaryObservationProgram.group..event

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
today=  sdf.format(date)


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
log.info GetPlanExtensionResponse
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod
numberEventspdn=eventspdn.size()
//log.info numberSACArs
//log.info eventspdn
 mySet = new HashSet<>();
consEvents=[]
//проверить все ли ресурсы в отсете sac уникальные
if (numberEventspdn>0){
	for(int i=0; i<numberEventspdn; i++){
		eventsXml=eventspdn[i].event
		eventPeriodXml= eventspdn[i]
		eventsSize=eventsXml.size()
		//log.info eventsXml
		for(int k=0; k<eventsSize; k++){
			eventXml=eventsXml[k]
			archived=eventXml.archived.toBoolean()
			status=eventXml.eventStatus.toString()
			//log.info status+" "+archived
			def documentCompletedId=null
			if(archived==false && status!='CANCEL') {
				
				if(eventXml.assignment.assignmentConsultation.size()==1){
					startDate=eventPeriodXml.startTime.toString().tokenize('T')[0]
					endDate=eventPeriodXml.endTime.toString().tokenize('T')[0]
					cons=eventXml.assignment.assignmentConsultation
					suppReferralId=cons.suppReferralId.toString() ? suppReferralId=cons.suppReferralId.toLong() : null
					specializationTitle=cons.specializationTitle.toString()
					controlCheckUp=cons.assigmentToControlCheckUp.toBoolean()
					assigmentId=cons.assignment_id.toString()
					documentCompletedId=  [ 'RESULT_OF_CONSULTATION','INSPECTION_PROTOCOL'].contains(cons.documentsByAssignment.documentTypeName.toString()) ? cons.documentsByAssignment.documentId.toString() : null 
					appointment= eventXml.appointment.toString() ? eventXml.appointment : null
					documentCreateDate= documentCompletedId != null ? cons.documentsByAssignment.documentCreateDate.toString().tokenize('T')[0]  : null
					if(appointment != null){
						apDateString=appointment.appointmentDate.toString().replace("T"," ").tokenize('.')[0]
						apDateParsed= new SimpleDateFormat(formate).parse(apDateString)
						appointmentDateFormated = sdf.format(apDateParsed)
						appointmentAssigmentId=appointment.assignmentId.toString()
						appointmentEventType=appointment.eventType.toString()
						//log.info appointmentEventType
						if(appointmentEventType!="CANCEL" && appointmentDateFormated >= today && assigmentId==appointmentAssigmentId){
							appointmentId=appointment.id.toLong()
							appointmentDate=appointmentDateFormated.toString().replace(" ","T")
							
						}
						else {
							appointmentId=null
							appointmentDate=null
						}
					}
					else {
						appointmentId=null
						appointmentDate=null
					}
					eventStatus=eventXml.eventStatus.toString()
					assigmentStatus=cons.status.toString()
					//log.info eventStatus+"  "+assigmentStatus
					infoStatus=""
					hint=""
					if (eventStatus=="PLANNED" && assigmentStatus=="PLANNED"){
						infoStatus="PLANNED"
					}
					else if (eventStatus=="CREATED" && assigmentStatus=="CREATED"){
						infoStatus="CREATED"
					}
					else if  (eventStatus=="COMPLETED" && assigmentStatus=="COMPLETED"){
						infoStatus="COMPLETED"
					}
					else if  (eventStatus=="EXPIRED" && assigmentStatus=="UNFINISHED"){
						infoStatus="EXPIRED"
					}

					//log.info cons.documentsByAssignment.documentTypeName.toString()
					//log.info documentCompletedId+" "+documentCreateDate
					assigment=[suppReferralId:suppReferralId,specializationTitle:specializationTitle,controlCheckUp:controlCheckUp,appointmentId:appointmentId,appointmentDate:appointmentDate,documentCompletedId:documentCompletedId,documentCreateDate:documentCreateDate,hint:hint]
					map=[startDate:startDate,endDate:endDate,status:infoStatus,assignmentConsultation:assigment]
					consEvents <<map
				}
			}
		}
	}
}
log.info consEvents.size()

consultationsInfo=[]
eventsInfo
for(int i=0; i<eventsInfo.size(); i++){
	event=eventsInfo[i]
	if(event.assignmentConsultation != null){
		log.info i
		suppReferralId=event.assignmentConsultation.suppReferralId 
		specializationTitle=event.assignmentConsultation.specializationTitle 
		controlCheckUp=event.assignmentConsultation.controlCheckUp 
		appointmentId=event.assignmentConsultation.appointmentId 
		appointmentDate=event.assignmentConsultation.appointmentDate ?  event.assignmentConsultation.appointmentDate.toString() : null
		documentCompletedId=event.assignmentConsultation.documentCompletedId 
		documentCreateDate=event.assignmentConsultation.documentCreateDate  ?  event.assignmentConsultation.documentCreateDate.toString() : null
		hint=event.assignmentConsultation.hint 
		assigment=[suppReferralId:suppReferralId,specializationTitle:specializationTitle,controlCheckUp:controlCheckUp,appointmentId:appointmentId,appointmentDate:appointmentDate,documentCompletedId:documentCompletedId,documentCreateDate:documentCreateDate,hint:hint]
		log.info eventsInfo.size()
	}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Проверить маппинг" id="30c98bed-9628-4213-80df-2716f6f202ad"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.eventsPeriod
numberSACArs=SACArs.size()
//log.info numberSACArs

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}
assert numberSACArs== mySet.size()
assert goctorInfoINFO.payload[0].lpuId ==SACArs[0].complexResource.room.lpuId.toLong()
assert goctorInfoINFO.payload[0].lpuShortName ==SACArs[0].complexResource.room.lpuShortName.toString()
assert goctorInfoINFO.payload[0].defaultAddress ==SACArs[0].complexResource.room.defaultAddress.toString()</script></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value><![CDATA[<typ:prescriptionNumber>00Д4519356421</typ:prescriptionNumber><typ:prescriptionNumber>00Д4519356422</typ:prescriptionNumber><typ:prescriptionNumber>00Д4519356423</typ:prescriptionNumber>]]></con:value></con:property><con:property><con:name>oms</con:name><con:value>7747240888000101</con:value></con:property><con:property><con:name>patientId</con:name><con:value>99975953</con:value></con:property></con:properties></con:testCase><con:testCase id="73e7acf1-629d-44df-93ed-3da2b7523c70" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Проверить назначения на ЛИ в пдн с записью" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента" id="9b067354-ee1b-4405-86c5-ea86aefdcb2f" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct poe.patient_id as id from plan_of_events poe  "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id   "+
"join \"event\" e on e.id =poee.event_id   "+
"join assignments_in_plan aip  on aip.event_id  =e.id   "+
"join assignment_laboratory al on aip.id=al.assignments_in_plan_id  "+
"join documents_by_assignment dba on dba.assignments_in_plan_id =aip.id  "+
"join cls_result cr on cr.laboratory_id=al.id "+
"where poe.archived =false and poe.is_actual =true and dba.document_type='RESULT_OF_LI'"


log.info pdnQuery

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<supp.size(); i++){
	id=supp[i].PATIENT_ID.toString()
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	testRunner.testCase.setPropertyValue("patientId", patientsSupp[i].id)
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	numbers = numbers=="" ? "<typ:prescriptionNumber>1</typ:prescriptionNumber>" : numbers
	testRunner.testCase.setPropertyValue("numbers", numbers)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[0].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		break
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="e55a9ac1-3434-425f-b456-9810c561c856"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#TestSuite#token}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>patientId</con:entry><con:entry>omsNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="36d5dd2e-8ab9-46c6-9f82-aa49c0cfda6c" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" id="320692ef-3b74-4d45-aab6-60f2f6e5fde2" name="В ответе result.endDate > текущей даты"><con:configuration><scriptText>import groovy.xml.XmlSlurper
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
date1=  sdf.format(date)


def GetPlanExtension = context.expand('${GetPlanExtension#Response}')
getPlanExtension = new XmlSlurper().parseText(GetPlanExtension)
endTimeInResp=getPlanExtension.Body.GetPlanExtensionResponse.result.endTime.toString()
 log.info endTimeInResp
String endTime=endTimeInResp.replace("T"," ").tokenize('.')[0]
log.info endTime
date2= new SimpleDateFormat(formate).parse(endTime)
date3 = sdf.format(date2)
assert date1&lt; date3
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="92193122-49c9-406d-87ff-802d36b11aca" name="XPath Match"><con:configuration><path>declare namespace ns2='http://emias.mos.ru/dnpdn/core/v2/';
//*:result/ns2:archived</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="4b389458-c070-473b-a4bd-d021f0b2280d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
numbers=""
for(int i=0; i&lt;n; i++){
	number= events[i].number.toString()
	if(number!="")	numbers=numbers+"&lt;typ:prescriptionNumber>"+number+"&lt;/typ:prescriptionNumber>"
}
log.info numbers
if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)</script></con:config></con:testStep><con:testStep type="request" id="c820c291-b71b-40a8-aaf0-acf13ef29f44" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService  </con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг" id="c6c8521c-7f2d-49df-88d4-8e6ab8b6824f"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId
eventsInfo=getDispensaryObservationProgramINFO.payload.dispensaryObservationProgram.group..event

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
today=  sdf.format(date)


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
log.info GetPlanExtensionResponse
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod
numberEventspdn=eventspdn.size()
//log.info numberSACArs
//log.info eventspdn
 mySet = new HashSet<>();
consEvents=[]
//проверить все ли ресурсы в отсете sac уникальные
if (numberEventspdn>0){
	for(int i=0; i<numberEventspdn; i++){
		eventsXml=eventspdn[i].event
		eventPeriodXml= eventspdn[i]
		eventsSize=eventsXml.size()
		//log.info eventsXml
		for(int k=0; k<eventsSize; k++){
			eventXml=eventsXml[k]
			archived=eventXml.archived.toBoolean()
			status=eventXml.eventStatus.toString()
			//log.info status+" "+archived
			def documentCompletedId=null
			if(archived==false && status!='CANCEL') {
				
				if(eventXml.assignment.assignmentConsultation.size()==1){
					startDate=eventPeriodXml.startTime.toString().tokenize('T')[0]
					endDate=eventPeriodXml.endTime.toString().tokenize('T')[0]
					cons=eventXml.assignment.assignmentConsultation
					suppReferralId=cons.suppReferralId.toString() ? suppReferralId=cons.suppReferralId.toLong() : null
					specializationTitle=cons.specializationTitle.toString()
					controlCheckUp=cons.assigmentToControlCheckUp.toBoolean()
					assigmentId=cons.assignment_id.toString()
					documentCompletedId=  [ 'RESULT_OF_CONSULTATION','INSPECTION_PROTOCOL'].contains(cons.documentsByAssignment.documentTypeName.toString()) ? cons.documentsByAssignment.documentId.toString() : null 
					appointment= eventXml.appointment.toString() ? eventXml.appointment : null
					documentCreateDate= documentCompletedId != null ? cons.documentsByAssignment.documentCreateDate.toString().tokenize('T')[0]  : null
					if(appointment != null){
						apDateString=appointment.appointmentDate.toString().replace("T"," ").tokenize('.')[0]
						apDateParsed= new SimpleDateFormat(formate).parse(apDateString)
						appointmentDateFormated = sdf.format(apDateParsed)
						appointmentAssigmentId=appointment.assignmentId.toString()
						appointmentEventType=appointment.eventType.toString()
						//log.info appointmentEventType
						if(appointmentEventType!="CANCEL" && appointmentDateFormated >= today && assigmentId==appointmentAssigmentId){
							appointmentId=appointment.id.toLong()
							appointmentDate=appointmentDateFormated.toString().replace(" ","T")
							
						}
						else {
							appointmentId=null
							appointmentDate=null
						}
					}
					else {
						appointmentId=null
						appointmentDate=null
					}
					eventStatus=eventXml.eventStatus.toString()
					assigmentStatus=cons.status.toString()
					//log.info eventStatus+"  "+assigmentStatus
					infoStatus=""
					hint=""
					if (eventStatus=="PLANNED" && assigmentStatus=="PLANNED"){
						infoStatus="PLANNED"
					}
					else if (eventStatus=="CREATED" && assigmentStatus=="CREATED"){
						infoStatus="CREATED"
					}
					else if  (eventStatus=="COMPLETED" && assigmentStatus=="COMPLETED"){
						infoStatus="COMPLETED"
					}
					else if  (eventStatus=="EXPIRED" && assigmentStatus=="UNFINISHED"){
						infoStatus="EXPIRED"
					}

					//log.info cons.documentsByAssignment.documentTypeName.toString()
					//log.info documentCompletedId+" "+documentCreateDate
					assigment=[suppReferralId:suppReferralId,specializationTitle:specializationTitle,controlCheckUp:controlCheckUp,appointmentId:appointmentId,appointmentDate:appointmentDate,documentCompletedId:documentCompletedId,documentCreateDate:documentCreateDate,hint:hint]
					map=[startDate:startDate,endDate:endDate,status:infoStatus,assignmentConsultation:assigment]
					consEvents <<map
				}
			}
		}
	}
}
log.info consEvents.size()

consultationsInfo=[]
eventsInfo
for(int i=0; i<eventsInfo.size(); i++){
	event=eventsInfo[i]
	if(event.assignmentConsultation != null){
		log.info i
		suppReferralId=event.assignmentConsultation.suppReferralId 
		specializationTitle=event.assignmentConsultation.specializationTitle 
		controlCheckUp=event.assignmentConsultation.controlCheckUp 
		appointmentId=event.assignmentConsultation.appointmentId 
		appointmentDate=event.assignmentConsultation.appointmentDate ?  event.assignmentConsultation.appointmentDate.toString() : null
		documentCompletedId=event.assignmentConsultation.documentCompletedId 
		documentCreateDate=event.assignmentConsultation.documentCreateDate  ?  event.assignmentConsultation.documentCreateDate.toString() : null
		hint=event.assignmentConsultation.hint 
		assigment=[suppReferralId:suppReferralId,specializationTitle:specializationTitle,controlCheckUp:controlCheckUp,appointmentId:appointmentId,appointmentDate:appointmentDate,documentCompletedId:documentCompletedId,documentCreateDate:documentCreateDate,hint:hint]
		log.info eventsInfo.size()
	}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Проверить маппинг" id="dad6b9f8-a5a1-43f1-b3f4-c42159c6830f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.eventsPeriod
numberSACArs=SACArs.size()
//log.info numberSACArs

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}
assert numberSACArs== mySet.size()
assert goctorInfoINFO.payload[0].lpuId ==SACArs[0].complexResource.room.lpuId.toLong()
assert goctorInfoINFO.payload[0].lpuShortName ==SACArs[0].complexResource.room.lpuShortName.toString()
assert goctorInfoINFO.payload[0].defaultAddress ==SACArs[0].complexResource.room.defaultAddress.toString()</script></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value>&lt;typ:prescriptionNumber>99975953&lt;/typ:prescriptionNumber></con:value></con:property><con:property><con:name>oms</con:name><con:value>7747240888000101</con:value></con:property><con:property><con:name>patientId</con:name><con:value>1309974516</con:value></con:property></con:properties></con:testCase><con:testCase id="65019717-6586-48ef-8009-2530d223a873" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="тестовый кейс для ручного прогона" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать пациента" id="43dba413-a819-4aeb-a375-e023cfbbd0cb" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql

def suppConnection =testRunner.testCase.testSuite.getPropertyValue("suppConnection")
def suppUser =testRunner.testCase.testSuite.getPropertyValue("suppUser")
def suppPassword =testRunner.testCase.testSuite.getPropertyValue("suppPassword")
def pdnConnection =testRunner.testCase.testSuite.getPropertyValue("pdnConnection")
def pdnUser =testRunner.testCase.testSuite.getPropertyValue("pdnUser")
def pdnPassword =testRunner.testCase.testSuite.getPropertyValue("pdnPassword")

sqlDnpdn=Sql.newInstance("jdbc:postgresql://"+pdnConnection+"?user="+pdnUser+"&password="+pdnPassword, "org.postgresql.Driver")

pdnQuery="select distinct patient_id as id FROM appointment WHERE event_type = 'CANCEL'"


log.info pdnQuery

pdnQuery2="select distinct p.number as number from plan_of_events poe "+
"join plan_of_events_event poee on poee.plan_of_events_id =poe.id  "+
"join \"event\" e on e.id =poee.event_id  "+
"join drugs_event de on de.event_id =e.id  "+
"join prescription p on p.id =de.prescription_id  "+
"where poe.archived =false and poe.is_actual =true and poe.patient_id ="

log.info pdnQuery2

patients=sqlDnpdn.rows( pdnQuery)

ids=patients[0].id.toString()

for(int i=1;i<patients.size(); i++){
	ids=ids+","+patients[i].id.toString()
}

sqlSupp=Sql.newInstance("jdbc:oracle:thin:"+suppUser+"/"+suppPassword+suppConnection, suppUser, suppPassword, "oracle.jdbc.driver.OracleDriver")

pdns=sqlDnpdn.rows( pdnQuery)
patientsSupp=[]

suppQuery=" select * FROM PATIENT WHERE PATIENT_ID in ("+ids+")"

supp=sqlSupp.rows( suppQuery)

for(int i=0;i<pdns.size(); i++){
	log.info i
	id=pdns[i].id.toString()
	/*
	oms = supp[i].OMS_NEW_ASSURANCE_NUMBER !=null ? supp[i].OMS_NEW_ASSURANCE_NUMBER.toString() : supp[i].OMS_ASSURANCE_SERIES.toString() +supp[i].OMS_ASSURANCE_NUMBER.toString()
	pdnPrescr=sqlDnpdn.rows(pdnQuery2+id)
	//log.info pdnPrescr.number
	prescriptions=[]
	for(int k=0;k<pdnPrescr.size(); k++){
		prescriptions << pdnPrescr[k].number.toString()
	}
	map=[id:id, oms:oms, prescriptions:prescriptions]
	patientsSupp << map
	
	testRunner.testCase.setPropertyValue("oms", patientsSupp[i].oms)
	numbers=""
	patientsSupp[i].prescriptions.each{
		numbers=numbers+"<typ:prescriptionNumber>"+it+"</typ:prescriptionNumber>"
	}
	numbers = numbers=="" ? "<typ:prescriptionNumber>1</typ:prescriptionNumber>" : numbers
	testRunner.testCase.setPropertyValue("numbers", numbers)
	*/
	testRunner.testCase.setPropertyValue("patientId", id)
	testRunner.runTestStepByName( "getDispensaryObservationProgram")
	//testRunner.runTestStepByName( "piPatientPrescription")
	obj = context.testCase.getTestStepByName("getDispensaryObservationProgram")
	assertions = obj.getAssertionList()
	//obj2 = context.testCase.getTestStepByName("piPatientPrescription")
	//assertions2 = obj2.getAssertionList()
	//log.info ("статус 1="+assertions[0].status+" статус 2="+assertions2[0].status)
	if (assertions[1].status.toString()=="VALID") {
		log.info "patientId  "+id+" oms  "+oms+" numbers "+numbers
		break
	}
}


]]></script></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="9c6440d6-50be-4e58-a2a7-367720ed5f1b"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v1/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="1a33cb41-10b6-4f36-8c85-2188368496b7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://emiasinfo-application.test.emias.mos.ru</con:endpoint><con:request/><con:originalUri>http://emiasinfo-application.test.emias.mos.ru/api/v1/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="Simple NotContains" id="5768f604-6727-4fcd-ab42-47d3df70527d" name="В ответе нет ошибок"><con:configuration><token>error</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="78f3ed1e-eec1-4ff2-b21a-0ec57f1e1a73" name="Contains" disabled="true"><con:configuration><token>appointment</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#TestSuite#token}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms}"/>
</con:parameters><con:parameterOrder><con:entry>X-Access-JWT</con:entry><con:entry>patientId</con:entry><con:entry>omsNumber</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="request" id="4b06a9b7-1b6d-4df9-9100-98d987d3ddce" name="GetPlanExtension"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>planServiceBinding</con:interface><con:operation>GetPlanExtension</con:operation><con:request name="GetPlanExtension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="27749b46-f84d-438d-b178-9dffebc4bebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">\r
   <soap:Header>\r
      <wsse:Security soap:mustUnderstand="true" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">\r
         <wsse:UsernameToken wsu:Id="UsernameToken-6eb270bd-6536-4650-bf0a-18d62fa0dd74" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
            <wsse:Username>EIM</wsse:Username>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
      <ns4:userContext xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/" xmlns:ns5="http://emias.mos.ru/system/v1/faults/" xmlns:ns4="http://emias.mos.ru/system/v1/userContext/" xmlns:ns3="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns2="http://emias.mos.ru/dnpdn/planService/v2/types/">\r
         <ns4:systemName>EIM</ns4:systemName>\r
         <ns4:userName>UXcGhX3ibIXZwelsmbKFxzoJk14mdpJxLaWceUO7g6XAruLNijZXNQSf8H1/lbSQ7fcpY051u1kUvIC2O7LJtJMNyyd6HPfiuaKK5zfGiQut13PZ4TKW5k7IpF1NCQRY/PMIbfB1C1F63k75UEBbZaa+rmpaxr8DY01XeJa4MuvDa9b2G7wAKjTolTAi9GHBDaXaW97i5xDfVvWBTiJETi96nyrU9GwSmpavnWUdVUlMgJ50krxgAEdFehXBavM7UGGatE03Av1B+LDFYgNTaLeQ09rG4IIiYIfiUKzBMNdMNYfdtsPt2j4Eurkj+kI8mACu7v/M7JlbYX3LqEQTIg==</ns4:userName>\r
         <ns4:userRoleId>7187</ns4:userRoleId>\r
         <ns4:isUserRoleSystemWide>true</ns4:isUserRoleSystemWide>\r
         <ns4:userRights>\r
            <ns4:userRightId>5150001</ns4:userRightId>\r
            <ns4:userRightId>333001</ns4:userRightId>\r
         </ns4:userRights>\r
         <ns4:jobExecutionId>0</ns4:jobExecutionId>\r
      </ns4:userContext>\r
   </soap:Header>\r
   <soap:Body>\r
      <ns5:GetPlanExtensionRequest xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns5="http://emias.mos.ru/dnpdn/planService/v2/types/" xmlns:ns6="http://emias.mos.ru/inquiry-purpose/inquiry-purpose/v1/types/">\r
         <ns5:patientId>${#TestCase#patientId}</ns5:patientId>\r
      </ns5:GetPlanExtensionRequest>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c1f2d19-86ce-4624-810f-e804d7f06f26" name="SOAP Response"/><con:assertion type="GroovyScriptAssertion" id="320692ef-3b74-4d45-aab6-60f2f6e5fde2" name="В ответе result.endDate > текущей даты"><con:configuration><scriptText>import groovy.xml.XmlSlurper
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
date1=  sdf.format(date)


def GetPlanExtension = context.expand('${GetPlanExtension#Response}')
getPlanExtension = new XmlSlurper().parseText(GetPlanExtension)
endTimeInResp=getPlanExtension.Body.GetPlanExtensionResponse.result.endTime.toString()
 log.info endTimeInResp
String endTime=endTimeInResp.replace("T"," ").tokenize('.')[0]
log.info endTime
date2= new SimpleDateFormat(formate).parse(endTime)
date3 = sdf.format(date2)
assert date1&lt; date3
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" id="92193122-49c9-406d-87ff-802d36b11aca" name="XPath Match"><con:configuration><path>declare namespace ns2='http://emias.mos.ru/dnpdn/core/v2/';
//*:result/ns2:archived</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://emias.mos.ru/dnpdn/planService/v2/planServicePortType/GetPlanExtensionRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Собрать рецепты" id="fa3dd3fb-0615-4e7c-84d1-684c6d6ac1b0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)
events=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent

n= GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod.event.drugsEvent.size()
numbers=""
for(int i=0; i&lt;n; i++){
	number= events[i].number.toString()
	if(number!="")	numbers=numbers+"&lt;typ:prescriptionNumber>"+number+"&lt;/typ:prescriptionNumber>"
}
log.info numbers
if(numbers!="") testRunner.testCase.setPropertyValue("numbers", numbers)</script></con:config></con:testStep><con:testStep type="request" id="2b230242-9d74-4e06-abea-e963213f4104" name="piPatientPrescription"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PrescriptionInfoServiceV4SoapBinding</con:interface><con:operation>piPatientPrescriptions</con:operation><con:request name="piPatientPrescription" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="550e1ee1-35be-4bef-814c-dd22f2427c6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamel.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService  </con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:typ="http://emias2.gov.ru/business/llo/v4/types">\r
   <soapenv:Header>\r
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">\r
         <wsse:UsernameToken>\r
            <wsse:Username>EIM/4c2f03d5-5c41-4c79-acd0-fe36faa92104</wsse:Username>\r
            <wsse:Password Type="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/>\r
         </wsse:UsernameToken>\r
      </wsse:Security>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <typ:piPatientPrescriptionsRequest>\r
         <typ:ident>EMIASINFO</typ:ident>\r
         <typ:oms>${#TestCase#oms}</typ:oms>\r
         ${#TestCase#numbers}
      </typ:piPatientPrescriptionsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="Simple NotContains" id="fb8df0bb-0c25-43d5-9bfa-c6fad37985e8" name="Not Contains"><con:configuration><token>не найден</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="piPatientPrescriptions"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Проверить маппинг" id="15738a64-d89e-44fd-a4a9-cf0146f36d08" disabled="true"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter
import java.text.SimpleDateFormat

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId
eventsInfo=getDispensaryObservationProgramINFO.payload.dispensaryObservationProgram.group..event

def date = new Date()
formate="yyyy-MM-dd HH:mm:ss"
def sdf = new SimpleDateFormat(formate)
today=  sdf.format(date)


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
log.info GetPlanExtensionResponse
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.result.eventsPeriod
numberEventspdn=eventspdn.size()
//log.info numberSACArs
//log.info eventspdn
 mySet = new HashSet<>();
consEvents=[]
//проверить все ли ресурсы в отсете sac уникальные
if (numberEventspdn>0){
	for(int i=0; i<numberEventspdn; i++){
		eventsXml=eventspdn[i].event
		eventPeriodXml= eventspdn[i]
		eventsSize=eventsXml.size()
		//log.info eventsXml
		for(int k=0; k<eventsSize; k++){
			eventXml=eventsXml[k]
			archived=eventXml.archived.toBoolean()
			status=eventXml.eventStatus.toString()
			//log.info status+" "+archived
			def documentCompletedId=null
			if(archived==false && status!='CANCEL') {
				
				if(eventXml.assignment.assignmentConsultation.size()==1){
					startDate=eventPeriodXml.startTime.toString().tokenize('T')[0]
					endDate=eventPeriodXml.endTime.toString().tokenize('T')[0]
					cons=eventXml.assignment.assignmentConsultation
					suppReferralId=cons.suppReferralId.toString() ? suppReferralId=cons.suppReferralId.toLong() : null
					specializationTitle=cons.specializationTitle.toString()
					controlCheckUp=cons.assigmentToControlCheckUp.toBoolean()
					assigmentId=cons.assignment_id.toString()
					documentCompletedId=  [ 'RESULT_OF_CONSULTATION','INSPECTION_PROTOCOL'].contains(cons.documentsByAssignment.documentTypeName.toString()) ? cons.documentsByAssignment.documentId.toString() : null 
					appointment= eventXml.appointment.toString() ? eventXml.appointment : null
					documentCreateDate= documentCompletedId != null ? cons.documentsByAssignment.documentCreateDate.toString().tokenize('T')[0]  : null
					if(appointment != null){
						apDateString=appointment.appointmentDate.toString().replace("T"," ").tokenize('.')[0]
						apDateParsed= new SimpleDateFormat(formate).parse(apDateString)
						appointmentDateFormated = sdf.format(apDateParsed)
						appointmentAssigmentId=appointment.assignmentId.toString()
						appointmentEventType=appointment.eventType.toString()
						//log.info appointmentEventType
						if(appointmentEventType!="CANCEL" && appointmentDateFormated >= today && assigmentId==appointmentAssigmentId){
							appointmentId=appointment.id.toLong()
							appointmentDate=appointmentDateFormated.toString().replace(" ","T")
							
						}
						else {
							appointmentId=null
							appointmentDate=null
						}
					}
					else {
						appointmentId=null
						appointmentDate=null
					}
					eventStatus=eventXml.eventStatus.toString()
					assigmentStatus=cons.status.toString()
					//log.info eventStatus+"  "+assigmentStatus
					infoStatus=""
					hint=""
					if (eventStatus=="PLANNED" && assigmentStatus=="PLANNED"){
						infoStatus="PLANNED"
					}
					else if (eventStatus=="CREATED" && assigmentStatus=="CREATED"){
						infoStatus="CREATED"
					}
					else if  (eventStatus=="COMPLETED" && assigmentStatus=="COMPLETED"){
						infoStatus="COMPLETED"
					}
					else if  (eventStatus=="EXPIRED" && assigmentStatus=="UNFINISHED"){
						infoStatus="EXPIRED"
					}

					//log.info cons.documentsByAssignment.documentTypeName.toString()
					//log.info documentCompletedId+" "+documentCreateDate
					assigment=[suppReferralId:suppReferralId,specializationTitle:specializationTitle,controlCheckUp:controlCheckUp,appointmentId:appointmentId,appointmentDate:appointmentDate,documentCompletedId:documentCompletedId,documentCreateDate:documentCreateDate,hint:hint]
					map=[startDate:startDate,endDate:endDate,status:infoStatus,assignmentConsultation:assigment]
					consEvents <<map
				}
			}
		}
	}
}
log.info consEvents.size()

consultationsInfo=[]
eventsInfo
for(int i=0; i<eventsInfo.size(); i++){
	event=eventsInfo[i]
	if(event.assignmentConsultation != null){
		log.info i
		suppReferralId=event.assignmentConsultation.suppReferralId 
		specializationTitle=event.assignmentConsultation.specializationTitle 
		controlCheckUp=event.assignmentConsultation.controlCheckUp 
		appointmentId=event.assignmentConsultation.appointmentId 
		appointmentDate=event.assignmentConsultation.appointmentDate ?  event.assignmentConsultation.appointmentDate.toString() : null
		documentCompletedId=event.assignmentConsultation.documentCompletedId 
		documentCreateDate=event.assignmentConsultation.documentCreateDate  ?  event.assignmentConsultation.documentCreateDate.toString() : null
		hint=event.assignmentConsultation.hint 
		assigment=[suppReferralId:suppReferralId,specializationTitle:specializationTitle,controlCheckUp:controlCheckUp,appointmentId:appointmentId,appointmentDate:appointmentDate,documentCompletedId:documentCompletedId,documentCreateDate:documentCreateDate,hint:hint]
		log.info eventsInfo.size()
	}
}
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Проверить маппинг" id="bfceec40-dd9c-4a62-b76c-097217c7d38b" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import groovy.xml.XmlSlurper
import java.util.ArrayList
import java.time.LocalDate
import java.time.format.DateTimeFormatter

def getDispensaryObservationProgramResponse = context.expand('${getDispensaryObservationProgram#Response}')
def slurperJson = new JsonSlurper()
def getDispensaryObservationProgramINFO = slurperJson.parseText(getDispensaryObservationProgramResponse)
// log.info lpuScheduleInfo.payload.lpuInfo.lpuId


def GetPlanExtensionResponse = context.expand('${GetPlanExtension#Response}')
GetPlanExtension = new XmlSlurper().parseText(GetPlanExtensionResponse)

eventspdn=GetPlanExtension.Body.GetPlanExtensionResponse.eventsPeriod
numberSACArs=SACArs.size()
//log.info numberSACArs

 mySet = new HashSet&lt;>();

//проверить все ли ресурсы в отсете sac уникальные
if (numberSACArs>0){
	for(int i=0; i&lt;numberSACArs; i++){
		for ( x : SACArs[i].id) {
   			 mySet.add(x);
		}
	}
}
assert numberSACArs== mySet.size()
assert goctorInfoINFO.payload[0].lpuId ==SACArs[0].complexResource.room.lpuId.toLong()
assert goctorInfoINFO.payload[0].lpuShortName ==SACArs[0].complexResource.room.lpuShortName.toString()
assert goctorInfoINFO.payload[0].defaultAddress ==SACArs[0].complexResource.room.defaultAddress.toString()</script></con:config></con:testStep><con:properties><con:property><con:name>numbers</con:name><con:value>&lt;typ:prescriptionNumber>777&lt;/typ:prescriptionNumber></con:value></con:property><con:property><con:name>oms</con:name><con:value>7753530884001892</con:value></con:property><con:property><con:name>patientId</con:name><con:value>19803956</con:value></con:property></con:properties></con:testCase><con:testCase id="96d85d05-42c0-4658-a39d-05d23af8ab19" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. assignmentConsultation.destinationType = Назначение в текущую МО_375479" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Создать мок с ответом от getPlanExtension" id="9acf8ba2-65ee-4eab-b666-d7b80dbead3e"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Body>
      <GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <result>
            <ns2:id>5061</ns2:id>
            <ns2:jobExecutionId>11312201</ns2:jobExecutionId>
            <ns2:diagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:diagnosis>
            <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
            <ns2:endTime>2024-01-23T23:59:59.999+03:00</ns2:endTime>
            <ns2:documentId>c0ee1915-fa23-42a1-b2d9-7a465fca529b</ns2:documentId>
            <ns2:parentDocumentId>null</ns2:parentDocumentId>
            <ns2:moId>204</ns2:moId>
            <ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
            <ns2:status>ACTIVE</ns2:status>
            <ns2:archived>false</ns2:archived>
            <ns2:planOfEventsDiagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:planOfEventsDiagnosis>
            <ns2:observationProgram>
               <ns2:id>158396646</ns2:id>
            </ns2:observationProgram>
            <ns2:patientId>19803956</ns2:patientId>
            <ns2:eventsPeriod>
               <ns2:priority>Свой период</ns2:priority>
               <ns2:startTime>2023-10-01T00:00:00.000+03:00</ns2:startTime>
               <ns2:endTime>2023-11-30T23:59:59.999+03:00</ns2:endTime>
               <ns2:event>
                  <ns2:id>222713</ns2:id>
                  <ns2:eventStatus>PLANNED</ns2:eventStatus>
                  <ns2:archived>false</ns2:archived>
                  <ns2:assignment>
                     <ns2:assignmentConsultation>
                        <ns2:id>20054</ns2:id>
                        <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                        <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                        <ns2:specializationCode>92</ns2:specializationCode>
                        <ns2:specializationTitle>Эндокринология</ns2:specializationTitle>
                        <ns2:reason>для диспансерного наблюдения</ns2:reason>
                        <ns2:status>PLANNED</ns2:status>
                        <ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
                        <ns2:specialityCode>10</ns2:specialityCode>
                        <ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
                     </ns2:assignmentConsultation>
                  </ns2:assignment>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:referralCreated>false</ns2:referralCreated>
                  <ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
                  <ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
                  <ns2:eventExecutionType>Обязательное</ns2:eventExecutionType>
               </ns2:event>
            </ns2:eventsPeriod>
            <ns2:statusHistoryLists/>
         </result>
      </GetPlanExtensionResponse>
   </soap:Body>
</soap:Envelope>]]></con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="f78815ab-1d6f-494d-b9a0-13d5138c66a8"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="d0085543-07b9-48fe-9d03-36f4fd7c43fd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationType = Назначение в текущую МО"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentConsultation.destinationType</path><content>Назначение в текущую МО</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8a5544bc-5119-49d7-9679-242ca998009f" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-pdn" value="${#Project#Mock-pdn}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry><con:entry>Mock-pdn</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value/></con:property><con:property><con:name>patientId</con:name><con:value>19803956</con:value></con:property></con:properties></con:testCase><con:testCase id="a3b781bf-0ccf-4e0e-8a2c-ec6d43da159f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. assignmentConsultation.destinationType = Направление по маршруту_375493" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Создать мок с ответом от getPlanExtension" id="afc7597e-a7df-4975-8759-76a0e295bbe9"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Body>
      <GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <result>
            <ns2:id>5061</ns2:id>
            <ns2:jobExecutionId>11312201</ns2:jobExecutionId>
            <ns2:diagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:diagnosis>
            <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
            <ns2:endTime>2024-01-23T23:59:59.999+03:00</ns2:endTime>
            <ns2:documentId>c0ee1915-fa23-42a1-b2d9-7a465fca529b</ns2:documentId>
            <ns2:parentDocumentId>null</ns2:parentDocumentId>
            <ns2:moId>204</ns2:moId>
            <ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
            <ns2:status>ACTIVE</ns2:status>
            <ns2:archived>false</ns2:archived>
            <ns2:planOfEventsDiagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:planOfEventsDiagnosis>
            <ns2:observationProgram>
               <ns2:id>158396646</ns2:id>
            </ns2:observationProgram>
            <ns2:patientId>19803956</ns2:patientId>
            <ns2:eventsPeriod>
               <ns2:priority>Свой период</ns2:priority>
               <ns2:startTime>2023-10-01T00:00:00.000+03:00</ns2:startTime>
               <ns2:endTime>2023-11-30T23:59:59.999+03:00</ns2:endTime>
               <ns2:event>
                  <ns2:id>222713</ns2:id>
                  <ns2:eventStatus>PLANNED</ns2:eventStatus>
                  <ns2:archived>false</ns2:archived>
                  <ns2:assignment>
                     <ns2:assignmentConsultation>
                        <ns2:id>20054</ns2:id>
                        <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                        <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                        <ns2:specializationCode>92</ns2:specializationCode>
                        <ns2:specializationTitle>Эндокринология</ns2:specializationTitle>
                        <ns2:reason>для диспансерного наблюдения</ns2:reason>
                        <ns2:status>PLANNED</ns2:status>
                        <ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
                        <ns2:specialityCode>10</ns2:specialityCode>
                        <ns2:assigmentToControlCheckUp>false</ns2:assigmentToControlCheckUp>
                     </ns2:assignmentConsultation>
                  </ns2:assignment>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:referralCreated>false</ns2:referralCreated>
                  <ns2:destinationType>Направление по маршруту</ns2:destinationType>
                  <ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
                  <ns2:eventExecutionType>Обязательное</ns2:eventExecutionType>
               </ns2:event>
            </ns2:eventsPeriod>
            <ns2:statusHistoryLists/>
         </result>
      </GetPlanExtensionResponse>
   </soap:Body>
</soap:Envelope>]]></con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="850f03ab-a222-4693-87da-70bba878847b"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="d0085543-07b9-48fe-9d03-36f4fd7c43fd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationType = Направление по маршруту"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentConsultation.destinationType</path><content>Направление по маршруту</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8a5544bc-5119-49d7-9679-242ca998009f" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-pdn" value="${#Project#Mock-pdn}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry><con:entry>Mock-pdn</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value/></con:property><con:property><con:name>patientId</con:name><con:value>19803956</con:value></con:property></con:properties></con:testCase><con:testCase id="45f27416-6aa8-4e6d-ad47-275be44a2b54" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. assignmentConsultation.destinationType = Направление в стационар_375505" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Создать мок с ответом от getPlanExtension" id="95ba0751-765f-431f-b592-f6c64a5b021f"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Body>
      <GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <result>
            <ns2:id>5061</ns2:id>
            <ns2:jobExecutionId>11312201</ns2:jobExecutionId>
            <ns2:diagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:diagnosis>
            <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
            <ns2:endTime>2024-01-23T23:59:59.999+03:00</ns2:endTime>
            <ns2:documentId>c0ee1915-fa23-42a1-b2d9-7a465fca529b</ns2:documentId>
            <ns2:parentDocumentId>null</ns2:parentDocumentId>
            <ns2:moId>204</ns2:moId>
            <ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
            <ns2:status>ACTIVE</ns2:status>
            <ns2:archived>false</ns2:archived>
            <ns2:planOfEventsDiagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:planOfEventsDiagnosis>
            <ns2:observationProgram>
               <ns2:id>158396646</ns2:id>
            </ns2:observationProgram>
            <ns2:patientId>19803956</ns2:patientId>
            <ns2:eventsPeriod>
               <ns2:priority>Свой период</ns2:priority>
               <ns2:startTime>2023-10-01T00:00:00.000+03:00</ns2:startTime>
               <ns2:endTime>2023-11-30T23:59:59.999+03:00</ns2:endTime>
               <ns2:event>
                  <ns2:id>222713</ns2:id>
                  <ns2:eventStatus>PLANNED</ns2:eventStatus>
                  <ns2:archived>false</ns2:archived>
                  <ns2:assignment>
                     <ns2:assignmentConsultation>
                        <ns2:id>20054</ns2:id>
                        <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                        <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                        <ns2:specializationCode>92</ns2:specializationCode>
                        <ns2:specializationTitle>Эндокринология</ns2:specializationTitle>
                        <ns2:reason>для диспансерного наблюдения</ns2:reason>
                        <ns2:status>PLANNED</ns2:status>
                        <ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
                        <ns2:specialityCode>10</ns2:specialityCode>
                        <ns2:assigmentToControlCheckUp>true</ns2:assigmentToControlCheckUp>
                     </ns2:assignmentConsultation>
                  </ns2:assignment>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:referralCreated>false</ns2:referralCreated>
                  <ns2:destinationType>Направление в стационар</ns2:destinationType>
				  <ns2:destinationMedicalOrganizationId>202</ns2:destinationMedicalOrganizationId>
				  <ns2:destinationMedicalOrganizationName>Поликлиника №202</ns2:destinationMedicalOrganizationName>
                  <ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
                  <ns2:eventExecutionType>Обязательное</ns2:eventExecutionType>
               </ns2:event>
            </ns2:eventsPeriod>
            <ns2:statusHistoryLists/>
         </result>
      </GetPlanExtensionResponse>
   </soap:Body>
</soap:Envelope>]]></con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="e5b00652-7c75-4ff9-9eda-c50d24e57f6c"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="d0085543-07b9-48fe-9d03-36f4fd7c43fd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationType = Направление в стационар"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentConsultation.destinationType</path><content>Направление в стационар</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8a5544bc-5119-49d7-9679-242ca998009f" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationMedicalOrganizationId = 202"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentConsultation.destinationMedicalOrganizationId</path><content>202</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationMedicalOrganizationName = Поликлиника №202"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentConsultation.destinationMedicalOrganizationName</path><content>Поликлиника №202</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-pdn" value="${#Project#Mock-pdn}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry><con:entry>Mock-pdn</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value/></con:property><con:property><con:name>patientId</con:name><con:value>19803956</con:value></con:property></con:properties></con:testCase><con:testCase id="167338ef-1e35-4334-8b8d-a72c3b323678" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. assignmentInstrumental.destinationType = Назначение в текущую МО_375542" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Создать мок с ответом от getPlanExtension" id="731471fe-6325-428a-a21e-e0f8f80d7d4d"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Body>
      <GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <result>
            <ns2:id>5061</ns2:id>
            <ns2:jobExecutionId>11312201</ns2:jobExecutionId>
            <ns2:diagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:diagnosis>
            <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
            <ns2:endTime>2024-01-23T23:59:59.999+03:00</ns2:endTime>
            <ns2:documentId>c0ee1915-fa23-42a1-b2d9-7a465fca529b</ns2:documentId>
            <ns2:parentDocumentId>null</ns2:parentDocumentId>
            <ns2:moId>204</ns2:moId>
            <ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
            <ns2:status>ACTIVE</ns2:status>
            <ns2:archived>false</ns2:archived>
            <ns2:planOfEventsDiagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:planOfEventsDiagnosis>
            <ns2:observationProgram>
               <ns2:id>158396646</ns2:id>
            </ns2:observationProgram>
            <ns2:patientId>19803956</ns2:patientId>
            <ns2:eventsPeriod>
               <ns2:priority>Свой период</ns2:priority>
               <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
               <ns2:endTime>2023-03-24T23:59:59.999+03:00</ns2:endTime>
               <ns2:event>
                  <ns2:id>222673</ns2:id>
                  <ns2:eventStatus>EXPIRED</ns2:eventStatus>
                  <ns2:archived>false</ns2:archived>
                  <ns2:assignment>
                     <ns2:assignmentInstrumental>
                        <ns2:id>16200</ns2:id>
                        <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                        <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                        <ns2:mainDiagnosticId>12</ns2:mainDiagnosticId>
                        <ns2:mainDiagnosticTitle>ЭКГ</ns2:mainDiagnosticTitle>
                        <ns2:reason>для диспансерного наблюдения</ns2:reason>
                        <ns2:status>UNFINISHED</ns2:status>
                        <ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>17</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Ортостатическая проба</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>13</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Дополнительное ЭКГ-исследование в 3-х отведениях</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>19</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Физическая нагрузка: 20 приседаний</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:justification>Назначено по ПДН</ns2:justification>
                     </ns2:assignmentInstrumental>
                  </ns2:assignment>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:referralCreated>false</ns2:referralCreated>
                  <ns2:destinationType>Назначение в текущую МО</ns2:destinationType>
                  <ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
                  <ns2:eventExecutionType>Обязательное</ns2:eventExecutionType>
               </ns2:event>
            </ns2:eventsPeriod>
            <ns2:statusHistoryLists/>
         </result>
      </GetPlanExtensionResponse>
   </soap:Body>
</soap:Envelope>]]></con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="c5883bd0-0d81-4d12-85f6-f9f2ef959eb2"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="d0085543-07b9-48fe-9d03-36f4fd7c43fd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationType = Назначение в текущую МО"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentInstrumental.destinationType</path><content>Назначение в текущую МО</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8a5544bc-5119-49d7-9679-242ca998009f" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-pdn" value="${#Project#Mock-pdn}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry><con:entry>Mock-pdn</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value/></con:property><con:property><con:name>patientId</con:name><con:value>19803956</con:value></con:property></con:properties></con:testCase><con:testCase id="49bcb722-267f-4aca-aad3-f95a2156cacd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. assignmentInstrumental.destinationType = Направление в стационар_375494" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Создать мок с ответом от getPlanExtension" id="be5f5a48-02b0-492b-adcf-851684e268de"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Body>
      <GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <result>
            <ns2:id>5061</ns2:id>
            <ns2:jobExecutionId>11312201</ns2:jobExecutionId>
            <ns2:diagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:diagnosis>
            <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
            <ns2:endTime>2024-01-23T23:59:59.999+03:00</ns2:endTime>
            <ns2:documentId>c0ee1915-fa23-42a1-b2d9-7a465fca529b</ns2:documentId>
            <ns2:parentDocumentId>null</ns2:parentDocumentId>
            <ns2:moId>204</ns2:moId>
            <ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
            <ns2:status>ACTIVE</ns2:status>
            <ns2:archived>false</ns2:archived>
            <ns2:planOfEventsDiagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:planOfEventsDiagnosis>
            <ns2:observationProgram>
               <ns2:id>158396646</ns2:id>
            </ns2:observationProgram>
            <ns2:patientId>19803956</ns2:patientId>
            <ns2:eventsPeriod>
               <ns2:priority>Свой период</ns2:priority>
               <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
               <ns2:endTime>2023-03-24T23:59:59.999+03:00</ns2:endTime>
               <ns2:event>
                  <ns2:id>222673</ns2:id>
                  <ns2:eventStatus>EXPIRED</ns2:eventStatus>
                  <ns2:archived>false</ns2:archived>
                  <ns2:assignment>
                     <ns2:assignmentInstrumental>
                        <ns2:id>16200</ns2:id>
                        <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                        <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                        <ns2:mainDiagnosticId>12</ns2:mainDiagnosticId>
                        <ns2:mainDiagnosticTitle>ЭКГ</ns2:mainDiagnosticTitle>
                        <ns2:reason>для диспансерного наблюдения</ns2:reason>
                        <ns2:status>UNFINISHED</ns2:status>
                        <ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>17</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Ортостатическая проба</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>13</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Дополнительное ЭКГ-исследование в 3-х отведениях</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>19</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Физическая нагрузка: 20 приседаний</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:justification>Назначено по ПДН</ns2:justification>
                     </ns2:assignmentInstrumental>
                  </ns2:assignment>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:referralCreated>false</ns2:referralCreated>
                  <ns2:destinationType>Направление в стационар</ns2:destinationType>
<ns2:destinationMedicalOrganizationId>14932313379</ns2:destinationMedicalOrganizationId>

<ns2:destinationMedicalOrganizationName>ГБУЗ "ГКБ им. С.С. Юдина ДЗМ"</ns2:destinationMedicalOrganizationName>
                  <ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
                  <ns2:eventExecutionType>Обязательное</ns2:eventExecutionType>
               </ns2:event>
            </ns2:eventsPeriod>
            <ns2:statusHistoryLists/>
         </result>
      </GetPlanExtensionResponse>
   </soap:Body>
</soap:Envelope>]]></con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="56027d3b-5dae-46e5-9760-f9055e9e9dc6"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="d0085543-07b9-48fe-9d03-36f4fd7c43fd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationType = Направление в стационар"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentInstrumental.destinationType</path><content>Направление в стационар</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8a5544bc-5119-49d7-9679-242ca998009f" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationMedicalOrganizationId = 202"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentInstrumental.destinationMedicalOrganizationId</path><content>202</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationMedicalOrganizationName = Поликлиника №202"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentInstrumental.destinationMedicalOrganizationName</path><content>Поликлиника №202</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-pdn" value="${#Project#Mock-pdn}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry><con:entry>Mock-pdn</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value/></con:property><con:property><con:name>patientId</con:name><con:value>19803956</con:value></con:property></con:properties></con:testCase><con:testCase id="5707e532-a63d-4a63-b067-93f2fcfa188d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. assignmentInstrumental.destinationType = Направление по маршруту_375538" searchProperties="true"><con:settings/><con:testStep type="manualTestStep" name="Создать мок с ответом от getPlanExtension" id="679515dd-4a89-4de3-bd28-1b0df12e397a"><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:expectedResult><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope">
   <soap:Body>
      <GetPlanExtensionResponse xmlns:ns4="http://emias.mos.ru/system/v1/faults/" xmlns:ns3="http://emias.mos.ru/system/v1/userContext/" xmlns:ns2="http://emias.mos.ru/dnpdn/core/v2/" xmlns="http://emias.mos.ru/dnpdn/planService/v2/types/">
         <result>
            <ns2:id>5061</ns2:id>
            <ns2:jobExecutionId>11312201</ns2:jobExecutionId>
            <ns2:diagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:diagnosis>
            <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
            <ns2:endTime>2024-01-23T23:59:59.999+03:00</ns2:endTime>
            <ns2:documentId>c0ee1915-fa23-42a1-b2d9-7a465fca529b</ns2:documentId>
            <ns2:parentDocumentId>null</ns2:parentDocumentId>
            <ns2:moId>204</ns2:moId>
            <ns2:moName>ГБУЗ ГП №175 ДЗМ</ns2:moName>
            <ns2:status>ACTIVE</ns2:status>
            <ns2:archived>false</ns2:archived>
            <ns2:planOfEventsDiagnosis>
               <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
               <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
            </ns2:planOfEventsDiagnosis>
            <ns2:observationProgram>
               <ns2:id>158396646</ns2:id>
            </ns2:observationProgram>
            <ns2:patientId>19803956</ns2:patientId>
            <ns2:eventsPeriod>
               <ns2:priority>Свой период</ns2:priority>
               <ns2:startTime>2023-01-23T00:00:00.000+03:00</ns2:startTime>
               <ns2:endTime>2023-03-24T23:59:59.999+03:00</ns2:endTime>
               <ns2:event>
                  <ns2:id>222673</ns2:id>
                  <ns2:eventStatus>EXPIRED</ns2:eventStatus>
                  <ns2:archived>false</ns2:archived>
                  <ns2:assignment>
                     <ns2:assignmentInstrumental>
                        <ns2:id>16200</ns2:id>
                        <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                        <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                        <ns2:mainDiagnosticId>12</ns2:mainDiagnosticId>
                        <ns2:mainDiagnosticTitle>ЭКГ</ns2:mainDiagnosticTitle>
                        <ns2:reason>для диспансерного наблюдения</ns2:reason>
                        <ns2:status>UNFINISHED</ns2:status>
                        <ns2:examinationPassedInExternalMO>false</ns2:examinationPassedInExternalMO>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>17</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Ортостатическая проба</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>13</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Дополнительное ЭКГ-исследование в 3-х отведениях</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:additionalDiagnostics>
                           <ns2:additionalDiagnosticId>19</ns2:additionalDiagnosticId>
                           <ns2:additionalDiagnosticTitle>Физическая нагрузка: 20 приседаний</ns2:additionalDiagnosticTitle>
                        </ns2:additionalDiagnostics>
                        <ns2:justification>Назначено по ПДН</ns2:justification>
                     </ns2:assignmentInstrumental>
                  </ns2:assignment>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:diagnoses>
                     <ns2:diagnosisCode>E11.9</ns2:diagnosisCode>
                     <ns2:diagnosisTitle>Инсулиннезависимый сахарный диабет без осложнений</ns2:diagnosisTitle>
                  </ns2:diagnoses>
                  <ns2:referralCreated>false</ns2:referralCreated>
                  <ns2:destinationType>Направление по маршруту</ns2:destinationType>
                  <ns2:passedBeforePDNCreated>false</ns2:passedBeforePDNCreated>
                  <ns2:eventExecutionType>Обязательное</ns2:eventExecutionType>
               </ns2:event>
            </ns2:eventsPeriod>
            <ns2:statusHistoryLists/>
         </result>
      </GetPlanExtensionResponse>
   </soap:Body>
</soap:Envelope>]]></con:expectedResult></con:config></con:testStep><con:testStep type="restrequest" name="getDispensaryObservationProgram" id="d3a5ea92-44f5-497e-a5ab-27f431fba3cb"><con:settings/><con:config service="http://emiasinfo1.emias.solit-clouds.ru" resourcePath="/api/v2/pdn/dispensaryObservationProgram" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDispensaryObservationProgram" id="d0085543-07b9-48fe-9d03-36f4fd7c43fd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#emiasInfoEndpoint}</con:endpoint><con:request/><con:originalUri>http://emiasinfo1.emias.solit-clouds.ru/api/v2/pdn/dispensaryObservationProgram</con:originalUri><con:assertion type="JsonPath Match" id="e360b605-315e-4f7d-aa45-8e76b1f859af" name="destinationType = Направление по маршруту"><con:configuration><path>$.payload.dispensaryObservationProgram.group[0].event[0].assignmentInstrumental.destinationType</path><content>Направление по маршруту</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8a5544bc-5119-49d7-9679-242ca998009f" name="Valid HTTP Status Code = 200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-pdn" value="${#Project#Mock-pdn}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="patientId" value="${#TestCase#patientId}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>EI-Token</con:entry><con:entry>Mock-pdn</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>omsNumber</con:name><con:value/></con:property><con:property><con:name>patientId</con:name><con:value>19803956</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>suppConnection</con:name><con:value>@//10.2.172.242:1521/emiasdb</con:value></con:property><con:property><con:name>suppUser</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>suppPassword</con:name><con:value>EMIAS_CLUSTER</con:value></con:property><con:property><con:name>pdnConnection</con:name><con:value>10.2.172.41:5432/dnpdn</con:value></con:property><con:property><con:name>pdnUser</con:name><con:value>dnpdn</con:value></con:property><con:property><con:name>pdnPassword</con:name><con:value>dnpdn</con:value></con:property><con:property><con:name>token</con:name><con:value>eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJ1c2VyX2F1dGgiLCJleHAiOjQ3NTkwMjY4NDIsImF1ZCI6IlBBVElFTlQiLCJzdWIiOiJiYjVlYjg1OC1lZjc2LTQyOTUtOTg1OS1jOWQ2YTI1MWIzNTAiLCJzaWQiOiJmMzI3NTUyNy1jZTkyLTQ4MGMtODljYy1kMjQ4M2RmMWM4MjEiLCJwaG9uZSI6Ijc5MTU5Njc5MjMwIiwic3NvX2lkIjoiSFlrbGU2WFc3aWZybFQ3d0N1dUswaVo5Um9lUFhtMk5HOTJiVGFMb3dmTUE4UC95dzg1TWkvV3JWSG84OVdEaFdGZ1J0NjZFVTNNQnRRM1NFaGhrcndPT0xqTkZpamNSZVZGMnhlZ1I0RSt3eGdCUzJKUnQzQ1NQNG1RZnc0WUVFSkNQcHJVVUMyS1BCVytja2tIeXQ5d09hUnE0VFFqWjIvd1R0ZEhERXlSczJzWUlNMVdVWlBnYzM5dlJScGZLR012NGtlYWMvZWlycTlQbFRmUFFhdVFkeG5HSjlaRHpRYkFzVU1VTFZiRlcwbTc4S0tSNUp6QUZwbDdZRkV4MW85ZVVUNzBYZEJaRGhmZFZsbGpBK1QreVJJT3BXMlNPWk9FcFZoWUFaOHFUVk90S2NKazA2MGJEbmRZZFVkMWdRMHg2Y2tUMStDZ094UUViZWZpL1l3PT0iLCJlbWFpbCI6Inlhci5wcm9tby56YXBvdi5hQGdtYWlsLmNvbSIsImZpcnN0X25hbWUiOiJcdTA0MjFcdTA0MzVcdTA0NDBcdTA0MzNcdTA0MzVcdTA0MzkiLCJzZWNvbmRfbmFtZSI6Ilx1MDQxMi4iLCJtaWRkbGVfbmFtZSI6Ilx1MDQxMlx1MDQ0Zlx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYlx1MDQzMFx1MDQzMlx1MDQzZVx1MDQzMlx1MDQzOFx1MDQ0NyIsImJpcnRoX2RhdGUiOiIxOTc4LTAzLTIxIn0.dErz7ETQCxAJUOECLgysHVZZPZDQDJvvTQOi8_glDkqiWNaU1QTPKao0eueTw5_ydAE1KuGcGmI1yqeUhYDfp9ZMj97xKv4SYyE3lhdpgaiSALyoiuYcdxUEYj7cJiwZ0Bzjce8GOF__wI76cYKn-mVbZkuxPzRtn1SIvStR-zkiok3kW_Qg6HJFTP7mF1T_Z4p7OILvPYtErbJJHWJ-pVOLMjQYfk2RCjWJesIEuWs2sLr953xhQeodp-bBIYZCjCvxUSEgsHXNMkCvoRkujm9kpJFVHMgKYuwqmiHbZ6B7_3DuOiRsRRWrPJwn2dXZUwhlhzsutwCfIBE13SbfJqO9w14ud_GWrPsofO8T4j7UiGwTvzxXVycJZMMU6XElz35aQRGRVNV53NUQWCc2DqBlmsWHjW8Lg__A5NEjkgDPiRYKWp_Gdz9_I4YQY3x0ZFPIToUNFx2Lt8ei5zcLGL5hzvSdelUzmz0QirECbejcDJdXS8HxEe-XsCDLSh51hwweEpJILfdG4AlWhHFh9_NuKI-zoFx_48wB4d0-miMaxtiscQR1_0IwQFO0kujoMyIn432fPU2waJOjj41_SgX3AQsMPn3FQk4gV8MrHU9vfAoROXrBSbMS7ty5rwWczYdaijFYrNpsUprBRtL7EFSWgRnvFOU7ekNoy_AzpfA</con:value></con:property></con:properties></con:testSuite><con:properties><con:property><con:name>emiasInfoEndpoint</con:name><con:value>http://application-emiasinfo4.emias.solit-clouds.ru/</con:value></con:property><con:property><con:name>emiasInfoDbConnection</con:name><con:value>172.17.5.11:29102/emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDbLogin</con:name><con:value>emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDbPassword</con:name><con:value>emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoFullDbConnection</con:name><con:value>jdbc:postgresql://172.17.5.11:29102/emiasinfoapp?user=emiasinfoapp&amp;password=emiasinfoapp</con:value></con:property><con:property><con:name>emiasInfoDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>pdnEndpoint</con:name><con:value>http://esbcamel.test.emias.mos.ru/proxy/dnpdn/dnpdnService/v2S/ProxyService</con:value></con:property><con:property><con:name>pdnDbConnection</con:name><con:value>10.2.172.41:5432/dnpdn</con:value></con:property><con:property><con:name>pdnDbLogin</con:name><con:value>dnpdn</con:value></con:property><con:property><con:name>pdnDbPassword</con:name><con:value>dnpdn</con:value></con:property><con:property><con:name>pdnFullDbConnection</con:name><con:value>jdbc:postgresql://10.2.172.41/dnpdn?user=dnpdn&amp;password=dnpdn</con:value></con:property><con:property><con:name>pdnDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>lloEndpoint</con:name><con:value>http://esbcamelvv.test.emias.mos.ru/proxy/LLO/PrescriptionInfo/v4S/ProxyService</con:value></con:property><con:property><con:name>lloDbConnection</con:name><con:value>@//10.2.172.241:1521/emiasdb</con:value></con:property><con:property><con:name>lloDbLogin</con:name><con:value>EMIAS_LLO</con:value></con:property><con:property><con:name>lloDbPassword</con:name><con:value>EMIAS_LLO</con:value></con:property><con:property><con:name>lloFullDbConnection</con:name><con:value> jdbc:oracle:thin:EMIAS_LLO/EMIAS_LLO@//10.2.172.241:1521/emiasdb</con:value></con:property><con:property><con:name>lloDBDriver</con:name><con:value>oracle.jdbc.driver.OracleDriver</con:value></con:property><con:property><con:name>suppmeinfoEndpoint</con:name><con:value>http://esbcamel.test.emias.mos.ru/proxy/suppmeinfo/medicalEmployeeInfoService/v2S/ProxyService</con:value></con:property><con:property><con:name>suppmeinfoDbConnection</con:name><con:value>10.2.172.90/pmpk</con:value></con:property><con:property><con:name>suppmeinfoDbLogin</con:name><con:value>pmpk</con:value></con:property><con:property><con:name>suppmeinfoDbPassword</con:name><con:value>pmpk</con:value></con:property><con:property><con:name>suppmeinfoFullDbConnection</con:name><con:value>jdbc:postgresql://10.2.172.90/pmpk?user=pmpk&amp;password=pmpk</con:value></con:property><con:property><con:name>suppmeinfoDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>Mock-url</con:name><con:value>http://application-mock.emias.solit-clouds.ru/mock</con:value></con:property><con:property><con:name>mockDbFullConnection</con:name><con:value>jdbc:postgresql://172.17.5.13:29107/emias_info_mock?user=emias_info&amp;password=emias_info</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>